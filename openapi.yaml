openapi: 3.0.0
info:
  title: google/api/http.proto
  version: version not set
tags:
  - name: ApiKeysService
  - name: SamlConfigurationService
  - name: LogsDataSourceService
  - name: DashboardsService
  - name: MetricsDataSourceService
  - name: ArchiveLogsDataSourceService
  - name: DashboardCatalogService
  - name: ArchiveSpansDataSourceService
  - name: DataprimeDataSourceService
  - name: DashboardFoldersService
  - name: SpansDataSourceService
  - name: TeamSettingsService
  - name: ActionsService
  - name: Folders for views
    description: Create and manage view folders.
  - name: Views
    description: Create and manage views.
  - name: MetricsTcoService
  - name: MetricsConfiguratorPublicService
  - name: MetricsConfiguratorService
  - name: RetentionsService
  - name: TargetService
  - name: InternalTargetService
  - name: DatasetLocationsService
  - name: InternalDatasetLocationsService
  - name: InternalDatasetManagementService
  - name: KafkaOutTargetService
  - name: TeamPermissionsMgmtService
  - name: EnrichmentService
  - name: EnrichmentInternalService
  - name: AwsEnrichmentService
  - name: CustomEnrichmentService
paths:
  /dashboards:
    post:
      operationId: DashboardsService_CreateDashboard
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesCreateDashboardResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servicesCreateDashboardRequest'
        required: true
      tags:
        - DashboardsService
    put:
      operationId: DashboardsService_ReplaceDashboard
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesReplaceDashboardResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servicesReplaceDashboardRequest'
        required: true
      tags:
        - DashboardsService
  /dashboards/archive-logs/event-groups:
    get:
      operationId: ArchiveLogsDataSourceService_SearchArchiveLogsEventGroups
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchArchiveLogsEventGroupsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: requestParamsHash
          in: query
          required: false
          schema:
            type: string
        - name: query.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: queryRaw.text
          in: query
          required: false
          schema:
            type: string
        - name: groupByKeys
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregationKeys
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - ArchiveLogsDataSourceService
  /dashboards/archive-logs/events:
    get:
      operationId: ArchiveLogsDataSourceService_SearchArchiveLogsEvents
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchArchiveLogsEventsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: requestParamsHash
          in: query
          required: false
          schema:
            type: string
        - name: query.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: queryRaw.text
          in: query
          required: false
          schema:
            type: string
      tags:
        - ArchiveLogsDataSourceService
  /dashboards/archive-logs/events/count:
    get:
      operationId: ArchiveLogsDataSourceService_SearchArchiveLogsEventsCount
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchArchiveLogsEventsCountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: requestParamsHash
          in: query
          required: false
          schema:
            type: string
        - name: query.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: queryRaw.text
          in: query
          required: false
          schema:
            type: string
      tags:
        - ArchiveLogsDataSourceService
  /dashboards/archive-logs/grouped-series:
    get:
      operationId: ArchiveLogsDataSourceService_SearchArchiveGroupedLogsSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchArchiveGroupedLogsSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: requestParamsHash
          in: query
          required: false
          schema:
            type: string
        - name: query.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: queryRaw.text
          in: query
          required: false
          schema:
            type: string
        - name: groupByKeys
          description: Have to be ordered for correctly structured results.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregationKey
          in: query
          required: false
          schema:
            type: string
      tags:
        - ArchiveLogsDataSourceService
  /dashboards/archive-logs/grouped-time-series:
    get:
      operationId: ArchiveLogsDataSourceService_SearchArchiveGroupedLogsTimeSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchArchiveGroupedLogsTimeSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: requestParamsHash
          in: query
          required: false
          schema:
            type: string
        - name: query.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: queryRaw.text
          in: query
          required: false
          schema:
            type: string
        - name: groupByKeys
          description: Expects up to 1 element for now, without `timestamp`.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregationKey
          in: query
          required: false
          schema:
            type: string
      tags:
        - ArchiveLogsDataSourceService
  /dashboards/archive-logs/grouped-values:
    get:
      operationId: ArchiveLogsDataSourceService_SearchArchiveLogsGroupedValues
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchArchiveLogsGroupedValuesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: requestParamsHash
          in: query
          required: false
          schema:
            type: string
        - name: query.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: queryRaw.text
          in: query
          required: false
          schema:
            type: string
        - name: groupByKeys
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregationKey
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - ArchiveLogsDataSourceService
  /dashboards/archive-logs/time-series:
    get:
      operationId: ArchiveLogsDataSourceService_SearchArchiveLogsTimeSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchArchiveLogsTimeSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: requestParamsHash
          in: query
          required: false
          schema:
            type: string
        - name: query.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: queryRaw.text
          in: query
          required: false
          schema:
            type: string
        - name: aggregationKeys
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      tags:
        - ArchiveLogsDataSourceService
  /dashboards/archive-spans/event-groups:
    get:
      operationId: ArchiveSpansDataSourceService_SearchArchiveSpansEventGroups
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchArchiveSpansEventGroupsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: requestParamsHash
          in: query
          required: false
          schema:
            type: string
        - name: query.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: queryRaw.text
          in: query
          required: false
          schema:
            type: string
        - name: groupByKeys
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregationKeys
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - ArchiveSpansDataSourceService
  /dashboards/archive-spans/events:
    get:
      operationId: ArchiveSpansDataSourceService_SearchArchiveSpansEvents
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchArchiveSpansEventsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: requestParamsHash
          in: query
          required: false
          schema:
            type: string
        - name: query.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: queryRaw.text
          in: query
          required: false
          schema:
            type: string
      tags:
        - ArchiveSpansDataSourceService
  /dashboards/archive-spans/events/count:
    get:
      operationId: ArchiveSpansDataSourceService_SearchArchiveSpansEventsCount
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchArchiveSpansEventsCountResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: requestParamsHash
          in: query
          required: false
          schema:
            type: string
        - name: query.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: queryRaw.text
          in: query
          required: false
          schema:
            type: string
      tags:
        - ArchiveSpansDataSourceService
  /dashboards/archive-spans/grouped-series:
    get:
      operationId: ArchiveSpansDataSourceService_SearchArchiveGroupedSpansSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchArchiveGroupedSpansSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: requestParamsHash
          in: query
          required: false
          schema:
            type: string
        - name: query.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: queryRaw.text
          in: query
          required: false
          schema:
            type: string
        - name: groupByKeys
          description: Have to be ordered for correctly structured results.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregationKey
          in: query
          required: false
          schema:
            type: string
      tags:
        - ArchiveSpansDataSourceService
  /dashboards/archive-spans/grouped-time-series:
    get:
      operationId: ArchiveSpansDataSourceService_SearchArchiveGroupedSpansTimeSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchArchiveGroupedSpansTimeSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: requestParamsHash
          in: query
          required: false
          schema:
            type: string
        - name: query.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: queryRaw.text
          in: query
          required: false
          schema:
            type: string
        - name: groupByKeys
          description: Expects up to 1 element for now, without `timestamp`.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregationKey
          in: query
          required: false
          schema:
            type: string
      tags:
        - ArchiveSpansDataSourceService
  /dashboards/archive-spans/grouped-values:
    get:
      operationId: ArchiveSpansDataSourceService_SearchArchiveSpansGroupedValues
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchArchiveSpansGroupedValuesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: requestParamsHash
          in: query
          required: false
          schema:
            type: string
        - name: query.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: queryRaw.text
          in: query
          required: false
          schema:
            type: string
        - name: groupByKeys
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregationKeys
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - ArchiveSpansDataSourceService
  /dashboards/archive-spans/time-series:
    get:
      operationId: ArchiveSpansDataSourceService_SearchArchiveSpansTimeSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchArchiveSpansTimeSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: requestParamsHash
          in: query
          required: false
          schema:
            type: string
        - name: query.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: queryRaw.text
          in: query
          required: false
          schema:
            type: string
        - name: aggregationKeys
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      tags:
        - ArchiveSpansDataSourceService
  /dashboards/catalog:
    get:
      operationId: DashboardCatalogService_GetDashboardCatalog
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesGetDashboardCatalogResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - DashboardCatalogService
  /dashboards/dataprime:
    get:
      operationId: DataprimeDataSourceService_SearchDataprime
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchDataprimeResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: dataprimeQuery.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: dataprimeQueryRaw.text
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - DataprimeDataSourceService
  /dashboards/dataprime/archive:
    get:
      operationId: DataprimeDataSourceService_SearchDataprimeArchive
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchDataprimeArchiveResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: dataprimeQuery.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: dataprimeQueryRaw.text
          in: query
          required: false
          schema:
            type: string
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: widgetId
          in: query
          required: false
          schema:
            type: string
      tags:
        - DataprimeDataSourceService
  /dashboards/folders:
    get:
      operationId: DashboardFoldersService_ListDashboardFolders
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesListDashboardFoldersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - DashboardFoldersService
    post:
      operationId: DashboardFoldersService_CreateDashboardFolder
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesCreateDashboardFolderResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servicesCreateDashboardFolderRequest'
        required: true
      tags:
        - DashboardFoldersService
    put:
      operationId: DashboardFoldersService_ReplaceDashboardFolder
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesReplaceDashboardFolderResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servicesReplaceDashboardFolderRequest'
        required: true
      tags:
        - DashboardFoldersService
  /dashboards/folders/{folderId}:
    get:
      operationId: DashboardFoldersService_GetDashboardFolder
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesGetDashboardFolderResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: requestId
          in: query
          required: false
          schema:
            type: string
      tags:
        - DashboardFoldersService
    delete:
      operationId: DashboardFoldersService_DeleteDashboardFolder
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesDeleteDashboardFolderResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: requestId
          in: query
          required: false
          schema:
            type: string
      tags:
        - DashboardFoldersService
  /dashboards/logs/annotation-events:
    get:
      operationId: LogsDataSourceService_SearchLogsAnnotationEvents
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchLogsAnnotationEventsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: dataprimeQuery.serialized.data
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: dataprimeQuery.raw.text
          in: query
          required: false
          schema:
            type: string
        - name: strategy.instant.timestampField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: strategy.instant.timestampField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: strategy.range.startTimestampField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: strategy.range.startTimestampField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: strategy.range.endTimestampField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: strategy.range.endTimestampField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: strategy.duration.startTimestampField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: strategy.duration.startTimestampField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: strategy.duration.durationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: strategy.duration.durationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - LogsDataSourceService
  /dashboards/logs/event-groups:
    get:
      operationId: LogsDataSourceService_SearchLogsEventGroups
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchLogsEventGroupsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: luceneQuery
          in: query
          required: false
          schema:
            type: string
        - name: groupBy
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - LogsDataSourceService
  /dashboards/logs/events:
    get:
      operationId: LogsDataSourceService_SearchLogsEvents
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchLogsEventsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: luceneQuery
          in: query
          required: false
          schema:
            type: string
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - LogsDataSourceService
  /dashboards/logs/grouped-series:
    get:
      operationId: LogsDataSourceService_SearchGroupedLogsSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchGroupedLogsSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: groupByFields
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.countDistinct.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.countDistinct.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.countDistinct.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.sum.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.sum.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.sum.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.average.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.average.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.average.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.min.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.min.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.min.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.max.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.max.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.max.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.percentile.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.percentile.percent
          description: Value in range (0, 100]
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: aggregation.percentile.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.percentile.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: luceneQuery
          in: query
          required: false
          schema:
            type: string
      tags:
        - LogsDataSourceService
  /dashboards/logs/grouped-time-series:
    get:
      operationId: LogsDataSourceService_SearchLogsGroupedTimeSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchLogsGroupedTimeSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: interval
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.countDistinct.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.countDistinct.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.countDistinct.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.sum.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.sum.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.sum.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.average.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.average.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.average.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.min.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.min.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.min.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.max.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.max.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.max.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.percentile.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.percentile.percent
          description: Value in range (0, 100]
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: aggregation.percentile.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.percentile.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: luceneQuery
          in: query
          required: false
          schema:
            type: string
      tags:
        - LogsDataSourceService
  /dashboards/logs/grouped-values:
    get:
      operationId: LogsDataSourceService_SearchLogsGroupedValues
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchLogsGroupedValuesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: luceneQuery
          in: query
          required: false
          schema:
            type: string
        - name: groupBy
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.countDistinct.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.countDistinct.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.countDistinct.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.sum.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.sum.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.sum.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.average.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.average.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.average.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.min.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.min.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.min.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.max.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.max.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.max.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: aggregation.percentile.field
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.percentile.percent
          description: Value in range (0, 100]
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: aggregation.percentile.observationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: aggregation.percentile.observationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - LogsDataSourceService
  /dashboards/logs/time-series:
    get:
      operationId: LogsDataSourceService_SearchLogsTimeSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchLogsTimeSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: interval
          in: query
          required: false
          schema:
            type: string
        - name: groupBy
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: luceneQuery
          in: query
          required: false
          schema:
            type: string
      tags:
        - LogsDataSourceService
  /dashboards/metrics/annotation-events:
    get:
      operationId: MetricsDataSourceService_SearchMetricsAnnotationEvents
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchMetricsAnnotationEventsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: interval
          in: query
          required: false
          schema:
            type: string
        - name: promqlQuery
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - MetricsDataSourceService
  /dashboards/metrics/events:
    get:
      operationId: MetricsDataSourceService_SearchMetricsEvents
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchMetricsEventsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeSeriesInterval
          in: query
          required: false
          schema:
            type: string
        - name: promqlQuery
          in: query
          required: false
          schema:
            type: string
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: orderBy.direction
          in: query
          required: false
          schema:
            type: string
            enum:
              - ORDER_DIRECTION_UNSPECIFIED
              - ORDER_DIRECTION_ASC
              - ORDER_DIRECTION_DESC
            default: ORDER_DIRECTION_UNSPECIFIED
        - name: orderBy.label
          in: query
          required: false
          schema:
            type: string
        - name: orderBy.aggType
          in: query
          required: false
          schema:
            type: string
            enum:
              - AGGREGATION_TYPE_UNSPECIFIED
              - AGGREGATION_TYPE_LAST
              - AGGREGATION_TYPE_MIN
              - AGGREGATION_TYPE_MAX
              - AGGREGATION_TYPE_AVG
              - AGGREGATION_TYPE_SUM
            default: AGGREGATION_TYPE_UNSPECIFIED
      tags:
        - MetricsDataSourceService
  /dashboards/metrics/grouped-series:
    get:
      operationId: MetricsDataSourceService_SearchMetricsGroupedSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchMetricsGroupedSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: promqlQuery
          in: query
          required: false
          schema:
            type: string
        - name: groupBy
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      tags:
        - MetricsDataSourceService
  /dashboards/metrics/grouped-time-series:
    get:
      operationId: MetricsDataSourceService_SearchMetricsGroupedTimeSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchMetricsGroupedTimeSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: interval
          in: query
          required: false
          schema:
            type: string
        - name: promqlQuery
          in: query
          required: false
          schema:
            type: string
      tags:
        - MetricsDataSourceService
  /dashboards/metrics/grouped-values:
    get:
      operationId: MetricsDataSourceService_SearchMetricsGroupedValues
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchMetricsGroupedValuesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: promqlQuery
          in: query
          required: false
          schema:
            type: string
        - name: groupBy
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - MetricsDataSourceService
  /dashboards/metrics/time-series:
    get:
      operationId: MetricsDataSourceService_SearchMetricsTimeSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchMetricsTimeSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: interval
          in: query
          required: false
          schema:
            type: string
        - name: promqlQuery
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - MetricsDataSourceService
  /dashboards/metrics/time-values:
    get:
      operationId: MetricsDataSourceService_SearchMetricsTimeValues
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchMetricsTimeValuesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: promqlQuery
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - MetricsDataSourceService
  /dashboards/spans/annotation-events:
    get:
      operationId: SpansDataSourceService_SearchSpansAnnotationEvents
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchSpansAnnotationEventsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: luceneQuery
          in: query
          required: false
          schema:
            type: string
        - name: strategy.instant.timestampField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: strategy.instant.timestampField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: strategy.range.startTimestampField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: strategy.range.startTimestampField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: strategy.range.endTimestampField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: strategy.range.endTimestampField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: strategy.duration.startTimestampField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: strategy.duration.startTimestampField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: strategy.duration.durationField.keypath
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: strategy.duration.durationField.scope
          in: query
          required: false
          schema:
            type: string
            enum:
              - DATASET_SCOPE_UNSPECIFIED
              - DATASET_SCOPE_USER_DATA
              - DATASET_SCOPE_LABEL
              - DATASET_SCOPE_METADATA
            default: DATASET_SCOPE_UNSPECIFIED
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - SpansDataSourceService
  /dashboards/spans/event-groups:
    get:
      operationId: SpansDataSourceService_SearchSpansEventGroups
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchSpansEventGroupsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: luceneQuery
          in: query
          required: false
          schema:
            type: string
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - SpansDataSourceService
  /dashboards/spans/events:
    get:
      operationId: SpansDataSourceService_SearchSpansEvents
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchSpansEventsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: luceneQuery
          in: query
          required: false
          schema:
            type: string
        - name: pagination.offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pagination.limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - SpansDataSourceService
  /dashboards/spans/grouped-series:
    get:
      operationId: SpansDataSourceService_SearchGroupedSpansSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchGroupedSpansSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: aggregation.metricAggregation.metricField
          in: query
          required: false
          schema:
            type: string
            enum:
              - METRIC_FIELD_UNSPECIFIED
              - METRIC_FIELD_DURATION
            default: METRIC_FIELD_UNSPECIFIED
        - name: aggregation.metricAggregation.aggregationType
          in: query
          required: false
          schema:
            type: string
            enum:
              - METRIC_AGGREGATION_TYPE_UNSPECIFIED
              - METRIC_AGGREGATION_TYPE_MIN
              - METRIC_AGGREGATION_TYPE_MAX
              - METRIC_AGGREGATION_TYPE_AVERAGE
              - METRIC_AGGREGATION_TYPE_SUM
              - METRIC_AGGREGATION_TYPE_PERCENTILE_99
              - METRIC_AGGREGATION_TYPE_PERCENTILE_95
              - METRIC_AGGREGATION_TYPE_PERCENTILE_50
            default: METRIC_AGGREGATION_TYPE_UNSPECIFIED
        - name: aggregation.dimensionAggregation.dimensionField
          in: query
          required: false
          schema:
            type: string
            enum:
              - DIMENSION_FIELD_UNSPECIFIED
              - DIMENSION_FIELD_TRACE_ID
            default: DIMENSION_FIELD_UNSPECIFIED
        - name: aggregation.dimensionAggregation.aggregationType
          in: query
          required: false
          schema:
            type: string
            enum:
              - DIMENSION_AGGREGATION_TYPE_UNSPECIFIED
              - DIMENSION_AGGREGATION_TYPE_UNIQUE_COUNT
              - DIMENSION_AGGREGATION_TYPE_ERROR_COUNT
            default: DIMENSION_AGGREGATION_TYPE_UNSPECIFIED
        - name: luceneQuery
          in: query
          required: false
          schema:
            type: string
      tags:
        - SpansDataSourceService
  /dashboards/spans/grouped-time-series:
    get:
      operationId: SpansDataSourceService_SearchSpansGroupedTimeSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchSpansGroupedTimeSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: interval
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.metricAggregation.metricField
          in: query
          required: false
          schema:
            type: string
            enum:
              - METRIC_FIELD_UNSPECIFIED
              - METRIC_FIELD_DURATION
            default: METRIC_FIELD_UNSPECIFIED
        - name: aggregation.metricAggregation.aggregationType
          in: query
          required: false
          schema:
            type: string
            enum:
              - METRIC_AGGREGATION_TYPE_UNSPECIFIED
              - METRIC_AGGREGATION_TYPE_MIN
              - METRIC_AGGREGATION_TYPE_MAX
              - METRIC_AGGREGATION_TYPE_AVERAGE
              - METRIC_AGGREGATION_TYPE_SUM
              - METRIC_AGGREGATION_TYPE_PERCENTILE_99
              - METRIC_AGGREGATION_TYPE_PERCENTILE_95
              - METRIC_AGGREGATION_TYPE_PERCENTILE_50
            default: METRIC_AGGREGATION_TYPE_UNSPECIFIED
        - name: aggregation.dimensionAggregation.dimensionField
          in: query
          required: false
          schema:
            type: string
            enum:
              - DIMENSION_FIELD_UNSPECIFIED
              - DIMENSION_FIELD_TRACE_ID
            default: DIMENSION_FIELD_UNSPECIFIED
        - name: aggregation.dimensionAggregation.aggregationType
          in: query
          required: false
          schema:
            type: string
            enum:
              - DIMENSION_AGGREGATION_TYPE_UNSPECIFIED
              - DIMENSION_AGGREGATION_TYPE_UNIQUE_COUNT
              - DIMENSION_AGGREGATION_TYPE_ERROR_COUNT
            default: DIMENSION_AGGREGATION_TYPE_UNSPECIFIED
        - name: luceneQuery
          in: query
          required: false
          schema:
            type: string
      tags:
        - SpansDataSourceService
  /dashboards/spans/grouped-values:
    get:
      operationId: SpansDataSourceService_SearchSpansGroupedValues
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchSpansGroupedValuesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: luceneQuery
          in: query
          required: false
          schema:
            type: string
        - name: aggregation.metricAggregation.metricField
          in: query
          required: false
          schema:
            type: string
            enum:
              - METRIC_FIELD_UNSPECIFIED
              - METRIC_FIELD_DURATION
            default: METRIC_FIELD_UNSPECIFIED
        - name: aggregation.metricAggregation.aggregationType
          in: query
          required: false
          schema:
            type: string
            enum:
              - METRIC_AGGREGATION_TYPE_UNSPECIFIED
              - METRIC_AGGREGATION_TYPE_MIN
              - METRIC_AGGREGATION_TYPE_MAX
              - METRIC_AGGREGATION_TYPE_AVERAGE
              - METRIC_AGGREGATION_TYPE_SUM
              - METRIC_AGGREGATION_TYPE_PERCENTILE_99
              - METRIC_AGGREGATION_TYPE_PERCENTILE_95
              - METRIC_AGGREGATION_TYPE_PERCENTILE_50
            default: METRIC_AGGREGATION_TYPE_UNSPECIFIED
        - name: aggregation.dimensionAggregation.dimensionField
          in: query
          required: false
          schema:
            type: string
            enum:
              - DIMENSION_FIELD_UNSPECIFIED
              - DIMENSION_FIELD_TRACE_ID
            default: DIMENSION_FIELD_UNSPECIFIED
        - name: aggregation.dimensionAggregation.aggregationType
          in: query
          required: false
          schema:
            type: string
            enum:
              - DIMENSION_AGGREGATION_TYPE_UNSPECIFIED
              - DIMENSION_AGGREGATION_TYPE_UNIQUE_COUNT
              - DIMENSION_AGGREGATION_TYPE_ERROR_COUNT
            default: DIMENSION_AGGREGATION_TYPE_UNSPECIFIED
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - SpansDataSourceService
  /dashboards/spans/time-series:
    get:
      operationId: SpansDataSourceService_SearchSpansTimeSeries
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesSearchSpansTimeSeriesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: timeFrame.from
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: timeFrame.to
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: interval
          in: query
          required: false
          schema:
            type: string
        - name: luceneQuery
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      tags:
        - SpansDataSourceService
  /dashboards/team_settings:
    get:
      operationId: TeamSettingsService_GetTeamSettings
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesGetTeamSettingsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: requestId
          in: query
          required: false
          schema:
            type: string
      tags:
        - TeamSettingsService
  /dashboards/{dashboardId}:
    get:
      operationId: DashboardsService_GetDashboard
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesGetDashboardResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
      tags:
        - DashboardsService
    delete:
      operationId: DashboardsService_DeleteDashboard
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesDeleteDashboardResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
        - name: requestId
          in: query
          required: false
          schema:
            type: string
      tags:
        - DashboardsService
  /dashboards/{dashboardId}/default:
    put:
      operationId: DashboardsService_ReplaceDefaultDashboard
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesReplaceDefaultDashboardResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardsServiceReplaceDefaultDashboardBody'
        required: true
      tags:
        - DashboardsService
  /dashboards/{dashboardId}/folder:
    post:
      operationId: DashboardsService_AssignDashboardFolder
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesAssignDashboardFolderResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardsServiceAssignDashboardFolderBody'
        required: true
      tags:
        - DashboardsService
  /dashboards/{dashboardId}:pin:
    patch:
      operationId: DashboardsService_PinDashboard
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesPinDashboardResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardsServicePinDashboardBody'
        required: true
      tags:
        - DashboardsService
  /dashboards/{dashboardId}:unpin:
    patch:
      operationId: DashboardsService_UnpinDashboard
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesUnpinDashboardResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: dashboardId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardsServiceUnpinDashboardBody'
        required: true
      tags:
        - DashboardsService
  /enrichments:
    get:
      operationId: EnrichmentService_GetEnrichments
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetEnrichmentsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - EnrichmentService
    delete:
      operationId: EnrichmentService_RemoveEnrichments
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1RemoveEnrichmentsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: enrichmentIds
          in: query
          required: true
          explode: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      tags:
        - EnrichmentService
    post:
      operationId: EnrichmentService_AddEnrichments
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AddEnrichmentsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1AddEnrichmentsRequest'
        description: This response data structure represents a collection of enrichments
        required: true
      tags:
        - EnrichmentService
  /enrichments/limit:
    get:
      operationId: EnrichmentService_GetEnrichmentLimit
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetEnrichmentLimitResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - EnrichmentService
  /enrichments/settings:
    get:
      operationId: EnrichmentService_GetCompanyEnrichmentSettings
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetCompanyEnrichmentSettingsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - EnrichmentService
  /enrichments:atomicOverwrite:
    patch:
      operationId: EnrichmentService_AtomicOverwriteEnrichments
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AtomicOverwriteEnrichmentsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1AtomicOverwriteEnrichmentsRequest'
        required: true
      tags:
        - EnrichmentService
  /metrics-tco:
    get:
      operationId: MetricsTcoService_Get
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metrics_tcoGetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - MetricsTcoService
  /metrics-tco/add:
    post:
      operationId: MetricsTcoService_Add
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metrics_tcoAddRequest'
        description: This data structure is used to add a metrics tco rule.
        required: true
      tags:
        - MetricsTcoService
  /metrics-tco/delete:
    post:
      operationId: MetricsTcoService_Delete
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metrics_tcoDeleteRequest'
        required: true
      tags:
        - MetricsTcoService
  /v1/metrics-archive:
    get:
      operationId: MetricsConfiguratorPublicService_GetTenantConfig
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metrics_configuratorGetTenantConfigResponseV2'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - MetricsConfiguratorPublicService
    post:
      operationId: MetricsConfiguratorPublicService_ConfigureTenant
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metrics_configuratorConfigureTenantRequest'
        description: This data structure is used to configure a tenant.
        required: true
      tags:
        - MetricsConfiguratorPublicService
    put:
      operationId: MetricsConfiguratorPublicService_Update
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metrics_configuratorUpdateRequest'
        description: This data structure is used to update the configuration of a tenant.
        required: true
      tags:
        - MetricsConfiguratorPublicService
  /v1/metrics-archive:disable:
    post:
      operationId: MetricsConfiguratorPublicService_DisableArchive
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - MetricsConfiguratorPublicService
  /v1/metrics-archive:enable:
    post:
      operationId: MetricsConfiguratorPublicService_EnableArchive
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - MetricsConfiguratorPublicService
  /v1/metrics-archive:validate:
    post:
      operationId: MetricsConfiguratorPublicService_ValidateBucket
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metrics_configuratorValidateBucketRequest'
        description: This data structure is used to validate a bucket.
        required: true
      tags:
        - MetricsConfiguratorPublicService
  /v1/sso/saml/active:
    post:
      operationId: SamlConfigurationService_SetActive
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2SetActiveResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2SetActiveRequest'
        description: This data structure is used to activate or deactivate a SAML identity provider
        required: true
      tags:
        - SamlConfigurationService
  /v1/sso/saml/configuration:
    get:
      operationId: SamlConfigurationService_GetConfiguration
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2GetConfigurationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: teamId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      tags:
        - SamlConfigurationService
  /v1/sso/saml/idp_parameters:
    post:
      operationId: SamlConfigurationService_SetIDPParameters
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2SetIDPParametersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2SetIDPParametersRequest'
        description: This data structure is used to set the parameters of a SAML identity provider
        required: true
      tags:
        - SamlConfigurationService
  /v1/sso/saml/sp_parameters:
    get:
      operationId: SamlConfigurationService_GetSPParameters
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2GetSPParametersResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: teamId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      tags:
        - SamlConfigurationService
  /v1/view_folders:
    get:
      description: List view's folders
      operationId: ViewsFoldersService_ListViewFolders
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesListViewFoldersResponse'
              examples:
                response:
                  value:
                    view_folders:
                      - id: 0cd4ed54-9b59-4eef-b329-151a167e2304
                        name: My Folder
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - Folders for views
    post:
      description: Create view folder
      operationId: ViewsFoldersService_CreateViewFolder
      responses:
        '200':
          description: View folder
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ViewFolder'
              examples:
                response:
                  value:
                    id: 0cd4ed54-9b59-4eef-b329-151a167e2304
                    name: My Folder
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servicesCreateViewFolderRequest'
        description: Create view folder.
        required: true
      tags:
        - Folders for views
  /v1/view_folders/{folder.id}:
    put:
      description: Replaces an existing view folder
      operationId: ViewsFoldersService_ReplaceViewFolder
      responses:
        '200':
          description: View folder
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ViewFolder'
              examples:
                response:
                  value:
                    id: 0cd4ed54-9b59-4eef-b329-151a167e2304
                    name: My Folder
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: folder.id
          description: Unique identifier for folders
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: My Folder
                  description: Folder name
                  minLength: 1
              title: View folder
              required:
                - name
        description: View folder
        required: true
      tags:
        - Folders for views
  /v1/view_folders/{id}:
    get:
      description: Create view folder
      operationId: ViewsFoldersService_GetViewFolder
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ViewFolder'
              examples:
                response:
                  value:
                    id: 0cd4ed54-9b59-4eef-b329-151a167e2304
                    name: My Folder
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: id
          description: Unique identifier for folders
          in: path
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - Folders for views
    delete:
      description: Deletes a view folder by ID
      operationId: ViewsFoldersService_DeleteViewFolder
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesDeleteViewFolderResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: id
          description: Unique identifier for folders
          in: path
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - Folders for views
  /v1/views:
    get:
      description: Lists all company public views
      operationId: ViewsService_ListViews
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesListViewsResponse'
              examples:
                response:
                  value:
                    views:
                      - id: 52
                        name: Logs view
                        search_query:
                          query: logs
                        time_selection:
                          custom_selection:
                            from_time: '2024-01-25T11:31:43.152Z'
                            to_time: '2024-01-25T11:37:13.238Z'
                        filters:
                          filters:
                            - name: applicationName
                              selected_values:
                                demo: true
                            - name: subsystemName
                              selected_values:
                                demo: true
                            - name: operationName
                              selected_values:
                                demo: true
                            - name: serviceName
                              selected_values:
                                demo: true
                            - name: severity
                              selected_values:
                                demo: true
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - Views
    post:
      description: Creates a new view
      operationId: ViewsService_CreateView
      responses:
        '200':
          description: View
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesView'
              examples:
                response:
                  value:
                    name: Logs view
                    search_query:
                      query: logs
                    time_selection:
                      custom_selection:
                        from_time: '2024-01-25T11:31:43.152Z'
                        to_time: '2024-01-25T11:37:13.238Z'
                    filters:
                      filters:
                        - name: applicationName
                          selected_values:
                            demo: true
                        - name: subsystemName
                          selected_values:
                            demo: true
                        - name: operationName
                          selected_values:
                            demo: true
                        - name: serviceName
                          selected_values:
                            demo: true
                        - name: severity
                          selected_values:
                            demo: true
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servicesCreateViewRequest'
        description: View folder.
        required: true
      tags:
        - Views
  /v1/views/{id}:
    get:
      description: Gets a view by ID
      operationId: ViewsService_GetView
      responses:
        '200':
          description: View
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesView'
              examples:
                response:
                  value:
                    id: 52
                    name: Logs view
                    search_query:
                      query: logs
                    time_selection:
                      custom_selection:
                        from_time: '2024-01-25T11:31:43.152Z'
                        to_time: '2024-01-25T11:37:13.238Z'
                    filters:
                      filters:
                        - name: applicationName
                          selected_values:
                            demo: true
                        - name: subsystemName
                          selected_values:
                            demo: true
                        - name: operationName
                          selected_values:
                            demo: true
                        - name: serviceName
                          selected_values:
                            demo: true
                        - name: severity
                          selected_values:
                            demo: true
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: id
          description: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      tags:
        - Views
    delete:
      description: Deletes a view by ID
      operationId: ViewsService_DeleteView
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesDeleteViewResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: id
          description: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      tags:
        - Views
  /v1/views/{view.id}:
    put:
      description: Replaces an existing view
      operationId: ViewsService_ReplaceView
      responses:
        '200':
          description: View
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servicesView'
              examples:
                response:
                  value:
                    name: Logs view
                    search_query:
                      query: logs new
                    time_selection:
                      custom_selection:
                        from_time: '2024-01-25T11:31:43.152Z'
                        to_time: '2024-01-25T11:37:13.238Z'
                    filters:
                      filters:
                        - name: applicationName
                          selected_values:
                            demo: true
                        - name: subsystemName
                          selected_values:
                            demo: true
                        - name: operationName
                          selected_values:
                            demo: true
                        - name: serviceName
                          selected_values:
                            demo: true
                        - name: severity
                          selected_values:
                            demo: true
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: view.id
          description: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Logs view
                  description: View name
                  title: View name
                  minLength: 1
                searchQuery:
                  $ref: '#/components/schemas/v1SearchQuery'
                timeSelection:
                  $ref: '#/components/schemas/v1TimeSelection'
                filters:
                  $ref: '#/components/schemas/v1SelectedFilters'
                folderId:
                  type: string
                  format: uuid
                  example: 3dc02998-0b50-4ea8-b68a-4779d716fa1f
                  description: Unique identifier for folders
                  title: View folder id
                  maxLength: 36
                  minLength: 36
                  pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
              title: View
              required:
                - name
                - timeSelection
        description: View
        required: true
      tags:
        - Views
  /v2/actions:
    get:
      operationId: ActionsService_ListActions
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2ListActionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - ActionsService
    post:
      operationId: ActionsService_CreateAction
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2CreateActionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2CreateActionRequest'
        required: true
      tags:
        - ActionsService
    put:
      operationId: ActionsService_ReplaceAction
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2ReplaceActionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2ReplaceActionRequest'
        required: true
      tags:
        - ActionsService
  /v2/actions/actions:atomicBatchExecute:
    post:
      operationId: ActionsService_AtomicBatchExecuteActions
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2AtomicBatchExecuteActionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2AtomicBatchExecuteActionsRequest'
        required: true
      tags:
        - ActionsService
  /v2/actions/actions:order:
    post:
      operationId: ActionsService_OrderActions
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2OrderActionsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2OrderActionsRequest'
        required: true
      tags:
        - ActionsService
  /v2/actions/{id}:
    get:
      operationId: ActionsService_GetAction
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2GetActionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ActionsService
    delete:
      operationId: ActionsService_DeleteAction
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2DeleteActionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ActionsService
  /v2/target:
    get:
      operationId: TargetService_GetTarget
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/archivev2GetTargetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - TargetService
    post:
      operationId: TargetService_SetTarget
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/archivev2SetTargetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/archivev2SetTargetRequest'
        description: This data structure is used to set a storage target for logs.
        required: true
      tags:
        - TargetService
  /v2/target:validate:
    post:
      operationId: TargetService_ValidateTarget
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2ValidateTargetResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2ValidateTargetRequest'
        description: This data structure is used to validate a storage target for logs.
        required: true
      tags:
        - TargetService
  /v3/api_keys:
    post:
      operationId: ApiKeysService_CreateApiKey
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3CreateApiKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v3CreateApiKeyRequest'
        description: This data structure is used to create an API key.
        required: true
      tags:
        - ApiKeysService
  /v3/api_keys/send_data:
    get:
      operationId: ApiKeysService_GetSendDataApiKeys
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3GetSendDataApiKeysResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      tags:
        - ApiKeysService
  /v3/api_keys/{keyId}:
    get:
      operationId: ApiKeysService_GetApiKey
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3GetApiKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: keyId
          in: path
          required: true
          schema:
            type: string
      tags:
        - ApiKeysService
    delete:
      operationId: ApiKeysService_DeleteApiKey
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3DeleteApiKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: keyId
          in: path
          required: true
          schema:
            type: string
      tags:
        - ApiKeysService
    put:
      operationId: ApiKeysService_UpdateApiKey
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3UpdateApiKeyResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      parameters:
        - name: keyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeysServiceUpdateApiKeyBody'
        required: true
      tags:
        - ApiKeysService
components:
  schemas:
    AnnotationLogsSource:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/dashboardsv1commonLuceneQuery'
        strategy:
          $ref: '#/components/schemas/AnnotationLogsSourceStrategy'
        messageTemplate:
          type: string
        labelFields:
          type: array
          items:
            $ref: '#/components/schemas/commonObservationField'
    AnnotationLogsSourceStrategy:
      type: object
      properties:
        instant:
          $ref: '#/components/schemas/AnnotationLogsSourceStrategyInstant'
        range:
          $ref: '#/components/schemas/AnnotationLogsSourceStrategyRange'
        duration:
          $ref: '#/components/schemas/AnnotationLogsSourceStrategyDuration'
    AnnotationLogsSourceStrategyDuration:
      type: object
      properties:
        startTimestampField:
          $ref: '#/components/schemas/commonObservationField'
        durationField:
          $ref: '#/components/schemas/commonObservationField'
    AnnotationLogsSourceStrategyInstant:
      type: object
      properties:
        timestampField:
          $ref: '#/components/schemas/commonObservationField'
    AnnotationLogsSourceStrategyRange:
      type: object
      properties:
        startTimestampField:
          $ref: '#/components/schemas/commonObservationField'
        endTimestampField:
          $ref: '#/components/schemas/commonObservationField'
    AnnotationMetricsSource:
      type: object
      properties:
        promqlQuery:
          $ref: '#/components/schemas/dashboardsv1commonPromQlQuery'
        strategy:
          $ref: '#/components/schemas/AnnotationMetricsSourceStrategy'
        messageTemplate:
          type: string
        labels:
          type: array
          items:
            type: string
    AnnotationMetricsSourceStrategy:
      type: object
      properties:
        startTimeMetric:
          $ref: '#/components/schemas/MetricsSourceStartTimeMetric'
      title: Strategy for turning metrics data into annotations
    AnnotationSpansSource:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/dashboardsv1commonLuceneQuery'
        strategy:
          $ref: '#/components/schemas/AnnotationSpansSourceStrategy'
        messageTemplate:
          type: string
        labelFields:
          type: array
          items:
            $ref: '#/components/schemas/commonObservationField'
    AnnotationSpansSourceStrategy:
      type: object
      properties:
        instant:
          $ref: '#/components/schemas/AnnotationSpansSourceStrategyInstant'
        range:
          $ref: '#/components/schemas/AnnotationSpansSourceStrategyRange'
        duration:
          $ref: '#/components/schemas/AnnotationSpansSourceStrategyDuration'
    AnnotationSpansSourceStrategyDuration:
      type: object
      properties:
        startTimestampField:
          $ref: '#/components/schemas/commonObservationField'
        durationField:
          $ref: '#/components/schemas/commonObservationField'
    AnnotationSpansSourceStrategyInstant:
      type: object
      properties:
        timestampField:
          $ref: '#/components/schemas/commonObservationField'
    AnnotationSpansSourceStrategyRange:
      type: object
      properties:
        startTimestampField:
          $ref: '#/components/schemas/commonObservationField'
        endTimestampField:
          $ref: '#/components/schemas/commonObservationField'
    ApiKeysServiceUpdateApiKeyBody:
      type: object
      properties:
        newName:
          type: string
          example: my_new_name
        isActive:
          type: boolean
          example: true
        presets:
          $ref: '#/components/schemas/UpdateApiKeyRequestPresets'
        permissions:
          $ref: '#/components/schemas/UpdateApiKeyRequestPermissions'
      description: This data structure is used to update an API key.
      title: Update Api Key Request
      externalDocs:
        description: Find out more about api keys
        url: https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/
    BarChartXAxis:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/XAxisXAxisByValue'
        time:
          $ref: '#/components/schemas/XAxisXAxisByTime'
    ColorsByColorsByAggregation:
      type: object
    ColorsByColorsByGroupBy:
      type: object
    ColorsByColorsByStack:
      type: object
    DashboardAutoRefreshFiveMinutes:
      type: object
    DashboardAutoRefreshOff:
      type: object
    DashboardAutoRefreshTwoMinutes:
      type: object
    DashboardsServiceAssignDashboardFolderBody:
      type: object
      properties:
        requestId:
          type: string
        folderId:
          type: string
          title: could be null to assign the dashboard to root
    DashboardsServicePinDashboardBody:
      type: object
      properties:
        requestId:
          type: string
    DashboardsServiceReplaceDefaultDashboardBody:
      type: object
      properties:
        requestId:
          type: string
    DashboardsServiceUnpinDashboardBody:
      type: object
      properties:
        requestId:
          type: string
    DataTableColumn:
      type: object
      properties:
        field:
          type: string
        width:
          type: integer
          format: int32
    DataTableLogsQueryAggregation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isVisible:
          type: boolean
        aggregation:
          $ref: '#/components/schemas/commonLogsAggregation'
    DataTableLogsQueryGrouping:
      type: object
      properties:
        groupBy:
          type: array
          items:
            type: string
        aggregations:
          type: array
          items:
            $ref: '#/components/schemas/DataTableLogsQueryAggregation'
        groupBys:
          type: array
          items:
            $ref: '#/components/schemas/commonObservationField'
    DataTableSpansQueryAggregation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isVisible:
          type: boolean
        aggregation:
          $ref: '#/components/schemas/commonSpansAggregation'
    DataTableSpansQueryGrouping:
      type: object
      properties:
        groupBy:
          type: array
          items:
            $ref: '#/components/schemas/commonSpanField'
        aggregations:
          type: array
          items:
            $ref: '#/components/schemas/DataTableSpansQueryAggregation'
    DataprimeResultKeyValue:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    DimensionAggregationDimensionAggregationType:
      type: string
      enum:
        - DIMENSION_AGGREGATION_TYPE_UNSPECIFIED
        - DIMENSION_AGGREGATION_TYPE_UNIQUE_COUNT
        - DIMENSION_AGGREGATION_TYPE_ERROR_COUNT
      default: DIMENSION_AGGREGATION_TYPE_UNSPECIFIED
    DimensionAggregationDimensionField:
      type: string
      enum:
        - DIMENSION_FIELD_UNSPECIFIED
        - DIMENSION_FIELD_TRACE_ID
      default: DIMENSION_FIELD_UNSPECIFIED
    FilterEqualsSelection:
      type: object
      properties:
        all:
          $ref: '#/components/schemas/FilterEqualsSelectionAllSelection'
        list:
          $ref: '#/components/schemas/FilterEqualsSelectionListSelection'
      description: Selection defines the values for the equality comparison.
    FilterEqualsSelectionAllSelection:
      type: object
      description: AllSelection indicates that all values are selected.
    FilterEqualsSelectionListSelection:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          description: List of values for the selection.
      description: ListSelection represents a selection from a list of specific values.
    FilterLogsFilter:
      type: object
      properties:
        field:
          type: string
          description: Field in the logs to apply the filter on.
        operator:
          $ref: '#/components/schemas/astFilterOperator'
        observationField:
          $ref: '#/components/schemas/commonObservationField'
      description: LogsFilter represents the filter criteria for logs.
    FilterMetricsFilter:
      type: object
      properties:
        metric:
          type: string
          description: Metric name to apply the filter on.
        label:
          type: string
          description: Label associated with the metric.
        operator:
          $ref: '#/components/schemas/astFilterOperator'
      description: MetricsFilter represents the filter criteria for metrics.
    FilterNotEqualsSelection:
      type: object
      properties:
        list:
          $ref: '#/components/schemas/FilterNotEqualsSelectionListSelection'
      description: Selection defines the values for the non-equality comparison.
    FilterNotEqualsSelectionListSelection:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          description: List of values for the selection.
      description: ListSelection represents a selection from a list of specific values.
    FilterSpansFilter:
      type: object
      properties:
        field:
          $ref: '#/components/schemas/commonSpanField'
        operator:
          $ref: '#/components/schemas/astFilterOperator'
      description: SpansFilter represents the filter criteria for spans.
    GetGroupUsersResponseNextPageToken:
      type: object
      properties:
        nextPageToken:
          type: string
    GetGroupUsersResponseNoMorePages:
      type: object
    HorizontalBarChartYAxisViewBy:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/YAxisViewByYAxisViewByCategory'
        value:
          $ref: '#/components/schemas/YAxisViewByYAxisViewByValue'
    LegendLegendColumn:
      type: string
      enum:
        - LEGEND_COLUMN_UNSPECIFIED
        - LEGEND_COLUMN_MIN
        - LEGEND_COLUMN_MAX
        - LEGEND_COLUMN_SUM
        - LEGEND_COLUMN_AVG
        - LEGEND_COLUMN_LAST
        - LEGEND_COLUMN_NAME
      default: LEGEND_COLUMN_UNSPECIFIED
    LegendLegendPlacement:
      type: string
      enum:
        - LEGEND_PLACEMENT_UNSPECIFIED
        - LEGEND_PLACEMENT_AUTO
        - LEGEND_PLACEMENT_BOTTOM
        - LEGEND_PLACEMENT_SIDE
        - LEGEND_PLACEMENT_HIDDEN
      default: LEGEND_PLACEMENT_UNSPECIFIED
    LineChartQueryDefinition:
      type: object
      properties:
        id:
          type: string
        query:
          $ref: '#/components/schemas/widgetsLineChartQuery'
        seriesNameTemplate:
          type: string
        seriesCountLimit:
          type: string
          format: int64
        unit:
          $ref: '#/components/schemas/widgetscommonUnit'
        scaleType:
          $ref: '#/components/schemas/commonScaleType'
        name:
          type: string
        isVisible:
          type: boolean
        colorScheme:
          type: string
        resolution:
          $ref: '#/components/schemas/LineChartResolution'
        dataModeType:
          $ref: '#/components/schemas/commonDataModeType'
        customUnit:
          type: string
        decimal:
          type: integer
          format: int32
    LineChartResolution:
      type: object
      properties:
        interval:
          type: string
        bucketsPresented:
          type: integer
          format: int32
    LineChartStackedLine:
      type: string
      enum:
        - STACKED_LINE_UNSPECIFIED
        - STACKED_LINE_ABSOLUTE
        - STACKED_LINE_RELATIVE
      default: STACKED_LINE_UNSPECIFIED
    LineChartTooltip:
      type: object
      properties:
        showLabels:
          type: boolean
        type:
          $ref: '#/components/schemas/LineChartTooltipType'
    LineChartTooltipType:
      type: string
      enum:
        - TOOLTIP_TYPE_UNSPECIFIED
        - TOOLTIP_TYPE_ALL
        - TOOLTIP_TYPE_SINGLE
      default: TOOLTIP_TYPE_UNSPECIFIED
    LogsAggregationAverage:
      type: object
      properties:
        field:
          type: string
        observationField:
          $ref: '#/components/schemas/commonObservationField'
    LogsAggregationCount:
      type: object
    LogsAggregationCountDistinct:
      type: object
      properties:
        field:
          type: string
        observationField:
          $ref: '#/components/schemas/commonObservationField'
    LogsAggregationMax:
      type: object
      properties:
        field:
          type: string
        observationField:
          $ref: '#/components/schemas/commonObservationField'
    LogsAggregationMin:
      type: object
      properties:
        field:
          type: string
        observationField:
          $ref: '#/components/schemas/commonObservationField'
    LogsAggregationPercentile:
      type: object
      properties:
        field:
          type: string
        percent:
          type: number
          format: double
          title: Value in range (0, 100]
        observationField:
          $ref: '#/components/schemas/commonObservationField'
    LogsAggregationSum:
      type: object
      properties:
        field:
          type: string
        observationField:
          $ref: '#/components/schemas/commonObservationField'
    MetricAggregationMetricAggregationType:
      type: string
      enum:
        - METRIC_AGGREGATION_TYPE_UNSPECIFIED
        - METRIC_AGGREGATION_TYPE_MIN
        - METRIC_AGGREGATION_TYPE_MAX
        - METRIC_AGGREGATION_TYPE_AVERAGE
        - METRIC_AGGREGATION_TYPE_SUM
        - METRIC_AGGREGATION_TYPE_PERCENTILE_99
        - METRIC_AGGREGATION_TYPE_PERCENTILE_95
        - METRIC_AGGREGATION_TYPE_PERCENTILE_50
      default: METRIC_AGGREGATION_TYPE_UNSPECIFIED
    MetricAggregationMetricField:
      type: string
      enum:
        - METRIC_FIELD_UNSPECIFIED
        - METRIC_FIELD_DURATION
      default: METRIC_FIELD_UNSPECIFIED
    MetricsEventAggregationType:
      type: string
      enum:
        - AGGREGATION_TYPE_UNSPECIFIED
        - AGGREGATION_TYPE_LAST
        - AGGREGATION_TYPE_MIN
        - AGGREGATION_TYPE_MAX
        - AGGREGATION_TYPE_AVG
        - AGGREGATION_TYPE_SUM
      default: AGGREGATION_TYPE_UNSPECIFIED
    MetricsQueryMetricsLabelFilter:
      type: object
      properties:
        metric:
          $ref: '#/components/schemas/MetricsQueryStringOrVariable'
        label:
          $ref: '#/components/schemas/MetricsQueryStringOrVariable'
        operator:
          $ref: '#/components/schemas/QueryMetricsQueryOperator'
    MetricsQueryStringOrVariable:
      type: object
      properties:
        stringValue:
          type: string
        variableName:
          type: string
    MetricsSourceStartTimeMetric:
      type: object
    MultiSelectConstantListSource:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
    MultiSelectLogsPathSource:
      type: object
      properties:
        value:
          type: string
        observationField:
          $ref: '#/components/schemas/commonObservationField'
    MultiSelectMetricLabelSource:
      type: object
      properties:
        metricName:
          type: string
        label:
          type: string
    MultiSelectQueryLogsQuery:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/QueryLogsQueryType'
    MultiSelectQueryMetricsQuery:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/QueryMetricsQueryType'
    MultiSelectQuerySource:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/astMultiSelectQuery'
        refreshStrategy:
          $ref: '#/components/schemas/MultiSelectRefreshStrategy'
        valueDisplayOptions:
          $ref: '#/components/schemas/MultiSelectValueDisplayOptions'
    MultiSelectQuerySpansQuery:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/QuerySpansQueryType'
    MultiSelectRefreshStrategy:
      type: string
      enum:
        - REFRESH_STRATEGY_UNSPECIFIED
        - REFRESH_STRATEGY_ON_DASHBOARD_LOAD
        - REFRESH_STRATEGY_ON_TIME_FRAME_CHANGE
      default: REFRESH_STRATEGY_UNSPECIFIED
    MultiSelectSpanFieldSource:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/commonSpanField'
    MultiSelectValueDisplayOptions:
      type: object
      properties:
        valueRegex:
          type: string
        labelRegex:
          type: string
    MultiSelectVariableSelectionOptions:
      type: object
      properties:
        selectionType:
          $ref: '#/components/schemas/VariableSelectionOptionsSelectionType'
    PieChartLabelDefinition:
      type: object
      properties:
        labelSource:
          $ref: '#/components/schemas/PieChartLabelSource'
        isVisible:
          type: boolean
        showName:
          type: boolean
        showValue:
          type: boolean
        showPercentage:
          type: boolean
    PieChartLabelSource:
      type: string
      enum:
        - LABEL_SOURCE_UNSPECIFIED
        - LABEL_SOURCE_INNER
        - LABEL_SOURCE_STACK
      default: LABEL_SOURCE_UNSPECIFIED
    QueryLogsQueryType:
      type: object
      properties:
        fieldName:
          $ref: '#/components/schemas/QueryLogsQueryTypeFieldName'
        fieldValue:
          $ref: '#/components/schemas/QueryLogsQueryTypeFieldValue'
    QueryLogsQueryTypeFieldName:
      type: object
      properties:
        logRegex:
          type: string
    QueryLogsQueryTypeFieldValue:
      type: object
      properties:
        observationField:
          $ref: '#/components/schemas/commonObservationField'
    QueryMetricsQueryEquals:
      type: object
      properties:
        selection:
          $ref: '#/components/schemas/QueryMetricsQuerySelection'
    QueryMetricsQueryNotEquals:
      type: object
      properties:
        selection:
          $ref: '#/components/schemas/QueryMetricsQuerySelection'
    QueryMetricsQueryOperator:
      type: object
      properties:
        equals:
          $ref: '#/components/schemas/QueryMetricsQueryEquals'
        notEquals:
          $ref: '#/components/schemas/QueryMetricsQueryNotEquals'
    QueryMetricsQuerySelection:
      type: object
      properties:
        list:
          $ref: '#/components/schemas/QueryMetricsQuerySelectionListSelection'
    QueryMetricsQuerySelectionListSelection:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/MetricsQueryStringOrVariable'
    QueryMetricsQueryType:
      type: object
      properties:
        metricName:
          $ref: '#/components/schemas/TypeMetricName'
        labelName:
          $ref: '#/components/schemas/TypeLabelName'
        labelValue:
          $ref: '#/components/schemas/TypeLabelValue'
    QuerySpansQueryType:
      type: object
      properties:
        fieldName:
          $ref: '#/components/schemas/QuerySpansQueryTypeFieldName'
        fieldValue:
          $ref: '#/components/schemas/QuerySpansQueryTypeFieldValue'
    QuerySpansQueryTypeFieldName:
      type: object
      properties:
        spanRegex:
          type: string
    QuerySpansQueryTypeFieldValue:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/commonSpanField'
    SearchCustomEnrichmentDataRequestSearchClause:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    SpanFieldMetadataField:
      type: string
      enum:
        - METADATA_FIELD_UNSPECIFIED
        - METADATA_FIELD_APPLICATION_NAME
        - METADATA_FIELD_SUBSYSTEM_NAME
        - METADATA_FIELD_SERVICE_NAME
        - METADATA_FIELD_OPERATION_NAME
      default: METADATA_FIELD_UNSPECIFIED
    SpansAggregationDimensionAggregation:
      type: object
      properties:
        dimensionField:
          $ref: '#/components/schemas/DimensionAggregationDimensionField'
        aggregationType:
          $ref: '#/components/schemas/DimensionAggregationDimensionAggregationType'
    SpansAggregationMetricAggregation:
      type: object
      properties:
        metricField:
          $ref: '#/components/schemas/MetricAggregationMetricField'
        aggregationType:
          $ref: '#/components/schemas/MetricAggregationMetricAggregationType'
    TypeLabelName:
      type: object
      properties:
        metricRegex:
          type: string
    TypeLabelValue:
      type: object
      properties:
        metricName:
          $ref: '#/components/schemas/MetricsQueryStringOrVariable'
        labelName:
          $ref: '#/components/schemas/MetricsQueryStringOrVariable'
        labelFilters:
          type: array
          items:
            $ref: '#/components/schemas/MetricsQueryMetricsLabelFilter'
    TypeMetricName:
      type: object
      properties:
        metricRegex:
          type: string
    UpdateApiKeyRequestPermissions:
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
      description: This data structure represents a set of permissions on an API key.
      title: Permissions
      externalDocs:
        description: Find out more about api keys
        url: https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/
      required:
        - permissions
    UpdateApiKeyRequestPresets:
      type: object
      properties:
        presets:
          type: array
          items:
            type: string
      description: This data structure represents a set of permissions presets on an API key.
      title: Presets
      externalDocs:
        description: Find out more about api keys
        url: https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/
      required:
        - presets
    UpdateTeamGroupRequestRoleUpdates:
      type: object
      properties:
        roleIds:
          type: array
          items:
            $ref: '#/components/schemas/v1RoleId'
          title: / Roles to associate with a team group
      title: / Specifies new roles to assign to a group removing previous ones
    UpdateTeamGroupRequestUserUpdates:
      type: object
      properties:
        userIds:
          type: array
          items:
            $ref: '#/components/schemas/v1UserId'
          title: / Users to associate with a team group
      title: / Specifies new users to assign to a group removing previous ones
    VariableSelectionOptionsSelectionType:
      type: string
      enum:
        - SELECTION_TYPE_UNSPECIFIED
        - SELECTION_TYPE_MULTI_ALL
        - SELECTION_TYPE_MULTI
        - SELECTION_TYPE_SINGLE
      default: SELECTION_TYPE_UNSPECIFIED
    XAxisXAxisByTime:
      type: object
      properties:
        interval:
          type: string
        bucketsPresented:
          type: integer
          format: int32
    XAxisXAxisByValue:
      type: object
    YAxisViewByYAxisViewByCategory:
      type: object
    YAxisViewByYAxisViewByValue:
      type: object
    actionsv2Action:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
        isHidden:
          type: boolean
        isPrivate:
          type: boolean
        sourceType:
          $ref: '#/components/schemas/v2SourceType'
        applicationNames:
          type: array
          items:
            type: string
        subsystemNames:
          type: array
          items:
            type: string
        createdBy:
          type: string
    archivekafka_out_targetsv1Target:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        isActive:
          type: boolean
        topic:
          type: string
        brokers:
          type: string
        dpxlExpression:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        apiKey:
          type: string
        compressionType:
          $ref: '#/components/schemas/kafka_out_targetsv1CompressionType'
    archivekafka_out_targetsv2Target:
      type: object
      properties:
        awsMsk:
          $ref: '#/components/schemas/v2AwsMsk'
        ibmEventStreams:
          $ref: '#/components/schemas/v2IbmEventStreams'
        kafkaOutSpec:
          $ref: '#/components/schemas/v2KafkaOutSpec'
    archivev1CompanyArchiveConfig:
      type: object
      properties:
        companyId:
          type: integer
          format: int64
        archiveConfigured:
          type: boolean
    archivev1GetTargetResponse:
      type: object
      properties:
        target:
          $ref: '#/components/schemas/coralogixarchivev1Target'
    archivev1SetTargetResponse:
      type: object
      properties:
        target:
          $ref: '#/components/schemas/coralogixarchivev1Target'
    archivev2GetTargetResponse:
      type: object
      properties:
        target:
          $ref: '#/components/schemas/coralogixarchivev2Target'
      description: This data structure is used to retrieve a storage target for logs.
      title: Get Target Response
      externalDocs:
        description: Find out more about archives
        url: https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/
      required:
        - target
    archivev2OrderBy:
      type: string
      enum:
        - ORDER_BY_UNSPECIFIED
        - ORDER_BY_UPDATED_AT
        - ORDER_BY_CREATED_AT
        - ORDER_BY_COMPANY_ID
      default: ORDER_BY_UNSPECIFIED
    archivev2OrderDirection:
      type: string
      enum:
        - ORDER_DIRECTION_UNSPECIFIED
        - ORDER_DIRECTION_ASC
        - ORDER_DIRECTION_DESC
      default: ORDER_DIRECTION_UNSPECIFIED
    archivev2PartitioningScheme:
      type: string
      enum:
        - PARTITIONING_SCHEME_UNSPECIFIED
        - PARTITIONING_SCHEME_DT_HR
      default: PARTITIONING_SCHEME_UNSPECIFIED
    archivev2SetTargetRequest:
      type: object
      properties:
        isActive:
          type: boolean
          example: true
        s3:
          $ref: '#/components/schemas/v2S3TargetSpec'
        ibmCos:
          $ref: '#/components/schemas/v2IBMCosTargetSpec'
      description: This data structure is used to set a storage target for logs.
      title: Set Target Response
      externalDocs:
        description: Find out more about archives
        url: https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/
      required:
        - isActive
        - target_spec
    archivev2SetTargetResponse:
      type: object
      properties:
        target:
          $ref: '#/components/schemas/coralogixarchivev2Target'
      description: This data structure is obtained after setting a storage target for logs.
      title: Set Target Response
      externalDocs:
        description: Find out more about archives
        url: https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/
      required:
        - target
    astAnnotationSource:
      type: object
      properties:
        metrics:
          $ref: '#/components/schemas/AnnotationMetricsSource'
        logs:
          $ref: '#/components/schemas/AnnotationLogsSource'
        spans:
          $ref: '#/components/schemas/AnnotationSpansSource'
    astConstant:
      type: object
      properties:
        value:
          type: string
    astCustomSectionOptions:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        collapsed:
          type: boolean
        color:
          $ref: '#/components/schemas/astSectionColor'
    astDashboard:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the dashboard.
        name:
          type: string
          description: Display name of the dashboard.
        description:
          type: string
          description: Brief description or summary of the dashboard's purpose or content.
        layout:
          $ref: '#/components/schemas/astLayout'
        variables:
          type: array
          items:
            $ref: '#/components/schemas/astVariable'
          description: List of variables that can be used within the dashboard for dynamic content.
        filters:
          type: array
          items:
            $ref: '#/components/schemas/v1astFilter'
          description: List of filters that can be applied to the dashboard's data.
        absoluteTimeFrame:
          $ref: '#/components/schemas/commonTimeFrame'
        relativeTimeFrame:
          type: string
          description: Relative time frame specifying a duration from the current time.
        folderId:
          $ref: '#/components/schemas/v1UUID'
        folderPath:
          $ref: '#/components/schemas/astFolderPath'
        annotations:
          type: array
          items:
            $ref: '#/components/schemas/v1astAnnotation'
        'off':
          $ref: '#/components/schemas/DashboardAutoRefreshOff'
        twoMinutes:
          $ref: '#/components/schemas/DashboardAutoRefreshTwoMinutes'
        fiveMinutes:
          $ref: '#/components/schemas/DashboardAutoRefreshFiveMinutes'
      description: Dashboard represents the structure and configuration of a Coralogix Custom Dashboard.
    astFilterEquals:
      type: object
      properties:
        selection:
          $ref: '#/components/schemas/FilterEqualsSelection'
      description: Equals represents an equality comparison operation.
    astFilterNotEquals:
      type: object
      properties:
        selection:
          $ref: '#/components/schemas/FilterNotEqualsSelection'
      description: NotEquals represents a non-equality comparison operation.
    astFilterOperator:
      type: object
      properties:
        equals:
          $ref: '#/components/schemas/astFilterEquals'
        notEquals:
          $ref: '#/components/schemas/astFilterNotEquals'
      description: Operator defines the comparison operation for the filter.
    astFilterSource:
      type: object
      properties:
        logs:
          $ref: '#/components/schemas/FilterLogsFilter'
        spans:
          $ref: '#/components/schemas/FilterSpansFilter'
        metrics:
          $ref: '#/components/schemas/FilterMetricsFilter'
      description: Source defines the type of data the filter applies to.
    astFolderPath:
      type: object
      properties:
        segments:
          type: array
          items:
            type: string
    astInternalSectionOptions:
      type: object
    astLayout:
      type: object
      properties:
        sections:
          type: array
          items:
            $ref: '#/components/schemas/astSection'
    astMultiSelect:
      type: object
      properties:
        selected:
          type: array
          items:
            type: string
        source:
          $ref: '#/components/schemas/astMultiSelectSource'
        selection:
          $ref: '#/components/schemas/astMultiSelectSelection'
        valuesOrderDirection:
          $ref: '#/components/schemas/v1commonOrderDirection'
        selectionOptions:
          $ref: '#/components/schemas/MultiSelectVariableSelectionOptions'
    astMultiSelectQuery:
      type: object
      properties:
        logsQuery:
          $ref: '#/components/schemas/MultiSelectQueryLogsQuery'
        metricsQuery:
          $ref: '#/components/schemas/MultiSelectQueryMetricsQuery'
        spansQuery:
          $ref: '#/components/schemas/MultiSelectQuerySpansQuery'
    astMultiSelectSelection:
      type: object
      properties:
        all:
          $ref: '#/components/schemas/astMultiSelectSelectionAllSelection'
        list:
          $ref: '#/components/schemas/astMultiSelectSelectionListSelection'
    astMultiSelectSelectionAllSelection:
      type: object
    astMultiSelectSelectionListSelection:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
        labels:
          type: array
          items:
            type: string
    astMultiSelectSource:
      type: object
      properties:
        logsPath:
          $ref: '#/components/schemas/MultiSelectLogsPathSource'
        metricLabel:
          $ref: '#/components/schemas/MultiSelectMetricLabelSource'
        constantList:
          $ref: '#/components/schemas/MultiSelectConstantListSource'
        spanField:
          $ref: '#/components/schemas/MultiSelectSpanFieldSource'
        query:
          $ref: '#/components/schemas/MultiSelectQuerySource'
    astRow:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/v1UUID'
        appearance:
          $ref: '#/components/schemas/astRowAppearance'
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/astWidget'
    astRowAppearance:
      type: object
      properties:
        height:
          type: integer
          format: int32
    astSection:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/v1UUID'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/astRow'
        options:
          $ref: '#/components/schemas/astSectionOptions'
    astSectionColor:
      type: object
      properties:
        predefined:
          $ref: '#/components/schemas/astSectionPredefinedColor'
    astSectionOptions:
      type: object
      properties:
        internal:
          $ref: '#/components/schemas/astInternalSectionOptions'
        custom:
          $ref: '#/components/schemas/astCustomSectionOptions'
    astSectionPredefinedColor:
      type: string
      enum:
        - SECTION_PREDEFINED_COLOR_UNSPECIFIED
        - SECTION_PREDEFINED_COLOR_CYAN
        - SECTION_PREDEFINED_COLOR_GREEN
        - SECTION_PREDEFINED_COLOR_BLUE
        - SECTION_PREDEFINED_COLOR_PURPLE
        - SECTION_PREDEFINED_COLOR_MAGENTA
        - SECTION_PREDEFINED_COLOR_PINK
        - SECTION_PREDEFINED_COLOR_ORANGE
      default: SECTION_PREDEFINED_COLOR_UNSPECIFIED
    astVariable:
      type: object
      properties:
        name:
          type: string
        definition:
          $ref: '#/components/schemas/astVariableDefinition'
        displayName:
          type: string
        description:
          type: string
        displayType:
          $ref: '#/components/schemas/astVariableDisplayType'
    astVariableDefinition:
      type: object
      properties:
        constant:
          $ref: '#/components/schemas/astConstant'
        multiSelect:
          $ref: '#/components/schemas/astMultiSelect'
    astVariableDisplayType:
      type: string
      enum:
        - VARIABLE_DISPLAY_TYPE_UNSPECIFIED
        - VARIABLE_DISPLAY_TYPE_LABEL_VALUE
        - VARIABLE_DISPLAY_TYPE_VALUE
        - VARIABLE_DISPLAY_TYPE_NOTHING
      default: VARIABLE_DISPLAY_TYPE_UNSPECIFIED
    astWidget:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/v1UUID'
        title:
          type: string
        description:
          type: string
        definition:
          $ref: '#/components/schemas/astWidgetDefinition'
        appearance:
          $ref: '#/components/schemas/astWidgetAppearance'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    astWidgetAppearance:
      type: object
      properties:
        width:
          type: integer
          format: int32
    astWidgetDefinition:
      type: object
      properties:
        lineChart:
          $ref: '#/components/schemas/widgetsLineChart'
        dataTable:
          $ref: '#/components/schemas/widgetsDataTable'
        gauge:
          $ref: '#/components/schemas/widgetsGauge'
        pieChart:
          $ref: '#/components/schemas/widgetsPieChart'
        barChart:
          $ref: '#/components/schemas/widgetsBarChart'
        horizontalBarChart:
          $ref: '#/components/schemas/widgetsHorizontalBarChart'
        markdown:
          $ref: '#/components/schemas/widgetsMarkdown'
        hexagon:
          $ref: '#/components/schemas/widgetsHexagon'
    astwidgetscommonLuceneQuery:
      type: object
      properties:
        value:
          type: string
    astwidgetscommonPromQlQuery:
      type: object
      properties:
        value:
          type: string
    commonAnnotationEvent:
      type: object
      properties:
        instant:
          $ref: '#/components/schemas/commonAnnotationEventInstant'
        range:
          $ref: '#/components/schemas/commonAnnotationEventRange'
    commonAnnotationEventInstant:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        labels:
          type: object
          additionalProperties:
            type: string
        payload:
          type: object
    commonAnnotationEventRange:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        labels:
          type: object
          additionalProperties:
            type: string
        payload:
          type: object
    commonColorsBy:
      type: object
      properties:
        stack:
          $ref: '#/components/schemas/ColorsByColorsByStack'
        groupBy:
          $ref: '#/components/schemas/ColorsByColorsByGroupBy'
        aggregation:
          $ref: '#/components/schemas/ColorsByColorsByAggregation'
    commonDashboardFolder:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        parentId:
          type: string
    commonDataModeType:
      type: string
      enum:
        - DATA_MODE_TYPE_HIGH_UNSPECIFIED
        - DATA_MODE_TYPE_ARCHIVE
      default: DATA_MODE_TYPE_HIGH_UNSPECIFIED
    commonDataPoint:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        value:
          type: number
          format: double
    commonDataprimeResult:
      type: object
      properties:
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/DataprimeResultKeyValue'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/DataprimeResultKeyValue'
        userData:
          type: string
    commonDatasetScope:
      type: string
      enum:
        - DATASET_SCOPE_UNSPECIFIED
        - DATASET_SCOPE_USER_DATA
        - DATASET_SCOPE_LABEL
        - DATASET_SCOPE_METADATA
      default: DATASET_SCOPE_UNSPECIFIED
    commonFieldGroup:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    commonFullDataprimeQuery:
      type: object
      properties:
        serialized:
          $ref: '#/components/schemas/commonSerializedDataprimeQuery'
        raw:
          $ref: '#/components/schemas/v1commonDataprimeQuery'
    commonGroup:
      type: object
      properties:
        field:
          $ref: '#/components/schemas/commonFieldGroup'
        value:
          type: number
          format: double
        groups:
          type: array
          items:
            $ref: '#/components/schemas/commonGroup'
    commonGroupLimit:
      type: object
      properties:
        groupByFields:
          type: array
          items:
            type: string
        limit:
          type: integer
          format: int32
        minPercentage:
          type: integer
          format: int32
    commonGroupedSeries:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/commonGroup'
    commonLabelledValue:
      type: object
      properties:
        name:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        value:
          type: number
          format: double
    commonLegend:
      type: object
      properties:
        isVisible:
          type: boolean
        columns:
          type: array
          items:
            $ref: '#/components/schemas/LegendLegendColumn'
        groupByQuery:
          type: boolean
        placement:
          $ref: '#/components/schemas/LegendLegendPlacement'
    commonLogSeverityLevel:
      type: string
      enum:
        - LOG_SEVERITY_LEVEL_UNSPECIFIED
        - LOG_SEVERITY_LEVEL_DEBUG
        - LOG_SEVERITY_LEVEL_VERBOSE
        - LOG_SEVERITY_LEVEL_INFO
        - LOG_SEVERITY_LEVEL_WARNING
        - LOG_SEVERITY_LEVEL_ERROR
        - LOG_SEVERITY_LEVEL_CRITICAL
      default: LOG_SEVERITY_LEVEL_UNSPECIFIED
    commonLogsAggregation:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/LogsAggregationCount'
        countDistinct:
          $ref: '#/components/schemas/LogsAggregationCountDistinct'
        sum:
          $ref: '#/components/schemas/LogsAggregationSum'
        average:
          $ref: '#/components/schemas/LogsAggregationAverage'
        min:
          $ref: '#/components/schemas/LogsAggregationMin'
        max:
          $ref: '#/components/schemas/LogsAggregationMax'
        percentile:
          $ref: '#/components/schemas/LogsAggregationPercentile'
    commonMetricsQueryEditorMode:
      type: string
      enum:
        - METRICS_QUERY_EDITOR_MODE_UNSPECIFIED
        - METRICS_QUERY_EDITOR_MODE_TEXT
        - METRICS_QUERY_EDITOR_MODE_BUILDER
      default: METRICS_QUERY_EDITOR_MODE_UNSPECIFIED
    commonMultiGroup:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/commonFieldGroup'
        values:
          type: array
          items:
            type: number
            format: double
    commonObservationField:
      type: object
      properties:
        keypath:
          type: array
          items:
            type: string
        scope:
          $ref: '#/components/schemas/commonDatasetScope'
    commonOrderingField:
      type: object
      properties:
        field:
          type: string
        orderDirection:
          $ref: '#/components/schemas/v1commonOrderDirection'
    commonScaleType:
      type: string
      enum:
        - SCALE_TYPE_UNSPECIFIED
        - SCALE_TYPE_LINEAR
        - SCALE_TYPE_LOGARITHMIC
      default: SCALE_TYPE_UNSPECIFIED
    commonSerializedDataprimeQuery:
      type: object
      properties:
        data:
          type: string
          format: byte
    commonSortByType:
      type: string
      enum:
        - SORT_BY_TYPE_UNSPECIFIED
        - SORT_BY_TYPE_VALUE
        - SORT_BY_TYPE_NAME
      default: SORT_BY_TYPE_UNSPECIFIED
    commonSpanField:
      type: object
      properties:
        metadataField:
          $ref: '#/components/schemas/SpanFieldMetadataField'
        tagField:
          type: string
        processTagField:
          type: string
    commonSpansAggregation:
      type: object
      properties:
        metricAggregation:
          $ref: '#/components/schemas/SpansAggregationMetricAggregation'
        dimensionAggregation:
          $ref: '#/components/schemas/SpansAggregationDimensionAggregation'
    commonTimeFrame:
      type: object
      properties:
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
    commonTimeFrameSelect:
      type: object
      properties:
        absoluteTimeFrame:
          $ref: '#/components/schemas/commonTimeFrame'
        relativeTimeFrame:
          type: string
    commonTimeSeries:
      type: object
      properties:
        name:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/commonDataPoint'
        labels:
          type: object
          additionalProperties:
            type: string
    coralogixarchivev1Target:
      type: object
      properties:
        archivingFormatId:
          type: string
        isActive:
          type: boolean
        region:
          type: string
        bucket:
          type: string
        enableTags:
          type: boolean
    coralogixarchivev2Target:
      type: object
      properties:
        s3:
          $ref: '#/components/schemas/v2S3TargetSpec'
        ibmCos:
          $ref: '#/components/schemas/v2IBMCosTargetSpec'
        archiveSpec:
          $ref: '#/components/schemas/v2ArchiveSpec'
      description: This data structure represents a target to archive logs.
      title: Target
      externalDocs:
        description: Find out more about archives
        url: https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/
      required:
        - target_specarchive_spec
    dashboardsv1commonLuceneQuery:
      type: object
      properties:
        value:
          type: string
    dashboardsv1commonPromQlQuery:
      type: object
      properties:
        value:
          type: string
    datasetv2Dataset:
      type: object
      properties:
        dataspace:
          $ref: '#/components/schemas/v2Dataspace'
        dataset:
          type: string
    formatgenericv1Version:
      type: string
      enum:
        - VERSION_UNSPECIFIED
        - VERSION_V1
      default: VERSION_UNSPECIFIED
    formatwide_parquetv1Version:
      type: string
      enum:
        - VERSION_UNSPECIFIED
        - VERSION_V1
        - VERSION_V3
      default: VERSION_UNSPECIFIED
    kafka_out_targetsv1CompressionType:
      type: string
      enum:
        - COMPRESSION_TYPE_UNSPECIFIED
        - COMPRESSION_TYPE_GZIP
      default: COMPRESSION_TYPE_UNSPECIFIED
    kafka_out_targetsv1DeleteKafkaOutTargetResponse:
      type: object
    kafka_out_targetsv1GetKafkaOutTargetsResponse:
      type: object
      properties:
        targets:
          type: array
          items:
            $ref: '#/components/schemas/archivekafka_out_targetsv1Target'
    kafka_out_targetsv1SendKafkaOutTestMessageResponse:
      type: object
    kafka_out_targetsv1UpsertKafkaOutTargetResponse:
      type: object
      properties:
        target:
          $ref: '#/components/schemas/archivekafka_out_targetsv1Target'
    kafka_out_targetsv2CompressionType:
      type: string
      enum:
        - COMPRESSION_TYPE_UNSPECIFIED
        - COMPRESSION_TYPE_GZIP
      default: COMPRESSION_TYPE_UNSPECIFIED
    kafka_out_targetsv2DeleteKafkaOutTargetResponse:
      type: object
    kafka_out_targetsv2GetKafkaOutTargetsResponse:
      type: object
      properties:
        targets:
          type: array
          items:
            $ref: '#/components/schemas/archivekafka_out_targetsv2Target'
    kafka_out_targetsv2SendKafkaOutTestMessageResponse:
      type: object
    kafka_out_targetsv2UpsertKafkaOutTargetResponse:
      type: object
      properties:
        target:
          $ref: '#/components/schemas/archivekafka_out_targetsv2Target'
    metrics_configuratorConfigureTenantRequest:
      type: object
      properties:
        retentionPolicy:
          $ref: '#/components/schemas/metrics_configuratorRetentionPolicyRequest'
        ibm:
          $ref: '#/components/schemas/metrics_configuratorIbmConfigV2'
        s3:
          $ref: '#/components/schemas/metrics_configuratorS3Config'
      description: This data structure is used to configure a tenant.
      title: Configure Tenant Request
      externalDocs:
        description: Find out more about metrics cost optimization
        url: https://coralogix.com/docs/user-guides/account-management/payment-and-billing/metrics-optimization/
      required:
        - retentionPolicy
        - storage_config
    metrics_configuratorGetTenantConfigResponse:
      type: object
      properties:
        tenantConfig:
          $ref: '#/components/schemas/metrics_configuratorTenantConfig'
    metrics_configuratorGetTenantConfigResponseV2:
      type: object
      properties:
        tenantConfig:
          $ref: '#/components/schemas/metrics_configuratorTenantConfigV2'
    metrics_configuratorHotStoreConfig:
      type: object
      properties:
        tenantId:
          type: integer
          format: int64
        clusterName:
          type: string
    metrics_configuratorIbmConfig:
      type: object
      properties:
        bucket:
          type: string
        region:
          type: string
        endpoint:
          type: string
        crn:
          type: string
    metrics_configuratorIbmConfigV2:
      type: object
      properties:
        endpoint:
          type: string
          example: s3.us-south.cloud-object-storage.appdomain.cloud
          title: Endpoint to use to access the bucket
        crn:
          type: string
          example: 'crn:v1:bluemix:public:cloud-object-storage:global:a/1234567890abcdef1234567890abcdef:12345678-1234-1234-1234-1234567890ab::'
          title: Cloud Object Storage bucket CRN
        serviceCrn:
          type: string
          example: 'crn:v1:bluemix:public:cloud-object-storage:global:a/1234567890abcdef1234567890abcdef:12345678-1234-1234-1234-1234567890ab::'
          title: |-
            A CRN of a service instance which will be storing data in the bucket.
            Team ID is comming in AuthContext
      description: This data structure is used to configure an IBM bucket.
      title: IBM Bucket Configuration
      externalDocs:
        description: Find out more about metrics cost optimization
        url: https://coralogix.com/docs/user-guides/account-management/payment-and-billing/metrics-optimization/
      required:
        - endpoint
        - crn
        - serviceCrn
    metrics_configuratorListHotStoreConfigsResponse:
      type: object
      properties:
        configs:
          type: array
          items:
            $ref: '#/components/schemas/metrics_configuratorHotStoreConfig'
    metrics_configuratorListTenantConfigsResponse:
      type: object
      properties:
        tenantConfigs:
          type: array
          items:
            $ref: '#/components/schemas/metrics_configuratorTenantConfig'
    metrics_configuratorRetentionPolicy:
      type: object
      properties:
        resolution:
          type: integer
          format: int32
          example: 12
        retentionDays:
          type: integer
          format: int32
          example: 30
      description: This data structure represents the retention policy for a tenant.
      title: Retenion Policy
      externalDocs:
        description: Find out more about metrics cost optimization
        url: https://coralogix.com/docs/user-guides/account-management/payment-and-billing/metrics-optimization/
      required:
        - resolution
        - retentionDays
    metrics_configuratorRetentionPolicyRequest:
      type: object
      properties:
        rawResolution:
          type: integer
          format: int64
          example: 1
        fiveMinutesResolution:
          type: integer
          format: int64
          example: 2
        oneHourResolution:
          type: integer
          format: int64
          example: 3
      description: This data structure is used to set the retention policy for a tenant.
      title: Retenion Policy Request
      externalDocs:
        description: Find out more about metrics cost optimization
        url: https://coralogix.com/docs/user-guides/account-management/payment-and-billing/metrics-optimization/
      required:
        - rawResolution
        - fiveMinutesResolution
        - oneHourResolution
    metrics_configuratorS3Config:
      type: object
      properties:
        bucket:
          type: string
        region:
          type: string
      description: This data structure represents the S3 configuration for a tenant.
      title: S3 Configuration
      externalDocs:
        description: Find out more about metrics cost optimization
        url: https://coralogix.com/docs/user-guides/account-management/payment-and-billing/metrics-optimization/
      required:
        - bucket
        - region
    metrics_configuratorTenantConfig:
      type: object
      properties:
        tenantId:
          type: integer
          format: int64
        bucketName:
          type: string
        region:
          type: string
        retentionPolicy:
          type: array
          items:
            $ref: '#/components/schemas/metrics_configuratorRetentionPolicy'
        ibm:
          $ref: '#/components/schemas/metrics_configuratorIbmConfig'
        s3:
          $ref: '#/components/schemas/metrics_configuratorS3Config'
        prefix:
          type: string
        indexVersion:
          type: integer
          format: int64
        disabled:
          type: boolean
    metrics_configuratorTenantConfigV2:
      type: object
      properties:
        tenantId:
          type: integer
          format: int64
        retentionPolicy:
          $ref: '#/components/schemas/metrics_configuratorRetentionPolicyRequest'
        ibm:
          $ref: '#/components/schemas/metrics_configuratorIbmConfigV2'
        s3:
          $ref: '#/components/schemas/metrics_configuratorS3Config'
        prefix:
          type: string
        disabled:
          type: boolean
    metrics_configuratorUpdateRequest:
      type: object
      properties:
        retentionDays:
          type: integer
          format: int64
        ibm:
          $ref: '#/components/schemas/metrics_configuratorIbmConfigV2'
        s3:
          $ref: '#/components/schemas/metrics_configuratorS3Config'
      description: This data structure is used to update the configuration of a tenant.
      title: Update Tenant Request
      externalDocs:
        description: Find out more about metrics cost optimization
        url: https://coralogix.com/docs/user-guides/account-management/payment-and-billing/metrics-optimization/
      required:
        - retentionDays
        - storage_config
    metrics_configuratorValidateBucketRequest:
      type: object
      properties:
        ibm:
          $ref: '#/components/schemas/metrics_configuratorIbmConfigV2'
        s3:
          $ref: '#/components/schemas/metrics_configuratorS3Config'
      description: This data structure is used to validate a bucket.
      title: Bucket Validation Request
      externalDocs:
        description: Find out more about metrics cost optimization
        url: https://coralogix.com/docs/user-guides/account-management/payment-and-billing/metrics-optimization/
      required:
        - storage_config
    metrics_tcoAddRequest:
      type: object
      properties:
        label:
          type: string
          example: rule1
        regex:
          type: string
          example: .*
      description: This data structure is used to add a metrics tco rule.
      title: Add Request
      externalDocs:
        description: Find out more about archives
        url: https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/
      required:
        - label
        - regex
    metrics_tcoDeleteRequest:
      type: object
      properties:
        ruleId:
          type: string
          format: uint64
          example: 1
    metrics_tcoGetResponse:
      type: object
      properties:
        rules:
          type: array
          example: 1
          items:
            $ref: '#/components/schemas/metrics_tcoRule'
    metrics_tcoRule:
      type: object
      properties:
        id:
          type: string
          format: uint64
          example: 1
        label:
          type: string
          example: rule1
        regex:
          type: string
          example: .*
      description: This data structure represents a metrics tco rule.
      title: Rule
      externalDocs:
        description: Find out more about metrics cost optimization
        url: https://coralogix.com/docs/user-guides/account-management/payment-and-billing/metrics-optimization/
      required:
        - id
        - label
        - regex
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties: {}
    protobufNullValue:
      type: string
      enum:
        - NULL_VALUE
      default: NULL_VALUE
      description: |-
        `NullValue` is a singleton enumeration to represent the null value for the
        `Value` type union.

        The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
    servicesArchiveLogsEvent:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
        labels:
          type: object
          additionalProperties:
            type: string
        userData:
          type: object
    servicesArchiveSpansEvent:
      type: object
      properties:
        spanId:
          type: string
        traceId:
          type: string
        parentSpanId:
          type: string
        metadata:
          $ref: '#/components/schemas/servicesArchiveSpansEventMetadata'
        startTime:
          type: string
          format: date-time
        duration:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/servicesArchiveSpansEventTag'
        processTags:
          type: array
          items:
            $ref: '#/components/schemas/servicesArchiveSpansEventTag'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/servicesArchiveSpansEventLog'
    servicesArchiveSpansEventLog:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        fields:
          type: object
          additionalProperties:
            type: string
    servicesArchiveSpansEventMetadata:
      type: object
      properties:
        applicationName:
          type: string
        subsystemName:
          type: string
        serviceName:
          type: string
        operationName:
          type: string
    servicesArchiveSpansEventTag:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    servicesAssignDashboardFolderResponse:
      type: object
    servicesCreateDashboardFolderRequest:
      type: object
      properties:
        requestId:
          type: string
        folder:
          $ref: '#/components/schemas/commonDashboardFolder'
    servicesCreateDashboardFolderResponse:
      type: object
    servicesCreateDashboardRequest:
      type: object
      properties:
        requestId:
          type: string
        dashboard:
          $ref: '#/components/schemas/astDashboard'
    servicesCreateDashboardResponse:
      type: object
      properties:
        dashboardId:
          type: string
    servicesCreateViewFolderRequest:
      type: object
      properties:
        name:
          type: string
          example: My Folder
          description: Folder name
          title: View folder name
          minLength: 1
      description: Create view folder.
      title: CreateViewFolderRequest
    servicesCreateViewFolderResponse:
      type: object
      properties:
        folder:
          $ref: '#/components/schemas/v1ViewFolder'
      description: Request for creating view folder.
      title: CreateViewFolderRequest
    servicesCreateViewRequest:
      type: object
      properties:
        name:
          type: string
          example: Logs view
          description: View name
          minLength: 1
        searchQuery:
          $ref: '#/components/schemas/v1SearchQuery'
        timeSelection:
          $ref: '#/components/schemas/v1TimeSelection'
        filters:
          $ref: '#/components/schemas/v1SelectedFilters'
        folderId:
          type: string
          format: uuid
          example: 3dc02998-0b50-4ea8-b68a-4779d716fa1f
          description: Unique identifier for folders
          maxLength: 36
          minLength: 36
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      description: View folder.
      title: ViewFolder
      required:
        - name
        - timeSelection
    servicesCreateViewResponse:
      type: object
      properties:
        view:
          $ref: '#/components/schemas/servicesView'
    servicesDashboardCatalogItem:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        isDefault:
          type: boolean
        isPinned:
          type: boolean
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        folder:
          $ref: '#/components/schemas/commonDashboardFolder'
    servicesDeleteDashboardFolderResponse:
      type: object
    servicesDeleteDashboardResponse:
      type: object
    servicesDeleteViewFolderResponse:
      type: object
    servicesDeleteViewResponse:
      type: object
    servicesGetDashboardCatalogResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/servicesDashboardCatalogItem'
    servicesGetDashboardFolderResponse:
      type: object
      properties:
        folder:
          $ref: '#/components/schemas/commonDashboardFolder'
    servicesGetDashboardResponse:
      type: object
      properties:
        dashboard:
          $ref: '#/components/schemas/astDashboard'
        updatedAt:
          type: string
          format: date-time
    servicesGetTeamSettingsResponse:
      type: object
      properties:
        maxGroupByLogs:
          type: integer
          format: int32
        maxGroupByMetrics:
          type: integer
          format: int32
        maxGroupBySpans:
          type: integer
          format: int32
        maxGroupByArchive:
          type: integer
          format: int32
    servicesGetViewFolderResponse:
      type: object
      properties:
        folder:
          $ref: '#/components/schemas/v1ViewFolder'
    servicesGetViewResponse:
      type: object
      properties:
        view:
          $ref: '#/components/schemas/servicesView'
    servicesListDashboardFoldersResponse:
      type: object
      properties:
        folder:
          type: array
          items:
            $ref: '#/components/schemas/commonDashboardFolder'
    servicesListViewFoldersResponse:
      type: object
      properties:
        folders:
          type: array
          items:
            $ref: '#/components/schemas/v1ViewFolder'
          title: List of view folders
    servicesListViewsResponse:
      type: object
      properties:
        views:
          type: array
          items:
            $ref: '#/components/schemas/servicesView'
          title: List of views
    servicesLogsEvent:
      type: object
      properties:
        logId:
          type: string
        timestamp:
          type: string
          format: date-time
        text:
          type: string
        json:
          type: object
        logsMetadata:
          $ref: '#/components/schemas/servicesLogsMetadata'
    servicesLogsMetadata:
      type: object
      properties:
        applicationName:
          type: string
        subsystemName:
          type: string
        severity:
          $ref: '#/components/schemas/commonLogSeverityLevel'
    servicesMetricsEvent:
      type: object
      properties:
        aggregations:
          type: array
          items:
            $ref: '#/components/schemas/servicesMetricsEventAggregation'
        timeSeries:
          $ref: '#/components/schemas/commonTimeSeries'
    servicesMetricsEventAggregation:
      type: object
      properties:
        aggregationType:
          $ref: '#/components/schemas/MetricsEventAggregationType'
        value:
          type: number
          format: double
    servicesPinDashboardResponse:
      type: object
    servicesReplaceDashboardFolderRequest:
      type: object
      properties:
        requestId:
          type: string
        folder:
          $ref: '#/components/schemas/commonDashboardFolder'
    servicesReplaceDashboardFolderResponse:
      type: object
    servicesReplaceDashboardRequest:
      type: object
      properties:
        requestId:
          type: string
        dashboard:
          $ref: '#/components/schemas/astDashboard'
    servicesReplaceDashboardResponse:
      type: object
    servicesReplaceDefaultDashboardResponse:
      type: object
    servicesReplaceViewFolderResponse:
      type: object
      properties:
        folder:
          $ref: '#/components/schemas/v1ViewFolder'
    servicesReplaceViewResponse:
      type: object
      properties:
        view:
          $ref: '#/components/schemas/servicesView'
    servicesSearchArchiveGroupedLogsSeriesResponse:
      type: object
      properties:
        series:
          type: array
          items:
            $ref: '#/components/schemas/commonGroupedSeries'
        meta:
          type: object
          additionalProperties:
            type: string
    servicesSearchArchiveGroupedLogsTimeSeriesResponse:
      type: object
      properties:
        series:
          $ref: '#/components/schemas/commonGroupedSeries'
        meta:
          type: object
          additionalProperties:
            type: string
    servicesSearchArchiveGroupedSpansSeriesResponse:
      type: object
      properties:
        series:
          type: array
          items:
            $ref: '#/components/schemas/commonGroupedSeries'
        meta:
          type: object
          additionalProperties:
            type: string
    servicesSearchArchiveGroupedSpansTimeSeriesResponse:
      type: object
      properties:
        series:
          $ref: '#/components/schemas/commonGroupedSeries'
        meta:
          type: object
          additionalProperties:
            type: string
    servicesSearchArchiveLogsEventGroupsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/commonMultiGroup'
    servicesSearchArchiveLogsEventsCountResponse:
      type: object
      properties:
        count:
          type: string
          format: int64
    servicesSearchArchiveLogsEventsResponse:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/servicesArchiveLogsEvent'
        totalFetched:
          type: integer
          format: int32
          description: How many events were fetched before pagination applied.
    servicesSearchArchiveLogsGroupedValuesResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/commonGroup'
        isLimitExceeded:
          type: boolean
        total:
          type: string
          format: int64
        meta:
          type: object
          additionalProperties:
            type: string
    servicesSearchArchiveLogsTimeSeriesResponse:
      type: object
      properties:
        timeSeries:
          type: array
          items:
            $ref: '#/components/schemas/commonTimeSeries'
        total:
          type: string
          format: int64
    servicesSearchArchiveSpansEventGroupsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/commonMultiGroup'
    servicesSearchArchiveSpansEventsCountResponse:
      type: object
      properties:
        count:
          type: string
          format: int64
    servicesSearchArchiveSpansEventsResponse:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/servicesArchiveSpansEvent'
        totalFetched:
          type: integer
          format: int32
          description: How many events were fetched before pagination applied.
    servicesSearchArchiveSpansGroupedValuesResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/commonGroup'
        isLimitExceeded:
          type: boolean
        total:
          type: string
          format: int64
        meta:
          type: object
          additionalProperties:
            type: string
    servicesSearchArchiveSpansTimeSeriesResponse:
      type: object
      properties:
        timeSeries:
          type: array
          items:
            $ref: '#/components/schemas/commonTimeSeries'
        total:
          type: string
          format: int64
    servicesSearchDataprimeArchiveResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/commonDataprimeResult'
        meta:
          type: object
          additionalProperties:
            type: string
    servicesSearchDataprimeResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/commonDataprimeResult'
    servicesSearchGroupedLogsSeriesRequestLimit:
      type: object
      properties:
        groupByFields:
          type: array
          items:
            type: string
        limit:
          type: integer
          format: int32
        minPercentage:
          type: integer
          format: int32
    servicesSearchGroupedLogsSeriesResponse:
      type: object
      properties:
        series:
          type: array
          items:
            $ref: '#/components/schemas/commonGroupedSeries'
    servicesSearchGroupedSpansSeriesRequestLimit:
      type: object
      properties:
        groupByFields:
          type: array
          items:
            $ref: '#/components/schemas/commonSpanField'
        limit:
          type: integer
          format: int32
        minPercentage:
          type: integer
          format: int32
    servicesSearchGroupedSpansSeriesResponse:
      type: object
      properties:
        series:
          type: array
          items:
            $ref: '#/components/schemas/commonGroupedSeries'
    servicesSearchLogsAnnotationEventsResponse:
      type: object
      properties:
        annotationEvents:
          type: array
          items:
            $ref: '#/components/schemas/commonAnnotationEvent'
    servicesSearchLogsEventGroupsRequestOrderBy:
      type: object
      properties:
        grouping:
          type: string
        aggregation:
          $ref: '#/components/schemas/commonLogsAggregation'
        orderDirection:
          $ref: '#/components/schemas/v1commonOrderDirection'
    servicesSearchLogsEventGroupsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/commonMultiGroup'
    servicesSearchLogsEventsRequestPagination:
      type: object
      properties:
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
    servicesSearchLogsEventsResponse:
      type: object
      properties:
        total:
          type: string
          format: int64
        events:
          type: array
          items:
            $ref: '#/components/schemas/servicesLogsEvent'
    servicesSearchLogsGroupedTimeSeriesRequestGroupBy:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
        limit:
          type: integer
          format: int32
        minPercentage:
          type: integer
          format: int32
    servicesSearchLogsGroupedTimeSeriesResponse:
      type: object
      properties:
        series:
          type: array
          items:
            $ref: '#/components/schemas/commonGroupedSeries'
    servicesSearchLogsGroupedValuesResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/commonGroup'
        isLimitExceeded:
          type: boolean
        total:
          type: string
          format: int64
    servicesSearchLogsTimeSeriesResponse:
      type: object
      properties:
        timeSeries:
          type: array
          items:
            $ref: '#/components/schemas/commonTimeSeries'
        total:
          type: string
          format: int64
    servicesSearchMetricsAnnotationEventsResponse:
      type: object
      properties:
        annotationEvents:
          type: array
          items:
            $ref: '#/components/schemas/commonAnnotationEvent'
    servicesSearchMetricsEventsRequestOrderBy:
      type: object
      properties:
        direction:
          $ref: '#/components/schemas/v1commonOrderDirection'
        label:
          type: string
        aggType:
          $ref: '#/components/schemas/MetricsEventAggregationType'
    servicesSearchMetricsEventsRequestPagination:
      type: object
      properties:
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
    servicesSearchMetricsEventsResponse:
      type: object
      properties:
        labels:
          type: array
          items:
            type: string
        metricsEvents:
          type: array
          items:
            $ref: '#/components/schemas/servicesMetricsEvent'
        total:
          type: string
          format: int64
    servicesSearchMetricsGroupedSeriesRequestLimit:
      type: object
      properties:
        groupBy:
          type: array
          items:
            type: string
        limit:
          type: integer
          format: int32
        minPercentage:
          type: integer
          format: int32
    servicesSearchMetricsGroupedSeriesResponse:
      type: object
      properties:
        series:
          type: array
          items:
            $ref: '#/components/schemas/commonGroupedSeries'
    servicesSearchMetricsGroupedTimeSeriesRequestGroupBy:
      type: object
      properties:
        labels:
          type: array
          items:
            type: string
        limit:
          type: integer
          format: int32
        minPercentage:
          type: integer
          format: int32
    servicesSearchMetricsGroupedTimeSeriesResponse:
      type: object
      properties:
        series:
          type: array
          items:
            $ref: '#/components/schemas/commonGroupedSeries'
    servicesSearchMetricsGroupedValuesResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/commonGroup'
        isLimitExceeded:
          type: boolean
        total:
          type: string
          format: int64
    servicesSearchMetricsTimeSeriesResponse:
      type: object
      properties:
        timeSeries:
          type: array
          items:
            $ref: '#/components/schemas/commonTimeSeries'
        total:
          type: string
          format: int64
    servicesSearchMetricsTimeValuesResponse:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/commonLabelledValue'
        isLimitExceeded:
          type: boolean
        total:
          type: string
          format: int64
    servicesSearchSpansAnnotationEventsResponse:
      type: object
      properties:
        annotationEvents:
          type: array
          items:
            $ref: '#/components/schemas/commonAnnotationEvent'
    servicesSearchSpansEventGroupsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/commonMultiGroup'
    servicesSearchSpansEventsRequestPagination:
      type: object
      properties:
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
    servicesSearchSpansEventsResponse:
      type: object
      properties:
        total:
          type: string
          format: int64
        spansEvents:
          type: array
          items:
            $ref: '#/components/schemas/servicesSpansEvent'
    servicesSearchSpansGroupedTimeSeriesRequestGroupBy:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/commonSpanField'
        limit:
          type: integer
          format: int32
        minPercentage:
          type: integer
          format: int32
    servicesSearchSpansGroupedTimeSeriesResponse:
      type: object
      properties:
        series:
          type: array
          items:
            $ref: '#/components/schemas/commonGroupedSeries'
    servicesSearchSpansGroupedValuesResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/commonGroup'
        isLimitExceeded:
          type: boolean
        total:
          type: string
          format: int64
    servicesSearchSpansTimeSeriesResponse:
      type: object
      properties:
        timeSeries:
          type: array
          items:
            $ref: '#/components/schemas/commonTimeSeries'
        total:
          type: string
          format: int64
    servicesSpansEvent:
      type: object
      properties:
        spanId:
          type: string
        traceId:
          type: string
        parentSpanId:
          type: string
        metadata:
          $ref: '#/components/schemas/servicesSpansEventMetadata'
        startTime:
          type: string
          format: date-time
        duration:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/servicesSpansEventTag'
        processTags:
          type: array
          items:
            $ref: '#/components/schemas/servicesSpansEventTag'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/servicesSpansEventLog'
    servicesSpansEventLog:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        fields:
          type: object
          additionalProperties:
            type: string
    servicesSpansEventMetadata:
      type: object
      properties:
        applicationName:
          type: string
        subsystemName:
          type: string
        serviceName:
          type: string
        operationName:
          type: string
    servicesSpansEventTag:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    servicesUnpinDashboardResponse:
      type: object
    servicesView:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 52
          description: id
          title: View id
        name:
          type: string
          example: Logs view
          description: View name
          title: View name
          minLength: 1
        searchQuery:
          $ref: '#/components/schemas/v1SearchQuery'
        timeSelection:
          $ref: '#/components/schemas/v1TimeSelection'
        filters:
          $ref: '#/components/schemas/v1SelectedFilters'
        folderId:
          type: string
          format: uuid
          example: 3dc02998-0b50-4ea8-b68a-4779d716fa1f
          description: Unique identifier for folders
          title: View folder id
          maxLength: 36
          minLength: 36
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      description: Response for views.
      title: View
      required:
        - name
        - id
        - timeSelection
    v1ActivateRetentionsResponse:
      type: object
      properties:
        activateRetentions:
          type: boolean
    v1AddEnrichmentsRequest:
      type: object
      properties:
        requestEnrichments:
          type: array
          items:
            $ref: '#/components/schemas/v1EnrichmentRequestModel'
      description: This response data structure represents a collection of enrichments
      title: Enrichments Creation Request
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      required:
        - requestEnrichments
    v1AddEnrichmentsResponse:
      type: object
      properties:
        enrichments:
          type: array
          items:
            $ref: '#/components/schemas/v1Enrichment'
      description: Response data structure for enrichments creation
      title: Encrichments Creation Response
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      required:
        - enrichments
    v1AddInternalEnrichmentsResponse:
      type: object
      properties:
        enrichments:
          type: array
          items:
            $ref: '#/components/schemas/v1Enrichment'
    v1AddUsersToTeamGroupResponse:
      type: object
      properties:
        teamId:
          $ref: '#/components/schemas/v1TeamId'
      title: / Add users to an existing team group response
    v1AddUsersToTeamGroupsRequestAddUsersToTeamGroup:
      type: object
      properties:
        groupId:
          $ref: '#/components/schemas/v1TeamGroupId'
        userIds:
          type: array
          items:
            $ref: '#/components/schemas/v1UserId'
          title: / Users to add to group
    v1AddUsersToTeamGroupsResponse:
      type: object
    v1AtomicOverwriteEnrichmentsRequest:
      type: object
      properties:
        enrichmentType:
          $ref: '#/components/schemas/v1EnrichmentType'
        enrichmentFields:
          type: array
          items:
            $ref: '#/components/schemas/v1EnrichmentFieldDefinition'
      title: Deletes all enrichments of the given type and replaces them with the new ones
    v1AtomicOverwriteEnrichmentsResponse:
      type: object
      properties:
        enrichments:
          type: array
          items:
            $ref: '#/components/schemas/v1Enrichment'
    v1AwsType:
      type: object
      properties:
        resourceType:
          type: string
          example: ec2
    v1CompanyEnrichmentSettings:
      type: object
      properties:
        enrichmentAmountLimit:
          type: integer
          format: int64
        enrichmentsInUse:
          type: integer
          format: int64
        sizeLimitBytes:
          type: string
          format: uint64
        rowLimit:
          type: integer
          format: int64
        queryOnlySizeLimitBytes:
          type: string
          format: uint64
        queryOnlyRowLimit:
          type: integer
          format: int64
    v1CreateCustomEnrichmentResponse:
      type: object
      properties:
        message:
          type: string
        customEnrichment:
          $ref: '#/components/schemas/v1CustomEnrichment'
    v1CreateTeamGroupResponse:
      type: object
      properties:
        groupId:
          $ref: '#/components/schemas/v1TeamGroupId'
      title: / Create team group response
    v1CustomEnrichment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        version:
          type: integer
          format: int64
        isQueryOnly:
          type: boolean
    v1CustomEnrichmentData:
      type: object
      properties:
        definition:
          $ref: '#/components/schemas/v1CustomEnrichment'
        textual:
          type: string
        binary:
          type: string
          format: byte
    v1CustomEnrichmentType:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
    v1CustomTimeSelection:
      type: object
      properties:
        fromTime:
          type: string
          format: date-time
          example: '2024-01-25T11:31:43.152Z'
          title: Custom time selection start timestamp
          minLength: 1
        toTime:
          type: string
          format: date-time
          example: '2024-01-25T11:35:43.152Z'
          title: Custom time selection end timestamp
          minLength: 1
      title: Custom time selection
      required:
        - fromTime
        - toTime
    v1DeleteCustomEnrichmentResponse:
      type: object
      properties:
        message:
          type: string
        customEnrichmentId:
          type: integer
          format: int64
    v1DeleteTeamGroupResponse:
      type: object
      title: / Delete team group response
    v1Enrichment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        fieldName:
          type: string
          example: 1
        enrichmentType:
          $ref: '#/components/schemas/v1EnrichmentType'
        enrichedFieldName:
          type: string
          example: 1
      description: This data structure represents an enrichment
      title: Enrichment
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      required:
        - id
        - fieldName
        - enrichmentType
    v1EnrichmentFieldDefinition:
      type: object
      properties:
        fieldName:
          type: string
          title: the field name of the key targeted for enrichment
        enrichedFieldName:
          type: string
          title: the field of the enriched key after enrichment
    v1EnrichmentRequestModel:
      type: object
      properties:
        fieldName:
          type: string
          example: sourceIPs
        enrichmentType:
          $ref: '#/components/schemas/v1EnrichmentType'
        enrichedFieldName:
          type: string
      description: The enrichment request model
      title: Enrichment Prototype
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      required:
        - fieldName
        - enrichmentType
    v1EnrichmentType:
      type: object
      properties:
        geoIp:
          $ref: '#/components/schemas/v1GeoIpType'
        suspiciousIp:
          $ref: '#/components/schemas/v1SuspiciousIpType'
        aws:
          $ref: '#/components/schemas/v1AwsType'
        customEnrichment:
          $ref: '#/components/schemas/v1CustomEnrichmentType'
    v1File:
      type: object
      properties:
        name:
          type: string
        extension:
          type: string
        textual:
          type: string
        binary:
          type: string
          format: byte
    v1FilterType:
      type: string
      enum:
        - FILTER_TYPE_UNSPECIFIED
        - FILTER_TYPE_STARTS_WITH
        - FILTER_TYPE_ENDS_WITH
        - FILTER_TYPE_CONTAINS
        - FILTER_TYPE_EXACT
      default: FILTER_TYPE_UNSPECIFIED
      description: |-
        - FILTER_TYPE_STARTS_WITH: / Matches if string starts with filter
         - FILTER_TYPE_ENDS_WITH: / Matches if string ends with filter
         - FILTER_TYPE_CONTAINS: / Matches if string contains filter
         - FILTER_TYPE_EXACT: / Matches if string exactly matches filter
      title: / A filter type describes how to match a filter against an input string
    v1GenericEventAvro:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/formatgenericv1Version'
    v1GeoIpType:
      type: object
    v1GetCompanyEnrichmentSettingsResponse:
      type: object
      properties:
        enrichmentSettings:
          $ref: '#/components/schemas/v1CompanyEnrichmentSettings'
    v1GetCustomEnrichmentResponse:
      type: object
      properties:
        customEnrichment:
          $ref: '#/components/schemas/v1CustomEnrichment'
    v1GetCustomEnrichmentsResponse:
      type: object
      properties:
        customEnrichments:
          type: array
          items:
            $ref: '#/components/schemas/v1CustomEnrichment'
    v1GetEnrichmentLimitResponse:
      type: object
      properties:
        limit:
          type: integer
          format: int64
          example: 10
        used:
          type: integer
          format: int64
          example: 5
      description: This response data structure represents the enrichments limit
      title: Enrichment Limit
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      required:
        - limit
        - used
    v1GetEnrichmentsResponse:
      type: object
      properties:
        enrichments:
          type: array
          items:
            $ref: '#/components/schemas/v1Enrichment'
      description: This response data structure represents a collection of enrichments
      title: Enrichment Collection
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      required:
        - enrichments
    v1GetGroupUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/v1User'
        noMorePages:
          $ref: '#/components/schemas/GetGroupUsersResponseNoMorePages'
        token:
          $ref: '#/components/schemas/GetGroupUsersResponseNextPageToken'
    v1GetInternalEnrichmentsResponse:
      type: object
      properties:
        enrichments:
          type: array
          items:
            $ref: '#/components/schemas/v1Enrichment'
    v1GetRetentionsEnabledResponse:
      type: object
      properties:
        enableTags:
          type: boolean
    v1GetRetentionsResponse:
      type: object
      properties:
        retentions:
          type: array
          items:
            $ref: '#/components/schemas/v1Retention'
    v1GetSupportedAwsResourceTypesResponse:
      type: object
      properties:
        resourceTypes:
          type: array
          items:
            $ref: '#/components/schemas/v1SupportedAwsResourceType'
    v1GetTeamGroupByNameResponse:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/v1TeamGroup'
    v1GetTeamGroupResponse:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/v1TeamGroup'
      title: / Get team group response
    v1GetTeamGroupScopeResponse:
      type: object
      properties:
        scope:
          $ref: '#/components/schemas/v1Scope'
      title: / Set team group scope response
    v1GetTeamGroupsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/v1TeamGroup'
          title: / Groups associated with team
      title: / Get all team groups response
    v1GroupOrigin:
      type: string
      enum:
        - GROUP_ORIGIN_UNSPECIFIED
        - GROUP_ORIGIN_BUILT_IN
        - GROUP_ORIGIN_USER_DEFINED
      default: GROUP_ORIGIN_UNSPECIFIED
      description: |-
        / Group origin defines in which circumstances the group was created.

         - GROUP_ORIGIN_BUILT_IN: / A built in group is defined by the system and users are not able to alter them.
         - GROUP_ORIGIN_USER_DEFINED: / User defined or custom role.
    v1InternalTargetServiceIsArchiveConfiguredResponse:
      type: object
      properties:
        companyArchiveConfigs:
          type: array
          items:
            $ref: '#/components/schemas/archivev1CompanyArchiveConfig'
    v1IsArchiveConfiguredResponse:
      type: object
      properties:
        isConfigured:
          type: boolean
        companyArchiveConfigs:
          type: array
          items:
            $ref: '#/components/schemas/archivev1CompanyArchiveConfig'
    v1QuickTimeSelection:
      type: object
      properties:
        caption:
          type: string
          example: Last Hour
          description: Folder name
          minLength: 1
        seconds:
          type: integer
          format: int64
          example: 3600
          description: Folder name
      title: Quick time selection
      required:
        - caption
        - seconds
    v1RemoveEnrichmentsResponse:
      type: object
      properties:
        remainingEnrichments:
          type: array
          items:
            $ref: '#/components/schemas/v1Enrichment'
      description: Response data structure for enrichments deletion
      title: Encrichments Delettion Response
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      required:
        - remainingEnrichments
    v1RemoveInternalEnrichmentsResponse:
      type: object
      properties:
        remainingEnrichments:
          type: array
          items:
            $ref: '#/components/schemas/v1Enrichment'
    v1RemoveUsersFromTeamGroupResponse:
      type: object
    v1RemoveUsersFromTeamGroupsRequestRemoveUsersFromTeamGroup:
      type: object
      properties:
        groupId:
          $ref: '#/components/schemas/v1TeamGroupId'
        userIds:
          type: array
          items:
            $ref: '#/components/schemas/v1UserId'
          title: / Users to remove to group
    v1RemoveUsersFromTeamGroupsResponse:
      type: object
      title: / Remove users from existing groups
    v1Retention:
      type: object
      properties:
        id:
          type: string
        order:
          type: integer
          format: int32
        name:
          type: string
        editable:
          type: boolean
    v1RetentionUpdateElement:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    v1Role:
      type: object
      properties:
        roleId:
          $ref: '#/components/schemas/v1RoleId'
        name:
          type: string
          title: / Unique role name
        description:
          type: string
      description: / A group role. Each role has a collection of permissions associated with it. A group can have many roles.
    v1RoleId:
      type: object
      properties:
        id:
          type: integer
          format: int64
    v1Scope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/v1ScopeId'
        filters:
          $ref: '#/components/schemas/v1ScopeFilters'
      description: / A group scope has a list of filters for subsystems and applications. Used to filter traffic based on user defined rules.
    v1ScopeFilter:
      type: object
      properties:
        term:
          type: string
          description: / The filter term to use as a matching reference.
        filterType:
          $ref: '#/components/schemas/v1FilterType'
      title: / A scope filter, given a filter term and a filter type is used to configure filter capabilities
    v1ScopeFilters:
      type: object
      properties:
        subsystems:
          type: array
          items:
            $ref: '#/components/schemas/v1ScopeFilter'
          title: / List of subsystem scope filters
        applications:
          type: array
          items:
            $ref: '#/components/schemas/v1ScopeFilter'
          title: / List of applications scope filters
      title: / Scope filters are currently possible to be defined for subsystems and applications
    v1ScopeId:
      type: object
      properties:
        id:
          type: integer
          format: int64
    v1SearchCustomEnrichmentDataResponse:
      type: object
      properties:
        customEnrichmentsData:
          type: array
          items:
            $ref: '#/components/schemas/v1CustomEnrichmentData'
    v1SearchQuery:
      type: object
      properties:
        query:
          type: string
          description: Only digits are allowed.
          title: View search query
          maxLength: 1
          minLength: 1
      title: SearchQuery
      required:
        - query
    v1SelectedFilters:
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/viewsv1Filter'
          title: Selected filters
          minItems: 1
      title: Selected filters
    v1SetTeamGroupScopeResponse:
      type: object
      properties:
        scopeId:
          $ref: '#/components/schemas/v1ScopeId'
      title: / Set team group scope response
    v1SupportedAwsResourceType:
      type: object
      properties:
        type:
          type: string
        displayName:
          type: string
    v1SuspiciousIpType:
      type: object
    v1TeamGroup:
      type: object
      properties:
        groupId:
          $ref: '#/components/schemas/v1TeamGroupId'
        name:
          type: string
          title: / Unique name
        description:
          type: string
          title: / Group description
        externalId:
          type: string
          description: / Group external identifier. Applies if team is externally defined.
        groupOrigin:
          $ref: '#/components/schemas/v1GroupOrigin'
        teamId:
          $ref: '#/components/schemas/v1TeamId'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/v1Role'
          title: / Associated team roles
        scope:
          $ref: '#/components/schemas/v1Scope'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        nextGenScopeId:
          type: string
    v1TeamGroupId:
      type: object
      properties:
        id:
          type: integer
          format: int64
    v1TeamId:
      type: object
      properties:
        id:
          type: integer
          format: int64
    v1TimeSelection:
      type: object
      properties:
        quickSelection:
          $ref: '#/components/schemas/v1QuickTimeSelection'
        customSelection:
          $ref: '#/components/schemas/v1CustomTimeSelection'
      title: Time selection
    v1UUID:
      type: object
      properties:
        value:
          type: string
    v1UpdateCustomEnrichmentResponse:
      type: object
      properties:
        message:
          type: string
        customEnrichment:
          $ref: '#/components/schemas/v1CustomEnrichment'
    v1UpdateRetentionsResponse:
      type: object
      properties:
        retentions:
          type: array
          items:
            $ref: '#/components/schemas/v1Retention'
    v1UpdateTeamGroupResponse:
      type: object
      title: / Update team group response
    v1User:
      type: object
      properties:
        userId:
          $ref: '#/components/schemas/v1UserId'
        userAccountId:
          $ref: '#/components/schemas/v1UserAccountId'
        username:
          type: string
          title: / Unique username
        firstName:
          type: string
          title: / User first name
        lastName:
          type: string
          title: / User last name
        status:
          $ref: '#/components/schemas/v1UserStatus'
      title: / An user is an entity that is always part of a team and has an account associated with it
    v1UserAccountId:
      type: object
      properties:
        id:
          type: integer
          format: int64
    v1UserId:
      type: object
      properties:
        id:
          type: string
    v1UserStatus:
      type: string
      enum:
        - USER_STATUS_UNSPECIFIED
        - USER_STATUS_ACTIVE
        - USER_STATUS_INACTIVE
      default: USER_STATUS_UNSPECIFIED
      description: |-
        - USER_STATUS_ACTIVE: / User is active
         - USER_STATUS_INACTIVE: / User is inactive
      title: / User status
    v1ViewFolder:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 3dc02998-0b50-4ea8-b68a-4779d716fa1f
          description: Unique identifier for folders
          maxLength: 36
          minLength: 36
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
        name:
          type: string
          example: My Folder
          description: Folder name
          minLength: 1
      description: View folder.
      title: ViewFolder
      required:
        - name
    v1WideParquet:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/formatwide_parquetv1Version'
    v1astAnnotation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        enabled:
          type: boolean
        source:
          $ref: '#/components/schemas/astAnnotationSource'
    v1astFilter:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/astFilterSource'
        enabled:
          type: boolean
          description: Indicates if the filter is currently enabled or not.
        collapsed:
          type: boolean
          description: Indicates if the filter's UI representation should be collapsed or expanded.
      description: Filter represents the configuration for filtering data on the dashboard.
    v1commonDataprimeQuery:
      type: object
      properties:
        text:
          type: string
    v1commonOrderDirection:
      type: string
      enum:
        - ORDER_DIRECTION_UNSPECIFIED
        - ORDER_DIRECTION_ASC
        - ORDER_DIRECTION_DESC
      default: ORDER_DIRECTION_UNSPECIFIED
    v1commonPagination:
      type: object
      properties:
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
    v2ActionExecutionRequest:
      type: object
      properties:
        create:
          $ref: '#/components/schemas/v2CreateActionRequest'
        replace:
          $ref: '#/components/schemas/v2ReplaceActionRequest'
        delete:
          $ref: '#/components/schemas/v2DeleteActionRequest'
    v2ActionExecutionResponse:
      type: object
      properties:
        create:
          $ref: '#/components/schemas/v2CreateActionResponse'
        replace:
          $ref: '#/components/schemas/v2ReplaceActionResponse'
        delete:
          $ref: '#/components/schemas/v2DeleteActionResponse'
    v2ArchiveSpec:
      type: object
      properties:
        archivingFormatId:
          type: string
          example: json_id
        isActive:
          type: boolean
          example: true
        enableTags:
          type: boolean
          example: true
      description: This data structure contains metadata about the archive.
      title: Archive Spec
      externalDocs:
        description: Find out more about archives
        url: https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/
      required:
        - bucket
    v2ArchivingFormatId:
      type: string
      enum:
        - ARCHIVING_FORMAT_ID_UNSPECIFIED
        - ARCHIVING_FORMAT_ID_WIDE_PARQUET_V1
      default: ARCHIVING_FORMAT_ID_UNSPECIFIED
    v2AtomicBatchExecuteActionsRequest:
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/v2ActionExecutionRequest'
    v2AtomicBatchExecuteActionsResponse:
      type: object
      properties:
        matchingResponses:
          type: array
          items:
            $ref: '#/components/schemas/v2ActionExecutionResponse'
    v2AwsMsk:
      type: object
      properties:
        publicEndpoints:
          type: string
        topic:
          type: string
    v2CompanyDatasetRules:
      type: object
      properties:
        companyId:
          type: integer
          format: int64
        rules:
          type: array
          items:
            $ref: '#/components/schemas/v2DatasetRule'
    v2CreateActionRequest:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        isPrivate:
          type: boolean
        sourceType:
          $ref: '#/components/schemas/v2SourceType'
        applicationNames:
          type: array
          items:
            type: string
        subsystemNames:
          type: array
          items:
            type: string
    v2CreateActionResponse:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/actionsv2Action'
    v2DatasetLocation:
      type: object
      properties:
        companyId:
          type: integer
          format: int64
        dataset:
          $ref: '#/components/schemas/datasetv2Dataset'
        physicalLocation:
          $ref: '#/components/schemas/v2FinalLocation'
        firstEventTime:
          type: string
          format: date-time
        lastEventTime:
          type: string
          format: date-time
    v2DatasetLocationRequest:
      type: object
      properties:
        companyIds:
          type: array
          items:
            type: integer
            format: int64
        dataspaceRegex:
          type: string
        datasetRegex:
          type: string
        timeframe:
          $ref: '#/components/schemas/v2Timeframe'
    v2DatasetLocations:
      type: object
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/v2DatasetLocation'
    v2DatasetRule:
      type: object
      properties:
        dataspace:
          $ref: '#/components/schemas/v2Dataspace'
        predicate:
          $ref: '#/components/schemas/v2Predicate'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/v2IngestionLocationSpec'
    v2DatasetsInfo:
      type: object
      properties:
        companyId:
          type: integer
          format: int64
        datasets:
          type: array
          items:
            $ref: '#/components/schemas/datasetv2Dataset'
    v2Dataspace:
      type: object
      properties:
        dataspace:
          type: string
    v2DeleteActionRequest:
      type: object
      properties:
        id:
          type: string
    v2DeleteActionResponse:
      type: object
    v2FinalLocation:
      type: object
      properties:
        spec:
          $ref: '#/components/schemas/v2LocationSpec'
        finalLocationBasePrefix:
          type: string
          title: In case of data saved to S3 - base prefix of the dataset inside the bucket, without the dynamic dt/hr part
        id:
          type: string
          title: Represents a relation between datasets and its physical location. created by datasets-tracker service
      description: Specifies where specific dataset data can be found at the location.
    v2Format:
      type: object
      properties:
        logsAvro:
          $ref: '#/components/schemas/v2LogsAvro'
        spansAvro:
          $ref: '#/components/schemas/v2SpansAvro'
        genericEventAvro:
          $ref: '#/components/schemas/v1GenericEventAvro'
        wideParquet:
          $ref: '#/components/schemas/v1WideParquet'
    v2GetActionResponse:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/actionsv2Action'
    v2GetAllDatasetRulesResponse:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/v2CompanyDatasetRules'
        lastUpdateTime:
          type: string
          format: date-time
    v2GetConfigurationResponse:
      type: object
      properties:
        teamId:
          type: integer
          format: int64
        spParameters:
          $ref: '#/components/schemas/v2SPParameters'
        idpParameters:
          $ref: '#/components/schemas/v2IDPParameters'
      description: This data structure is obtained as a response to a request to retrieve the configuration of a SAML service provider and identity provider
      title: Get Configuration Response
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      required:
        - teamId
        - spParameters
        - idpParameters
    v2GetDatasetListResponse:
      type: object
      properties:
        datasetsInfo:
          type: array
          items:
            $ref: '#/components/schemas/v2DatasetsInfo'
    v2GetDatasetLocationsResponse:
      type: object
      properties:
        datasetLocations:
          type: array
          items:
            $ref: '#/components/schemas/v2DatasetLocations'
    v2GetSPParametersResponse:
      type: object
      properties:
        params:
          $ref: '#/components/schemas/v2SPParameters'
      description: This data structure is obtained as a response to a request to retrieve the parameters of a SAML service provider
      title: Get SP Parameters Response
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      required:
        - params
    v2IBMCosTargetSpec:
      type: object
      properties:
        bucketCrn:
          type: string
          example: bucket_crn
        endpoint:
          type: string
          example: http://some.endpoint.com:8081
        serviceCrn:
          type: string
          example: service_crn
        bucketType:
          $ref: '#/components/schemas/v2IbmBucketType'
      description: This data structure represents an IBM COS target.
      title: IBM COS Target Spec
      externalDocs:
        description: Find out more about archives
        url: https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/
      required:
        - bucketCrn
        - endpoint
    v2IDPParameters:
      type: object
      properties:
        active:
          type: boolean
          example: true
        metadataUrl:
          type: string
          example: https://<...>.okta.com/app/<...>/sso/saml/metadata
        metadataContent:
          type: string
          example: <?xml version= ...
        teamEntityId:
          type: integer
          format: int64
          example: 1234567
        groupNames:
          type: array
          example:
            - group1
          items:
            type: string
      description: This data structure represents a set of SAML identity provider parameters
      title: IDP Parameters
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      required:
        - active
        - metadata
        - teamEntityId
        - groupNames
    v2IbmBucketType:
      type: string
      enum:
        - IBM_BUCKET_TYPE_UNSPECIFIED
        - IBM_BUCKET_TYPE_EXTERNAL
        - IBM_BUCKET_TYPE_INTERNAL
      default: IBM_BUCKET_TYPE_UNSPECIFIED
    v2IbmEventStreams:
      type: object
      properties:
        brokers:
          type: string
        topic:
          type: string
    v2IngestionLocationSpec:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/v2LocationSpec'
        internal:
          $ref: '#/components/schemas/v2IngestionLocationSpecProps'
      title: LocationSpec + internal fields needed for ingestion (dataset-ingress)
    v2IngestionLocationSpecProps:
      type: object
      properties:
        maxCompactionLevel:
          type: integer
          format: int32
        collectLabels:
          type: boolean
        splitByEventLabels:
          type: array
          items:
            type: string
        partitioningScheme:
          $ref: '#/components/schemas/archivev2PartitioningScheme'
      description: |-
        Internal fields that shouldn't be known outside ingestion pipeline.
        Mostly properties that can be set only for predefined datasets.
    v2InternalAdditionalTargetProperties:
      type: object
      properties:
        bucketV2:
          type: string
    v2InternalDatasetLocationsServiceGetDatasetListResponse:
      type: object
      properties:
        datasetsInfo:
          type: array
          items:
            $ref: '#/components/schemas/v2DatasetsInfo'
    v2InternalDatasetLocationsServiceGetDatasetLocationsResponse:
      type: object
      properties:
        datasetLocations:
          type: array
          items:
            $ref: '#/components/schemas/v2DatasetLocations'
    v2InternalGetTargetsRequestFilter:
      type: object
      properties:
        companyIds:
          type: array
          items:
            type: integer
            format: int64
        formatId:
          type: array
          items:
            $ref: '#/components/schemas/v2ArchivingFormatId'
        isActive:
          type: boolean
    v2InternalTargetServiceGetTargetsResponse:
      type: object
      properties:
        targets:
          type: array
          items:
            $ref: '#/components/schemas/v2TargetResponse'
    v2KafkaOutSpec:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        isActive:
          type: boolean
        dpxlExpression:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        compressionType:
          $ref: '#/components/schemas/kafka_out_targetsv2CompressionType'
    v2ListActionsResponse:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/actionsv2Action'
    v2LocationSpec:
      type: object
      properties:
        name:
          type: string
        isActive:
          type: boolean
        objectStoreLocation:
          $ref: '#/components/schemas/v2ObjectStoreLocation'
        format:
          $ref: '#/components/schemas/v2Format'
      description: Publicly known location spec. Customers could use this model in future "set location" API.
    v2LogsAvro:
      type: object
    v2ObjectStoreLocation:
      type: object
      properties:
        s3:
          $ref: '#/components/schemas/v2S3TargetSpec'
        ibmCos:
          $ref: '#/components/schemas/v2IBMCosTargetSpec'
        prefix:
          type: string
        enableTags:
          type: boolean
        tags:
          type: array
          items:
            $ref: '#/components/schemas/v2ObjectTag'
        partitioningScheme:
          $ref: '#/components/schemas/archivev2PartitioningScheme'
    v2ObjectTag:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    v2OrderActionsRequest:
      type: object
      properties:
        privateActionsOrder:
          type: object
          additionalProperties:
            type: integer
            format: int64
        sharedActionsOrder:
          type: object
          additionalProperties:
            type: integer
            format: int64
    v2OrderActionsResponse:
      type: object
    v2Predicate:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/v2PredicateType'
        text:
          type: string
    v2PredicateType:
      type: string
      enum:
        - PREDICATE_TYPE_UNSPECIFIED
        - PREDICATE_TYPE_REGEX
        - PREDICATE_TYPE_DPXL
        - PREDICATE_TYPE_EXACT
      default: PREDICATE_TYPE_UNSPECIFIED
    v2ReplaceActionRequest:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/actionsv2Action'
    v2ReplaceActionResponse:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/actionsv2Action'
    v2S3TargetSpec:
      type: object
      properties:
        bucket:
          type: string
          example: bucket
        region:
          type: string
          example: us-west-2
      description: This data structure represents an S3 target.
      title: S3 Target Spec
      externalDocs:
        description: Find out more about archives
        url: https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/
      required:
        - bucket
    v2SPParameters:
      type: object
      properties:
        metadataUrl:
          type: string
          example: https://<...>.okta.com/app/<...>/sso/saml/metadata
        signingCertPem:
          type: string
          example: certificate
        nameIdFormat:
          type: string
          example: name_id
        assertionConsumerServiceUrl:
          type: string
          example: assertion
        binding:
          type: string
          example: binding
      description: This data structure represents the parameters of a SAML service provider
      title: Service Provider Parameters
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      required:
        - metadataUrl
        - signingCertPem
        - nameIdFormat
        - assertionConsumerServiceUrl
        - binding
    v2SetActiveRequest:
      type: object
      properties:
        teamId:
          type: integer
          format: int64
        isActive:
          type: boolean
      description: This data structure is used to activate or deactivate a SAML identity provider
      title: Set Active Request
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      required:
        - teamId
        - isActive
    v2SetActiveResponse:
      type: object
    v2SetExternalTargetResponse:
      type: object
      properties:
        target:
          $ref: '#/components/schemas/coralogixarchivev2Target'
      description: This data structure is obtained after setting an external storage target for logs.
      title: Set Target Response
      externalDocs:
        description: Find out more about archives
        url: https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/
      required:
        - target
    v2SetIDPParametersRequest:
      type: object
      properties:
        teamId:
          type: integer
          format: int64
        params:
          $ref: '#/components/schemas/v2IDPParameters'
      description: This data structure is used to set the parameters of a SAML identity provider
      title: Set IDP Parameters Request
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      required:
        - teamId
        - params
    v2SetIDPParametersResponse:
      type: object
    v2SourceType:
      type: string
      enum:
        - SOURCE_TYPE_UNSPECIFIED
        - SOURCE_TYPE_LOG
        - SOURCE_TYPE_DATA_MAP
      default: SOURCE_TYPE_UNSPECIFIED
    v2SpansAvro:
      type: object
    v2TargetResponse:
      type: object
      properties:
        companyId:
          type: integer
          format: int64
        target:
          $ref: '#/components/schemas/coralogixarchivev2Target'
        additionalTargetProperties:
          $ref: '#/components/schemas/v2InternalAdditionalTargetProperties'
    v2TargetResponseOrder:
      type: object
      properties:
        orderBy:
          $ref: '#/components/schemas/archivev2OrderBy'
        orderDirection:
          $ref: '#/components/schemas/archivev2OrderDirection'
    v2Timeframe:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    v2ValidateTargetRequest:
      type: object
      properties:
        isActive:
          type: boolean
        s3:
          $ref: '#/components/schemas/v2S3TargetSpec'
        ibmCos:
          $ref: '#/components/schemas/v2IBMCosTargetSpec'
      description: This data structure is used to validate a storage target for logs.
      title: Set Target Response
      externalDocs:
        description: Find out more about archives
        url: https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/
      required:
        - isActive
        - target_spec
    v2ValidateTargetResponse:
      type: object
      properties:
        isValid:
          type: boolean
          example: true
      description: This data structure is obtained after validating a storage target for logs.
      title: Validate Target Response
      externalDocs:
        description: Find out more about archives
        url: https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/
      required:
        - isValid
    v3CreateApiKeyRequest:
      type: object
      properties:
        name:
          type: string
          example: my_api_key
        owner:
          $ref: '#/components/schemas/v3Owner'
        keyPermissions:
          $ref: '#/components/schemas/v3CreateApiKeyRequestKeyPermissions'
        hashed:
          type: boolean
          example: true
      description: This data structure is used to create an API key.
      title: Create Api Key Request
      externalDocs:
        description: Find out more about api keys
        url: https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/
      required:
        - name
        - owner
        - keyPermissions
        - hashed
    v3CreateApiKeyRequestKeyPermissions:
      type: object
      properties:
        presets:
          type: array
          example:
            - my_preset
          items:
            type: string
        permissions:
          type: array
          example:
            - read_logs
          items:
            type: string
      description: This data structure allows to specify loose permissions and permission presets for an API key.
      title: Key Permissions
      externalDocs:
        description: Find out more about api keys
        url: https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/
      required:
        - presets
        - permissions
    v3CreateApiKeyResponse:
      type: object
      properties:
        keyId:
          type: string
          example: my_key_id
        name:
          type: string
          example: my_api_key
        value:
          type: string
          example: my_api_key_value
      description: This data structure is the response obtained when creating an API key.
      title: Create Api Key Response
      externalDocs:
        description: Find out more about api keys
        url: https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/
      required:
        - keyId
        - name
        - value
    v3DeleteApiKeyResponse:
      type: object
    v3GetApiKeyResponse:
      type: object
      properties:
        keyInfo:
          $ref: '#/components/schemas/v3KeyInfo'
      description: This data structure is the response obtained when retrieving an API key.
      title: Get Api Key Response
      externalDocs:
        description: Find out more about api keys
        url: https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/
      required:
        - keyInfo
    v3GetSendDataApiKeysResponse:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/v3KeyInfo'
      description: This data structure is the response obtained when retrieving an API key.
      title: Get Api Key Response
      externalDocs:
        description: Find out more about api keys
        url: https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/
      required:
        - key_info
    v3KeyInfo:
      type: object
      properties:
        name:
          type: string
          example: my_api_key
        owner:
          $ref: '#/components/schemas/v3Owner'
        active:
          type: boolean
          example: true
        hashed:
          type: boolean
          example: true
        keyPermissions:
          $ref: '#/components/schemas/v3KeyInfoKeyPermissions'
        value:
          type: string
        id:
          type: string
      description: This data structure represents the information associated with an API key.
      title: Key Info
      externalDocs:
        description: Find out more about api keys
        url: https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/
      required:
        - id
        - name
        - owner
        - active
        - hashed
        - keyPermissions
    v3KeyInfoKeyPermissions:
      type: object
      properties:
        presets:
          type: array
          items:
            $ref: '#/components/schemas/v3PresetInfo'
        permissions:
          type: array
          items:
            type: string
      description: This data structure represents the permissions on an API key.
      title: Key Permissions
      externalDocs:
        description: Find out more about api keys
        url: https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/
      required:
        - presets
        - permissions
    v3Owner:
      type: object
      properties:
        userId:
          type: string
        teamId:
          type: integer
          format: int64
        organisationId:
          type: string
    v3PresetInfo:
      type: object
      properties:
        name:
          type: string
          example: my_preset
        permissions:
          type: array
          example:
            - read_logs
          items:
            type: string
      description: This data structure represents a preset set of permissions on an API key.
      title: Preset Info
      externalDocs:
        description: Find out more about api keys
        url: https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/
      required:
        - name
        - permissions
    v3UpdateApiKeyResponse:
      type: object
    viewsv1Filter:
      type: object
      properties:
        name:
          type: string
          example: applicationName
          description: Filter name
          title: Filter name
          minLength: 1
        selectedValues:
          type: object
          example:
            demo: true
            cs-rest-test1: true
          additionalProperties:
            type: boolean
          description: Filter selected values
          title: Filter selected values
      description: View folder.
      title: ViewFolder
      required:
        - name
        - selectedValues
    widgetsBarChart:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/widgetsBarChartQuery'
        maxBarsPerChart:
          type: integer
          format: int32
        groupNameTemplate:
          type: string
        stackDefinition:
          $ref: '#/components/schemas/widgetsBarChartStackDefinition'
        scaleType:
          $ref: '#/components/schemas/commonScaleType'
        colorsBy:
          $ref: '#/components/schemas/commonColorsBy'
        xAxis:
          $ref: '#/components/schemas/BarChartXAxis'
        unit:
          $ref: '#/components/schemas/widgetscommonUnit'
        sortBy:
          $ref: '#/components/schemas/commonSortByType'
        colorScheme:
          type: string
        dataModeType:
          $ref: '#/components/schemas/commonDataModeType'
        barValueDisplay:
          $ref: '#/components/schemas/widgetsBarValueDisplay'
        customUnit:
          type: string
        decimal:
          type: integer
          format: int32
    widgetsBarChartDataprimeQuery:
      type: object
      properties:
        dataprimeQuery:
          $ref: '#/components/schemas/v1commonDataprimeQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/astFilterSource'
        groupNames:
          type: array
          items:
            type: string
        stackedGroupName:
          type: string
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsBarChartLogsQuery:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/astwidgetscommonLuceneQuery'
        aggregation:
          $ref: '#/components/schemas/commonLogsAggregation'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterLogsFilter'
        groupNames:
          type: array
          items:
            type: string
        stackedGroupName:
          type: string
        groupNamesFields:
          type: array
          items:
            $ref: '#/components/schemas/commonObservationField'
        stackedGroupNameField:
          $ref: '#/components/schemas/commonObservationField'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsBarChartMetricsQuery:
      type: object
      properties:
        promqlQuery:
          $ref: '#/components/schemas/astwidgetscommonPromQlQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterMetricsFilter'
        groupNames:
          type: array
          items:
            type: string
        stackedGroupName:
          type: string
        editorMode:
          $ref: '#/components/schemas/commonMetricsQueryEditorMode'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsBarChartQuery:
      type: object
      properties:
        logs:
          $ref: '#/components/schemas/widgetsBarChartLogsQuery'
        spans:
          $ref: '#/components/schemas/widgetsBarChartSpansQuery'
        metrics:
          $ref: '#/components/schemas/widgetsBarChartMetricsQuery'
        dataprime:
          $ref: '#/components/schemas/widgetsBarChartDataprimeQuery'
    widgetsBarChartSpansQuery:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/astwidgetscommonLuceneQuery'
        aggregation:
          $ref: '#/components/schemas/commonSpansAggregation'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterSpansFilter'
        groupNames:
          type: array
          items:
            $ref: '#/components/schemas/commonSpanField'
        stackedGroupName:
          $ref: '#/components/schemas/commonSpanField'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsBarChartStackDefinition:
      type: object
      properties:
        maxSlicesPerBar:
          type: integer
          format: int32
        stackNameTemplate:
          type: string
    widgetsBarValueDisplay:
      type: string
      enum:
        - BAR_VALUE_DISPLAY_UNSPECIFIED
        - BAR_VALUE_DISPLAY_TOP
        - BAR_VALUE_DISPLAY_INSIDE
        - BAR_VALUE_DISPLAY_BOTH
      default: BAR_VALUE_DISPLAY_UNSPECIFIED
    widgetsDataTable:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/widgetsDataTableQuery'
        resultsPerPage:
          type: integer
          format: int32
        rowStyle:
          $ref: '#/components/schemas/widgetsRowStyle'
        columns:
          type: array
          items:
            $ref: '#/components/schemas/DataTableColumn'
        orderBy:
          $ref: '#/components/schemas/commonOrderingField'
        dataModeType:
          $ref: '#/components/schemas/commonDataModeType'
    widgetsDataTableDataprimeQuery:
      type: object
      properties:
        dataprimeQuery:
          $ref: '#/components/schemas/v1commonDataprimeQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/astFilterSource'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsDataTableLogsQuery:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/astwidgetscommonLuceneQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterLogsFilter'
        grouping:
          $ref: '#/components/schemas/DataTableLogsQueryGrouping'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsDataTableMetricsQuery:
      type: object
      properties:
        promqlQuery:
          $ref: '#/components/schemas/astwidgetscommonPromQlQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterMetricsFilter'
        editorMode:
          $ref: '#/components/schemas/commonMetricsQueryEditorMode'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsDataTableQuery:
      type: object
      properties:
        logs:
          $ref: '#/components/schemas/widgetsDataTableLogsQuery'
        spans:
          $ref: '#/components/schemas/widgetsDataTableSpansQuery'
        metrics:
          $ref: '#/components/schemas/widgetsDataTableMetricsQuery'
        dataprime:
          $ref: '#/components/schemas/widgetsDataTableDataprimeQuery'
    widgetsDataTableSpansQuery:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/astwidgetscommonLuceneQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterSpansFilter'
        grouping:
          $ref: '#/components/schemas/DataTableSpansQueryGrouping'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsGauge:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/widgetsGaugeQuery'
        min:
          type: number
          format: double
        max:
          type: number
          format: double
        showInnerArc:
          type: boolean
        showOuterArc:
          type: boolean
        unit:
          $ref: '#/components/schemas/widgetsGaugeUnit'
        thresholds:
          type: array
          items:
            $ref: '#/components/schemas/widgetsGaugeThreshold'
        dataModeType:
          $ref: '#/components/schemas/commonDataModeType'
        thresholdBy:
          $ref: '#/components/schemas/widgetsGaugeThresholdBy'
        customUnit:
          type: string
        decimal:
          type: integer
          format: int32
        thresholdType:
          $ref: '#/components/schemas/widgetsGaugeThresholdType'
    widgetsGaugeAggregation:
      type: string
      enum:
        - AGGREGATION_UNSPECIFIED
        - AGGREGATION_LAST
        - AGGREGATION_MIN
        - AGGREGATION_MAX
        - AGGREGATION_AVG
        - AGGREGATION_SUM
      default: AGGREGATION_UNSPECIFIED
    widgetsGaugeDataprimeQuery:
      type: object
      properties:
        dataprimeQuery:
          $ref: '#/components/schemas/v1commonDataprimeQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/astFilterSource'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsGaugeLogsQuery:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/astwidgetscommonLuceneQuery'
        logsAggregation:
          $ref: '#/components/schemas/commonLogsAggregation'
        aggregation:
          $ref: '#/components/schemas/widgetsGaugeAggregation'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterLogsFilter'
        groupBy:
          type: array
          items:
            $ref: '#/components/schemas/commonObservationField'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsGaugeMetricsQuery:
      type: object
      properties:
        promqlQuery:
          $ref: '#/components/schemas/astwidgetscommonPromQlQuery'
        aggregation:
          $ref: '#/components/schemas/widgetsGaugeAggregation'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterMetricsFilter'
        editorMode:
          $ref: '#/components/schemas/commonMetricsQueryEditorMode'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsGaugeQuery:
      type: object
      properties:
        metrics:
          $ref: '#/components/schemas/widgetsGaugeMetricsQuery'
        logs:
          $ref: '#/components/schemas/widgetsGaugeLogsQuery'
        spans:
          $ref: '#/components/schemas/widgetsGaugeSpansQuery'
        dataprime:
          $ref: '#/components/schemas/widgetsGaugeDataprimeQuery'
    widgetsGaugeSpansQuery:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/astwidgetscommonLuceneQuery'
        spansAggregation:
          $ref: '#/components/schemas/commonSpansAggregation'
        aggregation:
          $ref: '#/components/schemas/widgetsGaugeAggregation'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterSpansFilter'
        groupBy:
          type: array
          items:
            $ref: '#/components/schemas/commonSpanField'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsGaugeThreshold:
      type: object
      properties:
        from:
          type: number
          format: double
        color:
          type: string
        label:
          type: string
    widgetsGaugeThresholdBy:
      type: string
      enum:
        - THRESHOLD_BY_UNSPECIFIED
        - THRESHOLD_BY_VALUE
        - THRESHOLD_BY_BACKGROUND
      default: THRESHOLD_BY_UNSPECIFIED
    widgetsGaugeThresholdType:
      type: string
      enum:
        - THRESHOLD_TYPE_UNSPECIFIED
        - THRESHOLD_TYPE_RELATIVE
        - THRESHOLD_TYPE_ABSOLUTE
      default: THRESHOLD_TYPE_UNSPECIFIED
    widgetsGaugeUnit:
      type: string
      enum:
        - UNIT_UNSPECIFIED
        - UNIT_NUMBER
        - UNIT_PERCENT
        - UNIT_MICROSECONDS
        - UNIT_MILLISECONDS
        - UNIT_SECONDS
        - UNIT_BYTES
        - UNIT_KBYTES
        - UNIT_MBYTES
        - UNIT_GBYTES
        - UNIT_BYTES_IEC
        - UNIT_KIBYTES
        - UNIT_MIBYTES
        - UNIT_GIBYTES
        - UNIT_EUR_CENTS
        - UNIT_EUR
        - UNIT_USD_CENTS
        - UNIT_USD
        - UNIT_CUSTOM
        - UNIT_PERCENT_ZERO_ONE
        - UNIT_PERCENT_ZERO_HUNDRED
        - UNIT_NANOSECONDS
      default: UNIT_UNSPECIFIED
    widgetsHexagon:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/widgetsHexagonQuery'
        min:
          type: number
          format: double
        max:
          type: number
          format: double
        unit:
          $ref: '#/components/schemas/widgetscommonUnit'
        thresholds:
          type: array
          items:
            $ref: '#/components/schemas/widgetscommonThreshold'
        dataModeType:
          $ref: '#/components/schemas/commonDataModeType'
        customUnit:
          type: string
        decimal:
          type: integer
          format: int32
        thresholdType:
          $ref: '#/components/schemas/widgetscommonThresholdType'
    widgetsHexagonDataprimeQuery:
      type: object
      properties:
        dataprimeQuery:
          $ref: '#/components/schemas/v1commonDataprimeQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/astFilterSource'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsHexagonLogsQuery:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/astwidgetscommonLuceneQuery'
        logsAggregation:
          $ref: '#/components/schemas/commonLogsAggregation'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterLogsFilter'
        groupBy:
          type: array
          items:
            $ref: '#/components/schemas/commonObservationField'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsHexagonMetricsQuery:
      type: object
      properties:
        promqlQuery:
          $ref: '#/components/schemas/astwidgetscommonPromQlQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterMetricsFilter'
        editorMode:
          $ref: '#/components/schemas/commonMetricsQueryEditorMode'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
        aggregation:
          $ref: '#/components/schemas/widgetscommonAggregation'
    widgetsHexagonQuery:
      type: object
      properties:
        metrics:
          $ref: '#/components/schemas/widgetsHexagonMetricsQuery'
        logs:
          $ref: '#/components/schemas/widgetsHexagonLogsQuery'
        spans:
          $ref: '#/components/schemas/widgetsHexagonSpansQuery'
        dataprime:
          $ref: '#/components/schemas/widgetsHexagonDataprimeQuery'
    widgetsHexagonSpansQuery:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/astwidgetscommonLuceneQuery'
        spansAggregation:
          $ref: '#/components/schemas/commonSpansAggregation'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterSpansFilter'
        groupBy:
          type: array
          items:
            $ref: '#/components/schemas/commonSpanField'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsHorizontalBarChart:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/widgetsHorizontalBarChartQuery'
        maxBarsPerChart:
          type: integer
          format: int32
        groupNameTemplate:
          type: string
        stackDefinition:
          $ref: '#/components/schemas/widgetsHorizontalBarChartStackDefinition'
        scaleType:
          $ref: '#/components/schemas/commonScaleType'
        colorsBy:
          $ref: '#/components/schemas/commonColorsBy'
        unit:
          $ref: '#/components/schemas/widgetscommonUnit'
        displayOnBar:
          type: boolean
        yAxisViewBy:
          $ref: '#/components/schemas/HorizontalBarChartYAxisViewBy'
        sortBy:
          $ref: '#/components/schemas/commonSortByType'
        colorScheme:
          type: string
        dataModeType:
          $ref: '#/components/schemas/commonDataModeType'
        customUnit:
          type: string
        decimal:
          type: integer
          format: int32
    widgetsHorizontalBarChartDataprimeQuery:
      type: object
      properties:
        dataprimeQuery:
          $ref: '#/components/schemas/v1commonDataprimeQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/astFilterSource'
        groupNames:
          type: array
          items:
            type: string
        stackedGroupName:
          type: string
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsHorizontalBarChartLogsQuery:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/astwidgetscommonLuceneQuery'
        aggregation:
          $ref: '#/components/schemas/commonLogsAggregation'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterLogsFilter'
        groupNames:
          type: array
          items:
            type: string
        stackedGroupName:
          type: string
        groupNamesFields:
          type: array
          items:
            $ref: '#/components/schemas/commonObservationField'
        stackedGroupNameField:
          $ref: '#/components/schemas/commonObservationField'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsHorizontalBarChartMetricsQuery:
      type: object
      properties:
        promqlQuery:
          $ref: '#/components/schemas/astwidgetscommonPromQlQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterMetricsFilter'
        groupNames:
          type: array
          items:
            type: string
        stackedGroupName:
          type: string
        editorMode:
          $ref: '#/components/schemas/commonMetricsQueryEditorMode'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsHorizontalBarChartQuery:
      type: object
      properties:
        logs:
          $ref: '#/components/schemas/widgetsHorizontalBarChartLogsQuery'
        spans:
          $ref: '#/components/schemas/widgetsHorizontalBarChartSpansQuery'
        metrics:
          $ref: '#/components/schemas/widgetsHorizontalBarChartMetricsQuery'
        dataprime:
          $ref: '#/components/schemas/widgetsHorizontalBarChartDataprimeQuery'
    widgetsHorizontalBarChartSpansQuery:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/astwidgetscommonLuceneQuery'
        aggregation:
          $ref: '#/components/schemas/commonSpansAggregation'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterSpansFilter'
        groupNames:
          type: array
          items:
            $ref: '#/components/schemas/commonSpanField'
        stackedGroupName:
          $ref: '#/components/schemas/commonSpanField'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsHorizontalBarChartStackDefinition:
      type: object
      properties:
        maxSlicesPerBar:
          type: integer
          format: int32
        stackNameTemplate:
          type: string
    widgetsLineChart:
      type: object
      properties:
        legend:
          $ref: '#/components/schemas/commonLegend'
        tooltip:
          $ref: '#/components/schemas/LineChartTooltip'
        queryDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/LineChartQueryDefinition'
        stackedLine:
          $ref: '#/components/schemas/LineChartStackedLine'
    widgetsLineChartDataprimeQuery:
      type: object
      properties:
        dataprimeQuery:
          $ref: '#/components/schemas/v1commonDataprimeQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/astFilterSource'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsLineChartLogsQuery:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/astwidgetscommonLuceneQuery'
        groupBy:
          type: array
          items:
            type: string
        aggregations:
          type: array
          items:
            $ref: '#/components/schemas/commonLogsAggregation'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterLogsFilter'
        groupBys:
          type: array
          items:
            $ref: '#/components/schemas/commonObservationField'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsLineChartMetricsQuery:
      type: object
      properties:
        promqlQuery:
          $ref: '#/components/schemas/astwidgetscommonPromQlQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterMetricsFilter'
        editorMode:
          $ref: '#/components/schemas/commonMetricsQueryEditorMode'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsLineChartQuery:
      type: object
      properties:
        logs:
          $ref: '#/components/schemas/widgetsLineChartLogsQuery'
        metrics:
          $ref: '#/components/schemas/widgetsLineChartMetricsQuery'
        spans:
          $ref: '#/components/schemas/widgetsLineChartSpansQuery'
        dataprime:
          $ref: '#/components/schemas/widgetsLineChartDataprimeQuery'
    widgetsLineChartSpansQuery:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/astwidgetscommonLuceneQuery'
        groupBy:
          type: array
          items:
            $ref: '#/components/schemas/commonSpanField'
        aggregations:
          type: array
          items:
            $ref: '#/components/schemas/commonSpansAggregation'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterSpansFilter'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsMarkdown:
      type: object
      properties:
        markdownText:
          type: string
        tooltipText:
          type: string
    widgetsPieChart:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/widgetsPieChartQuery'
        maxSlicesPerChart:
          type: integer
          format: int32
        minSlicePercentage:
          type: integer
          format: int32
        stackDefinition:
          $ref: '#/components/schemas/widgetsPieChartStackDefinition'
        labelDefinition:
          $ref: '#/components/schemas/PieChartLabelDefinition'
        showLegend:
          type: boolean
        groupNameTemplate:
          type: string
        unit:
          $ref: '#/components/schemas/widgetscommonUnit'
        colorScheme:
          type: string
        dataModeType:
          $ref: '#/components/schemas/commonDataModeType'
        customUnit:
          type: string
        decimal:
          type: integer
          format: int32
    widgetsPieChartDataprimeQuery:
      type: object
      properties:
        dataprimeQuery:
          $ref: '#/components/schemas/v1commonDataprimeQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/astFilterSource'
        groupNames:
          type: array
          items:
            type: string
        stackedGroupName:
          type: string
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsPieChartLogsQuery:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/astwidgetscommonLuceneQuery'
        aggregation:
          $ref: '#/components/schemas/commonLogsAggregation'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterLogsFilter'
        groupNames:
          type: array
          items:
            type: string
        stackedGroupName:
          type: string
        groupNamesFields:
          type: array
          items:
            $ref: '#/components/schemas/commonObservationField'
        stackedGroupNameField:
          $ref: '#/components/schemas/commonObservationField'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsPieChartMetricsQuery:
      type: object
      properties:
        promqlQuery:
          $ref: '#/components/schemas/astwidgetscommonPromQlQuery'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterMetricsFilter'
        groupNames:
          type: array
          items:
            type: string
        stackedGroupName:
          type: string
        editorMode:
          $ref: '#/components/schemas/commonMetricsQueryEditorMode'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsPieChartQuery:
      type: object
      properties:
        logs:
          $ref: '#/components/schemas/widgetsPieChartLogsQuery'
        spans:
          $ref: '#/components/schemas/widgetsPieChartSpansQuery'
        metrics:
          $ref: '#/components/schemas/widgetsPieChartMetricsQuery'
        dataprime:
          $ref: '#/components/schemas/widgetsPieChartDataprimeQuery'
    widgetsPieChartSpansQuery:
      type: object
      properties:
        luceneQuery:
          $ref: '#/components/schemas/astwidgetscommonLuceneQuery'
        aggregation:
          $ref: '#/components/schemas/commonSpansAggregation'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterSpansFilter'
        groupNames:
          type: array
          items:
            $ref: '#/components/schemas/commonSpanField'
        stackedGroupName:
          $ref: '#/components/schemas/commonSpanField'
        timeFrame:
          $ref: '#/components/schemas/commonTimeFrameSelect'
    widgetsPieChartStackDefinition:
      type: object
      properties:
        maxSlicesPerStack:
          type: integer
          format: int32
        stackNameTemplate:
          type: string
    widgetsRowStyle:
      type: string
      enum:
        - ROW_STYLE_UNSPECIFIED
        - ROW_STYLE_ONE_LINE
        - ROW_STYLE_TWO_LINE
        - ROW_STYLE_CONDENSED
        - ROW_STYLE_JSON
        - ROW_STYLE_LIST
      default: ROW_STYLE_UNSPECIFIED
    widgetscommonAggregation:
      type: string
      enum:
        - AGGREGATION_UNSPECIFIED
        - AGGREGATION_LAST
        - AGGREGATION_MIN
        - AGGREGATION_MAX
        - AGGREGATION_AVG
        - AGGREGATION_SUM
      default: AGGREGATION_UNSPECIFIED
    widgetscommonThreshold:
      type: object
      properties:
        from:
          type: number
          format: double
        color:
          type: string
        label:
          type: string
    widgetscommonThresholdType:
      type: string
      enum:
        - THRESHOLD_TYPE_UNSPECIFIED
        - THRESHOLD_TYPE_RELATIVE
        - THRESHOLD_TYPE_ABSOLUTE
      default: THRESHOLD_TYPE_UNSPECIFIED
    widgetscommonUnit:
      type: string
      enum:
        - UNIT_UNSPECIFIED
        - UNIT_MICROSECONDS
        - UNIT_MILLISECONDS
        - UNIT_SECONDS
        - UNIT_BYTES
        - UNIT_KBYTES
        - UNIT_MBYTES
        - UNIT_GBYTES
        - UNIT_BYTES_IEC
        - UNIT_KIBYTES
        - UNIT_MIBYTES
        - UNIT_GIBYTES
        - UNIT_EUR_CENTS
        - UNIT_EUR
        - UNIT_USD_CENTS
        - UNIT_USD
        - UNIT_NANOSECONDS
        - UNIT_CUSTOM
        - UNIT_PERCENT_ZERO_ONE
        - UNIT_PERCENT_ZERO_HUNDRED
        - UNIT_PERCENT
      default: UNIT_UNSPECIFIED
