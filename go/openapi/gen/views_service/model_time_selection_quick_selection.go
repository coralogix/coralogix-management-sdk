/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package views_service

import (
	"encoding/json"
)

// checks if the TimeSelectionQuickSelection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeSelectionQuickSelection{}

// TimeSelectionQuickSelection struct for TimeSelectionQuickSelection
type TimeSelectionQuickSelection struct {
	QuickSelection *QuickTimeSelection `json:"quickSelection,omitempty"`
}

// NewTimeSelectionQuickSelection instantiates a new TimeSelectionQuickSelection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeSelectionQuickSelection() *TimeSelectionQuickSelection {
	this := TimeSelectionQuickSelection{}
	return &this
}

// NewTimeSelectionQuickSelectionWithDefaults instantiates a new TimeSelectionQuickSelection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeSelectionQuickSelectionWithDefaults() *TimeSelectionQuickSelection {
	this := TimeSelectionQuickSelection{}
	return &this
}

// GetQuickSelection returns the QuickSelection field value if set, zero value otherwise.
func (o *TimeSelectionQuickSelection) GetQuickSelection() QuickTimeSelection {
	if o == nil || IsNil(o.QuickSelection) {
		var ret QuickTimeSelection
		return ret
	}
	return *o.QuickSelection
}

// GetQuickSelectionOk returns a tuple with the QuickSelection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSelectionQuickSelection) GetQuickSelectionOk() (*QuickTimeSelection, bool) {
	if o == nil || IsNil(o.QuickSelection) {
		return nil, false
	}
	return o.QuickSelection, true
}

// HasQuickSelection returns a boolean if a field has been set.
func (o *TimeSelectionQuickSelection) HasQuickSelection() bool {
	if o != nil && !IsNil(o.QuickSelection) {
		return true
	}

	return false
}

// SetQuickSelection gets a reference to the given QuickTimeSelection and assigns it to the QuickSelection field.
func (o *TimeSelectionQuickSelection) SetQuickSelection(v QuickTimeSelection) {
	o.QuickSelection = &v
}

func (o TimeSelectionQuickSelection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeSelectionQuickSelection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.QuickSelection) {
		toSerialize["quickSelection"] = o.QuickSelection
	}
	return toSerialize, nil
}

type NullableTimeSelectionQuickSelection struct {
	value *TimeSelectionQuickSelection
	isSet bool
}

func (v NullableTimeSelectionQuickSelection) Get() *TimeSelectionQuickSelection {
	return v.value
}

func (v *NullableTimeSelectionQuickSelection) Set(val *TimeSelectionQuickSelection) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeSelectionQuickSelection) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeSelectionQuickSelection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeSelectionQuickSelection(val *TimeSelectionQuickSelection) *NullableTimeSelectionQuickSelection {
	return &NullableTimeSelectionQuickSelection{value: val, isSet: true}
}

func (v NullableTimeSelectionQuickSelection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeSelectionQuickSelection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


