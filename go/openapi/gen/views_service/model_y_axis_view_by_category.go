/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package views_service

import (
	"encoding/json"
)

// checks if the YAxisViewByCategory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &YAxisViewByCategory{}

// YAxisViewByCategory struct for YAxisViewByCategory
type YAxisViewByCategory struct {
	Category *YAxisViewByCategory `json:"category,omitempty"`
}

// NewYAxisViewByCategory instantiates a new YAxisViewByCategory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewYAxisViewByCategory() *YAxisViewByCategory {
	this := YAxisViewByCategory{}
	return &this
}

// NewYAxisViewByCategoryWithDefaults instantiates a new YAxisViewByCategory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewYAxisViewByCategoryWithDefaults() *YAxisViewByCategory {
	this := YAxisViewByCategory{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *YAxisViewByCategory) GetCategory() YAxisViewByCategory {
	if o == nil || IsNil(o.Category) {
		var ret YAxisViewByCategory
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *YAxisViewByCategory) GetCategoryOk() (*YAxisViewByCategory, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *YAxisViewByCategory) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given YAxisViewByCategory and assigns it to the Category field.
func (o *YAxisViewByCategory) SetCategory(v YAxisViewByCategory) {
	o.Category = &v
}

func (o YAxisViewByCategory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o YAxisViewByCategory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	return toSerialize, nil
}

type NullableYAxisViewByCategory struct {
	value *YAxisViewByCategory
	isSet bool
}

func (v NullableYAxisViewByCategory) Get() *YAxisViewByCategory {
	return v.value
}

func (v *NullableYAxisViewByCategory) Set(val *YAxisViewByCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableYAxisViewByCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableYAxisViewByCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableYAxisViewByCategory(val *YAxisViewByCategory) *NullableYAxisViewByCategory {
	return &NullableYAxisViewByCategory{value: val, isSet: true}
}

func (v NullableYAxisViewByCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableYAxisViewByCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


