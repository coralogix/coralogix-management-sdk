/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package role_management_service

import (
	"encoding/json"
)

// checks if the ListSystemRolesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListSystemRolesResponse{}

// ListSystemRolesResponse struct for ListSystemRolesResponse
type ListSystemRolesResponse struct {
	Roles []V2SystemRole `json:"roles,omitempty"`
}

// NewListSystemRolesResponse instantiates a new ListSystemRolesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSystemRolesResponse() *ListSystemRolesResponse {
	this := ListSystemRolesResponse{}
	return &this
}

// NewListSystemRolesResponseWithDefaults instantiates a new ListSystemRolesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSystemRolesResponseWithDefaults() *ListSystemRolesResponse {
	this := ListSystemRolesResponse{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ListSystemRolesResponse) GetRoles() []V2SystemRole {
	if o == nil || IsNil(o.Roles) {
		var ret []V2SystemRole
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSystemRolesResponse) GetRolesOk() ([]V2SystemRole, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *ListSystemRolesResponse) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []V2SystemRole and assigns it to the Roles field.
func (o *ListSystemRolesResponse) SetRoles(v []V2SystemRole) {
	o.Roles = v
}

func (o ListSystemRolesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListSystemRolesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return toSerialize, nil
}

type NullableListSystemRolesResponse struct {
	value *ListSystemRolesResponse
	isSet bool
}

func (v NullableListSystemRolesResponse) Get() *ListSystemRolesResponse {
	return v.value
}

func (v *NullableListSystemRolesResponse) Set(val *ListSystemRolesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListSystemRolesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListSystemRolesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSystemRolesResponse(val *ListSystemRolesResponse) *NullableListSystemRolesResponse {
	return &NullableListSystemRolesResponse{value: val, isSet: true}
}

func (v NullableListSystemRolesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSystemRolesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


