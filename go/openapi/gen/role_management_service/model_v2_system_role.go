/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package role_management_service

import (
	"encoding/json"
)

// checks if the V2SystemRole type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2SystemRole{}

// V2SystemRole struct for V2SystemRole
type V2SystemRole struct {
	Description *string `json:"description,omitempty"`
	Name *string `json:"name,omitempty"`
	Permissions []string `json:"permissions,omitempty"`
	RoleId *int64 `json:"roleId,omitempty"`
}

// NewV2SystemRole instantiates a new V2SystemRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2SystemRole() *V2SystemRole {
	this := V2SystemRole{}
	return &this
}

// NewV2SystemRoleWithDefaults instantiates a new V2SystemRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2SystemRoleWithDefaults() *V2SystemRole {
	this := V2SystemRole{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V2SystemRole) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SystemRole) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V2SystemRole) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V2SystemRole) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V2SystemRole) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SystemRole) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V2SystemRole) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V2SystemRole) SetName(v string) {
	o.Name = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *V2SystemRole) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SystemRole) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *V2SystemRole) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *V2SystemRole) SetPermissions(v []string) {
	o.Permissions = v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *V2SystemRole) GetRoleId() int64 {
	if o == nil || IsNil(o.RoleId) {
		var ret int64
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2SystemRole) GetRoleIdOk() (*int64, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *V2SystemRole) HasRoleId() bool {
	if o != nil && !IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given int64 and assigns it to the RoleId field.
func (o *V2SystemRole) SetRoleId(v int64) {
	o.RoleId = &v
}

func (o V2SystemRole) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2SystemRole) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.RoleId) {
		toSerialize["roleId"] = o.RoleId
	}
	return toSerialize, nil
}

type NullableV2SystemRole struct {
	value *V2SystemRole
	isSet bool
}

func (v NullableV2SystemRole) Get() *V2SystemRole {
	return v.value
}

func (v *NullableV2SystemRole) Set(val *V2SystemRole) {
	v.value = val
	v.isSet = true
}

func (v NullableV2SystemRole) IsSet() bool {
	return v.isSet
}

func (v *NullableV2SystemRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2SystemRole(val *V2SystemRole) *NullableV2SystemRole {
	return &NullableV2SystemRole{value: val, isSet: true}
}

func (v NullableV2SystemRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2SystemRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


