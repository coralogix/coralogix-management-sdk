/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package extension_testing_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InitializeTestingRevisionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InitializeTestingRevisionRequest{}

// InitializeTestingRevisionRequest struct for InitializeTestingRevisionRequest
type InitializeTestingRevisionRequest struct {
	ExtensionData ExtensionData `json:"extensionData"`
}

type _InitializeTestingRevisionRequest InitializeTestingRevisionRequest

// NewInitializeTestingRevisionRequest instantiates a new InitializeTestingRevisionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitializeTestingRevisionRequest(extensionData ExtensionData) *InitializeTestingRevisionRequest {
	this := InitializeTestingRevisionRequest{}
	this.ExtensionData = extensionData
	return &this
}

// NewInitializeTestingRevisionRequestWithDefaults instantiates a new InitializeTestingRevisionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitializeTestingRevisionRequestWithDefaults() *InitializeTestingRevisionRequest {
	this := InitializeTestingRevisionRequest{}
	return &this
}

// GetExtensionData returns the ExtensionData field value
func (o *InitializeTestingRevisionRequest) GetExtensionData() ExtensionData {
	if o == nil {
		var ret ExtensionData
		return ret
	}

	return o.ExtensionData
}

// GetExtensionDataOk returns a tuple with the ExtensionData field value
// and a boolean to check if the value has been set.
func (o *InitializeTestingRevisionRequest) GetExtensionDataOk() (*ExtensionData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExtensionData, true
}

// SetExtensionData sets field value
func (o *InitializeTestingRevisionRequest) SetExtensionData(v ExtensionData) {
	o.ExtensionData = v
}

func (o InitializeTestingRevisionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InitializeTestingRevisionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["extensionData"] = o.ExtensionData
	return toSerialize, nil
}

func (o *InitializeTestingRevisionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"extensionData",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInitializeTestingRevisionRequest := _InitializeTestingRevisionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInitializeTestingRevisionRequest)

	if err != nil {
		return err
	}

	*o = InitializeTestingRevisionRequest(varInitializeTestingRevisionRequest)

	return err
}

type NullableInitializeTestingRevisionRequest struct {
	value *InitializeTestingRevisionRequest
	isSet bool
}

func (v NullableInitializeTestingRevisionRequest) Get() *InitializeTestingRevisionRequest {
	return v.value
}

func (v *NullableInitializeTestingRevisionRequest) Set(val *InitializeTestingRevisionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInitializeTestingRevisionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInitializeTestingRevisionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitializeTestingRevisionRequest(val *InitializeTestingRevisionRequest) *NullableInitializeTestingRevisionRequest {
	return &NullableInitializeTestingRevisionRequest{value: val, isSet: true}
}

func (v NullableInitializeTestingRevisionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitializeTestingRevisionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


