/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connectors_service

import (
	"encoding/json"
)

// checks if the BatchGetConnectorsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchGetConnectorsResponse{}

// BatchGetConnectorsResponse Response containing the requested connectors and any IDs not found
type BatchGetConnectorsResponse struct {
	Connectors *map[string]Connector `json:"connectors,omitempty"`
	NotFoundIds []string `json:"notFoundIds,omitempty"`
}

// NewBatchGetConnectorsResponse instantiates a new BatchGetConnectorsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchGetConnectorsResponse() *BatchGetConnectorsResponse {
	this := BatchGetConnectorsResponse{}
	return &this
}

// NewBatchGetConnectorsResponseWithDefaults instantiates a new BatchGetConnectorsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchGetConnectorsResponseWithDefaults() *BatchGetConnectorsResponse {
	this := BatchGetConnectorsResponse{}
	return &this
}

// GetConnectors returns the Connectors field value if set, zero value otherwise.
func (o *BatchGetConnectorsResponse) GetConnectors() map[string]Connector {
	if o == nil || IsNil(o.Connectors) {
		var ret map[string]Connector
		return ret
	}
	return *o.Connectors
}

// GetConnectorsOk returns a tuple with the Connectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetConnectorsResponse) GetConnectorsOk() (*map[string]Connector, bool) {
	if o == nil || IsNil(o.Connectors) {
		return nil, false
	}
	return o.Connectors, true
}

// HasConnectors returns a boolean if a field has been set.
func (o *BatchGetConnectorsResponse) HasConnectors() bool {
	if o != nil && !IsNil(o.Connectors) {
		return true
	}

	return false
}

// SetConnectors gets a reference to the given map[string]Connector and assigns it to the Connectors field.
func (o *BatchGetConnectorsResponse) SetConnectors(v map[string]Connector) {
	o.Connectors = &v
}

// GetNotFoundIds returns the NotFoundIds field value if set, zero value otherwise.
func (o *BatchGetConnectorsResponse) GetNotFoundIds() []string {
	if o == nil || IsNil(o.NotFoundIds) {
		var ret []string
		return ret
	}
	return o.NotFoundIds
}

// GetNotFoundIdsOk returns a tuple with the NotFoundIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetConnectorsResponse) GetNotFoundIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.NotFoundIds) {
		return nil, false
	}
	return o.NotFoundIds, true
}

// HasNotFoundIds returns a boolean if a field has been set.
func (o *BatchGetConnectorsResponse) HasNotFoundIds() bool {
	if o != nil && !IsNil(o.NotFoundIds) {
		return true
	}

	return false
}

// SetNotFoundIds gets a reference to the given []string and assigns it to the NotFoundIds field.
func (o *BatchGetConnectorsResponse) SetNotFoundIds(v []string) {
	o.NotFoundIds = v
}

func (o BatchGetConnectorsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchGetConnectorsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Connectors) {
		toSerialize["connectors"] = o.Connectors
	}
	if !IsNil(o.NotFoundIds) {
		toSerialize["notFoundIds"] = o.NotFoundIds
	}
	return toSerialize, nil
}

type NullableBatchGetConnectorsResponse struct {
	value *BatchGetConnectorsResponse
	isSet bool
}

func (v NullableBatchGetConnectorsResponse) Get() *BatchGetConnectorsResponse {
	return v.value
}

func (v *NullableBatchGetConnectorsResponse) Set(val *BatchGetConnectorsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchGetConnectorsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchGetConnectorsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchGetConnectorsResponse(val *BatchGetConnectorsResponse) *NullableBatchGetConnectorsResponse {
	return &NullableBatchGetConnectorsResponse{value: val, isSet: true}
}

func (v NullableBatchGetConnectorsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchGetConnectorsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


