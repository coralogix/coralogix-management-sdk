/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
	"time"
)

// checks if the IncidentFieldOneOfOneOf4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncidentFieldOneOfOneOf4{}

// IncidentFieldOneOfOneOf4 struct for IncidentFieldOneOfOneOf4
type IncidentFieldOneOfOneOf4 struct {
	ClosedAt *time.Time `json:"closedAt,omitempty"`
}

// NewIncidentFieldOneOfOneOf4 instantiates a new IncidentFieldOneOfOneOf4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentFieldOneOfOneOf4() *IncidentFieldOneOfOneOf4 {
	this := IncidentFieldOneOfOneOf4{}
	return &this
}

// NewIncidentFieldOneOfOneOf4WithDefaults instantiates a new IncidentFieldOneOfOneOf4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentFieldOneOfOneOf4WithDefaults() *IncidentFieldOneOfOneOf4 {
	this := IncidentFieldOneOfOneOf4{}
	return &this
}

// GetClosedAt returns the ClosedAt field value if set, zero value otherwise.
func (o *IncidentFieldOneOfOneOf4) GetClosedAt() time.Time {
	if o == nil || IsNil(o.ClosedAt) {
		var ret time.Time
		return ret
	}
	return *o.ClosedAt
}

// GetClosedAtOk returns a tuple with the ClosedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentFieldOneOfOneOf4) GetClosedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ClosedAt) {
		return nil, false
	}
	return o.ClosedAt, true
}

// HasClosedAt returns a boolean if a field has been set.
func (o *IncidentFieldOneOfOneOf4) HasClosedAt() bool {
	if o != nil && !IsNil(o.ClosedAt) {
		return true
	}

	return false
}

// SetClosedAt gets a reference to the given time.Time and assigns it to the ClosedAt field.
func (o *IncidentFieldOneOfOneOf4) SetClosedAt(v time.Time) {
	o.ClosedAt = &v
}

func (o IncidentFieldOneOfOneOf4) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncidentFieldOneOfOneOf4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClosedAt) {
		toSerialize["closedAt"] = o.ClosedAt
	}
	return toSerialize, nil
}

type NullableIncidentFieldOneOfOneOf4 struct {
	value *IncidentFieldOneOfOneOf4
	isSet bool
}

func (v NullableIncidentFieldOneOfOneOf4) Get() *IncidentFieldOneOfOneOf4 {
	return v.value
}

func (v *NullableIncidentFieldOneOfOneOf4) Set(val *IncidentFieldOneOfOneOf4) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentFieldOneOfOneOf4) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentFieldOneOfOneOf4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentFieldOneOfOneOf4(val *IncidentFieldOneOfOneOf4) *NullableIncidentFieldOneOfOneOf4 {
	return &NullableIncidentFieldOneOfOneOf4{value: val, isSet: true}
}

func (v NullableIncidentFieldOneOfOneOf4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentFieldOneOfOneOf4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


