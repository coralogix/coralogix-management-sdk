/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
)

// checks if the IncidentFieldOneOfApplicationName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncidentFieldOneOfApplicationName{}

// IncidentFieldOneOfApplicationName struct for IncidentFieldOneOfApplicationName
type IncidentFieldOneOfApplicationName struct {
	ApplicationName *string `json:"applicationName,omitempty"`
}

// NewIncidentFieldOneOfApplicationName instantiates a new IncidentFieldOneOfApplicationName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentFieldOneOfApplicationName() *IncidentFieldOneOfApplicationName {
	this := IncidentFieldOneOfApplicationName{}
	return &this
}

// NewIncidentFieldOneOfApplicationNameWithDefaults instantiates a new IncidentFieldOneOfApplicationName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentFieldOneOfApplicationNameWithDefaults() *IncidentFieldOneOfApplicationName {
	this := IncidentFieldOneOfApplicationName{}
	return &this
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *IncidentFieldOneOfApplicationName) GetApplicationName() string {
	if o == nil || IsNil(o.ApplicationName) {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentFieldOneOfApplicationName) GetApplicationNameOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationName) {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *IncidentFieldOneOfApplicationName) HasApplicationName() bool {
	if o != nil && !IsNil(o.ApplicationName) {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *IncidentFieldOneOfApplicationName) SetApplicationName(v string) {
	o.ApplicationName = &v
}

func (o IncidentFieldOneOfApplicationName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncidentFieldOneOfApplicationName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationName) {
		toSerialize["applicationName"] = o.ApplicationName
	}
	return toSerialize, nil
}

type NullableIncidentFieldOneOfApplicationName struct {
	value *IncidentFieldOneOfApplicationName
	isSet bool
}

func (v NullableIncidentFieldOneOfApplicationName) Get() *IncidentFieldOneOfApplicationName {
	return v.value
}

func (v *NullableIncidentFieldOneOfApplicationName) Set(val *IncidentFieldOneOfApplicationName) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentFieldOneOfApplicationName) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentFieldOneOfApplicationName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentFieldOneOfApplicationName(val *IncidentFieldOneOfApplicationName) *NullableIncidentFieldOneOfApplicationName {
	return &NullableIncidentFieldOneOfApplicationName{value: val, isSet: true}
}

func (v NullableIncidentFieldOneOfApplicationName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentFieldOneOfApplicationName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


