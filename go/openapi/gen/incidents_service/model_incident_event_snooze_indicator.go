/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
	"time"
)

// checks if the IncidentEventSnoozeIndicator type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncidentEventSnoozeIndicator{}

// IncidentEventSnoozeIndicator struct for IncidentEventSnoozeIndicator
type IncidentEventSnoozeIndicator struct {
	DurationMinutes *int32 `json:"durationMinutes,omitempty"`
	StartTime *time.Time `json:"startTime,omitempty"`
	UserId *string `json:"userId,omitempty"`
}

// NewIncidentEventSnoozeIndicator instantiates a new IncidentEventSnoozeIndicator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentEventSnoozeIndicator() *IncidentEventSnoozeIndicator {
	this := IncidentEventSnoozeIndicator{}
	return &this
}

// NewIncidentEventSnoozeIndicatorWithDefaults instantiates a new IncidentEventSnoozeIndicator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentEventSnoozeIndicatorWithDefaults() *IncidentEventSnoozeIndicator {
	this := IncidentEventSnoozeIndicator{}
	return &this
}

// GetDurationMinutes returns the DurationMinutes field value if set, zero value otherwise.
func (o *IncidentEventSnoozeIndicator) GetDurationMinutes() int32 {
	if o == nil || IsNil(o.DurationMinutes) {
		var ret int32
		return ret
	}
	return *o.DurationMinutes
}

// GetDurationMinutesOk returns a tuple with the DurationMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentEventSnoozeIndicator) GetDurationMinutesOk() (*int32, bool) {
	if o == nil || IsNil(o.DurationMinutes) {
		return nil, false
	}
	return o.DurationMinutes, true
}

// HasDurationMinutes returns a boolean if a field has been set.
func (o *IncidentEventSnoozeIndicator) HasDurationMinutes() bool {
	if o != nil && !IsNil(o.DurationMinutes) {
		return true
	}

	return false
}

// SetDurationMinutes gets a reference to the given int32 and assigns it to the DurationMinutes field.
func (o *IncidentEventSnoozeIndicator) SetDurationMinutes(v int32) {
	o.DurationMinutes = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *IncidentEventSnoozeIndicator) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentEventSnoozeIndicator) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *IncidentEventSnoozeIndicator) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *IncidentEventSnoozeIndicator) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *IncidentEventSnoozeIndicator) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentEventSnoozeIndicator) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *IncidentEventSnoozeIndicator) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *IncidentEventSnoozeIndicator) SetUserId(v string) {
	o.UserId = &v
}

func (o IncidentEventSnoozeIndicator) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncidentEventSnoozeIndicator) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DurationMinutes) {
		toSerialize["durationMinutes"] = o.DurationMinutes
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableIncidentEventSnoozeIndicator struct {
	value *IncidentEventSnoozeIndicator
	isSet bool
}

func (v NullableIncidentEventSnoozeIndicator) Get() *IncidentEventSnoozeIndicator {
	return v.value
}

func (v *NullableIncidentEventSnoozeIndicator) Set(val *IncidentEventSnoozeIndicator) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentEventSnoozeIndicator) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentEventSnoozeIndicator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentEventSnoozeIndicator(val *IncidentEventSnoozeIndicator) *NullableIncidentEventSnoozeIndicator {
	return &NullableIncidentEventSnoozeIndicator{value: val, isSet: true}
}

func (v NullableIncidentEventSnoozeIndicator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentEventSnoozeIndicator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


