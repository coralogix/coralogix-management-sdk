/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
	"fmt"
)

// IncidentFields the model 'IncidentFields'
type IncidentFields string

// List of IncidentFields
const (
	INCIDENTFIELDS_INCIDENTS_FIELDS_UNSPECIFIED IncidentFields = "INCIDENTS_FIELDS_UNSPECIFIED"
	INCIDENTFIELDS_INCIDENTS_FIELDS_ID IncidentFields = "INCIDENTS_FIELDS_ID"
	INCIDENTFIELDS_INCIDENTS_FIELDS_SEVERITY IncidentFields = "INCIDENTS_FIELDS_SEVERITY"
	INCIDENTFIELDS_INCIDENTS_FIELDS_NAME IncidentFields = "INCIDENTS_FIELDS_NAME"
	INCIDENTFIELDS_INCIDENTS_FIELDS_CREATED_TIME IncidentFields = "INCIDENTS_FIELDS_CREATED_TIME"
	INCIDENTFIELDS_INCIDENTS_FIELDS_CLOSED_TIME IncidentFields = "INCIDENTS_FIELDS_CLOSED_TIME"
	INCIDENTFIELDS_INCIDENTS_FIELDS_STATE IncidentFields = "INCIDENTS_FIELDS_STATE"
	INCIDENTFIELDS_INCIDENTS_FIELDS_STATUS IncidentFields = "INCIDENTS_FIELDS_STATUS"
	INCIDENTFIELDS_INCIDENTS_FIELDS_LAST_STATE_UPDATE_TIME IncidentFields = "INCIDENTS_FIELDS_LAST_STATE_UPDATE_TIME"
	INCIDENTFIELDS_INCIDENTS_FIELDS_APPLICATION_NAME IncidentFields = "INCIDENTS_FIELDS_APPLICATION_NAME"
	INCIDENTFIELDS_INCIDENTS_FIELDS_SUBSYSTEM_NAME IncidentFields = "INCIDENTS_FIELDS_SUBSYSTEM_NAME"
	INCIDENTFIELDS_INCIDENTS_FIELDS_DURATION IncidentFields = "INCIDENTS_FIELDS_DURATION"
)

// All allowed values of IncidentFields enum
var AllowedIncidentFieldsEnumValues = []IncidentFields{
	"INCIDENTS_FIELDS_UNSPECIFIED",
	"INCIDENTS_FIELDS_ID",
	"INCIDENTS_FIELDS_SEVERITY",
	"INCIDENTS_FIELDS_NAME",
	"INCIDENTS_FIELDS_CREATED_TIME",
	"INCIDENTS_FIELDS_CLOSED_TIME",
	"INCIDENTS_FIELDS_STATE",
	"INCIDENTS_FIELDS_STATUS",
	"INCIDENTS_FIELDS_LAST_STATE_UPDATE_TIME",
	"INCIDENTS_FIELDS_APPLICATION_NAME",
	"INCIDENTS_FIELDS_SUBSYSTEM_NAME",
	"INCIDENTS_FIELDS_DURATION",
}

func (v *IncidentFields) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := IncidentFields(value)
	for _, existing := range AllowedIncidentFieldsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid IncidentFields", value)
}

// NewIncidentFieldsFromValue returns a pointer to a valid IncidentFields
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewIncidentFieldsFromValue(v string) (*IncidentFields, error) {
	ev := IncidentFields(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for IncidentFields: valid values are %v", v, AllowedIncidentFieldsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v IncidentFields) IsValid() bool {
	for _, existing := range AllowedIncidentFieldsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to IncidentFields value
func (v IncidentFields) Ptr() *IncidentFields {
	return &v
}

type NullableIncidentFields struct {
	value *IncidentFields
	isSet bool
}

func (v NullableIncidentFields) Get() *IncidentFields {
	return v.value
}

func (v *NullableIncidentFields) Set(val *IncidentFields) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentFields) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentFields(val *IncidentFields) *NullableIncidentFields {
	return &NullableIncidentFields{value: val, isSet: true}
}

func (v NullableIncidentFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

