/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
	"fmt"
)

// V1OrderByDirection the model 'V1OrderByDirection'
type V1OrderByDirection string

// List of v1.OrderByDirection
const (
	V1ORDERBYDIRECTION_ORDER_BY_DIRECTION_UNSPECIFIED V1OrderByDirection = "ORDER_BY_DIRECTION_UNSPECIFIED"
	V1ORDERBYDIRECTION_ORDER_BY_DIRECTION_ASC V1OrderByDirection = "ORDER_BY_DIRECTION_ASC"
	V1ORDERBYDIRECTION_ORDER_BY_DIRECTION_DESC V1OrderByDirection = "ORDER_BY_DIRECTION_DESC"
)

// All allowed values of V1OrderByDirection enum
var AllowedV1OrderByDirectionEnumValues = []V1OrderByDirection{
	"ORDER_BY_DIRECTION_UNSPECIFIED",
	"ORDER_BY_DIRECTION_ASC",
	"ORDER_BY_DIRECTION_DESC",
}

func (v *V1OrderByDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := V1OrderByDirection(value)
	for _, existing := range AllowedV1OrderByDirectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid V1OrderByDirection", value)
}

// NewV1OrderByDirectionFromValue returns a pointer to a valid V1OrderByDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewV1OrderByDirectionFromValue(v string) (*V1OrderByDirection, error) {
	ev := V1OrderByDirection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for V1OrderByDirection: valid values are %v", v, AllowedV1OrderByDirectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v V1OrderByDirection) IsValid() bool {
	for _, existing := range AllowedV1OrderByDirectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to v1.OrderByDirection value
func (v V1OrderByDirection) Ptr() *V1OrderByDirection {
	return &v
}

type NullableV1OrderByDirection struct {
	value *V1OrderByDirection
	isSet bool
}

func (v NullableV1OrderByDirection) Get() *V1OrderByDirection {
	return v.value
}

func (v *NullableV1OrderByDirection) Set(val *V1OrderByDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableV1OrderByDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableV1OrderByDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1OrderByDirection(val *V1OrderByDirection) *NullableV1OrderByDirection {
	return &NullableV1OrderByDirection{value: val, isSet: true}
}

func (v NullableV1OrderByDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1OrderByDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

