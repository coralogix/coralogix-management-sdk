/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListIncidentEventsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListIncidentEventsResponse{}

// ListIncidentEventsResponse A response containing a list of incident events and pagination information
type ListIncidentEventsResponse struct {
	Items []IncidentEventExtended `json:"items"`
	Pagination *V1PaginationResponse `json:"pagination,omitempty"`
}

type _ListIncidentEventsResponse ListIncidentEventsResponse

// NewListIncidentEventsResponse instantiates a new ListIncidentEventsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListIncidentEventsResponse(items []IncidentEventExtended) *ListIncidentEventsResponse {
	this := ListIncidentEventsResponse{}
	this.Items = items
	return &this
}

// NewListIncidentEventsResponseWithDefaults instantiates a new ListIncidentEventsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListIncidentEventsResponseWithDefaults() *ListIncidentEventsResponse {
	this := ListIncidentEventsResponse{}
	return &this
}

// GetItems returns the Items field value
func (o *ListIncidentEventsResponse) GetItems() []IncidentEventExtended {
	if o == nil {
		var ret []IncidentEventExtended
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *ListIncidentEventsResponse) GetItemsOk() ([]IncidentEventExtended, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *ListIncidentEventsResponse) SetItems(v []IncidentEventExtended) {
	o.Items = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ListIncidentEventsResponse) GetPagination() V1PaginationResponse {
	if o == nil || IsNil(o.Pagination) {
		var ret V1PaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListIncidentEventsResponse) GetPaginationOk() (*V1PaginationResponse, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ListIncidentEventsResponse) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given V1PaginationResponse and assigns it to the Pagination field.
func (o *ListIncidentEventsResponse) SetPagination(v V1PaginationResponse) {
	o.Pagination = &v
}

func (o ListIncidentEventsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListIncidentEventsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

func (o *ListIncidentEventsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListIncidentEventsResponse := _ListIncidentEventsResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListIncidentEventsResponse)

	if err != nil {
		return err
	}

	*o = ListIncidentEventsResponse(varListIncidentEventsResponse)

	return err
}

type NullableListIncidentEventsResponse struct {
	value *ListIncidentEventsResponse
	isSet bool
}

func (v NullableListIncidentEventsResponse) Get() *ListIncidentEventsResponse {
	return v.value
}

func (v *NullableListIncidentEventsResponse) Set(val *ListIncidentEventsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListIncidentEventsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListIncidentEventsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListIncidentEventsResponse(val *ListIncidentEventsResponse) *NullableListIncidentEventsResponse {
	return &NullableListIncidentEventsResponse{value: val, isSet: true}
}

func (v NullableListIncidentEventsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListIncidentEventsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


