/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
)

// checks if the GroupByValuesOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupByValuesOneOf{}

// GroupByValuesOneOf struct for GroupByValuesOneOf
type GroupByValuesOneOf struct {
	IncidentField *IncidentFieldOneOf `json:"incidentField,omitempty"`
}

// NewGroupByValuesOneOf instantiates a new GroupByValuesOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupByValuesOneOf() *GroupByValuesOneOf {
	this := GroupByValuesOneOf{}
	return &this
}

// NewGroupByValuesOneOfWithDefaults instantiates a new GroupByValuesOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupByValuesOneOfWithDefaults() *GroupByValuesOneOf {
	this := GroupByValuesOneOf{}
	return &this
}

// GetIncidentField returns the IncidentField field value if set, zero value otherwise.
func (o *GroupByValuesOneOf) GetIncidentField() IncidentFieldOneOf {
	if o == nil || IsNil(o.IncidentField) {
		var ret IncidentFieldOneOf
		return ret
	}
	return *o.IncidentField
}

// GetIncidentFieldOk returns a tuple with the IncidentField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupByValuesOneOf) GetIncidentFieldOk() (*IncidentFieldOneOf, bool) {
	if o == nil || IsNil(o.IncidentField) {
		return nil, false
	}
	return o.IncidentField, true
}

// HasIncidentField returns a boolean if a field has been set.
func (o *GroupByValuesOneOf) HasIncidentField() bool {
	if o != nil && !IsNil(o.IncidentField) {
		return true
	}

	return false
}

// SetIncidentField gets a reference to the given IncidentFieldOneOf and assigns it to the IncidentField field.
func (o *GroupByValuesOneOf) SetIncidentField(v IncidentFieldOneOf) {
	o.IncidentField = &v
}

func (o GroupByValuesOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupByValuesOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IncidentField) {
		toSerialize["incidentField"] = o.IncidentField
	}
	return toSerialize, nil
}

type NullableGroupByValuesOneOf struct {
	value *GroupByValuesOneOf
	isSet bool
}

func (v NullableGroupByValuesOneOf) Get() *GroupByValuesOneOf {
	return v.value
}

func (v *NullableGroupByValuesOneOf) Set(val *GroupByValuesOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupByValuesOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupByValuesOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupByValuesOneOf(val *GroupByValuesOneOf) *NullableGroupByValuesOneOf {
	return &NullableGroupByValuesOneOf{value: val, isSet: true}
}

func (v NullableGroupByValuesOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupByValuesOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


