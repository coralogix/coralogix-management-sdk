/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderByIncidentField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderByIncidentField{}

// OrderByIncidentField struct for OrderByIncidentField
type OrderByIncidentField struct {
	Direction V1OrderByDirection `json:"direction"`
	IncidentField *IncidentFields `json:"incidentField,omitempty"`
}

type _OrderByIncidentField OrderByIncidentField

// NewOrderByIncidentField instantiates a new OrderByIncidentField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderByIncidentField(direction V1OrderByDirection) *OrderByIncidentField {
	this := OrderByIncidentField{}
	this.Direction = direction
	return &this
}

// NewOrderByIncidentFieldWithDefaults instantiates a new OrderByIncidentField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderByIncidentFieldWithDefaults() *OrderByIncidentField {
	this := OrderByIncidentField{}
	return &this
}

// GetDirection returns the Direction field value
func (o *OrderByIncidentField) GetDirection() V1OrderByDirection {
	if o == nil {
		var ret V1OrderByDirection
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *OrderByIncidentField) GetDirectionOk() (*V1OrderByDirection, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *OrderByIncidentField) SetDirection(v V1OrderByDirection) {
	o.Direction = v
}

// GetIncidentField returns the IncidentField field value if set, zero value otherwise.
func (o *OrderByIncidentField) GetIncidentField() IncidentFields {
	if o == nil || IsNil(o.IncidentField) {
		var ret IncidentFields
		return ret
	}
	return *o.IncidentField
}

// GetIncidentFieldOk returns a tuple with the IncidentField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderByIncidentField) GetIncidentFieldOk() (*IncidentFields, bool) {
	if o == nil || IsNil(o.IncidentField) {
		return nil, false
	}
	return o.IncidentField, true
}

// HasIncidentField returns a boolean if a field has been set.
func (o *OrderByIncidentField) HasIncidentField() bool {
	if o != nil && !IsNil(o.IncidentField) {
		return true
	}

	return false
}

// SetIncidentField gets a reference to the given IncidentFields and assigns it to the IncidentField field.
func (o *OrderByIncidentField) SetIncidentField(v IncidentFields) {
	o.IncidentField = &v
}

func (o OrderByIncidentField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderByIncidentField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["direction"] = o.Direction
	if !IsNil(o.IncidentField) {
		toSerialize["incidentField"] = o.IncidentField
	}
	return toSerialize, nil
}

func (o *OrderByIncidentField) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"direction",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderByIncidentField := _OrderByIncidentField{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderByIncidentField)

	if err != nil {
		return err
	}

	*o = OrderByIncidentField(varOrderByIncidentField)

	return err
}

type NullableOrderByIncidentField struct {
	value *OrderByIncidentField
	isSet bool
}

func (v NullableOrderByIncidentField) Get() *OrderByIncidentField {
	return v.value
}

func (v *NullableOrderByIncidentField) Set(val *OrderByIncidentField) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderByIncidentField) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderByIncidentField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderByIncidentField(val *OrderByIncidentField) *NullableOrderByIncidentField {
	return &NullableOrderByIncidentField{value: val, isSet: true}
}

func (v NullableOrderByIncidentField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderByIncidentField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


