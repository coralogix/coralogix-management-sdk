/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
)

// checks if the GetIncidentEventsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIncidentEventsResponse{}

// GetIncidentEventsResponse Response containing all events associated with the requested incident
type GetIncidentEventsResponse struct {
	IncidentEvents []IncidentEvent `json:"incidentEvents,omitempty"`
}

// NewGetIncidentEventsResponse instantiates a new GetIncidentEventsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIncidentEventsResponse() *GetIncidentEventsResponse {
	this := GetIncidentEventsResponse{}
	return &this
}

// NewGetIncidentEventsResponseWithDefaults instantiates a new GetIncidentEventsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIncidentEventsResponseWithDefaults() *GetIncidentEventsResponse {
	this := GetIncidentEventsResponse{}
	return &this
}

// GetIncidentEvents returns the IncidentEvents field value if set, zero value otherwise.
func (o *GetIncidentEventsResponse) GetIncidentEvents() []IncidentEvent {
	if o == nil || IsNil(o.IncidentEvents) {
		var ret []IncidentEvent
		return ret
	}
	return o.IncidentEvents
}

// GetIncidentEventsOk returns a tuple with the IncidentEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIncidentEventsResponse) GetIncidentEventsOk() ([]IncidentEvent, bool) {
	if o == nil || IsNil(o.IncidentEvents) {
		return nil, false
	}
	return o.IncidentEvents, true
}

// HasIncidentEvents returns a boolean if a field has been set.
func (o *GetIncidentEventsResponse) HasIncidentEvents() bool {
	if o != nil && !IsNil(o.IncidentEvents) {
		return true
	}

	return false
}

// SetIncidentEvents gets a reference to the given []IncidentEvent and assigns it to the IncidentEvents field.
func (o *GetIncidentEventsResponse) SetIncidentEvents(v []IncidentEvent) {
	o.IncidentEvents = v
}

func (o GetIncidentEventsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIncidentEventsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IncidentEvents) {
		toSerialize["incidentEvents"] = o.IncidentEvents
	}
	return toSerialize, nil
}

type NullableGetIncidentEventsResponse struct {
	value *GetIncidentEventsResponse
	isSet bool
}

func (v NullableGetIncidentEventsResponse) Get() *GetIncidentEventsResponse {
	return v.value
}

func (v *NullableGetIncidentEventsResponse) Set(val *GetIncidentEventsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIncidentEventsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIncidentEventsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIncidentEventsResponse(val *GetIncidentEventsResponse) *NullableGetIncidentEventsResponse {
	return &NullableGetIncidentEventsResponse{value: val, isSet: true}
}

func (v NullableGetIncidentEventsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIncidentEventsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


