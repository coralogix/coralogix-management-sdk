/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
	"time"
)

// checks if the IncidentQueryFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncidentQueryFilter{}

// IncidentQueryFilter Filter configuration for incidents
type IncidentQueryFilter struct {
	ApplicationName []string `json:"applicationName,omitempty"`
	Assignee []string `json:"assignee,omitempty"`
	// Filter by contextual labels
	ContextualLabels map[string]interface{} `json:"contextualLabels,omitempty"`
	CreatedAtRange interface{} `json:"createdAtRange,omitempty"`
	// Filter by display labels
	DisplayLabels map[string]interface{} `json:"displayLabels,omitempty"`
	// Filters all incidents that were open in the given timeframe end time (deprecated, use incident_open_range instead)
	// Deprecated
	EndTime *time.Time `json:"endTime,omitempty"`
	IncidentDurationRange interface{} `json:"incidentDurationRange,omitempty"`
	// Indicates if the incident is muted
	IsMuted *bool `json:"isMuted,omitempty"`
	MetaLabels []IncidentMetaLabel `json:"metaLabels,omitempty"`
	// The operator for the meta labels filter
	MetaLabelsOp *string `json:"metaLabelsOp,omitempty"`
	SearchQuery interface{} `json:"searchQuery,omitempty"`
	Severity []string `json:"severity,omitempty"`
	// Filters all incidents that were open in the given timeframe start time (deprecated, use incident_open_range instead)
	// Deprecated
	StartTime *time.Time `json:"startTime,omitempty"`
	State []string `json:"state,omitempty"`
	Status []string `json:"status,omitempty"`
	SubsystemName []string `json:"subsystemName,omitempty"`
}

// NewIncidentQueryFilter instantiates a new IncidentQueryFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentQueryFilter() *IncidentQueryFilter {
	this := IncidentQueryFilter{}
	return &this
}

// NewIncidentQueryFilterWithDefaults instantiates a new IncidentQueryFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentQueryFilterWithDefaults() *IncidentQueryFilter {
	this := IncidentQueryFilter{}
	return &this
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *IncidentQueryFilter) GetApplicationName() []string {
	if o == nil || IsNil(o.ApplicationName) {
		var ret []string
		return ret
	}
	return o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentQueryFilter) GetApplicationNameOk() ([]string, bool) {
	if o == nil || IsNil(o.ApplicationName) {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasApplicationName() bool {
	if o != nil && !IsNil(o.ApplicationName) {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given []string and assigns it to the ApplicationName field.
func (o *IncidentQueryFilter) SetApplicationName(v []string) {
	o.ApplicationName = v
}

// GetAssignee returns the Assignee field value if set, zero value otherwise.
func (o *IncidentQueryFilter) GetAssignee() []string {
	if o == nil || IsNil(o.Assignee) {
		var ret []string
		return ret
	}
	return o.Assignee
}

// GetAssigneeOk returns a tuple with the Assignee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentQueryFilter) GetAssigneeOk() ([]string, bool) {
	if o == nil || IsNil(o.Assignee) {
		return nil, false
	}
	return o.Assignee, true
}

// HasAssignee returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasAssignee() bool {
	if o != nil && !IsNil(o.Assignee) {
		return true
	}

	return false
}

// SetAssignee gets a reference to the given []string and assigns it to the Assignee field.
func (o *IncidentQueryFilter) SetAssignee(v []string) {
	o.Assignee = v
}

// GetContextualLabels returns the ContextualLabels field value if set, zero value otherwise.
func (o *IncidentQueryFilter) GetContextualLabels() map[string]interface{} {
	if o == nil || IsNil(o.ContextualLabels) {
		var ret map[string]interface{}
		return ret
	}
	return o.ContextualLabels
}

// GetContextualLabelsOk returns a tuple with the ContextualLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentQueryFilter) GetContextualLabelsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ContextualLabels) {
		return map[string]interface{}{}, false
	}
	return o.ContextualLabels, true
}

// HasContextualLabels returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasContextualLabels() bool {
	if o != nil && !IsNil(o.ContextualLabels) {
		return true
	}

	return false
}

// SetContextualLabels gets a reference to the given map[string]interface{} and assigns it to the ContextualLabels field.
func (o *IncidentQueryFilter) SetContextualLabels(v map[string]interface{}) {
	o.ContextualLabels = v
}

// GetCreatedAtRange returns the CreatedAtRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IncidentQueryFilter) GetCreatedAtRange() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CreatedAtRange
}

// GetCreatedAtRangeOk returns a tuple with the CreatedAtRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IncidentQueryFilter) GetCreatedAtRangeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CreatedAtRange) {
		return nil, false
	}
	return &o.CreatedAtRange, true
}

// HasCreatedAtRange returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasCreatedAtRange() bool {
	if o != nil && !IsNil(o.CreatedAtRange) {
		return true
	}

	return false
}

// SetCreatedAtRange gets a reference to the given interface{} and assigns it to the CreatedAtRange field.
func (o *IncidentQueryFilter) SetCreatedAtRange(v interface{}) {
	o.CreatedAtRange = v
}

// GetDisplayLabels returns the DisplayLabels field value if set, zero value otherwise.
func (o *IncidentQueryFilter) GetDisplayLabels() map[string]interface{} {
	if o == nil || IsNil(o.DisplayLabels) {
		var ret map[string]interface{}
		return ret
	}
	return o.DisplayLabels
}

// GetDisplayLabelsOk returns a tuple with the DisplayLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentQueryFilter) GetDisplayLabelsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DisplayLabels) {
		return map[string]interface{}{}, false
	}
	return o.DisplayLabels, true
}

// HasDisplayLabels returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasDisplayLabels() bool {
	if o != nil && !IsNil(o.DisplayLabels) {
		return true
	}

	return false
}

// SetDisplayLabels gets a reference to the given map[string]interface{} and assigns it to the DisplayLabels field.
func (o *IncidentQueryFilter) SetDisplayLabels(v map[string]interface{}) {
	o.DisplayLabels = v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
// Deprecated
func (o *IncidentQueryFilter) GetEndTime() time.Time {
	if o == nil || IsNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *IncidentQueryFilter) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
// Deprecated
func (o *IncidentQueryFilter) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetIncidentDurationRange returns the IncidentDurationRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IncidentQueryFilter) GetIncidentDurationRange() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.IncidentDurationRange
}

// GetIncidentDurationRangeOk returns a tuple with the IncidentDurationRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IncidentQueryFilter) GetIncidentDurationRangeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.IncidentDurationRange) {
		return nil, false
	}
	return &o.IncidentDurationRange, true
}

// HasIncidentDurationRange returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasIncidentDurationRange() bool {
	if o != nil && !IsNil(o.IncidentDurationRange) {
		return true
	}

	return false
}

// SetIncidentDurationRange gets a reference to the given interface{} and assigns it to the IncidentDurationRange field.
func (o *IncidentQueryFilter) SetIncidentDurationRange(v interface{}) {
	o.IncidentDurationRange = v
}

// GetIsMuted returns the IsMuted field value if set, zero value otherwise.
func (o *IncidentQueryFilter) GetIsMuted() bool {
	if o == nil || IsNil(o.IsMuted) {
		var ret bool
		return ret
	}
	return *o.IsMuted
}

// GetIsMutedOk returns a tuple with the IsMuted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentQueryFilter) GetIsMutedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMuted) {
		return nil, false
	}
	return o.IsMuted, true
}

// HasIsMuted returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasIsMuted() bool {
	if o != nil && !IsNil(o.IsMuted) {
		return true
	}

	return false
}

// SetIsMuted gets a reference to the given bool and assigns it to the IsMuted field.
func (o *IncidentQueryFilter) SetIsMuted(v bool) {
	o.IsMuted = &v
}

// GetMetaLabels returns the MetaLabels field value if set, zero value otherwise.
func (o *IncidentQueryFilter) GetMetaLabels() []IncidentMetaLabel {
	if o == nil || IsNil(o.MetaLabels) {
		var ret []IncidentMetaLabel
		return ret
	}
	return o.MetaLabels
}

// GetMetaLabelsOk returns a tuple with the MetaLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentQueryFilter) GetMetaLabelsOk() ([]IncidentMetaLabel, bool) {
	if o == nil || IsNil(o.MetaLabels) {
		return nil, false
	}
	return o.MetaLabels, true
}

// HasMetaLabels returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasMetaLabels() bool {
	if o != nil && !IsNil(o.MetaLabels) {
		return true
	}

	return false
}

// SetMetaLabels gets a reference to the given []IncidentMetaLabel and assigns it to the MetaLabels field.
func (o *IncidentQueryFilter) SetMetaLabels(v []IncidentMetaLabel) {
	o.MetaLabels = v
}

// GetMetaLabelsOp returns the MetaLabelsOp field value if set, zero value otherwise.
func (o *IncidentQueryFilter) GetMetaLabelsOp() string {
	if o == nil || IsNil(o.MetaLabelsOp) {
		var ret string
		return ret
	}
	return *o.MetaLabelsOp
}

// GetMetaLabelsOpOk returns a tuple with the MetaLabelsOp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentQueryFilter) GetMetaLabelsOpOk() (*string, bool) {
	if o == nil || IsNil(o.MetaLabelsOp) {
		return nil, false
	}
	return o.MetaLabelsOp, true
}

// HasMetaLabelsOp returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasMetaLabelsOp() bool {
	if o != nil && !IsNil(o.MetaLabelsOp) {
		return true
	}

	return false
}

// SetMetaLabelsOp gets a reference to the given string and assigns it to the MetaLabelsOp field.
func (o *IncidentQueryFilter) SetMetaLabelsOp(v string) {
	o.MetaLabelsOp = &v
}

// GetSearchQuery returns the SearchQuery field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IncidentQueryFilter) GetSearchQuery() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SearchQuery
}

// GetSearchQueryOk returns a tuple with the SearchQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IncidentQueryFilter) GetSearchQueryOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SearchQuery) {
		return nil, false
	}
	return &o.SearchQuery, true
}

// HasSearchQuery returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasSearchQuery() bool {
	if o != nil && !IsNil(o.SearchQuery) {
		return true
	}

	return false
}

// SetSearchQuery gets a reference to the given interface{} and assigns it to the SearchQuery field.
func (o *IncidentQueryFilter) SetSearchQuery(v interface{}) {
	o.SearchQuery = v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *IncidentQueryFilter) GetSeverity() []string {
	if o == nil || IsNil(o.Severity) {
		var ret []string
		return ret
	}
	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentQueryFilter) GetSeverityOk() ([]string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given []string and assigns it to the Severity field.
func (o *IncidentQueryFilter) SetSeverity(v []string) {
	o.Severity = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
// Deprecated
func (o *IncidentQueryFilter) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *IncidentQueryFilter) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
// Deprecated
func (o *IncidentQueryFilter) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *IncidentQueryFilter) GetState() []string {
	if o == nil || IsNil(o.State) {
		var ret []string
		return ret
	}
	return o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentQueryFilter) GetStateOk() ([]string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given []string and assigns it to the State field.
func (o *IncidentQueryFilter) SetState(v []string) {
	o.State = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *IncidentQueryFilter) GetStatus() []string {
	if o == nil || IsNil(o.Status) {
		var ret []string
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentQueryFilter) GetStatusOk() ([]string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given []string and assigns it to the Status field.
func (o *IncidentQueryFilter) SetStatus(v []string) {
	o.Status = v
}

// GetSubsystemName returns the SubsystemName field value if set, zero value otherwise.
func (o *IncidentQueryFilter) GetSubsystemName() []string {
	if o == nil || IsNil(o.SubsystemName) {
		var ret []string
		return ret
	}
	return o.SubsystemName
}

// GetSubsystemNameOk returns a tuple with the SubsystemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentQueryFilter) GetSubsystemNameOk() ([]string, bool) {
	if o == nil || IsNil(o.SubsystemName) {
		return nil, false
	}
	return o.SubsystemName, true
}

// HasSubsystemName returns a boolean if a field has been set.
func (o *IncidentQueryFilter) HasSubsystemName() bool {
	if o != nil && !IsNil(o.SubsystemName) {
		return true
	}

	return false
}

// SetSubsystemName gets a reference to the given []string and assigns it to the SubsystemName field.
func (o *IncidentQueryFilter) SetSubsystemName(v []string) {
	o.SubsystemName = v
}

func (o IncidentQueryFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncidentQueryFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationName) {
		toSerialize["applicationName"] = o.ApplicationName
	}
	if !IsNil(o.Assignee) {
		toSerialize["assignee"] = o.Assignee
	}
	if !IsNil(o.ContextualLabels) {
		toSerialize["contextualLabels"] = o.ContextualLabels
	}
	if o.CreatedAtRange != nil {
		toSerialize["createdAtRange"] = o.CreatedAtRange
	}
	if !IsNil(o.DisplayLabels) {
		toSerialize["displayLabels"] = o.DisplayLabels
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if o.IncidentDurationRange != nil {
		toSerialize["incidentDurationRange"] = o.IncidentDurationRange
	}
	if !IsNil(o.IsMuted) {
		toSerialize["isMuted"] = o.IsMuted
	}
	if !IsNil(o.MetaLabels) {
		toSerialize["metaLabels"] = o.MetaLabels
	}
	if !IsNil(o.MetaLabelsOp) {
		toSerialize["metaLabelsOp"] = o.MetaLabelsOp
	}
	if o.SearchQuery != nil {
		toSerialize["searchQuery"] = o.SearchQuery
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SubsystemName) {
		toSerialize["subsystemName"] = o.SubsystemName
	}
	return toSerialize, nil
}

type NullableIncidentQueryFilter struct {
	value *IncidentQueryFilter
	isSet bool
}

func (v NullableIncidentQueryFilter) Get() *IncidentQueryFilter {
	return v.value
}

func (v *NullableIncidentQueryFilter) Set(val *IncidentQueryFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentQueryFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentQueryFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentQueryFilter(val *IncidentQueryFilter) *NullableIncidentQueryFilter {
	return &NullableIncidentQueryFilter{value: val, isSet: true}
}

func (v NullableIncidentQueryFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentQueryFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


