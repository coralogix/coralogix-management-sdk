/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
	"time"
)

// checks if the IncidentFieldOneOfClosedAt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncidentFieldOneOfClosedAt{}

// IncidentFieldOneOfClosedAt struct for IncidentFieldOneOfClosedAt
type IncidentFieldOneOfClosedAt struct {
	ClosedAt *time.Time `json:"closedAt,omitempty"`
}

// NewIncidentFieldOneOfClosedAt instantiates a new IncidentFieldOneOfClosedAt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentFieldOneOfClosedAt() *IncidentFieldOneOfClosedAt {
	this := IncidentFieldOneOfClosedAt{}
	return &this
}

// NewIncidentFieldOneOfClosedAtWithDefaults instantiates a new IncidentFieldOneOfClosedAt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentFieldOneOfClosedAtWithDefaults() *IncidentFieldOneOfClosedAt {
	this := IncidentFieldOneOfClosedAt{}
	return &this
}

// GetClosedAt returns the ClosedAt field value if set, zero value otherwise.
func (o *IncidentFieldOneOfClosedAt) GetClosedAt() time.Time {
	if o == nil || IsNil(o.ClosedAt) {
		var ret time.Time
		return ret
	}
	return *o.ClosedAt
}

// GetClosedAtOk returns a tuple with the ClosedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentFieldOneOfClosedAt) GetClosedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ClosedAt) {
		return nil, false
	}
	return o.ClosedAt, true
}

// HasClosedAt returns a boolean if a field has been set.
func (o *IncidentFieldOneOfClosedAt) HasClosedAt() bool {
	if o != nil && !IsNil(o.ClosedAt) {
		return true
	}

	return false
}

// SetClosedAt gets a reference to the given time.Time and assigns it to the ClosedAt field.
func (o *IncidentFieldOneOfClosedAt) SetClosedAt(v time.Time) {
	o.ClosedAt = &v
}

func (o IncidentFieldOneOfClosedAt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncidentFieldOneOfClosedAt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClosedAt) {
		toSerialize["closedAt"] = o.ClosedAt
	}
	return toSerialize, nil
}

type NullableIncidentFieldOneOfClosedAt struct {
	value *IncidentFieldOneOfClosedAt
	isSet bool
}

func (v NullableIncidentFieldOneOfClosedAt) Get() *IncidentFieldOneOfClosedAt {
	return v.value
}

func (v *NullableIncidentFieldOneOfClosedAt) Set(val *IncidentFieldOneOfClosedAt) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentFieldOneOfClosedAt) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentFieldOneOfClosedAt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentFieldOneOfClosedAt(val *IncidentFieldOneOfClosedAt) *NullableIncidentFieldOneOfClosedAt {
	return &NullableIncidentFieldOneOfClosedAt{value: val, isSet: true}
}

func (v NullableIncidentFieldOneOfClosedAt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentFieldOneOfClosedAt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


