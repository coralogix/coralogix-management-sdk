/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
)

// checks if the IncidentFieldOneOfOneOf8 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncidentFieldOneOfOneOf8{}

// IncidentFieldOneOfOneOf8 struct for IncidentFieldOneOfOneOf8
type IncidentFieldOneOfOneOf8 struct {
	ApplicationName *string `json:"applicationName,omitempty"`
}

// NewIncidentFieldOneOfOneOf8 instantiates a new IncidentFieldOneOfOneOf8 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentFieldOneOfOneOf8() *IncidentFieldOneOfOneOf8 {
	this := IncidentFieldOneOfOneOf8{}
	return &this
}

// NewIncidentFieldOneOfOneOf8WithDefaults instantiates a new IncidentFieldOneOfOneOf8 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentFieldOneOfOneOf8WithDefaults() *IncidentFieldOneOfOneOf8 {
	this := IncidentFieldOneOfOneOf8{}
	return &this
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *IncidentFieldOneOfOneOf8) GetApplicationName() string {
	if o == nil || IsNil(o.ApplicationName) {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentFieldOneOfOneOf8) GetApplicationNameOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationName) {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *IncidentFieldOneOfOneOf8) HasApplicationName() bool {
	if o != nil && !IsNil(o.ApplicationName) {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *IncidentFieldOneOfOneOf8) SetApplicationName(v string) {
	o.ApplicationName = &v
}

func (o IncidentFieldOneOfOneOf8) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncidentFieldOneOfOneOf8) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationName) {
		toSerialize["applicationName"] = o.ApplicationName
	}
	return toSerialize, nil
}

type NullableIncidentFieldOneOfOneOf8 struct {
	value *IncidentFieldOneOfOneOf8
	isSet bool
}

func (v NullableIncidentFieldOneOfOneOf8) Get() *IncidentFieldOneOfOneOf8 {
	return v.value
}

func (v *NullableIncidentFieldOneOfOneOf8) Set(val *IncidentFieldOneOfOneOf8) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentFieldOneOfOneOf8) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentFieldOneOfOneOf8) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentFieldOneOfOneOf8(val *IncidentFieldOneOfOneOf8) *NullableIncidentFieldOneOfOneOf8 {
	return &NullableIncidentFieldOneOfOneOf8{value: val, isSet: true}
}

func (v NullableIncidentFieldOneOfOneOf8) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentFieldOneOfOneOf8) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


