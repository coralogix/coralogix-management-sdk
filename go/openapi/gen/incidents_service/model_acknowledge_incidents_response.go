/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AcknowledgeIncidentsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AcknowledgeIncidentsResponse{}

// AcknowledgeIncidentsResponse Response containing the updated incidents after acknowledgment
type AcknowledgeIncidentsResponse struct {
	Incidents []Incident `json:"incidents"`
}

type _AcknowledgeIncidentsResponse AcknowledgeIncidentsResponse

// NewAcknowledgeIncidentsResponse instantiates a new AcknowledgeIncidentsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcknowledgeIncidentsResponse(incidents []Incident) *AcknowledgeIncidentsResponse {
	this := AcknowledgeIncidentsResponse{}
	this.Incidents = incidents
	return &this
}

// NewAcknowledgeIncidentsResponseWithDefaults instantiates a new AcknowledgeIncidentsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcknowledgeIncidentsResponseWithDefaults() *AcknowledgeIncidentsResponse {
	this := AcknowledgeIncidentsResponse{}
	return &this
}

// GetIncidents returns the Incidents field value
func (o *AcknowledgeIncidentsResponse) GetIncidents() []Incident {
	if o == nil {
		var ret []Incident
		return ret
	}

	return o.Incidents
}

// GetIncidentsOk returns a tuple with the Incidents field value
// and a boolean to check if the value has been set.
func (o *AcknowledgeIncidentsResponse) GetIncidentsOk() ([]Incident, bool) {
	if o == nil {
		return nil, false
	}
	return o.Incidents, true
}

// SetIncidents sets field value
func (o *AcknowledgeIncidentsResponse) SetIncidents(v []Incident) {
	o.Incidents = v
}

func (o AcknowledgeIncidentsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AcknowledgeIncidentsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["incidents"] = o.Incidents
	return toSerialize, nil
}

func (o *AcknowledgeIncidentsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"incidents",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAcknowledgeIncidentsResponse := _AcknowledgeIncidentsResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAcknowledgeIncidentsResponse)

	if err != nil {
		return err
	}

	*o = AcknowledgeIncidentsResponse(varAcknowledgeIncidentsResponse)

	return err
}

type NullableAcknowledgeIncidentsResponse struct {
	value *AcknowledgeIncidentsResponse
	isSet bool
}

func (v NullableAcknowledgeIncidentsResponse) Get() *AcknowledgeIncidentsResponse {
	return v.value
}

func (v *NullableAcknowledgeIncidentsResponse) Set(val *AcknowledgeIncidentsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAcknowledgeIncidentsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAcknowledgeIncidentsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcknowledgeIncidentsResponse(val *AcknowledgeIncidentsResponse) *NullableAcknowledgeIncidentsResponse {
	return &NullableAcknowledgeIncidentsResponse{value: val, isSet: true}
}

func (v NullableAcknowledgeIncidentsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcknowledgeIncidentsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


