/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
)

// checks if the IncidentFieldOneOfSeverity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncidentFieldOneOfSeverity{}

// IncidentFieldOneOfSeverity struct for IncidentFieldOneOfSeverity
type IncidentFieldOneOfSeverity struct {
	Severity *IncidentSeverity `json:"severity,omitempty"`
}

// NewIncidentFieldOneOfSeverity instantiates a new IncidentFieldOneOfSeverity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentFieldOneOfSeverity() *IncidentFieldOneOfSeverity {
	this := IncidentFieldOneOfSeverity{}
	return &this
}

// NewIncidentFieldOneOfSeverityWithDefaults instantiates a new IncidentFieldOneOfSeverity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentFieldOneOfSeverityWithDefaults() *IncidentFieldOneOfSeverity {
	this := IncidentFieldOneOfSeverity{}
	return &this
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *IncidentFieldOneOfSeverity) GetSeverity() IncidentSeverity {
	if o == nil || IsNil(o.Severity) {
		var ret IncidentSeverity
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentFieldOneOfSeverity) GetSeverityOk() (*IncidentSeverity, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *IncidentFieldOneOfSeverity) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given IncidentSeverity and assigns it to the Severity field.
func (o *IncidentFieldOneOfSeverity) SetSeverity(v IncidentSeverity) {
	o.Severity = &v
}

func (o IncidentFieldOneOfSeverity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncidentFieldOneOfSeverity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	return toSerialize, nil
}

type NullableIncidentFieldOneOfSeverity struct {
	value *IncidentFieldOneOfSeverity
	isSet bool
}

func (v NullableIncidentFieldOneOfSeverity) Get() *IncidentFieldOneOfSeverity {
	return v.value
}

func (v *NullableIncidentFieldOneOfSeverity) Set(val *IncidentFieldOneOfSeverity) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentFieldOneOfSeverity) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentFieldOneOfSeverity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentFieldOneOfSeverity(val *IncidentFieldOneOfSeverity) *NullableIncidentFieldOneOfSeverity {
	return &NullableIncidentFieldOneOfSeverity{value: val, isSet: true}
}

func (v NullableIncidentFieldOneOfSeverity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentFieldOneOfSeverity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


