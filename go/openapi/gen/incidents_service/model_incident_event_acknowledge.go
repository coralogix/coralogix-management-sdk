/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
)

// checks if the IncidentEventAcknowledge type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncidentEventAcknowledge{}

// IncidentEventAcknowledge struct for IncidentEventAcknowledge
type IncidentEventAcknowledge struct {
	AcknowledgedBy *UserDetails `json:"acknowledgedBy,omitempty"`
}

// NewIncidentEventAcknowledge instantiates a new IncidentEventAcknowledge object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentEventAcknowledge() *IncidentEventAcknowledge {
	this := IncidentEventAcknowledge{}
	return &this
}

// NewIncidentEventAcknowledgeWithDefaults instantiates a new IncidentEventAcknowledge object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentEventAcknowledgeWithDefaults() *IncidentEventAcknowledge {
	this := IncidentEventAcknowledge{}
	return &this
}

// GetAcknowledgedBy returns the AcknowledgedBy field value if set, zero value otherwise.
func (o *IncidentEventAcknowledge) GetAcknowledgedBy() UserDetails {
	if o == nil || IsNil(o.AcknowledgedBy) {
		var ret UserDetails
		return ret
	}
	return *o.AcknowledgedBy
}

// GetAcknowledgedByOk returns a tuple with the AcknowledgedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentEventAcknowledge) GetAcknowledgedByOk() (*UserDetails, bool) {
	if o == nil || IsNil(o.AcknowledgedBy) {
		return nil, false
	}
	return o.AcknowledgedBy, true
}

// HasAcknowledgedBy returns a boolean if a field has been set.
func (o *IncidentEventAcknowledge) HasAcknowledgedBy() bool {
	if o != nil && !IsNil(o.AcknowledgedBy) {
		return true
	}

	return false
}

// SetAcknowledgedBy gets a reference to the given UserDetails and assigns it to the AcknowledgedBy field.
func (o *IncidentEventAcknowledge) SetAcknowledgedBy(v UserDetails) {
	o.AcknowledgedBy = &v
}

func (o IncidentEventAcknowledge) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncidentEventAcknowledge) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcknowledgedBy) {
		toSerialize["acknowledgedBy"] = o.AcknowledgedBy
	}
	return toSerialize, nil
}

type NullableIncidentEventAcknowledge struct {
	value *IncidentEventAcknowledge
	isSet bool
}

func (v NullableIncidentEventAcknowledge) Get() *IncidentEventAcknowledge {
	return v.value
}

func (v *NullableIncidentEventAcknowledge) Set(val *IncidentEventAcknowledge) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentEventAcknowledge) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentEventAcknowledge) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentEventAcknowledge(val *IncidentEventAcknowledge) *NullableIncidentEventAcknowledge {
	return &NullableIncidentEventAcknowledge{value: val, isSet: true}
}

func (v NullableIncidentEventAcknowledge) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentEventAcknowledge) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


