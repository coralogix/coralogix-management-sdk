/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
)

// checks if the IncidentFieldOneOfSubsystemName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncidentFieldOneOfSubsystemName{}

// IncidentFieldOneOfSubsystemName struct for IncidentFieldOneOfSubsystemName
type IncidentFieldOneOfSubsystemName struct {
	SubsystemName *string `json:"subsystemName,omitempty"`
}

// NewIncidentFieldOneOfSubsystemName instantiates a new IncidentFieldOneOfSubsystemName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentFieldOneOfSubsystemName() *IncidentFieldOneOfSubsystemName {
	this := IncidentFieldOneOfSubsystemName{}
	return &this
}

// NewIncidentFieldOneOfSubsystemNameWithDefaults instantiates a new IncidentFieldOneOfSubsystemName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentFieldOneOfSubsystemNameWithDefaults() *IncidentFieldOneOfSubsystemName {
	this := IncidentFieldOneOfSubsystemName{}
	return &this
}

// GetSubsystemName returns the SubsystemName field value if set, zero value otherwise.
func (o *IncidentFieldOneOfSubsystemName) GetSubsystemName() string {
	if o == nil || IsNil(o.SubsystemName) {
		var ret string
		return ret
	}
	return *o.SubsystemName
}

// GetSubsystemNameOk returns a tuple with the SubsystemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentFieldOneOfSubsystemName) GetSubsystemNameOk() (*string, bool) {
	if o == nil || IsNil(o.SubsystemName) {
		return nil, false
	}
	return o.SubsystemName, true
}

// HasSubsystemName returns a boolean if a field has been set.
func (o *IncidentFieldOneOfSubsystemName) HasSubsystemName() bool {
	if o != nil && !IsNil(o.SubsystemName) {
		return true
	}

	return false
}

// SetSubsystemName gets a reference to the given string and assigns it to the SubsystemName field.
func (o *IncidentFieldOneOfSubsystemName) SetSubsystemName(v string) {
	o.SubsystemName = &v
}

func (o IncidentFieldOneOfSubsystemName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncidentFieldOneOfSubsystemName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubsystemName) {
		toSerialize["subsystemName"] = o.SubsystemName
	}
	return toSerialize, nil
}

type NullableIncidentFieldOneOfSubsystemName struct {
	value *IncidentFieldOneOfSubsystemName
	isSet bool
}

func (v NullableIncidentFieldOneOfSubsystemName) Get() *IncidentFieldOneOfSubsystemName {
	return v.value
}

func (v *NullableIncidentFieldOneOfSubsystemName) Set(val *IncidentFieldOneOfSubsystemName) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentFieldOneOfSubsystemName) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentFieldOneOfSubsystemName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentFieldOneOfSubsystemName(val *IncidentFieldOneOfSubsystemName) *NullableIncidentFieldOneOfSubsystemName {
	return &NullableIncidentFieldOneOfSubsystemName{value: val, isSet: true}
}

func (v NullableIncidentFieldOneOfSubsystemName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentFieldOneOfSubsystemName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


