/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// IncidentsServiceListIncidentsOrderBysParameterInner - struct for IncidentsServiceListIncidentsOrderBysParameterInner
type IncidentsServiceListIncidentsOrderBysParameterInner struct {
	V1OrderByContextualLabel *V1OrderByContextualLabel
	V1OrderByIncidentField *V1OrderByIncidentField
}

// V1OrderByContextualLabelAsIncidentsServiceListIncidentsOrderBysParameterInner is a convenience function that returns V1OrderByContextualLabel wrapped in IncidentsServiceListIncidentsOrderBysParameterInner
func V1OrderByContextualLabelAsIncidentsServiceListIncidentsOrderBysParameterInner(v *V1OrderByContextualLabel) IncidentsServiceListIncidentsOrderBysParameterInner {
	return IncidentsServiceListIncidentsOrderBysParameterInner{
		V1OrderByContextualLabel: v,
	}
}

// V1OrderByIncidentFieldAsIncidentsServiceListIncidentsOrderBysParameterInner is a convenience function that returns V1OrderByIncidentField wrapped in IncidentsServiceListIncidentsOrderBysParameterInner
func V1OrderByIncidentFieldAsIncidentsServiceListIncidentsOrderBysParameterInner(v *V1OrderByIncidentField) IncidentsServiceListIncidentsOrderBysParameterInner {
	return IncidentsServiceListIncidentsOrderBysParameterInner{
		V1OrderByIncidentField: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *IncidentsServiceListIncidentsOrderBysParameterInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into V1OrderByContextualLabel
	err = newStrictDecoder(data).Decode(&dst.V1OrderByContextualLabel)
	if err == nil {
		jsonV1OrderByContextualLabel, _ := json.Marshal(dst.V1OrderByContextualLabel)
		if string(jsonV1OrderByContextualLabel) == "{}" { // empty struct
			dst.V1OrderByContextualLabel = nil
		} else {
			if err = validator.Validate(dst.V1OrderByContextualLabel); err != nil {
				dst.V1OrderByContextualLabel = nil
			} else {
				match++
			}
		}
	} else {
		dst.V1OrderByContextualLabel = nil
	}

	// try to unmarshal data into V1OrderByIncidentField
	err = newStrictDecoder(data).Decode(&dst.V1OrderByIncidentField)
	if err == nil {
		jsonV1OrderByIncidentField, _ := json.Marshal(dst.V1OrderByIncidentField)
		if string(jsonV1OrderByIncidentField) == "{}" { // empty struct
			dst.V1OrderByIncidentField = nil
		} else {
			if err = validator.Validate(dst.V1OrderByIncidentField); err != nil {
				dst.V1OrderByIncidentField = nil
			} else {
				match++
			}
		}
	} else {
		dst.V1OrderByIncidentField = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.V1OrderByContextualLabel = nil
		dst.V1OrderByIncidentField = nil

		return fmt.Errorf("data matches more than one schema in oneOf(IncidentsServiceListIncidentsOrderBysParameterInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(IncidentsServiceListIncidentsOrderBysParameterInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src IncidentsServiceListIncidentsOrderBysParameterInner) MarshalJSON() ([]byte, error) {
	if src.V1OrderByContextualLabel != nil {
		return json.Marshal(&src.V1OrderByContextualLabel)
	}

	if src.V1OrderByIncidentField != nil {
		return json.Marshal(&src.V1OrderByIncidentField)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *IncidentsServiceListIncidentsOrderBysParameterInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.V1OrderByContextualLabel != nil {
		return obj.V1OrderByContextualLabel
	}

	if obj.V1OrderByIncidentField != nil {
		return obj.V1OrderByIncidentField
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj IncidentsServiceListIncidentsOrderBysParameterInner) GetActualInstanceValue() (interface{}) {
	if obj.V1OrderByContextualLabel != nil {
		return *obj.V1OrderByContextualLabel
	}

	if obj.V1OrderByIncidentField != nil {
		return *obj.V1OrderByIncidentField
	}

	// all schemas are nil
	return nil
}

type NullableIncidentsServiceListIncidentsOrderBysParameterInner struct {
	value *IncidentsServiceListIncidentsOrderBysParameterInner
	isSet bool
}

func (v NullableIncidentsServiceListIncidentsOrderBysParameterInner) Get() *IncidentsServiceListIncidentsOrderBysParameterInner {
	return v.value
}

func (v *NullableIncidentsServiceListIncidentsOrderBysParameterInner) Set(val *IncidentsServiceListIncidentsOrderBysParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentsServiceListIncidentsOrderBysParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentsServiceListIncidentsOrderBysParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentsServiceListIncidentsOrderBysParameterInner(val *IncidentsServiceListIncidentsOrderBysParameterInner) *NullableIncidentsServiceListIncidentsOrderBysParameterInner {
	return &NullableIncidentsServiceListIncidentsOrderBysParameterInner{value: val, isSet: true}
}

func (v NullableIncidentsServiceListIncidentsOrderBysParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentsServiceListIncidentsOrderBysParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


