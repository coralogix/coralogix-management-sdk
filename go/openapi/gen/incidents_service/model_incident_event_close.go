/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
)

// checks if the IncidentEventClose type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncidentEventClose{}

// IncidentEventClose struct for IncidentEventClose
type IncidentEventClose struct {
	ClosedBy *UserDetails `json:"closedBy,omitempty"`
}

// NewIncidentEventClose instantiates a new IncidentEventClose object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentEventClose() *IncidentEventClose {
	this := IncidentEventClose{}
	return &this
}

// NewIncidentEventCloseWithDefaults instantiates a new IncidentEventClose object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentEventCloseWithDefaults() *IncidentEventClose {
	this := IncidentEventClose{}
	return &this
}

// GetClosedBy returns the ClosedBy field value if set, zero value otherwise.
func (o *IncidentEventClose) GetClosedBy() UserDetails {
	if o == nil || IsNil(o.ClosedBy) {
		var ret UserDetails
		return ret
	}
	return *o.ClosedBy
}

// GetClosedByOk returns a tuple with the ClosedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentEventClose) GetClosedByOk() (*UserDetails, bool) {
	if o == nil || IsNil(o.ClosedBy) {
		return nil, false
	}
	return o.ClosedBy, true
}

// HasClosedBy returns a boolean if a field has been set.
func (o *IncidentEventClose) HasClosedBy() bool {
	if o != nil && !IsNil(o.ClosedBy) {
		return true
	}

	return false
}

// SetClosedBy gets a reference to the given UserDetails and assigns it to the ClosedBy field.
func (o *IncidentEventClose) SetClosedBy(v UserDetails) {
	o.ClosedBy = &v
}

func (o IncidentEventClose) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncidentEventClose) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClosedBy) {
		toSerialize["closedBy"] = o.ClosedBy
	}
	return toSerialize, nil
}

type NullableIncidentEventClose struct {
	value *IncidentEventClose
	isSet bool
}

func (v NullableIncidentEventClose) Get() *IncidentEventClose {
	return v.value
}

func (v *NullableIncidentEventClose) Set(val *IncidentEventClose) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentEventClose) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentEventClose) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentEventClose(val *IncidentEventClose) *NullableIncidentEventClose {
	return &NullableIncidentEventClose{value: val, isSet: true}
}

func (v NullableIncidentEventClose) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentEventClose) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


