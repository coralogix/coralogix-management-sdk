/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// IncidentsServiceListIncidentAggregationsGroupBysParameterInner - struct for IncidentsServiceListIncidentAggregationsGroupBysParameterInner
type IncidentsServiceListIncidentAggregationsGroupBysParameterInner struct {
	GroupByContextualLabel *GroupByContextualLabel
	GroupByIncidentField *GroupByIncidentField
}

// GroupByContextualLabelAsIncidentsServiceListIncidentAggregationsGroupBysParameterInner is a convenience function that returns GroupByContextualLabel wrapped in IncidentsServiceListIncidentAggregationsGroupBysParameterInner
func GroupByContextualLabelAsIncidentsServiceListIncidentAggregationsGroupBysParameterInner(v *GroupByContextualLabel) IncidentsServiceListIncidentAggregationsGroupBysParameterInner {
	return IncidentsServiceListIncidentAggregationsGroupBysParameterInner{
		GroupByContextualLabel: v,
	}
}

// GroupByIncidentFieldAsIncidentsServiceListIncidentAggregationsGroupBysParameterInner is a convenience function that returns GroupByIncidentField wrapped in IncidentsServiceListIncidentAggregationsGroupBysParameterInner
func GroupByIncidentFieldAsIncidentsServiceListIncidentAggregationsGroupBysParameterInner(v *GroupByIncidentField) IncidentsServiceListIncidentAggregationsGroupBysParameterInner {
	return IncidentsServiceListIncidentAggregationsGroupBysParameterInner{
		GroupByIncidentField: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *IncidentsServiceListIncidentAggregationsGroupBysParameterInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GroupByContextualLabel
	err = newStrictDecoder(data).Decode(&dst.GroupByContextualLabel)
	if err == nil {
		jsonGroupByContextualLabel, _ := json.Marshal(dst.GroupByContextualLabel)
		if string(jsonGroupByContextualLabel) == "{}" { // empty struct
			dst.GroupByContextualLabel = nil
		} else {
			if err = validator.Validate(dst.GroupByContextualLabel); err != nil {
				dst.GroupByContextualLabel = nil
			} else {
				match++
			}
		}
	} else {
		dst.GroupByContextualLabel = nil
	}

	// try to unmarshal data into GroupByIncidentField
	err = newStrictDecoder(data).Decode(&dst.GroupByIncidentField)
	if err == nil {
		jsonGroupByIncidentField, _ := json.Marshal(dst.GroupByIncidentField)
		if string(jsonGroupByIncidentField) == "{}" { // empty struct
			dst.GroupByIncidentField = nil
		} else {
			if err = validator.Validate(dst.GroupByIncidentField); err != nil {
				dst.GroupByIncidentField = nil
			} else {
				match++
			}
		}
	} else {
		dst.GroupByIncidentField = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GroupByContextualLabel = nil
		dst.GroupByIncidentField = nil

		return fmt.Errorf("data matches more than one schema in oneOf(IncidentsServiceListIncidentAggregationsGroupBysParameterInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(IncidentsServiceListIncidentAggregationsGroupBysParameterInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src IncidentsServiceListIncidentAggregationsGroupBysParameterInner) MarshalJSON() ([]byte, error) {
	if src.GroupByContextualLabel != nil {
		return json.Marshal(&src.GroupByContextualLabel)
	}

	if src.GroupByIncidentField != nil {
		return json.Marshal(&src.GroupByIncidentField)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *IncidentsServiceListIncidentAggregationsGroupBysParameterInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.GroupByContextualLabel != nil {
		return obj.GroupByContextualLabel
	}

	if obj.GroupByIncidentField != nil {
		return obj.GroupByIncidentField
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj IncidentsServiceListIncidentAggregationsGroupBysParameterInner) GetActualInstanceValue() (interface{}) {
	if obj.GroupByContextualLabel != nil {
		return *obj.GroupByContextualLabel
	}

	if obj.GroupByIncidentField != nil {
		return *obj.GroupByIncidentField
	}

	// all schemas are nil
	return nil
}

type NullableIncidentsServiceListIncidentAggregationsGroupBysParameterInner struct {
	value *IncidentsServiceListIncidentAggregationsGroupBysParameterInner
	isSet bool
}

func (v NullableIncidentsServiceListIncidentAggregationsGroupBysParameterInner) Get() *IncidentsServiceListIncidentAggregationsGroupBysParameterInner {
	return v.value
}

func (v *NullableIncidentsServiceListIncidentAggregationsGroupBysParameterInner) Set(val *IncidentsServiceListIncidentAggregationsGroupBysParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentsServiceListIncidentAggregationsGroupBysParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentsServiceListIncidentAggregationsGroupBysParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentsServiceListIncidentAggregationsGroupBysParameterInner(val *IncidentsServiceListIncidentAggregationsGroupBysParameterInner) *NullableIncidentsServiceListIncidentAggregationsGroupBysParameterInner {
	return &NullableIncidentsServiceListIncidentAggregationsGroupBysParameterInner{value: val, isSet: true}
}

func (v NullableIncidentsServiceListIncidentAggregationsGroupBysParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentsServiceListIncidentAggregationsGroupBysParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


