/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
)

// checks if the IncidentFieldOneOfStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncidentFieldOneOfStatus{}

// IncidentFieldOneOfStatus struct for IncidentFieldOneOfStatus
type IncidentFieldOneOfStatus struct {
	Status *IncidentStatus `json:"status,omitempty"`
}

// NewIncidentFieldOneOfStatus instantiates a new IncidentFieldOneOfStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentFieldOneOfStatus() *IncidentFieldOneOfStatus {
	this := IncidentFieldOneOfStatus{}
	return &this
}

// NewIncidentFieldOneOfStatusWithDefaults instantiates a new IncidentFieldOneOfStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentFieldOneOfStatusWithDefaults() *IncidentFieldOneOfStatus {
	this := IncidentFieldOneOfStatus{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *IncidentFieldOneOfStatus) GetStatus() IncidentStatus {
	if o == nil || IsNil(o.Status) {
		var ret IncidentStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentFieldOneOfStatus) GetStatusOk() (*IncidentStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *IncidentFieldOneOfStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given IncidentStatus and assigns it to the Status field.
func (o *IncidentFieldOneOfStatus) SetStatus(v IncidentStatus) {
	o.Status = &v
}

func (o IncidentFieldOneOfStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncidentFieldOneOfStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableIncidentFieldOneOfStatus struct {
	value *IncidentFieldOneOfStatus
	isSet bool
}

func (v NullableIncidentFieldOneOfStatus) Get() *IncidentFieldOneOfStatus {
	return v.value
}

func (v *NullableIncidentFieldOneOfStatus) Set(val *IncidentFieldOneOfStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentFieldOneOfStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentFieldOneOfStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentFieldOneOfStatus(val *IncidentFieldOneOfStatus) *NullableIncidentFieldOneOfStatus {
	return &NullableIncidentFieldOneOfStatus{value: val, isSet: true}
}

func (v NullableIncidentFieldOneOfStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentFieldOneOfStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


