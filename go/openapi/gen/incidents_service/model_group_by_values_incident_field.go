/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package incidents_service

import (
	"encoding/json"
)

// checks if the GroupByValuesIncidentField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupByValuesIncidentField{}

// GroupByValuesIncidentField struct for GroupByValuesIncidentField
type GroupByValuesIncidentField struct {
	IncidentField *IncidentFieldOneOf `json:"incidentField,omitempty"`
}

// NewGroupByValuesIncidentField instantiates a new GroupByValuesIncidentField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupByValuesIncidentField() *GroupByValuesIncidentField {
	this := GroupByValuesIncidentField{}
	return &this
}

// NewGroupByValuesIncidentFieldWithDefaults instantiates a new GroupByValuesIncidentField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupByValuesIncidentFieldWithDefaults() *GroupByValuesIncidentField {
	this := GroupByValuesIncidentField{}
	return &this
}

// GetIncidentField returns the IncidentField field value if set, zero value otherwise.
func (o *GroupByValuesIncidentField) GetIncidentField() IncidentFieldOneOf {
	if o == nil || IsNil(o.IncidentField) {
		var ret IncidentFieldOneOf
		return ret
	}
	return *o.IncidentField
}

// GetIncidentFieldOk returns a tuple with the IncidentField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupByValuesIncidentField) GetIncidentFieldOk() (*IncidentFieldOneOf, bool) {
	if o == nil || IsNil(o.IncidentField) {
		return nil, false
	}
	return o.IncidentField, true
}

// HasIncidentField returns a boolean if a field has been set.
func (o *GroupByValuesIncidentField) HasIncidentField() bool {
	if o != nil && !IsNil(o.IncidentField) {
		return true
	}

	return false
}

// SetIncidentField gets a reference to the given IncidentFieldOneOf and assigns it to the IncidentField field.
func (o *GroupByValuesIncidentField) SetIncidentField(v IncidentFieldOneOf) {
	o.IncidentField = &v
}

func (o GroupByValuesIncidentField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupByValuesIncidentField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IncidentField) {
		toSerialize["incidentField"] = o.IncidentField
	}
	return toSerialize, nil
}

type NullableGroupByValuesIncidentField struct {
	value *GroupByValuesIncidentField
	isSet bool
}

func (v NullableGroupByValuesIncidentField) Get() *GroupByValuesIncidentField {
	return v.value
}

func (v *NullableGroupByValuesIncidentField) Set(val *GroupByValuesIncidentField) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupByValuesIncidentField) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupByValuesIncidentField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupByValuesIncidentField(val *GroupByValuesIncidentField) *NullableGroupByValuesIncidentField {
	return &NullableGroupByValuesIncidentField{value: val, isSet: true}
}

func (v NullableGroupByValuesIncidentField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupByValuesIncidentField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


