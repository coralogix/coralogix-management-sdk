/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_events_service

import (
	"encoding/json"
	"fmt"
)

// ActivityAnalysisStatus the model 'ActivityAnalysisStatus'
type ActivityAnalysisStatus string

// List of ActivityAnalysisStatus
const (
	ACTIVITYANALYSISSTATUS_ACTIVITY_ANALYSIS_STATUS_ACTIVATE_OR_UNSPECIFIED ActivityAnalysisStatus = "ACTIVITY_ANALYSIS_STATUS_ACTIVATE_OR_UNSPECIFIED"
	ACTIVITYANALYSISSTATUS_ACTIVITY_ANALYSIS_STATUS_MUTE ActivityAnalysisStatus = "ACTIVITY_ANALYSIS_STATUS_MUTE"
)

// All allowed values of ActivityAnalysisStatus enum
var AllowedActivityAnalysisStatusEnumValues = []ActivityAnalysisStatus{
	"ACTIVITY_ANALYSIS_STATUS_ACTIVATE_OR_UNSPECIFIED",
	"ACTIVITY_ANALYSIS_STATUS_MUTE",
}

func (v *ActivityAnalysisStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ActivityAnalysisStatus(value)
	for _, existing := range AllowedActivityAnalysisStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ActivityAnalysisStatus", value)
}

// NewActivityAnalysisStatusFromValue returns a pointer to a valid ActivityAnalysisStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewActivityAnalysisStatusFromValue(v string) (*ActivityAnalysisStatus, error) {
	ev := ActivityAnalysisStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ActivityAnalysisStatus: valid values are %v", v, AllowedActivityAnalysisStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ActivityAnalysisStatus) IsValid() bool {
	for _, existing := range AllowedActivityAnalysisStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ActivityAnalysisStatus value
func (v ActivityAnalysisStatus) Ptr() *ActivityAnalysisStatus {
	return &v
}

type NullableActivityAnalysisStatus struct {
	value *ActivityAnalysisStatus
	isSet bool
}

func (v NullableActivityAnalysisStatus) Get() *ActivityAnalysisStatus {
	return v.value
}

func (v *NullableActivityAnalysisStatus) Set(val *ActivityAnalysisStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityAnalysisStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityAnalysisStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityAnalysisStatus(val *ActivityAnalysisStatus) *NullableActivityAnalysisStatus {
	return &NullableActivityAnalysisStatus{value: val, isSet: true}
}

func (v NullableActivityAnalysisStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityAnalysisStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

