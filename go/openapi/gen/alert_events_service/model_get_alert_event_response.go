/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_events_service

import (
	"encoding/json"
)

// checks if the GetAlertEventResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAlertEventResponse{}

// GetAlertEventResponse struct for GetAlertEventResponse
type GetAlertEventResponse struct {
	Id *string `json:"id,omitempty"`
	Pagination *AlertsV3PaginationResponse `json:"pagination,omitempty"`
	SinglePermutation *AlertEvent `json:"singlePermutation,omitempty"`
}

// NewGetAlertEventResponse instantiates a new GetAlertEventResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAlertEventResponse() *GetAlertEventResponse {
	this := GetAlertEventResponse{}
	return &this
}

// NewGetAlertEventResponseWithDefaults instantiates a new GetAlertEventResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAlertEventResponseWithDefaults() *GetAlertEventResponse {
	this := GetAlertEventResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetAlertEventResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertEventResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetAlertEventResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetAlertEventResponse) SetId(v string) {
	o.Id = &v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *GetAlertEventResponse) GetPagination() AlertsV3PaginationResponse {
	if o == nil || IsNil(o.Pagination) {
		var ret AlertsV3PaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertEventResponse) GetPaginationOk() (*AlertsV3PaginationResponse, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *GetAlertEventResponse) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given AlertsV3PaginationResponse and assigns it to the Pagination field.
func (o *GetAlertEventResponse) SetPagination(v AlertsV3PaginationResponse) {
	o.Pagination = &v
}

// GetSinglePermutation returns the SinglePermutation field value if set, zero value otherwise.
func (o *GetAlertEventResponse) GetSinglePermutation() AlertEvent {
	if o == nil || IsNil(o.SinglePermutation) {
		var ret AlertEvent
		return ret
	}
	return *o.SinglePermutation
}

// GetSinglePermutationOk returns a tuple with the SinglePermutation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertEventResponse) GetSinglePermutationOk() (*AlertEvent, bool) {
	if o == nil || IsNil(o.SinglePermutation) {
		return nil, false
	}
	return o.SinglePermutation, true
}

// HasSinglePermutation returns a boolean if a field has been set.
func (o *GetAlertEventResponse) HasSinglePermutation() bool {
	if o != nil && !IsNil(o.SinglePermutation) {
		return true
	}

	return false
}

// SetSinglePermutation gets a reference to the given AlertEvent and assigns it to the SinglePermutation field.
func (o *GetAlertEventResponse) SetSinglePermutation(v AlertEvent) {
	o.SinglePermutation = &v
}

func (o GetAlertEventResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAlertEventResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if !IsNil(o.SinglePermutation) {
		toSerialize["singlePermutation"] = o.SinglePermutation
	}
	return toSerialize, nil
}

type NullableGetAlertEventResponse struct {
	value *GetAlertEventResponse
	isSet bool
}

func (v NullableGetAlertEventResponse) Get() *GetAlertEventResponse {
	return v.value
}

func (v *NullableGetAlertEventResponse) Set(val *GetAlertEventResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAlertEventResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAlertEventResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAlertEventResponse(val *GetAlertEventResponse) *NullableGetAlertEventResponse {
	return &NullableGetAlertEventResponse{value: val, isSet: true}
}

func (v NullableGetAlertEventResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAlertEventResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


