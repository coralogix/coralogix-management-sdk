/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_events_service

import (
	"encoding/json"
)

// checks if the ActivityAnalysisStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityAnalysisStats{}

// ActivityAnalysisStats struct for ActivityAnalysisStats
type ActivityAnalysisStats struct {
	IsMutedCount *int64 `json:"isMutedCount,omitempty"`
	Rules []string `json:"rules,omitempty"`
}

// NewActivityAnalysisStats instantiates a new ActivityAnalysisStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityAnalysisStats() *ActivityAnalysisStats {
	this := ActivityAnalysisStats{}
	return &this
}

// NewActivityAnalysisStatsWithDefaults instantiates a new ActivityAnalysisStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityAnalysisStatsWithDefaults() *ActivityAnalysisStats {
	this := ActivityAnalysisStats{}
	return &this
}

// GetIsMutedCount returns the IsMutedCount field value if set, zero value otherwise.
func (o *ActivityAnalysisStats) GetIsMutedCount() int64 {
	if o == nil || IsNil(o.IsMutedCount) {
		var ret int64
		return ret
	}
	return *o.IsMutedCount
}

// GetIsMutedCountOk returns a tuple with the IsMutedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityAnalysisStats) GetIsMutedCountOk() (*int64, bool) {
	if o == nil || IsNil(o.IsMutedCount) {
		return nil, false
	}
	return o.IsMutedCount, true
}

// HasIsMutedCount returns a boolean if a field has been set.
func (o *ActivityAnalysisStats) HasIsMutedCount() bool {
	if o != nil && !IsNil(o.IsMutedCount) {
		return true
	}

	return false
}

// SetIsMutedCount gets a reference to the given int64 and assigns it to the IsMutedCount field.
func (o *ActivityAnalysisStats) SetIsMutedCount(v int64) {
	o.IsMutedCount = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *ActivityAnalysisStats) GetRules() []string {
	if o == nil || IsNil(o.Rules) {
		var ret []string
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityAnalysisStats) GetRulesOk() ([]string, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *ActivityAnalysisStats) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []string and assigns it to the Rules field.
func (o *ActivityAnalysisStats) SetRules(v []string) {
	o.Rules = v
}

func (o ActivityAnalysisStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityAnalysisStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsMutedCount) {
		toSerialize["isMutedCount"] = o.IsMutedCount
	}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	return toSerialize, nil
}

type NullableActivityAnalysisStats struct {
	value *ActivityAnalysisStats
	isSet bool
}

func (v NullableActivityAnalysisStats) Get() *ActivityAnalysisStats {
	return v.value
}

func (v *NullableActivityAnalysisStats) Set(val *ActivityAnalysisStats) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityAnalysisStats) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityAnalysisStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityAnalysisStats(val *ActivityAnalysisStats) *NullableActivityAnalysisStats {
	return &NullableActivityAnalysisStats{value: val, isSet: true}
}

func (v NullableActivityAnalysisStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityAnalysisStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


