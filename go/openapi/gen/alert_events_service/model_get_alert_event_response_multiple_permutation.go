/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_events_service

import (
	"encoding/json"
)

// checks if the GetAlertEventResponseMultiplePermutation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAlertEventResponseMultiplePermutation{}

// GetAlertEventResponseMultiplePermutation struct for GetAlertEventResponseMultiplePermutation
type GetAlertEventResponseMultiplePermutation struct {
	Id *string `json:"id,omitempty"`
	MultiplePermutation *AlertEventMultiplePermutation `json:"multiplePermutation,omitempty"`
	Pagination *AlertsV3PaginationResponse `json:"pagination,omitempty"`
}

// NewGetAlertEventResponseMultiplePermutation instantiates a new GetAlertEventResponseMultiplePermutation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAlertEventResponseMultiplePermutation() *GetAlertEventResponseMultiplePermutation {
	this := GetAlertEventResponseMultiplePermutation{}
	return &this
}

// NewGetAlertEventResponseMultiplePermutationWithDefaults instantiates a new GetAlertEventResponseMultiplePermutation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAlertEventResponseMultiplePermutationWithDefaults() *GetAlertEventResponseMultiplePermutation {
	this := GetAlertEventResponseMultiplePermutation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetAlertEventResponseMultiplePermutation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertEventResponseMultiplePermutation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetAlertEventResponseMultiplePermutation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetAlertEventResponseMultiplePermutation) SetId(v string) {
	o.Id = &v
}

// GetMultiplePermutation returns the MultiplePermutation field value if set, zero value otherwise.
func (o *GetAlertEventResponseMultiplePermutation) GetMultiplePermutation() AlertEventMultiplePermutation {
	if o == nil || IsNil(o.MultiplePermutation) {
		var ret AlertEventMultiplePermutation
		return ret
	}
	return *o.MultiplePermutation
}

// GetMultiplePermutationOk returns a tuple with the MultiplePermutation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertEventResponseMultiplePermutation) GetMultiplePermutationOk() (*AlertEventMultiplePermutation, bool) {
	if o == nil || IsNil(o.MultiplePermutation) {
		return nil, false
	}
	return o.MultiplePermutation, true
}

// HasMultiplePermutation returns a boolean if a field has been set.
func (o *GetAlertEventResponseMultiplePermutation) HasMultiplePermutation() bool {
	if o != nil && !IsNil(o.MultiplePermutation) {
		return true
	}

	return false
}

// SetMultiplePermutation gets a reference to the given AlertEventMultiplePermutation and assigns it to the MultiplePermutation field.
func (o *GetAlertEventResponseMultiplePermutation) SetMultiplePermutation(v AlertEventMultiplePermutation) {
	o.MultiplePermutation = &v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *GetAlertEventResponseMultiplePermutation) GetPagination() AlertsV3PaginationResponse {
	if o == nil || IsNil(o.Pagination) {
		var ret AlertsV3PaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAlertEventResponseMultiplePermutation) GetPaginationOk() (*AlertsV3PaginationResponse, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *GetAlertEventResponseMultiplePermutation) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given AlertsV3PaginationResponse and assigns it to the Pagination field.
func (o *GetAlertEventResponseMultiplePermutation) SetPagination(v AlertsV3PaginationResponse) {
	o.Pagination = &v
}

func (o GetAlertEventResponseMultiplePermutation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAlertEventResponseMultiplePermutation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MultiplePermutation) {
		toSerialize["multiplePermutation"] = o.MultiplePermutation
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableGetAlertEventResponseMultiplePermutation struct {
	value *GetAlertEventResponseMultiplePermutation
	isSet bool
}

func (v NullableGetAlertEventResponseMultiplePermutation) Get() *GetAlertEventResponseMultiplePermutation {
	return v.value
}

func (v *NullableGetAlertEventResponseMultiplePermutation) Set(val *GetAlertEventResponseMultiplePermutation) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAlertEventResponseMultiplePermutation) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAlertEventResponseMultiplePermutation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAlertEventResponseMultiplePermutation(val *GetAlertEventResponseMultiplePermutation) *NullableGetAlertEventResponseMultiplePermutation {
	return &NullableGetAlertEventResponseMultiplePermutation{value: val, isSet: true}
}

func (v NullableGetAlertEventResponseMultiplePermutation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAlertEventResponseMultiplePermutation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


