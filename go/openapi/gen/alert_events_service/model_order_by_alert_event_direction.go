/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_events_service

import (
	"encoding/json"
	"fmt"
)

// OrderByAlertEventDirection the model 'OrderByAlertEventDirection'
type OrderByAlertEventDirection string

// List of OrderByAlertEventDirection
const (
	ORDERBYALERTEVENTDIRECTION_ORDER_BY_ALERT_EVENT_DIRECTION_UNSPECIFIED OrderByAlertEventDirection = "ORDER_BY_ALERT_EVENT_DIRECTION_UNSPECIFIED"
	ORDERBYALERTEVENTDIRECTION_ORDER_BY_ALERT_EVENT_DIRECTION_ASC OrderByAlertEventDirection = "ORDER_BY_ALERT_EVENT_DIRECTION_ASC"
	ORDERBYALERTEVENTDIRECTION_ORDER_BY_ALERT_EVENT_DIRECTION_DESC OrderByAlertEventDirection = "ORDER_BY_ALERT_EVENT_DIRECTION_DESC"
)

// All allowed values of OrderByAlertEventDirection enum
var AllowedOrderByAlertEventDirectionEnumValues = []OrderByAlertEventDirection{
	"ORDER_BY_ALERT_EVENT_DIRECTION_UNSPECIFIED",
	"ORDER_BY_ALERT_EVENT_DIRECTION_ASC",
	"ORDER_BY_ALERT_EVENT_DIRECTION_DESC",
}

func (v *OrderByAlertEventDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrderByAlertEventDirection(value)
	for _, existing := range AllowedOrderByAlertEventDirectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrderByAlertEventDirection", value)
}

// NewOrderByAlertEventDirectionFromValue returns a pointer to a valid OrderByAlertEventDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderByAlertEventDirectionFromValue(v string) (*OrderByAlertEventDirection, error) {
	ev := OrderByAlertEventDirection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrderByAlertEventDirection: valid values are %v", v, AllowedOrderByAlertEventDirectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrderByAlertEventDirection) IsValid() bool {
	for _, existing := range AllowedOrderByAlertEventDirectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OrderByAlertEventDirection value
func (v OrderByAlertEventDirection) Ptr() *OrderByAlertEventDirection {
	return &v
}

type NullableOrderByAlertEventDirection struct {
	value *OrderByAlertEventDirection
	isSet bool
}

func (v NullableOrderByAlertEventDirection) Get() *OrderByAlertEventDirection {
	return v.value
}

func (v *NullableOrderByAlertEventDirection) Set(val *OrderByAlertEventDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderByAlertEventDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderByAlertEventDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderByAlertEventDirection(val *OrderByAlertEventDirection) *NullableOrderByAlertEventDirection {
	return &NullableOrderByAlertEventDirection{value: val, isSet: true}
}

func (v NullableOrderByAlertEventDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderByAlertEventDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

