/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the QuerySourceMetricsQueryTypeLabelValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuerySourceMetricsQueryTypeLabelValue{}

// QuerySourceMetricsQueryTypeLabelValue struct for QuerySourceMetricsQueryTypeLabelValue
type QuerySourceMetricsQueryTypeLabelValue struct {
	LabelFilters []QuerySourceMetricsQueryMetricsLabelFilter `json:"labelFilters,omitempty"`
	LabelName *QuerySourceMetricsQueryStringOrVariable `json:"labelName,omitempty"`
	MetricName *QuerySourceMetricsQueryStringOrVariable `json:"metricName,omitempty"`
}

// NewQuerySourceMetricsQueryTypeLabelValue instantiates a new QuerySourceMetricsQueryTypeLabelValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuerySourceMetricsQueryTypeLabelValue() *QuerySourceMetricsQueryTypeLabelValue {
	this := QuerySourceMetricsQueryTypeLabelValue{}
	return &this
}

// NewQuerySourceMetricsQueryTypeLabelValueWithDefaults instantiates a new QuerySourceMetricsQueryTypeLabelValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuerySourceMetricsQueryTypeLabelValueWithDefaults() *QuerySourceMetricsQueryTypeLabelValue {
	this := QuerySourceMetricsQueryTypeLabelValue{}
	return &this
}

// GetLabelFilters returns the LabelFilters field value if set, zero value otherwise.
func (o *QuerySourceMetricsQueryTypeLabelValue) GetLabelFilters() []QuerySourceMetricsQueryMetricsLabelFilter {
	if o == nil || IsNil(o.LabelFilters) {
		var ret []QuerySourceMetricsQueryMetricsLabelFilter
		return ret
	}
	return o.LabelFilters
}

// GetLabelFiltersOk returns a tuple with the LabelFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySourceMetricsQueryTypeLabelValue) GetLabelFiltersOk() ([]QuerySourceMetricsQueryMetricsLabelFilter, bool) {
	if o == nil || IsNil(o.LabelFilters) {
		return nil, false
	}
	return o.LabelFilters, true
}

// HasLabelFilters returns a boolean if a field has been set.
func (o *QuerySourceMetricsQueryTypeLabelValue) HasLabelFilters() bool {
	if o != nil && !IsNil(o.LabelFilters) {
		return true
	}

	return false
}

// SetLabelFilters gets a reference to the given []QuerySourceMetricsQueryMetricsLabelFilter and assigns it to the LabelFilters field.
func (o *QuerySourceMetricsQueryTypeLabelValue) SetLabelFilters(v []QuerySourceMetricsQueryMetricsLabelFilter) {
	o.LabelFilters = v
}

// GetLabelName returns the LabelName field value if set, zero value otherwise.
func (o *QuerySourceMetricsQueryTypeLabelValue) GetLabelName() QuerySourceMetricsQueryStringOrVariable {
	if o == nil || IsNil(o.LabelName) {
		var ret QuerySourceMetricsQueryStringOrVariable
		return ret
	}
	return *o.LabelName
}

// GetLabelNameOk returns a tuple with the LabelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySourceMetricsQueryTypeLabelValue) GetLabelNameOk() (*QuerySourceMetricsQueryStringOrVariable, bool) {
	if o == nil || IsNil(o.LabelName) {
		return nil, false
	}
	return o.LabelName, true
}

// HasLabelName returns a boolean if a field has been set.
func (o *QuerySourceMetricsQueryTypeLabelValue) HasLabelName() bool {
	if o != nil && !IsNil(o.LabelName) {
		return true
	}

	return false
}

// SetLabelName gets a reference to the given QuerySourceMetricsQueryStringOrVariable and assigns it to the LabelName field.
func (o *QuerySourceMetricsQueryTypeLabelValue) SetLabelName(v QuerySourceMetricsQueryStringOrVariable) {
	o.LabelName = &v
}

// GetMetricName returns the MetricName field value if set, zero value otherwise.
func (o *QuerySourceMetricsQueryTypeLabelValue) GetMetricName() QuerySourceMetricsQueryStringOrVariable {
	if o == nil || IsNil(o.MetricName) {
		var ret QuerySourceMetricsQueryStringOrVariable
		return ret
	}
	return *o.MetricName
}

// GetMetricNameOk returns a tuple with the MetricName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySourceMetricsQueryTypeLabelValue) GetMetricNameOk() (*QuerySourceMetricsQueryStringOrVariable, bool) {
	if o == nil || IsNil(o.MetricName) {
		return nil, false
	}
	return o.MetricName, true
}

// HasMetricName returns a boolean if a field has been set.
func (o *QuerySourceMetricsQueryTypeLabelValue) HasMetricName() bool {
	if o != nil && !IsNil(o.MetricName) {
		return true
	}

	return false
}

// SetMetricName gets a reference to the given QuerySourceMetricsQueryStringOrVariable and assigns it to the MetricName field.
func (o *QuerySourceMetricsQueryTypeLabelValue) SetMetricName(v QuerySourceMetricsQueryStringOrVariable) {
	o.MetricName = &v
}

func (o QuerySourceMetricsQueryTypeLabelValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuerySourceMetricsQueryTypeLabelValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LabelFilters) {
		toSerialize["labelFilters"] = o.LabelFilters
	}
	if !IsNil(o.LabelName) {
		toSerialize["labelName"] = o.LabelName
	}
	if !IsNil(o.MetricName) {
		toSerialize["metricName"] = o.MetricName
	}
	return toSerialize, nil
}

type NullableQuerySourceMetricsQueryTypeLabelValue struct {
	value *QuerySourceMetricsQueryTypeLabelValue
	isSet bool
}

func (v NullableQuerySourceMetricsQueryTypeLabelValue) Get() *QuerySourceMetricsQueryTypeLabelValue {
	return v.value
}

func (v *NullableQuerySourceMetricsQueryTypeLabelValue) Set(val *QuerySourceMetricsQueryTypeLabelValue) {
	v.value = val
	v.isSet = true
}

func (v NullableQuerySourceMetricsQueryTypeLabelValue) IsSet() bool {
	return v.isSet
}

func (v *NullableQuerySourceMetricsQueryTypeLabelValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuerySourceMetricsQueryTypeLabelValue(val *QuerySourceMetricsQueryTypeLabelValue) *NullableQuerySourceMetricsQueryTypeLabelValue {
	return &NullableQuerySourceMetricsQueryTypeLabelValue{value: val, isSet: true}
}

func (v NullableQuerySourceMetricsQueryTypeLabelValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuerySourceMetricsQueryTypeLabelValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


