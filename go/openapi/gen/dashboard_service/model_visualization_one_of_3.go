/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VisualizationOneOf3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VisualizationOneOf3{}

// VisualizationOneOf3 struct for VisualizationOneOf3
type VisualizationOneOf3 struct {
	Stat *Stat `json:"stat,omitempty"`
}

// NewVisualizationOneOf3 instantiates a new VisualizationOneOf3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVisualizationOneOf3() *VisualizationOneOf3 {
	this := VisualizationOneOf3{}
	return &this
}

// NewVisualizationOneOf3WithDefaults instantiates a new VisualizationOneOf3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVisualizationOneOf3WithDefaults() *VisualizationOneOf3 {
	this := VisualizationOneOf3{}
	return &this
}

// GetStat returns the Stat field value if set, zero value otherwise.
func (o *VisualizationOneOf3) GetStat() Stat {
	if o == nil || IsNil(o.Stat) {
		var ret Stat
		return ret
	}
	return *o.Stat
}

// GetStatOk returns a tuple with the Stat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisualizationOneOf3) GetStatOk() (*Stat, bool) {
	if o == nil || IsNil(o.Stat) {
		return nil, false
	}
	return o.Stat, true
}

// HasStat returns a boolean if a field has been set.
func (o *VisualizationOneOf3) HasStat() bool {
	if o != nil && !IsNil(o.Stat) {
		return true
	}

	return false
}

// SetStat gets a reference to the given Stat and assigns it to the Stat field.
func (o *VisualizationOneOf3) SetStat(v Stat) {
	o.Stat = &v
}

func (o VisualizationOneOf3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VisualizationOneOf3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Stat) {
		toSerialize["stat"] = o.Stat
	}
	return toSerialize, nil
}

type NullableVisualizationOneOf3 struct {
	value *VisualizationOneOf3
	isSet bool
}

func (v NullableVisualizationOneOf3) Get() *VisualizationOneOf3 {
	return v.value
}

func (v *NullableVisualizationOneOf3) Set(val *VisualizationOneOf3) {
	v.value = val
	v.isSet = true
}

func (v NullableVisualizationOneOf3) IsSet() bool {
	return v.isSet
}

func (v *NullableVisualizationOneOf3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVisualizationOneOf3(val *VisualizationOneOf3) *NullableVisualizationOneOf3 {
	return &NullableVisualizationOneOf3{value: val, isSet: true}
}

func (v NullableVisualizationOneOf3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVisualizationOneOf3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


