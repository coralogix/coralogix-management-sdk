/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
	"time"
)

// checks if the DashboardCatalogItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DashboardCatalogItem{}

// DashboardCatalogItem struct for DashboardCatalogItem
type DashboardCatalogItem struct {
	AuthorId *string `json:"authorId,omitempty"`
	CreateTime *time.Time `json:"createTime,omitempty"`
	Description *string `json:"description,omitempty"`
	Folder *DashboardFolder `json:"folder,omitempty"`
	Id *string `json:"id,omitempty"`
	IsDefault *bool `json:"isDefault,omitempty"`
	IsLocked *bool `json:"isLocked,omitempty"`
	IsPinned *bool `json:"isPinned,omitempty"`
	LockerAuthorId *string `json:"lockerAuthorId,omitempty"`
	Name *string `json:"name,omitempty"`
	SlugName *string `json:"slugName,omitempty"`
	UpdateTime *time.Time `json:"updateTime,omitempty"`
}

// NewDashboardCatalogItem instantiates a new DashboardCatalogItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardCatalogItem() *DashboardCatalogItem {
	this := DashboardCatalogItem{}
	return &this
}

// NewDashboardCatalogItemWithDefaults instantiates a new DashboardCatalogItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardCatalogItemWithDefaults() *DashboardCatalogItem {
	this := DashboardCatalogItem{}
	return &this
}

// GetAuthorId returns the AuthorId field value if set, zero value otherwise.
func (o *DashboardCatalogItem) GetAuthorId() string {
	if o == nil || IsNil(o.AuthorId) {
		var ret string
		return ret
	}
	return *o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCatalogItem) GetAuthorIdOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorId) {
		return nil, false
	}
	return o.AuthorId, true
}

// HasAuthorId returns a boolean if a field has been set.
func (o *DashboardCatalogItem) HasAuthorId() bool {
	if o != nil && !IsNil(o.AuthorId) {
		return true
	}

	return false
}

// SetAuthorId gets a reference to the given string and assigns it to the AuthorId field.
func (o *DashboardCatalogItem) SetAuthorId(v string) {
	o.AuthorId = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *DashboardCatalogItem) GetCreateTime() time.Time {
	if o == nil || IsNil(o.CreateTime) {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCatalogItem) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *DashboardCatalogItem) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *DashboardCatalogItem) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DashboardCatalogItem) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCatalogItem) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DashboardCatalogItem) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DashboardCatalogItem) SetDescription(v string) {
	o.Description = &v
}

// GetFolder returns the Folder field value if set, zero value otherwise.
func (o *DashboardCatalogItem) GetFolder() DashboardFolder {
	if o == nil || IsNil(o.Folder) {
		var ret DashboardFolder
		return ret
	}
	return *o.Folder
}

// GetFolderOk returns a tuple with the Folder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCatalogItem) GetFolderOk() (*DashboardFolder, bool) {
	if o == nil || IsNil(o.Folder) {
		return nil, false
	}
	return o.Folder, true
}

// HasFolder returns a boolean if a field has been set.
func (o *DashboardCatalogItem) HasFolder() bool {
	if o != nil && !IsNil(o.Folder) {
		return true
	}

	return false
}

// SetFolder gets a reference to the given DashboardFolder and assigns it to the Folder field.
func (o *DashboardCatalogItem) SetFolder(v DashboardFolder) {
	o.Folder = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DashboardCatalogItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCatalogItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DashboardCatalogItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DashboardCatalogItem) SetId(v string) {
	o.Id = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *DashboardCatalogItem) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCatalogItem) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *DashboardCatalogItem) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *DashboardCatalogItem) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *DashboardCatalogItem) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCatalogItem) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *DashboardCatalogItem) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *DashboardCatalogItem) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetIsPinned returns the IsPinned field value if set, zero value otherwise.
func (o *DashboardCatalogItem) GetIsPinned() bool {
	if o == nil || IsNil(o.IsPinned) {
		var ret bool
		return ret
	}
	return *o.IsPinned
}

// GetIsPinnedOk returns a tuple with the IsPinned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCatalogItem) GetIsPinnedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPinned) {
		return nil, false
	}
	return o.IsPinned, true
}

// HasIsPinned returns a boolean if a field has been set.
func (o *DashboardCatalogItem) HasIsPinned() bool {
	if o != nil && !IsNil(o.IsPinned) {
		return true
	}

	return false
}

// SetIsPinned gets a reference to the given bool and assigns it to the IsPinned field.
func (o *DashboardCatalogItem) SetIsPinned(v bool) {
	o.IsPinned = &v
}

// GetLockerAuthorId returns the LockerAuthorId field value if set, zero value otherwise.
func (o *DashboardCatalogItem) GetLockerAuthorId() string {
	if o == nil || IsNil(o.LockerAuthorId) {
		var ret string
		return ret
	}
	return *o.LockerAuthorId
}

// GetLockerAuthorIdOk returns a tuple with the LockerAuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCatalogItem) GetLockerAuthorIdOk() (*string, bool) {
	if o == nil || IsNil(o.LockerAuthorId) {
		return nil, false
	}
	return o.LockerAuthorId, true
}

// HasLockerAuthorId returns a boolean if a field has been set.
func (o *DashboardCatalogItem) HasLockerAuthorId() bool {
	if o != nil && !IsNil(o.LockerAuthorId) {
		return true
	}

	return false
}

// SetLockerAuthorId gets a reference to the given string and assigns it to the LockerAuthorId field.
func (o *DashboardCatalogItem) SetLockerAuthorId(v string) {
	o.LockerAuthorId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DashboardCatalogItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCatalogItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DashboardCatalogItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DashboardCatalogItem) SetName(v string) {
	o.Name = &v
}

// GetSlugName returns the SlugName field value if set, zero value otherwise.
func (o *DashboardCatalogItem) GetSlugName() string {
	if o == nil || IsNil(o.SlugName) {
		var ret string
		return ret
	}
	return *o.SlugName
}

// GetSlugNameOk returns a tuple with the SlugName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCatalogItem) GetSlugNameOk() (*string, bool) {
	if o == nil || IsNil(o.SlugName) {
		return nil, false
	}
	return o.SlugName, true
}

// HasSlugName returns a boolean if a field has been set.
func (o *DashboardCatalogItem) HasSlugName() bool {
	if o != nil && !IsNil(o.SlugName) {
		return true
	}

	return false
}

// SetSlugName gets a reference to the given string and assigns it to the SlugName field.
func (o *DashboardCatalogItem) SetSlugName(v string) {
	o.SlugName = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *DashboardCatalogItem) GetUpdateTime() time.Time {
	if o == nil || IsNil(o.UpdateTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCatalogItem) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *DashboardCatalogItem) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *DashboardCatalogItem) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

func (o DashboardCatalogItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DashboardCatalogItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorId) {
		toSerialize["authorId"] = o.AuthorId
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Folder) {
		toSerialize["folder"] = o.Folder
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsDefault) {
		toSerialize["isDefault"] = o.IsDefault
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.IsPinned) {
		toSerialize["isPinned"] = o.IsPinned
	}
	if !IsNil(o.LockerAuthorId) {
		toSerialize["lockerAuthorId"] = o.LockerAuthorId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SlugName) {
		toSerialize["slugName"] = o.SlugName
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return toSerialize, nil
}

type NullableDashboardCatalogItem struct {
	value *DashboardCatalogItem
	isSet bool
}

func (v NullableDashboardCatalogItem) Get() *DashboardCatalogItem {
	return v.value
}

func (v *NullableDashboardCatalogItem) Set(val *DashboardCatalogItem) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardCatalogItem) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardCatalogItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardCatalogItem(val *DashboardCatalogItem) *NullableDashboardCatalogItem {
	return &NullableDashboardCatalogItem{value: val, isSet: true}
}

func (v NullableDashboardCatalogItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardCatalogItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


