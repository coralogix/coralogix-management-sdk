/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the TextboxDefaultValueOneOf6 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TextboxDefaultValueOneOf6{}

// TextboxDefaultValueOneOf6 struct for TextboxDefaultValueOneOf6
type TextboxDefaultValueOneOf6 struct {
	DefaultIntervalValue *TextboxDefaultIntervalValue `json:"defaultIntervalValue,omitempty"`
}

// NewTextboxDefaultValueOneOf6 instantiates a new TextboxDefaultValueOneOf6 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTextboxDefaultValueOneOf6() *TextboxDefaultValueOneOf6 {
	this := TextboxDefaultValueOneOf6{}
	return &this
}

// NewTextboxDefaultValueOneOf6WithDefaults instantiates a new TextboxDefaultValueOneOf6 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTextboxDefaultValueOneOf6WithDefaults() *TextboxDefaultValueOneOf6 {
	this := TextboxDefaultValueOneOf6{}
	return &this
}

// GetDefaultIntervalValue returns the DefaultIntervalValue field value if set, zero value otherwise.
func (o *TextboxDefaultValueOneOf6) GetDefaultIntervalValue() TextboxDefaultIntervalValue {
	if o == nil || IsNil(o.DefaultIntervalValue) {
		var ret TextboxDefaultIntervalValue
		return ret
	}
	return *o.DefaultIntervalValue
}

// GetDefaultIntervalValueOk returns a tuple with the DefaultIntervalValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TextboxDefaultValueOneOf6) GetDefaultIntervalValueOk() (*TextboxDefaultIntervalValue, bool) {
	if o == nil || IsNil(o.DefaultIntervalValue) {
		return nil, false
	}
	return o.DefaultIntervalValue, true
}

// HasDefaultIntervalValue returns a boolean if a field has been set.
func (o *TextboxDefaultValueOneOf6) HasDefaultIntervalValue() bool {
	if o != nil && !IsNil(o.DefaultIntervalValue) {
		return true
	}

	return false
}

// SetDefaultIntervalValue gets a reference to the given TextboxDefaultIntervalValue and assigns it to the DefaultIntervalValue field.
func (o *TextboxDefaultValueOneOf6) SetDefaultIntervalValue(v TextboxDefaultIntervalValue) {
	o.DefaultIntervalValue = &v
}

func (o TextboxDefaultValueOneOf6) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TextboxDefaultValueOneOf6) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultIntervalValue) {
		toSerialize["defaultIntervalValue"] = o.DefaultIntervalValue
	}
	return toSerialize, nil
}

type NullableTextboxDefaultValueOneOf6 struct {
	value *TextboxDefaultValueOneOf6
	isSet bool
}

func (v NullableTextboxDefaultValueOneOf6) Get() *TextboxDefaultValueOneOf6 {
	return v.value
}

func (v *NullableTextboxDefaultValueOneOf6) Set(val *TextboxDefaultValueOneOf6) {
	v.value = val
	v.isSet = true
}

func (v NullableTextboxDefaultValueOneOf6) IsSet() bool {
	return v.isSet
}

func (v *NullableTextboxDefaultValueOneOf6) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTextboxDefaultValueOneOf6(val *TextboxDefaultValueOneOf6) *NullableTextboxDefaultValueOneOf6 {
	return &NullableTextboxDefaultValueOneOf6{value: val, isSet: true}
}

func (v NullableTextboxDefaultValueOneOf6) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTextboxDefaultValueOneOf6) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


