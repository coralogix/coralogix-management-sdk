/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the HorizontalBarChartMetricsQuery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HorizontalBarChartMetricsQuery{}

// HorizontalBarChartMetricsQuery A metrics variant of the query
type HorizontalBarChartMetricsQuery struct {
	Aggregation *CommonAggregation `json:"aggregation,omitempty"`
	EditorMode *MetricsQueryEditorMode `json:"editorMode,omitempty"`
	Filters []MetricsFilter `json:"filters,omitempty"`
	GroupNames []string `json:"groupNames,omitempty"`
	PromqlQuery *PromQlQuery `json:"promqlQuery,omitempty"`
	PromqlQueryType *PromQLQueryType `json:"promqlQueryType,omitempty"`
	// Field name by which results in groups are divided into subgroups
	StackedGroupName *string `json:"stackedGroupName,omitempty"`
	TimeFrame *TimeFrameSelect `json:"timeFrame,omitempty"`
}

// NewHorizontalBarChartMetricsQuery instantiates a new HorizontalBarChartMetricsQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHorizontalBarChartMetricsQuery() *HorizontalBarChartMetricsQuery {
	this := HorizontalBarChartMetricsQuery{}
	return &this
}

// NewHorizontalBarChartMetricsQueryWithDefaults instantiates a new HorizontalBarChartMetricsQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHorizontalBarChartMetricsQueryWithDefaults() *HorizontalBarChartMetricsQuery {
	this := HorizontalBarChartMetricsQuery{}
	return &this
}

// GetAggregation returns the Aggregation field value if set, zero value otherwise.
func (o *HorizontalBarChartMetricsQuery) GetAggregation() CommonAggregation {
	if o == nil || IsNil(o.Aggregation) {
		var ret CommonAggregation
		return ret
	}
	return *o.Aggregation
}

// GetAggregationOk returns a tuple with the Aggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HorizontalBarChartMetricsQuery) GetAggregationOk() (*CommonAggregation, bool) {
	if o == nil || IsNil(o.Aggregation) {
		return nil, false
	}
	return o.Aggregation, true
}

// HasAggregation returns a boolean if a field has been set.
func (o *HorizontalBarChartMetricsQuery) HasAggregation() bool {
	if o != nil && !IsNil(o.Aggregation) {
		return true
	}

	return false
}

// SetAggregation gets a reference to the given CommonAggregation and assigns it to the Aggregation field.
func (o *HorizontalBarChartMetricsQuery) SetAggregation(v CommonAggregation) {
	o.Aggregation = &v
}

// GetEditorMode returns the EditorMode field value if set, zero value otherwise.
func (o *HorizontalBarChartMetricsQuery) GetEditorMode() MetricsQueryEditorMode {
	if o == nil || IsNil(o.EditorMode) {
		var ret MetricsQueryEditorMode
		return ret
	}
	return *o.EditorMode
}

// GetEditorModeOk returns a tuple with the EditorMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HorizontalBarChartMetricsQuery) GetEditorModeOk() (*MetricsQueryEditorMode, bool) {
	if o == nil || IsNil(o.EditorMode) {
		return nil, false
	}
	return o.EditorMode, true
}

// HasEditorMode returns a boolean if a field has been set.
func (o *HorizontalBarChartMetricsQuery) HasEditorMode() bool {
	if o != nil && !IsNil(o.EditorMode) {
		return true
	}

	return false
}

// SetEditorMode gets a reference to the given MetricsQueryEditorMode and assigns it to the EditorMode field.
func (o *HorizontalBarChartMetricsQuery) SetEditorMode(v MetricsQueryEditorMode) {
	o.EditorMode = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *HorizontalBarChartMetricsQuery) GetFilters() []MetricsFilter {
	if o == nil || IsNil(o.Filters) {
		var ret []MetricsFilter
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HorizontalBarChartMetricsQuery) GetFiltersOk() ([]MetricsFilter, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *HorizontalBarChartMetricsQuery) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []MetricsFilter and assigns it to the Filters field.
func (o *HorizontalBarChartMetricsQuery) SetFilters(v []MetricsFilter) {
	o.Filters = v
}

// GetGroupNames returns the GroupNames field value if set, zero value otherwise.
func (o *HorizontalBarChartMetricsQuery) GetGroupNames() []string {
	if o == nil || IsNil(o.GroupNames) {
		var ret []string
		return ret
	}
	return o.GroupNames
}

// GetGroupNamesOk returns a tuple with the GroupNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HorizontalBarChartMetricsQuery) GetGroupNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupNames) {
		return nil, false
	}
	return o.GroupNames, true
}

// HasGroupNames returns a boolean if a field has been set.
func (o *HorizontalBarChartMetricsQuery) HasGroupNames() bool {
	if o != nil && !IsNil(o.GroupNames) {
		return true
	}

	return false
}

// SetGroupNames gets a reference to the given []string and assigns it to the GroupNames field.
func (o *HorizontalBarChartMetricsQuery) SetGroupNames(v []string) {
	o.GroupNames = v
}

// GetPromqlQuery returns the PromqlQuery field value if set, zero value otherwise.
func (o *HorizontalBarChartMetricsQuery) GetPromqlQuery() PromQlQuery {
	if o == nil || IsNil(o.PromqlQuery) {
		var ret PromQlQuery
		return ret
	}
	return *o.PromqlQuery
}

// GetPromqlQueryOk returns a tuple with the PromqlQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HorizontalBarChartMetricsQuery) GetPromqlQueryOk() (*PromQlQuery, bool) {
	if o == nil || IsNil(o.PromqlQuery) {
		return nil, false
	}
	return o.PromqlQuery, true
}

// HasPromqlQuery returns a boolean if a field has been set.
func (o *HorizontalBarChartMetricsQuery) HasPromqlQuery() bool {
	if o != nil && !IsNil(o.PromqlQuery) {
		return true
	}

	return false
}

// SetPromqlQuery gets a reference to the given PromQlQuery and assigns it to the PromqlQuery field.
func (o *HorizontalBarChartMetricsQuery) SetPromqlQuery(v PromQlQuery) {
	o.PromqlQuery = &v
}

// GetPromqlQueryType returns the PromqlQueryType field value if set, zero value otherwise.
func (o *HorizontalBarChartMetricsQuery) GetPromqlQueryType() PromQLQueryType {
	if o == nil || IsNil(o.PromqlQueryType) {
		var ret PromQLQueryType
		return ret
	}
	return *o.PromqlQueryType
}

// GetPromqlQueryTypeOk returns a tuple with the PromqlQueryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HorizontalBarChartMetricsQuery) GetPromqlQueryTypeOk() (*PromQLQueryType, bool) {
	if o == nil || IsNil(o.PromqlQueryType) {
		return nil, false
	}
	return o.PromqlQueryType, true
}

// HasPromqlQueryType returns a boolean if a field has been set.
func (o *HorizontalBarChartMetricsQuery) HasPromqlQueryType() bool {
	if o != nil && !IsNil(o.PromqlQueryType) {
		return true
	}

	return false
}

// SetPromqlQueryType gets a reference to the given PromQLQueryType and assigns it to the PromqlQueryType field.
func (o *HorizontalBarChartMetricsQuery) SetPromqlQueryType(v PromQLQueryType) {
	o.PromqlQueryType = &v
}

// GetStackedGroupName returns the StackedGroupName field value if set, zero value otherwise.
func (o *HorizontalBarChartMetricsQuery) GetStackedGroupName() string {
	if o == nil || IsNil(o.StackedGroupName) {
		var ret string
		return ret
	}
	return *o.StackedGroupName
}

// GetStackedGroupNameOk returns a tuple with the StackedGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HorizontalBarChartMetricsQuery) GetStackedGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.StackedGroupName) {
		return nil, false
	}
	return o.StackedGroupName, true
}

// HasStackedGroupName returns a boolean if a field has been set.
func (o *HorizontalBarChartMetricsQuery) HasStackedGroupName() bool {
	if o != nil && !IsNil(o.StackedGroupName) {
		return true
	}

	return false
}

// SetStackedGroupName gets a reference to the given string and assigns it to the StackedGroupName field.
func (o *HorizontalBarChartMetricsQuery) SetStackedGroupName(v string) {
	o.StackedGroupName = &v
}

// GetTimeFrame returns the TimeFrame field value if set, zero value otherwise.
func (o *HorizontalBarChartMetricsQuery) GetTimeFrame() TimeFrameSelect {
	if o == nil || IsNil(o.TimeFrame) {
		var ret TimeFrameSelect
		return ret
	}
	return *o.TimeFrame
}

// GetTimeFrameOk returns a tuple with the TimeFrame field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HorizontalBarChartMetricsQuery) GetTimeFrameOk() (*TimeFrameSelect, bool) {
	if o == nil || IsNil(o.TimeFrame) {
		return nil, false
	}
	return o.TimeFrame, true
}

// HasTimeFrame returns a boolean if a field has been set.
func (o *HorizontalBarChartMetricsQuery) HasTimeFrame() bool {
	if o != nil && !IsNil(o.TimeFrame) {
		return true
	}

	return false
}

// SetTimeFrame gets a reference to the given TimeFrameSelect and assigns it to the TimeFrame field.
func (o *HorizontalBarChartMetricsQuery) SetTimeFrame(v TimeFrameSelect) {
	o.TimeFrame = &v
}

func (o HorizontalBarChartMetricsQuery) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HorizontalBarChartMetricsQuery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aggregation) {
		toSerialize["aggregation"] = o.Aggregation
	}
	if !IsNil(o.EditorMode) {
		toSerialize["editorMode"] = o.EditorMode
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.GroupNames) {
		toSerialize["groupNames"] = o.GroupNames
	}
	if !IsNil(o.PromqlQuery) {
		toSerialize["promqlQuery"] = o.PromqlQuery
	}
	if !IsNil(o.PromqlQueryType) {
		toSerialize["promqlQueryType"] = o.PromqlQueryType
	}
	if !IsNil(o.StackedGroupName) {
		toSerialize["stackedGroupName"] = o.StackedGroupName
	}
	if !IsNil(o.TimeFrame) {
		toSerialize["timeFrame"] = o.TimeFrame
	}
	return toSerialize, nil
}

type NullableHorizontalBarChartMetricsQuery struct {
	value *HorizontalBarChartMetricsQuery
	isSet bool
}

func (v NullableHorizontalBarChartMetricsQuery) Get() *HorizontalBarChartMetricsQuery {
	return v.value
}

func (v *NullableHorizontalBarChartMetricsQuery) Set(val *HorizontalBarChartMetricsQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableHorizontalBarChartMetricsQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableHorizontalBarChartMetricsQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHorizontalBarChartMetricsQuery(val *HorizontalBarChartMetricsQuery) *NullableHorizontalBarChartMetricsQuery {
	return &NullableHorizontalBarChartMetricsQuery{value: val, isSet: true}
}

func (v NullableHorizontalBarChartMetricsQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHorizontalBarChartMetricsQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


