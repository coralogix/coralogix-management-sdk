/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VariableValueV2OneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariableValueV2OneOf1{}

// VariableValueV2OneOf1 struct for VariableValueV2OneOf1
type VariableValueV2OneOf1 struct {
	SingleString *SingleStringValue `json:"singleString,omitempty"`
}

// NewVariableValueV2OneOf1 instantiates a new VariableValueV2OneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableValueV2OneOf1() *VariableValueV2OneOf1 {
	this := VariableValueV2OneOf1{}
	return &this
}

// NewVariableValueV2OneOf1WithDefaults instantiates a new VariableValueV2OneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableValueV2OneOf1WithDefaults() *VariableValueV2OneOf1 {
	this := VariableValueV2OneOf1{}
	return &this
}

// GetSingleString returns the SingleString field value if set, zero value otherwise.
func (o *VariableValueV2OneOf1) GetSingleString() SingleStringValue {
	if o == nil || IsNil(o.SingleString) {
		var ret SingleStringValue
		return ret
	}
	return *o.SingleString
}

// GetSingleStringOk returns a tuple with the SingleString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableValueV2OneOf1) GetSingleStringOk() (*SingleStringValue, bool) {
	if o == nil || IsNil(o.SingleString) {
		return nil, false
	}
	return o.SingleString, true
}

// HasSingleString returns a boolean if a field has been set.
func (o *VariableValueV2OneOf1) HasSingleString() bool {
	if o != nil && !IsNil(o.SingleString) {
		return true
	}

	return false
}

// SetSingleString gets a reference to the given SingleStringValue and assigns it to the SingleString field.
func (o *VariableValueV2OneOf1) SetSingleString(v SingleStringValue) {
	o.SingleString = &v
}

func (o VariableValueV2OneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariableValueV2OneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SingleString) {
		toSerialize["singleString"] = o.SingleString
	}
	return toSerialize, nil
}

type NullableVariableValueV2OneOf1 struct {
	value *VariableValueV2OneOf1
	isSet bool
}

func (v NullableVariableValueV2OneOf1) Get() *VariableValueV2OneOf1 {
	return v.value
}

func (v *NullableVariableValueV2OneOf1) Set(val *VariableValueV2OneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableValueV2OneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableValueV2OneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableValueV2OneOf1(val *VariableValueV2OneOf1) *NullableVariableValueV2OneOf1 {
	return &NullableVariableValueV2OneOf1{value: val, isSet: true}
}

func (v NullableVariableValueV2OneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableValueV2OneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


