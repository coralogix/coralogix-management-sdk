/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the QueryMetricsQuerySelectionListSelection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryMetricsQuerySelectionListSelection{}

// QueryMetricsQuerySelectionListSelection struct for QueryMetricsQuerySelectionListSelection
type QueryMetricsQuerySelectionListSelection struct {
	Values []QueryMetricsQueryStringOrVariable `json:"values,omitempty"`
}

// NewQueryMetricsQuerySelectionListSelection instantiates a new QueryMetricsQuerySelectionListSelection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryMetricsQuerySelectionListSelection() *QueryMetricsQuerySelectionListSelection {
	this := QueryMetricsQuerySelectionListSelection{}
	return &this
}

// NewQueryMetricsQuerySelectionListSelectionWithDefaults instantiates a new QueryMetricsQuerySelectionListSelection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryMetricsQuerySelectionListSelectionWithDefaults() *QueryMetricsQuerySelectionListSelection {
	this := QueryMetricsQuerySelectionListSelection{}
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *QueryMetricsQuerySelectionListSelection) GetValues() []QueryMetricsQueryStringOrVariable {
	if o == nil || IsNil(o.Values) {
		var ret []QueryMetricsQueryStringOrVariable
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMetricsQuerySelectionListSelection) GetValuesOk() ([]QueryMetricsQueryStringOrVariable, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *QueryMetricsQuerySelectionListSelection) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []QueryMetricsQueryStringOrVariable and assigns it to the Values field.
func (o *QueryMetricsQuerySelectionListSelection) SetValues(v []QueryMetricsQueryStringOrVariable) {
	o.Values = v
}

func (o QueryMetricsQuerySelectionListSelection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryMetricsQuerySelectionListSelection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableQueryMetricsQuerySelectionListSelection struct {
	value *QueryMetricsQuerySelectionListSelection
	isSet bool
}

func (v NullableQueryMetricsQuerySelectionListSelection) Get() *QueryMetricsQuerySelectionListSelection {
	return v.value
}

func (v *NullableQueryMetricsQuerySelectionListSelection) Set(val *QueryMetricsQuerySelectionListSelection) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryMetricsQuerySelectionListSelection) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryMetricsQuerySelectionListSelection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryMetricsQuerySelectionListSelection(val *QueryMetricsQuerySelectionListSelection) *NullableQueryMetricsQuerySelectionListSelection {
	return &NullableQueryMetricsQuerySelectionListSelection{value: val, isSet: true}
}

func (v NullableQueryMetricsQuerySelectionListSelection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryMetricsQuerySelectionListSelection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


