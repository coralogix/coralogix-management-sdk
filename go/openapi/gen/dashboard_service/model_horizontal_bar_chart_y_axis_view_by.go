/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// HorizontalBarChartYAxisViewBy - struct for HorizontalBarChartYAxisViewBy
type HorizontalBarChartYAxisViewBy struct {
	HorizontalBarChartYAxisViewByCategory *HorizontalBarChartYAxisViewByCategory
	HorizontalBarChartYAxisViewByValue *HorizontalBarChartYAxisViewByValue
}

// HorizontalBarChartYAxisViewByCategoryAsHorizontalBarChartYAxisViewBy is a convenience function that returns HorizontalBarChartYAxisViewByCategory wrapped in HorizontalBarChartYAxisViewBy
func HorizontalBarChartYAxisViewByCategoryAsHorizontalBarChartYAxisViewBy(v *HorizontalBarChartYAxisViewByCategory) HorizontalBarChartYAxisViewBy {
	return HorizontalBarChartYAxisViewBy{
		HorizontalBarChartYAxisViewByCategory: v,
	}
}

// HorizontalBarChartYAxisViewByValueAsHorizontalBarChartYAxisViewBy is a convenience function that returns HorizontalBarChartYAxisViewByValue wrapped in HorizontalBarChartYAxisViewBy
func HorizontalBarChartYAxisViewByValueAsHorizontalBarChartYAxisViewBy(v *HorizontalBarChartYAxisViewByValue) HorizontalBarChartYAxisViewBy {
	return HorizontalBarChartYAxisViewBy{
		HorizontalBarChartYAxisViewByValue: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *HorizontalBarChartYAxisViewBy) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into HorizontalBarChartYAxisViewByCategory
	err = newStrictDecoder(data).Decode(&dst.HorizontalBarChartYAxisViewByCategory)
	if err == nil {
		jsonHorizontalBarChartYAxisViewByCategory, _ := json.Marshal(dst.HorizontalBarChartYAxisViewByCategory)
		if string(jsonHorizontalBarChartYAxisViewByCategory) == "{}" { // empty struct
			dst.HorizontalBarChartYAxisViewByCategory = nil
		} else {
			if err = validator.Validate(dst.HorizontalBarChartYAxisViewByCategory); err != nil {
				dst.HorizontalBarChartYAxisViewByCategory = nil
			} else {
				match++
			}
		}
	} else {
		dst.HorizontalBarChartYAxisViewByCategory = nil
	}

	// try to unmarshal data into HorizontalBarChartYAxisViewByValue
	err = newStrictDecoder(data).Decode(&dst.HorizontalBarChartYAxisViewByValue)
	if err == nil {
		jsonHorizontalBarChartYAxisViewByValue, _ := json.Marshal(dst.HorizontalBarChartYAxisViewByValue)
		if string(jsonHorizontalBarChartYAxisViewByValue) == "{}" { // empty struct
			dst.HorizontalBarChartYAxisViewByValue = nil
		} else {
			if err = validator.Validate(dst.HorizontalBarChartYAxisViewByValue); err != nil {
				dst.HorizontalBarChartYAxisViewByValue = nil
			} else {
				match++
			}
		}
	} else {
		dst.HorizontalBarChartYAxisViewByValue = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.HorizontalBarChartYAxisViewByCategory = nil
		dst.HorizontalBarChartYAxisViewByValue = nil

		return fmt.Errorf("data matches more than one schema in oneOf(HorizontalBarChartYAxisViewBy)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(HorizontalBarChartYAxisViewBy)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src HorizontalBarChartYAxisViewBy) MarshalJSON() ([]byte, error) {
	if src.HorizontalBarChartYAxisViewByCategory != nil {
		return json.Marshal(&src.HorizontalBarChartYAxisViewByCategory)
	}

	if src.HorizontalBarChartYAxisViewByValue != nil {
		return json.Marshal(&src.HorizontalBarChartYAxisViewByValue)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *HorizontalBarChartYAxisViewBy) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.HorizontalBarChartYAxisViewByCategory != nil {
		return obj.HorizontalBarChartYAxisViewByCategory
	}

	if obj.HorizontalBarChartYAxisViewByValue != nil {
		return obj.HorizontalBarChartYAxisViewByValue
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj HorizontalBarChartYAxisViewBy) GetActualInstanceValue() (interface{}) {
	if obj.HorizontalBarChartYAxisViewByCategory != nil {
		return *obj.HorizontalBarChartYAxisViewByCategory
	}

	if obj.HorizontalBarChartYAxisViewByValue != nil {
		return *obj.HorizontalBarChartYAxisViewByValue
	}

	// all schemas are nil
	return nil
}

type NullableHorizontalBarChartYAxisViewBy struct {
	value *HorizontalBarChartYAxisViewBy
	isSet bool
}

func (v NullableHorizontalBarChartYAxisViewBy) Get() *HorizontalBarChartYAxisViewBy {
	return v.value
}

func (v *NullableHorizontalBarChartYAxisViewBy) Set(val *HorizontalBarChartYAxisViewBy) {
	v.value = val
	v.isSet = true
}

func (v NullableHorizontalBarChartYAxisViewBy) IsSet() bool {
	return v.isSet
}

func (v *NullableHorizontalBarChartYAxisViewBy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHorizontalBarChartYAxisViewBy(val *HorizontalBarChartYAxisViewBy) *NullableHorizontalBarChartYAxisViewBy {
	return &NullableHorizontalBarChartYAxisViewBy{value: val, isSet: true}
}

func (v NullableHorizontalBarChartYAxisViewBy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHorizontalBarChartYAxisViewBy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


