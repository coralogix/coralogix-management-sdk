/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the BarChartStackDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BarChartStackDefinition{}

// BarChartStackDefinition struct for BarChartStackDefinition
type BarChartStackDefinition struct {
	// How many slices can fit in a single bar
	MaxSlicesPerBar *int32 `json:"maxSlicesPerBar,omitempty"`
	// Custom template name of an individual stack
	StackNameTemplate *string `json:"stackNameTemplate,omitempty"`
}

// NewBarChartStackDefinition instantiates a new BarChartStackDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBarChartStackDefinition() *BarChartStackDefinition {
	this := BarChartStackDefinition{}
	return &this
}

// NewBarChartStackDefinitionWithDefaults instantiates a new BarChartStackDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBarChartStackDefinitionWithDefaults() *BarChartStackDefinition {
	this := BarChartStackDefinition{}
	return &this
}

// GetMaxSlicesPerBar returns the MaxSlicesPerBar field value if set, zero value otherwise.
func (o *BarChartStackDefinition) GetMaxSlicesPerBar() int32 {
	if o == nil || IsNil(o.MaxSlicesPerBar) {
		var ret int32
		return ret
	}
	return *o.MaxSlicesPerBar
}

// GetMaxSlicesPerBarOk returns a tuple with the MaxSlicesPerBar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BarChartStackDefinition) GetMaxSlicesPerBarOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSlicesPerBar) {
		return nil, false
	}
	return o.MaxSlicesPerBar, true
}

// HasMaxSlicesPerBar returns a boolean if a field has been set.
func (o *BarChartStackDefinition) HasMaxSlicesPerBar() bool {
	if o != nil && !IsNil(o.MaxSlicesPerBar) {
		return true
	}

	return false
}

// SetMaxSlicesPerBar gets a reference to the given int32 and assigns it to the MaxSlicesPerBar field.
func (o *BarChartStackDefinition) SetMaxSlicesPerBar(v int32) {
	o.MaxSlicesPerBar = &v
}

// GetStackNameTemplate returns the StackNameTemplate field value if set, zero value otherwise.
func (o *BarChartStackDefinition) GetStackNameTemplate() string {
	if o == nil || IsNil(o.StackNameTemplate) {
		var ret string
		return ret
	}
	return *o.StackNameTemplate
}

// GetStackNameTemplateOk returns a tuple with the StackNameTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BarChartStackDefinition) GetStackNameTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.StackNameTemplate) {
		return nil, false
	}
	return o.StackNameTemplate, true
}

// HasStackNameTemplate returns a boolean if a field has been set.
func (o *BarChartStackDefinition) HasStackNameTemplate() bool {
	if o != nil && !IsNil(o.StackNameTemplate) {
		return true
	}

	return false
}

// SetStackNameTemplate gets a reference to the given string and assigns it to the StackNameTemplate field.
func (o *BarChartStackDefinition) SetStackNameTemplate(v string) {
	o.StackNameTemplate = &v
}

func (o BarChartStackDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BarChartStackDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxSlicesPerBar) {
		toSerialize["maxSlicesPerBar"] = o.MaxSlicesPerBar
	}
	if !IsNil(o.StackNameTemplate) {
		toSerialize["stackNameTemplate"] = o.StackNameTemplate
	}
	return toSerialize, nil
}

type NullableBarChartStackDefinition struct {
	value *BarChartStackDefinition
	isSet bool
}

func (v NullableBarChartStackDefinition) Get() *BarChartStackDefinition {
	return v.value
}

func (v *NullableBarChartStackDefinition) Set(val *BarChartStackDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableBarChartStackDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableBarChartStackDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBarChartStackDefinition(val *BarChartStackDefinition) *NullableBarChartStackDefinition {
	return &NullableBarChartStackDefinition{value: val, isSet: true}
}

func (v NullableBarChartStackDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBarChartStackDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


