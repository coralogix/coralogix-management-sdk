/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the MetricAggregation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricAggregation{}

// MetricAggregation struct for MetricAggregation
type MetricAggregation struct {
	AggregationType *MetricAggregationType `json:"aggregationType,omitempty"`
	MetricField *MetricAggregationMetricField `json:"metricField,omitempty"`
}

// NewMetricAggregation instantiates a new MetricAggregation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricAggregation() *MetricAggregation {
	this := MetricAggregation{}
	return &this
}

// NewMetricAggregationWithDefaults instantiates a new MetricAggregation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricAggregationWithDefaults() *MetricAggregation {
	this := MetricAggregation{}
	return &this
}

// GetAggregationType returns the AggregationType field value if set, zero value otherwise.
func (o *MetricAggregation) GetAggregationType() MetricAggregationType {
	if o == nil || IsNil(o.AggregationType) {
		var ret MetricAggregationType
		return ret
	}
	return *o.AggregationType
}

// GetAggregationTypeOk returns a tuple with the AggregationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricAggregation) GetAggregationTypeOk() (*MetricAggregationType, bool) {
	if o == nil || IsNil(o.AggregationType) {
		return nil, false
	}
	return o.AggregationType, true
}

// HasAggregationType returns a boolean if a field has been set.
func (o *MetricAggregation) HasAggregationType() bool {
	if o != nil && !IsNil(o.AggregationType) {
		return true
	}

	return false
}

// SetAggregationType gets a reference to the given MetricAggregationType and assigns it to the AggregationType field.
func (o *MetricAggregation) SetAggregationType(v MetricAggregationType) {
	o.AggregationType = &v
}

// GetMetricField returns the MetricField field value if set, zero value otherwise.
func (o *MetricAggregation) GetMetricField() MetricAggregationMetricField {
	if o == nil || IsNil(o.MetricField) {
		var ret MetricAggregationMetricField
		return ret
	}
	return *o.MetricField
}

// GetMetricFieldOk returns a tuple with the MetricField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricAggregation) GetMetricFieldOk() (*MetricAggregationMetricField, bool) {
	if o == nil || IsNil(o.MetricField) {
		return nil, false
	}
	return o.MetricField, true
}

// HasMetricField returns a boolean if a field has been set.
func (o *MetricAggregation) HasMetricField() bool {
	if o != nil && !IsNil(o.MetricField) {
		return true
	}

	return false
}

// SetMetricField gets a reference to the given MetricAggregationMetricField and assigns it to the MetricField field.
func (o *MetricAggregation) SetMetricField(v MetricAggregationMetricField) {
	o.MetricField = &v
}

func (o MetricAggregation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricAggregation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AggregationType) {
		toSerialize["aggregationType"] = o.AggregationType
	}
	if !IsNil(o.MetricField) {
		toSerialize["metricField"] = o.MetricField
	}
	return toSerialize, nil
}

type NullableMetricAggregation struct {
	value *MetricAggregation
	isSet bool
}

func (v NullableMetricAggregation) Get() *MetricAggregation {
	return v.value
}

func (v *NullableMetricAggregation) Set(val *MetricAggregation) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricAggregation) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricAggregation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricAggregation(val *MetricAggregation) *NullableMetricAggregation {
	return &NullableMetricAggregation{value: val, isSet: true}
}

func (v NullableMetricAggregation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricAggregation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


