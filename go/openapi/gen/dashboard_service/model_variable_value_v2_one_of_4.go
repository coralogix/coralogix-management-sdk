/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VariableValueV2OneOf4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariableValueV2OneOf4{}

// VariableValueV2OneOf4 struct for VariableValueV2OneOf4
type VariableValueV2OneOf4 struct {
	Lucene *LuceneQueryValue `json:"lucene,omitempty"`
}

// NewVariableValueV2OneOf4 instantiates a new VariableValueV2OneOf4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableValueV2OneOf4() *VariableValueV2OneOf4 {
	this := VariableValueV2OneOf4{}
	return &this
}

// NewVariableValueV2OneOf4WithDefaults instantiates a new VariableValueV2OneOf4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableValueV2OneOf4WithDefaults() *VariableValueV2OneOf4 {
	this := VariableValueV2OneOf4{}
	return &this
}

// GetLucene returns the Lucene field value if set, zero value otherwise.
func (o *VariableValueV2OneOf4) GetLucene() LuceneQueryValue {
	if o == nil || IsNil(o.Lucene) {
		var ret LuceneQueryValue
		return ret
	}
	return *o.Lucene
}

// GetLuceneOk returns a tuple with the Lucene field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableValueV2OneOf4) GetLuceneOk() (*LuceneQueryValue, bool) {
	if o == nil || IsNil(o.Lucene) {
		return nil, false
	}
	return o.Lucene, true
}

// HasLucene returns a boolean if a field has been set.
func (o *VariableValueV2OneOf4) HasLucene() bool {
	if o != nil && !IsNil(o.Lucene) {
		return true
	}

	return false
}

// SetLucene gets a reference to the given LuceneQueryValue and assigns it to the Lucene field.
func (o *VariableValueV2OneOf4) SetLucene(v LuceneQueryValue) {
	o.Lucene = &v
}

func (o VariableValueV2OneOf4) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariableValueV2OneOf4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Lucene) {
		toSerialize["lucene"] = o.Lucene
	}
	return toSerialize, nil
}

type NullableVariableValueV2OneOf4 struct {
	value *VariableValueV2OneOf4
	isSet bool
}

func (v NullableVariableValueV2OneOf4) Get() *VariableValueV2OneOf4 {
	return v.value
}

func (v *NullableVariableValueV2OneOf4) Set(val *VariableValueV2OneOf4) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableValueV2OneOf4) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableValueV2OneOf4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableValueV2OneOf4(val *VariableValueV2OneOf4) *NullableVariableValueV2OneOf4 {
	return &NullableVariableValueV2OneOf4{value: val, isSet: true}
}

func (v NullableVariableValueV2OneOf4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableValueV2OneOf4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


