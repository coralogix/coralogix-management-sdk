/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the OrderingField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderingField{}

// OrderingField struct for OrderingField
type OrderingField struct {
	// Field name to order by
	Field *string `json:"field,omitempty"`
	OrderDirection *OrderDirection `json:"orderDirection,omitempty"`
}

// NewOrderingField instantiates a new OrderingField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderingField() *OrderingField {
	this := OrderingField{}
	return &this
}

// NewOrderingFieldWithDefaults instantiates a new OrderingField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderingFieldWithDefaults() *OrderingField {
	this := OrderingField{}
	return &this
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *OrderingField) GetField() string {
	if o == nil || IsNil(o.Field) {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderingField) GetFieldOk() (*string, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *OrderingField) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *OrderingField) SetField(v string) {
	o.Field = &v
}

// GetOrderDirection returns the OrderDirection field value if set, zero value otherwise.
func (o *OrderingField) GetOrderDirection() OrderDirection {
	if o == nil || IsNil(o.OrderDirection) {
		var ret OrderDirection
		return ret
	}
	return *o.OrderDirection
}

// GetOrderDirectionOk returns a tuple with the OrderDirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderingField) GetOrderDirectionOk() (*OrderDirection, bool) {
	if o == nil || IsNil(o.OrderDirection) {
		return nil, false
	}
	return o.OrderDirection, true
}

// HasOrderDirection returns a boolean if a field has been set.
func (o *OrderingField) HasOrderDirection() bool {
	if o != nil && !IsNil(o.OrderDirection) {
		return true
	}

	return false
}

// SetOrderDirection gets a reference to the given OrderDirection and assigns it to the OrderDirection field.
func (o *OrderingField) SetOrderDirection(v OrderDirection) {
	o.OrderDirection = &v
}

func (o OrderingField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderingField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if !IsNil(o.OrderDirection) {
		toSerialize["orderDirection"] = o.OrderDirection
	}
	return toSerialize, nil
}

type NullableOrderingField struct {
	value *OrderingField
	isSet bool
}

func (v NullableOrderingField) Get() *OrderingField {
	return v.value
}

func (v *NullableOrderingField) Set(val *OrderingField) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderingField) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderingField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderingField(val *OrderingField) *NullableOrderingField {
	return &NullableOrderingField{value: val, isSet: true}
}

func (v NullableOrderingField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderingField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


