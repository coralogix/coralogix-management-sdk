/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the CustomSectionOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomSectionOptions{}

// CustomSectionOptions struct for CustomSectionOptions
type CustomSectionOptions struct {
	// Indicator if the section is collapsed
	Collapsed *bool `json:"collapsed,omitempty"`
	Color *SectionColor `json:"color,omitempty"`
	// Short description of a section
	Description *string `json:"description,omitempty"`
	// Section custom name
	Name *string `json:"name,omitempty"`
	RepetitiveVar *RepetitiveVar `json:"repetitiveVar,omitempty"`
}

// NewCustomSectionOptions instantiates a new CustomSectionOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomSectionOptions() *CustomSectionOptions {
	this := CustomSectionOptions{}
	return &this
}

// NewCustomSectionOptionsWithDefaults instantiates a new CustomSectionOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomSectionOptionsWithDefaults() *CustomSectionOptions {
	this := CustomSectionOptions{}
	return &this
}

// GetCollapsed returns the Collapsed field value if set, zero value otherwise.
func (o *CustomSectionOptions) GetCollapsed() bool {
	if o == nil || IsNil(o.Collapsed) {
		var ret bool
		return ret
	}
	return *o.Collapsed
}

// GetCollapsedOk returns a tuple with the Collapsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomSectionOptions) GetCollapsedOk() (*bool, bool) {
	if o == nil || IsNil(o.Collapsed) {
		return nil, false
	}
	return o.Collapsed, true
}

// HasCollapsed returns a boolean if a field has been set.
func (o *CustomSectionOptions) HasCollapsed() bool {
	if o != nil && !IsNil(o.Collapsed) {
		return true
	}

	return false
}

// SetCollapsed gets a reference to the given bool and assigns it to the Collapsed field.
func (o *CustomSectionOptions) SetCollapsed(v bool) {
	o.Collapsed = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *CustomSectionOptions) GetColor() SectionColor {
	if o == nil || IsNil(o.Color) {
		var ret SectionColor
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomSectionOptions) GetColorOk() (*SectionColor, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *CustomSectionOptions) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given SectionColor and assigns it to the Color field.
func (o *CustomSectionOptions) SetColor(v SectionColor) {
	o.Color = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CustomSectionOptions) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomSectionOptions) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CustomSectionOptions) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CustomSectionOptions) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CustomSectionOptions) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomSectionOptions) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CustomSectionOptions) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CustomSectionOptions) SetName(v string) {
	o.Name = &v
}

// GetRepetitiveVar returns the RepetitiveVar field value if set, zero value otherwise.
func (o *CustomSectionOptions) GetRepetitiveVar() RepetitiveVar {
	if o == nil || IsNil(o.RepetitiveVar) {
		var ret RepetitiveVar
		return ret
	}
	return *o.RepetitiveVar
}

// GetRepetitiveVarOk returns a tuple with the RepetitiveVar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomSectionOptions) GetRepetitiveVarOk() (*RepetitiveVar, bool) {
	if o == nil || IsNil(o.RepetitiveVar) {
		return nil, false
	}
	return o.RepetitiveVar, true
}

// HasRepetitiveVar returns a boolean if a field has been set.
func (o *CustomSectionOptions) HasRepetitiveVar() bool {
	if o != nil && !IsNil(o.RepetitiveVar) {
		return true
	}

	return false
}

// SetRepetitiveVar gets a reference to the given RepetitiveVar and assigns it to the RepetitiveVar field.
func (o *CustomSectionOptions) SetRepetitiveVar(v RepetitiveVar) {
	o.RepetitiveVar = &v
}

func (o CustomSectionOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomSectionOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Collapsed) {
		toSerialize["collapsed"] = o.Collapsed
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RepetitiveVar) {
		toSerialize["repetitiveVar"] = o.RepetitiveVar
	}
	return toSerialize, nil
}

type NullableCustomSectionOptions struct {
	value *CustomSectionOptions
	isSet bool
}

func (v NullableCustomSectionOptions) Get() *CustomSectionOptions {
	return v.value
}

func (v *NullableCustomSectionOptions) Set(val *CustomSectionOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomSectionOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomSectionOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomSectionOptions(val *CustomSectionOptions) *NullableCustomSectionOptions {
	return &NullableCustomSectionOptions{value: val, isSet: true}
}

func (v NullableCustomSectionOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomSectionOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


