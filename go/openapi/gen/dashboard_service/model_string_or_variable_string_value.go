/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the StringOrVariableStringValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StringOrVariableStringValue{}

// StringOrVariableStringValue struct for StringOrVariableStringValue
type StringOrVariableStringValue struct {
	StringValue *string `json:"stringValue,omitempty"`
}

// NewStringOrVariableStringValue instantiates a new StringOrVariableStringValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStringOrVariableStringValue() *StringOrVariableStringValue {
	this := StringOrVariableStringValue{}
	return &this
}

// NewStringOrVariableStringValueWithDefaults instantiates a new StringOrVariableStringValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStringOrVariableStringValueWithDefaults() *StringOrVariableStringValue {
	this := StringOrVariableStringValue{}
	return &this
}

// GetStringValue returns the StringValue field value if set, zero value otherwise.
func (o *StringOrVariableStringValue) GetStringValue() string {
	if o == nil || IsNil(o.StringValue) {
		var ret string
		return ret
	}
	return *o.StringValue
}

// GetStringValueOk returns a tuple with the StringValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StringOrVariableStringValue) GetStringValueOk() (*string, bool) {
	if o == nil || IsNil(o.StringValue) {
		return nil, false
	}
	return o.StringValue, true
}

// HasStringValue returns a boolean if a field has been set.
func (o *StringOrVariableStringValue) HasStringValue() bool {
	if o != nil && !IsNil(o.StringValue) {
		return true
	}

	return false
}

// SetStringValue gets a reference to the given string and assigns it to the StringValue field.
func (o *StringOrVariableStringValue) SetStringValue(v string) {
	o.StringValue = &v
}

func (o StringOrVariableStringValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StringOrVariableStringValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StringValue) {
		toSerialize["stringValue"] = o.StringValue
	}
	return toSerialize, nil
}

type NullableStringOrVariableStringValue struct {
	value *StringOrVariableStringValue
	isSet bool
}

func (v NullableStringOrVariableStringValue) Get() *StringOrVariableStringValue {
	return v.value
}

func (v *NullableStringOrVariableStringValue) Set(val *StringOrVariableStringValue) {
	v.value = val
	v.isSet = true
}

func (v NullableStringOrVariableStringValue) IsSet() bool {
	return v.isSet
}

func (v *NullableStringOrVariableStringValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStringOrVariableStringValue(val *StringOrVariableStringValue) *NullableStringOrVariableStringValue {
	return &NullableStringOrVariableStringValue{value: val, isSet: true}
}

func (v NullableStringOrVariableStringValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStringOrVariableStringValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


