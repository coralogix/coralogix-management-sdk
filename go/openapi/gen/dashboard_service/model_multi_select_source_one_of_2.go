/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the MultiSelectSourceOneOf2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiSelectSourceOneOf2{}

// MultiSelectSourceOneOf2 struct for MultiSelectSourceOneOf2
type MultiSelectSourceOneOf2 struct {
	ConstantList *ConstantListSource `json:"constantList,omitempty"`
}

// NewMultiSelectSourceOneOf2 instantiates a new MultiSelectSourceOneOf2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiSelectSourceOneOf2() *MultiSelectSourceOneOf2 {
	this := MultiSelectSourceOneOf2{}
	return &this
}

// NewMultiSelectSourceOneOf2WithDefaults instantiates a new MultiSelectSourceOneOf2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiSelectSourceOneOf2WithDefaults() *MultiSelectSourceOneOf2 {
	this := MultiSelectSourceOneOf2{}
	return &this
}

// GetConstantList returns the ConstantList field value if set, zero value otherwise.
func (o *MultiSelectSourceOneOf2) GetConstantList() ConstantListSource {
	if o == nil || IsNil(o.ConstantList) {
		var ret ConstantListSource
		return ret
	}
	return *o.ConstantList
}

// GetConstantListOk returns a tuple with the ConstantList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiSelectSourceOneOf2) GetConstantListOk() (*ConstantListSource, bool) {
	if o == nil || IsNil(o.ConstantList) {
		return nil, false
	}
	return o.ConstantList, true
}

// HasConstantList returns a boolean if a field has been set.
func (o *MultiSelectSourceOneOf2) HasConstantList() bool {
	if o != nil && !IsNil(o.ConstantList) {
		return true
	}

	return false
}

// SetConstantList gets a reference to the given ConstantListSource and assigns it to the ConstantList field.
func (o *MultiSelectSourceOneOf2) SetConstantList(v ConstantListSource) {
	o.ConstantList = &v
}

func (o MultiSelectSourceOneOf2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiSelectSourceOneOf2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConstantList) {
		toSerialize["constantList"] = o.ConstantList
	}
	return toSerialize, nil
}

type NullableMultiSelectSourceOneOf2 struct {
	value *MultiSelectSourceOneOf2
	isSet bool
}

func (v NullableMultiSelectSourceOneOf2) Get() *MultiSelectSourceOneOf2 {
	return v.value
}

func (v *NullableMultiSelectSourceOneOf2) Set(val *MultiSelectSourceOneOf2) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiSelectSourceOneOf2) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiSelectSourceOneOf2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiSelectSourceOneOf2(val *MultiSelectSourceOneOf2) *NullableMultiSelectSourceOneOf2 {
	return &NullableMultiSelectSourceOneOf2{value: val, isSet: true}
}

func (v NullableMultiSelectSourceOneOf2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiSelectSourceOneOf2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


