/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the ManualSourceStrategyInstant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManualSourceStrategyInstant{}

// ManualSourceStrategyInstant struct for ManualSourceStrategyInstant
type ManualSourceStrategyInstant struct {
	CustomUnit *string `json:"customUnit,omitempty"`
	Unit *CommonUnit `json:"unit,omitempty"`
	Value *float64 `json:"value,omitempty"`
}

// NewManualSourceStrategyInstant instantiates a new ManualSourceStrategyInstant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManualSourceStrategyInstant() *ManualSourceStrategyInstant {
	this := ManualSourceStrategyInstant{}
	return &this
}

// NewManualSourceStrategyInstantWithDefaults instantiates a new ManualSourceStrategyInstant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManualSourceStrategyInstantWithDefaults() *ManualSourceStrategyInstant {
	this := ManualSourceStrategyInstant{}
	return &this
}

// GetCustomUnit returns the CustomUnit field value if set, zero value otherwise.
func (o *ManualSourceStrategyInstant) GetCustomUnit() string {
	if o == nil || IsNil(o.CustomUnit) {
		var ret string
		return ret
	}
	return *o.CustomUnit
}

// GetCustomUnitOk returns a tuple with the CustomUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualSourceStrategyInstant) GetCustomUnitOk() (*string, bool) {
	if o == nil || IsNil(o.CustomUnit) {
		return nil, false
	}
	return o.CustomUnit, true
}

// HasCustomUnit returns a boolean if a field has been set.
func (o *ManualSourceStrategyInstant) HasCustomUnit() bool {
	if o != nil && !IsNil(o.CustomUnit) {
		return true
	}

	return false
}

// SetCustomUnit gets a reference to the given string and assigns it to the CustomUnit field.
func (o *ManualSourceStrategyInstant) SetCustomUnit(v string) {
	o.CustomUnit = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *ManualSourceStrategyInstant) GetUnit() CommonUnit {
	if o == nil || IsNil(o.Unit) {
		var ret CommonUnit
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualSourceStrategyInstant) GetUnitOk() (*CommonUnit, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *ManualSourceStrategyInstant) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given CommonUnit and assigns it to the Unit field.
func (o *ManualSourceStrategyInstant) SetUnit(v CommonUnit) {
	o.Unit = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ManualSourceStrategyInstant) GetValue() float64 {
	if o == nil || IsNil(o.Value) {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualSourceStrategyInstant) GetValueOk() (*float64, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ManualSourceStrategyInstant) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *ManualSourceStrategyInstant) SetValue(v float64) {
	o.Value = &v
}

func (o ManualSourceStrategyInstant) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManualSourceStrategyInstant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomUnit) {
		toSerialize["customUnit"] = o.CustomUnit
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableManualSourceStrategyInstant struct {
	value *ManualSourceStrategyInstant
	isSet bool
}

func (v NullableManualSourceStrategyInstant) Get() *ManualSourceStrategyInstant {
	return v.value
}

func (v *NullableManualSourceStrategyInstant) Set(val *ManualSourceStrategyInstant) {
	v.value = val
	v.isSet = true
}

func (v NullableManualSourceStrategyInstant) IsSet() bool {
	return v.isSet
}

func (v *NullableManualSourceStrategyInstant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManualSourceStrategyInstant(val *ManualSourceStrategyInstant) *NullableManualSourceStrategyInstant {
	return &NullableManualSourceStrategyInstant{value: val, isSet: true}
}

func (v NullableManualSourceStrategyInstant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManualSourceStrategyInstant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


