/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VisualizationOneOf2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VisualizationOneOf2{}

// VisualizationOneOf2 struct for VisualizationOneOf2
type VisualizationOneOf2 struct {
	TimeSeriesBars *TimeSeriesBars `json:"timeSeriesBars,omitempty"`
}

// NewVisualizationOneOf2 instantiates a new VisualizationOneOf2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVisualizationOneOf2() *VisualizationOneOf2 {
	this := VisualizationOneOf2{}
	return &this
}

// NewVisualizationOneOf2WithDefaults instantiates a new VisualizationOneOf2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVisualizationOneOf2WithDefaults() *VisualizationOneOf2 {
	this := VisualizationOneOf2{}
	return &this
}

// GetTimeSeriesBars returns the TimeSeriesBars field value if set, zero value otherwise.
func (o *VisualizationOneOf2) GetTimeSeriesBars() TimeSeriesBars {
	if o == nil || IsNil(o.TimeSeriesBars) {
		var ret TimeSeriesBars
		return ret
	}
	return *o.TimeSeriesBars
}

// GetTimeSeriesBarsOk returns a tuple with the TimeSeriesBars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisualizationOneOf2) GetTimeSeriesBarsOk() (*TimeSeriesBars, bool) {
	if o == nil || IsNil(o.TimeSeriesBars) {
		return nil, false
	}
	return o.TimeSeriesBars, true
}

// HasTimeSeriesBars returns a boolean if a field has been set.
func (o *VisualizationOneOf2) HasTimeSeriesBars() bool {
	if o != nil && !IsNil(o.TimeSeriesBars) {
		return true
	}

	return false
}

// SetTimeSeriesBars gets a reference to the given TimeSeriesBars and assigns it to the TimeSeriesBars field.
func (o *VisualizationOneOf2) SetTimeSeriesBars(v TimeSeriesBars) {
	o.TimeSeriesBars = &v
}

func (o VisualizationOneOf2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VisualizationOneOf2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TimeSeriesBars) {
		toSerialize["timeSeriesBars"] = o.TimeSeriesBars
	}
	return toSerialize, nil
}

type NullableVisualizationOneOf2 struct {
	value *VisualizationOneOf2
	isSet bool
}

func (v NullableVisualizationOneOf2) Get() *VisualizationOneOf2 {
	return v.value
}

func (v *NullableVisualizationOneOf2) Set(val *VisualizationOneOf2) {
	v.value = val
	v.isSet = true
}

func (v NullableVisualizationOneOf2) IsSet() bool {
	return v.isSet
}

func (v *NullableVisualizationOneOf2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVisualizationOneOf2(val *VisualizationOneOf2) *NullableVisualizationOneOf2 {
	return &NullableVisualizationOneOf2{value: val, isSet: true}
}

func (v NullableVisualizationOneOf2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVisualizationOneOf2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


