/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the MultiSelectSourceOneOf3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiSelectSourceOneOf3{}

// MultiSelectSourceOneOf3 struct for MultiSelectSourceOneOf3
type MultiSelectSourceOneOf3 struct {
	SpanField *SpanFieldSource `json:"spanField,omitempty"`
}

// NewMultiSelectSourceOneOf3 instantiates a new MultiSelectSourceOneOf3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiSelectSourceOneOf3() *MultiSelectSourceOneOf3 {
	this := MultiSelectSourceOneOf3{}
	return &this
}

// NewMultiSelectSourceOneOf3WithDefaults instantiates a new MultiSelectSourceOneOf3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiSelectSourceOneOf3WithDefaults() *MultiSelectSourceOneOf3 {
	this := MultiSelectSourceOneOf3{}
	return &this
}

// GetSpanField returns the SpanField field value if set, zero value otherwise.
func (o *MultiSelectSourceOneOf3) GetSpanField() SpanFieldSource {
	if o == nil || IsNil(o.SpanField) {
		var ret SpanFieldSource
		return ret
	}
	return *o.SpanField
}

// GetSpanFieldOk returns a tuple with the SpanField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiSelectSourceOneOf3) GetSpanFieldOk() (*SpanFieldSource, bool) {
	if o == nil || IsNil(o.SpanField) {
		return nil, false
	}
	return o.SpanField, true
}

// HasSpanField returns a boolean if a field has been set.
func (o *MultiSelectSourceOneOf3) HasSpanField() bool {
	if o != nil && !IsNil(o.SpanField) {
		return true
	}

	return false
}

// SetSpanField gets a reference to the given SpanFieldSource and assigns it to the SpanField field.
func (o *MultiSelectSourceOneOf3) SetSpanField(v SpanFieldSource) {
	o.SpanField = &v
}

func (o MultiSelectSourceOneOf3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiSelectSourceOneOf3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpanField) {
		toSerialize["spanField"] = o.SpanField
	}
	return toSerialize, nil
}

type NullableMultiSelectSourceOneOf3 struct {
	value *MultiSelectSourceOneOf3
	isSet bool
}

func (v NullableMultiSelectSourceOneOf3) Get() *MultiSelectSourceOneOf3 {
	return v.value
}

func (v *NullableMultiSelectSourceOneOf3) Set(val *MultiSelectSourceOneOf3) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiSelectSourceOneOf3) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiSelectSourceOneOf3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiSelectSourceOneOf3(val *MultiSelectSourceOneOf3) *NullableMultiSelectSourceOneOf3 {
	return &NullableMultiSelectSourceOneOf3{value: val, isSet: true}
}

func (v NullableMultiSelectSourceOneOf3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiSelectSourceOneOf3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


