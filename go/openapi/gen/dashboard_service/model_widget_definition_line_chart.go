/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the WidgetDefinitionLineChart type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WidgetDefinitionLineChart{}

// WidgetDefinitionLineChart struct for WidgetDefinitionLineChart
type WidgetDefinitionLineChart struct {
	LineChart *LineChart `json:"lineChart,omitempty"`
}

// NewWidgetDefinitionLineChart instantiates a new WidgetDefinitionLineChart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetDefinitionLineChart() *WidgetDefinitionLineChart {
	this := WidgetDefinitionLineChart{}
	return &this
}

// NewWidgetDefinitionLineChartWithDefaults instantiates a new WidgetDefinitionLineChart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetDefinitionLineChartWithDefaults() *WidgetDefinitionLineChart {
	this := WidgetDefinitionLineChart{}
	return &this
}

// GetLineChart returns the LineChart field value if set, zero value otherwise.
func (o *WidgetDefinitionLineChart) GetLineChart() LineChart {
	if o == nil || IsNil(o.LineChart) {
		var ret LineChart
		return ret
	}
	return *o.LineChart
}

// GetLineChartOk returns a tuple with the LineChart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetDefinitionLineChart) GetLineChartOk() (*LineChart, bool) {
	if o == nil || IsNil(o.LineChart) {
		return nil, false
	}
	return o.LineChart, true
}

// HasLineChart returns a boolean if a field has been set.
func (o *WidgetDefinitionLineChart) HasLineChart() bool {
	if o != nil && !IsNil(o.LineChart) {
		return true
	}

	return false
}

// SetLineChart gets a reference to the given LineChart and assigns it to the LineChart field.
func (o *WidgetDefinitionLineChart) SetLineChart(v LineChart) {
	o.LineChart = &v
}

func (o WidgetDefinitionLineChart) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WidgetDefinitionLineChart) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LineChart) {
		toSerialize["lineChart"] = o.LineChart
	}
	return toSerialize, nil
}

type NullableWidgetDefinitionLineChart struct {
	value *WidgetDefinitionLineChart
	isSet bool
}

func (v NullableWidgetDefinitionLineChart) Get() *WidgetDefinitionLineChart {
	return v.value
}

func (v *NullableWidgetDefinitionLineChart) Set(val *WidgetDefinitionLineChart) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetDefinitionLineChart) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetDefinitionLineChart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetDefinitionLineChart(val *WidgetDefinitionLineChart) *NullableWidgetDefinitionLineChart {
	return &NullableWidgetDefinitionLineChart{value: val, isSet: true}
}

func (v NullableWidgetDefinitionLineChart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetDefinitionLineChart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


