/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the TimeFrameSelectRelativeTimeFrame type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeFrameSelectRelativeTimeFrame{}

// TimeFrameSelectRelativeTimeFrame struct for TimeFrameSelectRelativeTimeFrame
type TimeFrameSelectRelativeTimeFrame struct {
	RelativeTimeFrame *string `json:"relativeTimeFrame,omitempty"`
}

// NewTimeFrameSelectRelativeTimeFrame instantiates a new TimeFrameSelectRelativeTimeFrame object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeFrameSelectRelativeTimeFrame() *TimeFrameSelectRelativeTimeFrame {
	this := TimeFrameSelectRelativeTimeFrame{}
	return &this
}

// NewTimeFrameSelectRelativeTimeFrameWithDefaults instantiates a new TimeFrameSelectRelativeTimeFrame object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeFrameSelectRelativeTimeFrameWithDefaults() *TimeFrameSelectRelativeTimeFrame {
	this := TimeFrameSelectRelativeTimeFrame{}
	return &this
}

// GetRelativeTimeFrame returns the RelativeTimeFrame field value if set, zero value otherwise.
func (o *TimeFrameSelectRelativeTimeFrame) GetRelativeTimeFrame() string {
	if o == nil || IsNil(o.RelativeTimeFrame) {
		var ret string
		return ret
	}
	return *o.RelativeTimeFrame
}

// GetRelativeTimeFrameOk returns a tuple with the RelativeTimeFrame field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeFrameSelectRelativeTimeFrame) GetRelativeTimeFrameOk() (*string, bool) {
	if o == nil || IsNil(o.RelativeTimeFrame) {
		return nil, false
	}
	return o.RelativeTimeFrame, true
}

// HasRelativeTimeFrame returns a boolean if a field has been set.
func (o *TimeFrameSelectRelativeTimeFrame) HasRelativeTimeFrame() bool {
	if o != nil && !IsNil(o.RelativeTimeFrame) {
		return true
	}

	return false
}

// SetRelativeTimeFrame gets a reference to the given string and assigns it to the RelativeTimeFrame field.
func (o *TimeFrameSelectRelativeTimeFrame) SetRelativeTimeFrame(v string) {
	o.RelativeTimeFrame = &v
}

func (o TimeFrameSelectRelativeTimeFrame) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeFrameSelectRelativeTimeFrame) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RelativeTimeFrame) {
		toSerialize["relativeTimeFrame"] = o.RelativeTimeFrame
	}
	return toSerialize, nil
}

type NullableTimeFrameSelectRelativeTimeFrame struct {
	value *TimeFrameSelectRelativeTimeFrame
	isSet bool
}

func (v NullableTimeFrameSelectRelativeTimeFrame) Get() *TimeFrameSelectRelativeTimeFrame {
	return v.value
}

func (v *NullableTimeFrameSelectRelativeTimeFrame) Set(val *TimeFrameSelectRelativeTimeFrame) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeFrameSelectRelativeTimeFrame) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeFrameSelectRelativeTimeFrame) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeFrameSelectRelativeTimeFrame(val *TimeFrameSelectRelativeTimeFrame) *NullableTimeFrameSelectRelativeTimeFrame {
	return &NullableTimeFrameSelectRelativeTimeFrame{value: val, isSet: true}
}

func (v NullableTimeFrameSelectRelativeTimeFrame) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeFrameSelectRelativeTimeFrame) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


