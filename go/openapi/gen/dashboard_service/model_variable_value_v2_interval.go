/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VariableValueV2Interval type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariableValueV2Interval{}

// VariableValueV2Interval struct for VariableValueV2Interval
type VariableValueV2Interval struct {
	Interval *IntervalValue `json:"interval,omitempty"`
}

// NewVariableValueV2Interval instantiates a new VariableValueV2Interval object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableValueV2Interval() *VariableValueV2Interval {
	this := VariableValueV2Interval{}
	return &this
}

// NewVariableValueV2IntervalWithDefaults instantiates a new VariableValueV2Interval object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableValueV2IntervalWithDefaults() *VariableValueV2Interval {
	this := VariableValueV2Interval{}
	return &this
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *VariableValueV2Interval) GetInterval() IntervalValue {
	if o == nil || IsNil(o.Interval) {
		var ret IntervalValue
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableValueV2Interval) GetIntervalOk() (*IntervalValue, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *VariableValueV2Interval) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given IntervalValue and assigns it to the Interval field.
func (o *VariableValueV2Interval) SetInterval(v IntervalValue) {
	o.Interval = &v
}

func (o VariableValueV2Interval) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariableValueV2Interval) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	return toSerialize, nil
}

type NullableVariableValueV2Interval struct {
	value *VariableValueV2Interval
	isSet bool
}

func (v NullableVariableValueV2Interval) Get() *VariableValueV2Interval {
	return v.value
}

func (v *NullableVariableValueV2Interval) Set(val *VariableValueV2Interval) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableValueV2Interval) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableValueV2Interval) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableValueV2Interval(val *VariableValueV2Interval) *NullableVariableValueV2Interval {
	return &NullableVariableValueV2Interval{value: val, isSet: true}
}

func (v NullableVariableValueV2Interval) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableValueV2Interval) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


