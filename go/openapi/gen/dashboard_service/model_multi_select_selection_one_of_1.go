/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the MultiSelectSelectionOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiSelectSelectionOneOf1{}

// MultiSelectSelectionOneOf1 struct for MultiSelectSelectionOneOf1
type MultiSelectSelectionOneOf1 struct {
	List *MultiSelectSelectionListSelection `json:"list,omitempty"`
}

// NewMultiSelectSelectionOneOf1 instantiates a new MultiSelectSelectionOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiSelectSelectionOneOf1() *MultiSelectSelectionOneOf1 {
	this := MultiSelectSelectionOneOf1{}
	return &this
}

// NewMultiSelectSelectionOneOf1WithDefaults instantiates a new MultiSelectSelectionOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiSelectSelectionOneOf1WithDefaults() *MultiSelectSelectionOneOf1 {
	this := MultiSelectSelectionOneOf1{}
	return &this
}

// GetList returns the List field value if set, zero value otherwise.
func (o *MultiSelectSelectionOneOf1) GetList() MultiSelectSelectionListSelection {
	if o == nil || IsNil(o.List) {
		var ret MultiSelectSelectionListSelection
		return ret
	}
	return *o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiSelectSelectionOneOf1) GetListOk() (*MultiSelectSelectionListSelection, bool) {
	if o == nil || IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *MultiSelectSelectionOneOf1) HasList() bool {
	if o != nil && !IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given MultiSelectSelectionListSelection and assigns it to the List field.
func (o *MultiSelectSelectionOneOf1) SetList(v MultiSelectSelectionListSelection) {
	o.List = &v
}

func (o MultiSelectSelectionOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiSelectSelectionOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.List) {
		toSerialize["list"] = o.List
	}
	return toSerialize, nil
}

type NullableMultiSelectSelectionOneOf1 struct {
	value *MultiSelectSelectionOneOf1
	isSet bool
}

func (v NullableMultiSelectSelectionOneOf1) Get() *MultiSelectSelectionOneOf1 {
	return v.value
}

func (v *NullableMultiSelectSelectionOneOf1) Set(val *MultiSelectSelectionOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiSelectSelectionOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiSelectSelectionOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiSelectSelectionOneOf1(val *MultiSelectSelectionOneOf1) *NullableMultiSelectSelectionOneOf1 {
	return &NullableMultiSelectSelectionOneOf1{value: val, isSet: true}
}

func (v NullableMultiSelectSelectionOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiSelectSelectionOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


