/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the WidgetDefinitionBarChart type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WidgetDefinitionBarChart{}

// WidgetDefinitionBarChart struct for WidgetDefinitionBarChart
type WidgetDefinitionBarChart struct {
	BarChart *BarChart `json:"barChart,omitempty"`
}

// NewWidgetDefinitionBarChart instantiates a new WidgetDefinitionBarChart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetDefinitionBarChart() *WidgetDefinitionBarChart {
	this := WidgetDefinitionBarChart{}
	return &this
}

// NewWidgetDefinitionBarChartWithDefaults instantiates a new WidgetDefinitionBarChart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetDefinitionBarChartWithDefaults() *WidgetDefinitionBarChart {
	this := WidgetDefinitionBarChart{}
	return &this
}

// GetBarChart returns the BarChart field value if set, zero value otherwise.
func (o *WidgetDefinitionBarChart) GetBarChart() BarChart {
	if o == nil || IsNil(o.BarChart) {
		var ret BarChart
		return ret
	}
	return *o.BarChart
}

// GetBarChartOk returns a tuple with the BarChart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetDefinitionBarChart) GetBarChartOk() (*BarChart, bool) {
	if o == nil || IsNil(o.BarChart) {
		return nil, false
	}
	return o.BarChart, true
}

// HasBarChart returns a boolean if a field has been set.
func (o *WidgetDefinitionBarChart) HasBarChart() bool {
	if o != nil && !IsNil(o.BarChart) {
		return true
	}

	return false
}

// SetBarChart gets a reference to the given BarChart and assigns it to the BarChart field.
func (o *WidgetDefinitionBarChart) SetBarChart(v BarChart) {
	o.BarChart = &v
}

func (o WidgetDefinitionBarChart) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WidgetDefinitionBarChart) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BarChart) {
		toSerialize["barChart"] = o.BarChart
	}
	return toSerialize, nil
}

type NullableWidgetDefinitionBarChart struct {
	value *WidgetDefinitionBarChart
	isSet bool
}

func (v NullableWidgetDefinitionBarChart) Get() *WidgetDefinitionBarChart {
	return v.value
}

func (v *NullableWidgetDefinitionBarChart) Set(val *WidgetDefinitionBarChart) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetDefinitionBarChart) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetDefinitionBarChart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetDefinitionBarChart(val *WidgetDefinitionBarChart) *NullableWidgetDefinitionBarChart {
	return &NullableWidgetDefinitionBarChart{value: val, isSet: true}
}

func (v NullableWidgetDefinitionBarChart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetDefinitionBarChart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


