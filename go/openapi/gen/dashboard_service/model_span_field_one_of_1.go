/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the SpanFieldOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpanFieldOneOf1{}

// SpanFieldOneOf1 struct for SpanFieldOneOf1
type SpanFieldOneOf1 struct {
	TagField *string `json:"tagField,omitempty"`
}

// NewSpanFieldOneOf1 instantiates a new SpanFieldOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpanFieldOneOf1() *SpanFieldOneOf1 {
	this := SpanFieldOneOf1{}
	return &this
}

// NewSpanFieldOneOf1WithDefaults instantiates a new SpanFieldOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpanFieldOneOf1WithDefaults() *SpanFieldOneOf1 {
	this := SpanFieldOneOf1{}
	return &this
}

// GetTagField returns the TagField field value if set, zero value otherwise.
func (o *SpanFieldOneOf1) GetTagField() string {
	if o == nil || IsNil(o.TagField) {
		var ret string
		return ret
	}
	return *o.TagField
}

// GetTagFieldOk returns a tuple with the TagField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpanFieldOneOf1) GetTagFieldOk() (*string, bool) {
	if o == nil || IsNil(o.TagField) {
		return nil, false
	}
	return o.TagField, true
}

// HasTagField returns a boolean if a field has been set.
func (o *SpanFieldOneOf1) HasTagField() bool {
	if o != nil && !IsNil(o.TagField) {
		return true
	}

	return false
}

// SetTagField gets a reference to the given string and assigns it to the TagField field.
func (o *SpanFieldOneOf1) SetTagField(v string) {
	o.TagField = &v
}

func (o SpanFieldOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpanFieldOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TagField) {
		toSerialize["tagField"] = o.TagField
	}
	return toSerialize, nil
}

type NullableSpanFieldOneOf1 struct {
	value *SpanFieldOneOf1
	isSet bool
}

func (v NullableSpanFieldOneOf1) Get() *SpanFieldOneOf1 {
	return v.value
}

func (v *NullableSpanFieldOneOf1) Set(val *SpanFieldOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableSpanFieldOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableSpanFieldOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpanFieldOneOf1(val *SpanFieldOneOf1) *NullableSpanFieldOneOf1 {
	return &NullableSpanFieldOneOf1{value: val, isSet: true}
}

func (v NullableSpanFieldOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpanFieldOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


