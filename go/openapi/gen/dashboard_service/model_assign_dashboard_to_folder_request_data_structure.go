/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AssignDashboardToFolderRequestDataStructure type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssignDashboardToFolderRequestDataStructure{}

// AssignDashboardToFolderRequestDataStructure This is a request for assigning a folder to a dashboard
type AssignDashboardToFolderRequestDataStructure struct {
	FolderId *string `json:"folderId,omitempty"`
	RequestId string `json:"requestId"`
}

type _AssignDashboardToFolderRequestDataStructure AssignDashboardToFolderRequestDataStructure

// NewAssignDashboardToFolderRequestDataStructure instantiates a new AssignDashboardToFolderRequestDataStructure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignDashboardToFolderRequestDataStructure(requestId string) *AssignDashboardToFolderRequestDataStructure {
	this := AssignDashboardToFolderRequestDataStructure{}
	this.RequestId = requestId
	return &this
}

// NewAssignDashboardToFolderRequestDataStructureWithDefaults instantiates a new AssignDashboardToFolderRequestDataStructure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignDashboardToFolderRequestDataStructureWithDefaults() *AssignDashboardToFolderRequestDataStructure {
	this := AssignDashboardToFolderRequestDataStructure{}
	return &this
}

// GetFolderId returns the FolderId field value if set, zero value otherwise.
func (o *AssignDashboardToFolderRequestDataStructure) GetFolderId() string {
	if o == nil || IsNil(o.FolderId) {
		var ret string
		return ret
	}
	return *o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignDashboardToFolderRequestDataStructure) GetFolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.FolderId) {
		return nil, false
	}
	return o.FolderId, true
}

// HasFolderId returns a boolean if a field has been set.
func (o *AssignDashboardToFolderRequestDataStructure) HasFolderId() bool {
	if o != nil && !IsNil(o.FolderId) {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given string and assigns it to the FolderId field.
func (o *AssignDashboardToFolderRequestDataStructure) SetFolderId(v string) {
	o.FolderId = &v
}

// GetRequestId returns the RequestId field value
func (o *AssignDashboardToFolderRequestDataStructure) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *AssignDashboardToFolderRequestDataStructure) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *AssignDashboardToFolderRequestDataStructure) SetRequestId(v string) {
	o.RequestId = v
}

func (o AssignDashboardToFolderRequestDataStructure) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssignDashboardToFolderRequestDataStructure) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FolderId) {
		toSerialize["folderId"] = o.FolderId
	}
	toSerialize["requestId"] = o.RequestId
	return toSerialize, nil
}

func (o *AssignDashboardToFolderRequestDataStructure) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"requestId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAssignDashboardToFolderRequestDataStructure := _AssignDashboardToFolderRequestDataStructure{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAssignDashboardToFolderRequestDataStructure)

	if err != nil {
		return err
	}

	*o = AssignDashboardToFolderRequestDataStructure(varAssignDashboardToFolderRequestDataStructure)

	return err
}

type NullableAssignDashboardToFolderRequestDataStructure struct {
	value *AssignDashboardToFolderRequestDataStructure
	isSet bool
}

func (v NullableAssignDashboardToFolderRequestDataStructure) Get() *AssignDashboardToFolderRequestDataStructure {
	return v.value
}

func (v *NullableAssignDashboardToFolderRequestDataStructure) Set(val *AssignDashboardToFolderRequestDataStructure) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignDashboardToFolderRequestDataStructure) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignDashboardToFolderRequestDataStructure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignDashboardToFolderRequestDataStructure(val *AssignDashboardToFolderRequestDataStructure) *NullableAssignDashboardToFolderRequestDataStructure {
	return &NullableAssignDashboardToFolderRequestDataStructure{value: val, isSet: true}
}

func (v NullableAssignDashboardToFolderRequestDataStructure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignDashboardToFolderRequestDataStructure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


