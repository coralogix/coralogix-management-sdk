/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the DynamicQueryOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DynamicQueryOneOf1{}

// DynamicQueryOneOf1 struct for DynamicQueryOneOf1
type DynamicQueryOneOf1 struct {
	Spans *Spans `json:"spans,omitempty"`
}

// NewDynamicQueryOneOf1 instantiates a new DynamicQueryOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDynamicQueryOneOf1() *DynamicQueryOneOf1 {
	this := DynamicQueryOneOf1{}
	return &this
}

// NewDynamicQueryOneOf1WithDefaults instantiates a new DynamicQueryOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDynamicQueryOneOf1WithDefaults() *DynamicQueryOneOf1 {
	this := DynamicQueryOneOf1{}
	return &this
}

// GetSpans returns the Spans field value if set, zero value otherwise.
func (o *DynamicQueryOneOf1) GetSpans() Spans {
	if o == nil || IsNil(o.Spans) {
		var ret Spans
		return ret
	}
	return *o.Spans
}

// GetSpansOk returns a tuple with the Spans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicQueryOneOf1) GetSpansOk() (*Spans, bool) {
	if o == nil || IsNil(o.Spans) {
		return nil, false
	}
	return o.Spans, true
}

// HasSpans returns a boolean if a field has been set.
func (o *DynamicQueryOneOf1) HasSpans() bool {
	if o != nil && !IsNil(o.Spans) {
		return true
	}

	return false
}

// SetSpans gets a reference to the given Spans and assigns it to the Spans field.
func (o *DynamicQueryOneOf1) SetSpans(v Spans) {
	o.Spans = &v
}

func (o DynamicQueryOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DynamicQueryOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Spans) {
		toSerialize["spans"] = o.Spans
	}
	return toSerialize, nil
}

type NullableDynamicQueryOneOf1 struct {
	value *DynamicQueryOneOf1
	isSet bool
}

func (v NullableDynamicQueryOneOf1) Get() *DynamicQueryOneOf1 {
	return v.value
}

func (v *NullableDynamicQueryOneOf1) Set(val *DynamicQueryOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableDynamicQueryOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableDynamicQueryOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDynamicQueryOneOf1(val *DynamicQueryOneOf1) *NullableDynamicQueryOneOf1 {
	return &NullableDynamicQueryOneOf1{value: val, isSet: true}
}

func (v NullableDynamicQueryOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDynamicQueryOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


