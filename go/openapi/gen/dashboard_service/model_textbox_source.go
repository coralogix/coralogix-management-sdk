/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the TextboxSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TextboxSource{}

// TextboxSource struct for TextboxSource
type TextboxSource struct {
	DefaultValue *TextboxDefaultValue `json:"defaultValue,omitempty"`
}

// NewTextboxSource instantiates a new TextboxSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTextboxSource() *TextboxSource {
	this := TextboxSource{}
	return &this
}

// NewTextboxSourceWithDefaults instantiates a new TextboxSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTextboxSourceWithDefaults() *TextboxSource {
	this := TextboxSource{}
	return &this
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *TextboxSource) GetDefaultValue() TextboxDefaultValue {
	if o == nil || IsNil(o.DefaultValue) {
		var ret TextboxDefaultValue
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TextboxSource) GetDefaultValueOk() (*TextboxDefaultValue, bool) {
	if o == nil || IsNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *TextboxSource) HasDefaultValue() bool {
	if o != nil && !IsNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given TextboxDefaultValue and assigns it to the DefaultValue field.
func (o *TextboxSource) SetDefaultValue(v TextboxDefaultValue) {
	o.DefaultValue = &v
}

func (o TextboxSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TextboxSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultValue) {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	return toSerialize, nil
}

type NullableTextboxSource struct {
	value *TextboxSource
	isSet bool
}

func (v NullableTextboxSource) Get() *TextboxSource {
	return v.value
}

func (v *NullableTextboxSource) Set(val *TextboxSource) {
	v.value = val
	v.isSet = true
}

func (v NullableTextboxSource) IsSet() bool {
	return v.isSet
}

func (v *NullableTextboxSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTextboxSource(val *TextboxSource) *NullableTextboxSource {
	return &NullableTextboxSource{value: val, isSet: true}
}

func (v NullableTextboxSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTextboxSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


