/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the FilterLogsFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilterLogsFilter{}

// FilterLogsFilter This data structure represents the filter criteria for logs.
type FilterLogsFilter struct {
	// The log field to which the filter is applied.
	Field *string `json:"field,omitempty"`
	ObservationField *ObservationField `json:"observationField,omitempty"`
	Operator *FilterOperator `json:"operator,omitempty"`
}

// NewFilterLogsFilter instantiates a new FilterLogsFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilterLogsFilter() *FilterLogsFilter {
	this := FilterLogsFilter{}
	return &this
}

// NewFilterLogsFilterWithDefaults instantiates a new FilterLogsFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilterLogsFilterWithDefaults() *FilterLogsFilter {
	this := FilterLogsFilter{}
	return &this
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *FilterLogsFilter) GetField() string {
	if o == nil || IsNil(o.Field) {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterLogsFilter) GetFieldOk() (*string, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *FilterLogsFilter) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *FilterLogsFilter) SetField(v string) {
	o.Field = &v
}

// GetObservationField returns the ObservationField field value if set, zero value otherwise.
func (o *FilterLogsFilter) GetObservationField() ObservationField {
	if o == nil || IsNil(o.ObservationField) {
		var ret ObservationField
		return ret
	}
	return *o.ObservationField
}

// GetObservationFieldOk returns a tuple with the ObservationField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterLogsFilter) GetObservationFieldOk() (*ObservationField, bool) {
	if o == nil || IsNil(o.ObservationField) {
		return nil, false
	}
	return o.ObservationField, true
}

// HasObservationField returns a boolean if a field has been set.
func (o *FilterLogsFilter) HasObservationField() bool {
	if o != nil && !IsNil(o.ObservationField) {
		return true
	}

	return false
}

// SetObservationField gets a reference to the given ObservationField and assigns it to the ObservationField field.
func (o *FilterLogsFilter) SetObservationField(v ObservationField) {
	o.ObservationField = &v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *FilterLogsFilter) GetOperator() FilterOperator {
	if o == nil || IsNil(o.Operator) {
		var ret FilterOperator
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterLogsFilter) GetOperatorOk() (*FilterOperator, bool) {
	if o == nil || IsNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *FilterLogsFilter) HasOperator() bool {
	if o != nil && !IsNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given FilterOperator and assigns it to the Operator field.
func (o *FilterLogsFilter) SetOperator(v FilterOperator) {
	o.Operator = &v
}

func (o FilterLogsFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilterLogsFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if !IsNil(o.ObservationField) {
		toSerialize["observationField"] = o.ObservationField
	}
	if !IsNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}
	return toSerialize, nil
}

type NullableFilterLogsFilter struct {
	value *FilterLogsFilter
	isSet bool
}

func (v NullableFilterLogsFilter) Get() *FilterLogsFilter {
	return v.value
}

func (v *NullableFilterLogsFilter) Set(val *FilterLogsFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableFilterLogsFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableFilterLogsFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilterLogsFilter(val *FilterLogsFilter) *NullableFilterLogsFilter {
	return &NullableFilterLogsFilter{value: val, isSet: true}
}

func (v NullableFilterLogsFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilterLogsFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


