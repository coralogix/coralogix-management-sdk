/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the MultiSelectValueDisplayOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiSelectValueDisplayOptions{}

// MultiSelectValueDisplayOptions struct for MultiSelectValueDisplayOptions
type MultiSelectValueDisplayOptions struct {
	LabelRegex *string `json:"labelRegex,omitempty"`
	ValueRegex *string `json:"valueRegex,omitempty"`
}

// NewMultiSelectValueDisplayOptions instantiates a new MultiSelectValueDisplayOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiSelectValueDisplayOptions() *MultiSelectValueDisplayOptions {
	this := MultiSelectValueDisplayOptions{}
	return &this
}

// NewMultiSelectValueDisplayOptionsWithDefaults instantiates a new MultiSelectValueDisplayOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiSelectValueDisplayOptionsWithDefaults() *MultiSelectValueDisplayOptions {
	this := MultiSelectValueDisplayOptions{}
	return &this
}

// GetLabelRegex returns the LabelRegex field value if set, zero value otherwise.
func (o *MultiSelectValueDisplayOptions) GetLabelRegex() string {
	if o == nil || IsNil(o.LabelRegex) {
		var ret string
		return ret
	}
	return *o.LabelRegex
}

// GetLabelRegexOk returns a tuple with the LabelRegex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiSelectValueDisplayOptions) GetLabelRegexOk() (*string, bool) {
	if o == nil || IsNil(o.LabelRegex) {
		return nil, false
	}
	return o.LabelRegex, true
}

// HasLabelRegex returns a boolean if a field has been set.
func (o *MultiSelectValueDisplayOptions) HasLabelRegex() bool {
	if o != nil && !IsNil(o.LabelRegex) {
		return true
	}

	return false
}

// SetLabelRegex gets a reference to the given string and assigns it to the LabelRegex field.
func (o *MultiSelectValueDisplayOptions) SetLabelRegex(v string) {
	o.LabelRegex = &v
}

// GetValueRegex returns the ValueRegex field value if set, zero value otherwise.
func (o *MultiSelectValueDisplayOptions) GetValueRegex() string {
	if o == nil || IsNil(o.ValueRegex) {
		var ret string
		return ret
	}
	return *o.ValueRegex
}

// GetValueRegexOk returns a tuple with the ValueRegex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiSelectValueDisplayOptions) GetValueRegexOk() (*string, bool) {
	if o == nil || IsNil(o.ValueRegex) {
		return nil, false
	}
	return o.ValueRegex, true
}

// HasValueRegex returns a boolean if a field has been set.
func (o *MultiSelectValueDisplayOptions) HasValueRegex() bool {
	if o != nil && !IsNil(o.ValueRegex) {
		return true
	}

	return false
}

// SetValueRegex gets a reference to the given string and assigns it to the ValueRegex field.
func (o *MultiSelectValueDisplayOptions) SetValueRegex(v string) {
	o.ValueRegex = &v
}

func (o MultiSelectValueDisplayOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiSelectValueDisplayOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LabelRegex) {
		toSerialize["labelRegex"] = o.LabelRegex
	}
	if !IsNil(o.ValueRegex) {
		toSerialize["valueRegex"] = o.ValueRegex
	}
	return toSerialize, nil
}

type NullableMultiSelectValueDisplayOptions struct {
	value *MultiSelectValueDisplayOptions
	isSet bool
}

func (v NullableMultiSelectValueDisplayOptions) Get() *MultiSelectValueDisplayOptions {
	return v.value
}

func (v *NullableMultiSelectValueDisplayOptions) Set(val *MultiSelectValueDisplayOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiSelectValueDisplayOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiSelectValueDisplayOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiSelectValueDisplayOptions(val *MultiSelectValueDisplayOptions) *NullableMultiSelectValueDisplayOptions {
	return &NullableMultiSelectValueDisplayOptions{value: val, isSet: true}
}

func (v NullableMultiSelectValueDisplayOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiSelectValueDisplayOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


