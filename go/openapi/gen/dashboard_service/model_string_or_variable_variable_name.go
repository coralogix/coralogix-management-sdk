/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the StringOrVariableVariableName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StringOrVariableVariableName{}

// StringOrVariableVariableName struct for StringOrVariableVariableName
type StringOrVariableVariableName struct {
	VariableName *string `json:"variableName,omitempty"`
}

// NewStringOrVariableVariableName instantiates a new StringOrVariableVariableName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStringOrVariableVariableName() *StringOrVariableVariableName {
	this := StringOrVariableVariableName{}
	return &this
}

// NewStringOrVariableVariableNameWithDefaults instantiates a new StringOrVariableVariableName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStringOrVariableVariableNameWithDefaults() *StringOrVariableVariableName {
	this := StringOrVariableVariableName{}
	return &this
}

// GetVariableName returns the VariableName field value if set, zero value otherwise.
func (o *StringOrVariableVariableName) GetVariableName() string {
	if o == nil || IsNil(o.VariableName) {
		var ret string
		return ret
	}
	return *o.VariableName
}

// GetVariableNameOk returns a tuple with the VariableName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StringOrVariableVariableName) GetVariableNameOk() (*string, bool) {
	if o == nil || IsNil(o.VariableName) {
		return nil, false
	}
	return o.VariableName, true
}

// HasVariableName returns a boolean if a field has been set.
func (o *StringOrVariableVariableName) HasVariableName() bool {
	if o != nil && !IsNil(o.VariableName) {
		return true
	}

	return false
}

// SetVariableName gets a reference to the given string and assigns it to the VariableName field.
func (o *StringOrVariableVariableName) SetVariableName(v string) {
	o.VariableName = &v
}

func (o StringOrVariableVariableName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StringOrVariableVariableName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VariableName) {
		toSerialize["variableName"] = o.VariableName
	}
	return toSerialize, nil
}

type NullableStringOrVariableVariableName struct {
	value *StringOrVariableVariableName
	isSet bool
}

func (v NullableStringOrVariableVariableName) Get() *StringOrVariableVariableName {
	return v.value
}

func (v *NullableStringOrVariableVariableName) Set(val *StringOrVariableVariableName) {
	v.value = val
	v.isSet = true
}

func (v NullableStringOrVariableVariableName) IsSet() bool {
	return v.isSet
}

func (v *NullableStringOrVariableVariableName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStringOrVariableVariableName(val *StringOrVariableVariableName) *NullableStringOrVariableVariableName {
	return &NullableStringOrVariableVariableName{value: val, isSet: true}
}

func (v NullableStringOrVariableVariableName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStringOrVariableVariableName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


