/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the MultiSelectSourceMetricLabel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiSelectSourceMetricLabel{}

// MultiSelectSourceMetricLabel struct for MultiSelectSourceMetricLabel
type MultiSelectSourceMetricLabel struct {
	MetricLabel *MetricLabelSource `json:"metricLabel,omitempty"`
}

// NewMultiSelectSourceMetricLabel instantiates a new MultiSelectSourceMetricLabel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiSelectSourceMetricLabel() *MultiSelectSourceMetricLabel {
	this := MultiSelectSourceMetricLabel{}
	return &this
}

// NewMultiSelectSourceMetricLabelWithDefaults instantiates a new MultiSelectSourceMetricLabel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiSelectSourceMetricLabelWithDefaults() *MultiSelectSourceMetricLabel {
	this := MultiSelectSourceMetricLabel{}
	return &this
}

// GetMetricLabel returns the MetricLabel field value if set, zero value otherwise.
func (o *MultiSelectSourceMetricLabel) GetMetricLabel() MetricLabelSource {
	if o == nil || IsNil(o.MetricLabel) {
		var ret MetricLabelSource
		return ret
	}
	return *o.MetricLabel
}

// GetMetricLabelOk returns a tuple with the MetricLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiSelectSourceMetricLabel) GetMetricLabelOk() (*MetricLabelSource, bool) {
	if o == nil || IsNil(o.MetricLabel) {
		return nil, false
	}
	return o.MetricLabel, true
}

// HasMetricLabel returns a boolean if a field has been set.
func (o *MultiSelectSourceMetricLabel) HasMetricLabel() bool {
	if o != nil && !IsNil(o.MetricLabel) {
		return true
	}

	return false
}

// SetMetricLabel gets a reference to the given MetricLabelSource and assigns it to the MetricLabel field.
func (o *MultiSelectSourceMetricLabel) SetMetricLabel(v MetricLabelSource) {
	o.MetricLabel = &v
}

func (o MultiSelectSourceMetricLabel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiSelectSourceMetricLabel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MetricLabel) {
		toSerialize["metricLabel"] = o.MetricLabel
	}
	return toSerialize, nil
}

type NullableMultiSelectSourceMetricLabel struct {
	value *MultiSelectSourceMetricLabel
	isSet bool
}

func (v NullableMultiSelectSourceMetricLabel) Get() *MultiSelectSourceMetricLabel {
	return v.value
}

func (v *NullableMultiSelectSourceMetricLabel) Set(val *MultiSelectSourceMetricLabel) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiSelectSourceMetricLabel) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiSelectSourceMetricLabel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiSelectSourceMetricLabel(val *MultiSelectSourceMetricLabel) *NullableMultiSelectSourceMetricLabel {
	return &NullableMultiSelectSourceMetricLabel{value: val, isSet: true}
}

func (v NullableMultiSelectSourceMetricLabel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiSelectSourceMetricLabel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


