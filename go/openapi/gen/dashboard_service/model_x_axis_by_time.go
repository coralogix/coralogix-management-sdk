/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the XAxisByTime type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &XAxisByTime{}

// XAxisByTime struct for XAxisByTime
type XAxisByTime struct {
	// How many buckets to present in the selected timeframe
	BucketsPresented *int32 `json:"bucketsPresented,omitempty"`
	// Interval of value sampling, i.e. every 5 minutes, every 1 second and so on
	Interval *string `json:"interval,omitempty"`
}

// NewXAxisByTime instantiates a new XAxisByTime object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewXAxisByTime() *XAxisByTime {
	this := XAxisByTime{}
	return &this
}

// NewXAxisByTimeWithDefaults instantiates a new XAxisByTime object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewXAxisByTimeWithDefaults() *XAxisByTime {
	this := XAxisByTime{}
	return &this
}

// GetBucketsPresented returns the BucketsPresented field value if set, zero value otherwise.
func (o *XAxisByTime) GetBucketsPresented() int32 {
	if o == nil || IsNil(o.BucketsPresented) {
		var ret int32
		return ret
	}
	return *o.BucketsPresented
}

// GetBucketsPresentedOk returns a tuple with the BucketsPresented field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XAxisByTime) GetBucketsPresentedOk() (*int32, bool) {
	if o == nil || IsNil(o.BucketsPresented) {
		return nil, false
	}
	return o.BucketsPresented, true
}

// HasBucketsPresented returns a boolean if a field has been set.
func (o *XAxisByTime) HasBucketsPresented() bool {
	if o != nil && !IsNil(o.BucketsPresented) {
		return true
	}

	return false
}

// SetBucketsPresented gets a reference to the given int32 and assigns it to the BucketsPresented field.
func (o *XAxisByTime) SetBucketsPresented(v int32) {
	o.BucketsPresented = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *XAxisByTime) GetInterval() string {
	if o == nil || IsNil(o.Interval) {
		var ret string
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XAxisByTime) GetIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *XAxisByTime) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given string and assigns it to the Interval field.
func (o *XAxisByTime) SetInterval(v string) {
	o.Interval = &v
}

func (o XAxisByTime) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o XAxisByTime) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BucketsPresented) {
		toSerialize["bucketsPresented"] = o.BucketsPresented
	}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	return toSerialize, nil
}

type NullableXAxisByTime struct {
	value *XAxisByTime
	isSet bool
}

func (v NullableXAxisByTime) Get() *XAxisByTime {
	return v.value
}

func (v *NullableXAxisByTime) Set(val *XAxisByTime) {
	v.value = val
	v.isSet = true
}

func (v NullableXAxisByTime) IsSet() bool {
	return v.isSet
}

func (v *NullableXAxisByTime) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableXAxisByTime(val *XAxisByTime) *NullableXAxisByTime {
	return &NullableXAxisByTime{value: val, isSet: true}
}

func (v NullableXAxisByTime) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableXAxisByTime) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


