/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VariableSelectionOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariableSelectionOptions{}

// VariableSelectionOptions struct for VariableSelectionOptions
type VariableSelectionOptions struct {
	SelectionType *SelectionType `json:"selectionType,omitempty"`
}

// NewVariableSelectionOptions instantiates a new VariableSelectionOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableSelectionOptions() *VariableSelectionOptions {
	this := VariableSelectionOptions{}
	return &this
}

// NewVariableSelectionOptionsWithDefaults instantiates a new VariableSelectionOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableSelectionOptionsWithDefaults() *VariableSelectionOptions {
	this := VariableSelectionOptions{}
	return &this
}

// GetSelectionType returns the SelectionType field value if set, zero value otherwise.
func (o *VariableSelectionOptions) GetSelectionType() SelectionType {
	if o == nil || IsNil(o.SelectionType) {
		var ret SelectionType
		return ret
	}
	return *o.SelectionType
}

// GetSelectionTypeOk returns a tuple with the SelectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableSelectionOptions) GetSelectionTypeOk() (*SelectionType, bool) {
	if o == nil || IsNil(o.SelectionType) {
		return nil, false
	}
	return o.SelectionType, true
}

// HasSelectionType returns a boolean if a field has been set.
func (o *VariableSelectionOptions) HasSelectionType() bool {
	if o != nil && !IsNil(o.SelectionType) {
		return true
	}

	return false
}

// SetSelectionType gets a reference to the given SelectionType and assigns it to the SelectionType field.
func (o *VariableSelectionOptions) SetSelectionType(v SelectionType) {
	o.SelectionType = &v
}

func (o VariableSelectionOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariableSelectionOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SelectionType) {
		toSerialize["selectionType"] = o.SelectionType
	}
	return toSerialize, nil
}

type NullableVariableSelectionOptions struct {
	value *VariableSelectionOptions
	isSet bool
}

func (v NullableVariableSelectionOptions) Get() *VariableSelectionOptions {
	return v.value
}

func (v *NullableVariableSelectionOptions) Set(val *VariableSelectionOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableSelectionOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableSelectionOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableSelectionOptions(val *VariableSelectionOptions) *NullableVariableSelectionOptions {
	return &NullableVariableSelectionOptions{value: val, isSet: true}
}

func (v NullableVariableSelectionOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableSelectionOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


