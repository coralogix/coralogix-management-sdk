/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the WidgetDefinitionOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WidgetDefinitionOneOf{}

// WidgetDefinitionOneOf struct for WidgetDefinitionOneOf
type WidgetDefinitionOneOf struct {
	LineChart *LineChart `json:"lineChart,omitempty"`
}

// NewWidgetDefinitionOneOf instantiates a new WidgetDefinitionOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetDefinitionOneOf() *WidgetDefinitionOneOf {
	this := WidgetDefinitionOneOf{}
	return &this
}

// NewWidgetDefinitionOneOfWithDefaults instantiates a new WidgetDefinitionOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetDefinitionOneOfWithDefaults() *WidgetDefinitionOneOf {
	this := WidgetDefinitionOneOf{}
	return &this
}

// GetLineChart returns the LineChart field value if set, zero value otherwise.
func (o *WidgetDefinitionOneOf) GetLineChart() LineChart {
	if o == nil || IsNil(o.LineChart) {
		var ret LineChart
		return ret
	}
	return *o.LineChart
}

// GetLineChartOk returns a tuple with the LineChart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetDefinitionOneOf) GetLineChartOk() (*LineChart, bool) {
	if o == nil || IsNil(o.LineChart) {
		return nil, false
	}
	return o.LineChart, true
}

// HasLineChart returns a boolean if a field has been set.
func (o *WidgetDefinitionOneOf) HasLineChart() bool {
	if o != nil && !IsNil(o.LineChart) {
		return true
	}

	return false
}

// SetLineChart gets a reference to the given LineChart and assigns it to the LineChart field.
func (o *WidgetDefinitionOneOf) SetLineChart(v LineChart) {
	o.LineChart = &v
}

func (o WidgetDefinitionOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WidgetDefinitionOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LineChart) {
		toSerialize["lineChart"] = o.LineChart
	}
	return toSerialize, nil
}

type NullableWidgetDefinitionOneOf struct {
	value *WidgetDefinitionOneOf
	isSet bool
}

func (v NullableWidgetDefinitionOneOf) Get() *WidgetDefinitionOneOf {
	return v.value
}

func (v *NullableWidgetDefinitionOneOf) Set(val *WidgetDefinitionOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetDefinitionOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetDefinitionOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetDefinitionOneOf(val *WidgetDefinitionOneOf) *NullableWidgetDefinitionOneOf {
	return &NullableWidgetDefinitionOneOf{value: val, isSet: true}
}

func (v NullableWidgetDefinitionOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetDefinitionOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


