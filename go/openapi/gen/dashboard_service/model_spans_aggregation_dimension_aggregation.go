/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the SpansAggregationDimensionAggregation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpansAggregationDimensionAggregation{}

// SpansAggregationDimensionAggregation struct for SpansAggregationDimensionAggregation
type SpansAggregationDimensionAggregation struct {
	DimensionAggregation *DimensionAggregation `json:"dimensionAggregation,omitempty"`
}

// NewSpansAggregationDimensionAggregation instantiates a new SpansAggregationDimensionAggregation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpansAggregationDimensionAggregation() *SpansAggregationDimensionAggregation {
	this := SpansAggregationDimensionAggregation{}
	return &this
}

// NewSpansAggregationDimensionAggregationWithDefaults instantiates a new SpansAggregationDimensionAggregation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpansAggregationDimensionAggregationWithDefaults() *SpansAggregationDimensionAggregation {
	this := SpansAggregationDimensionAggregation{}
	return &this
}

// GetDimensionAggregation returns the DimensionAggregation field value if set, zero value otherwise.
func (o *SpansAggregationDimensionAggregation) GetDimensionAggregation() DimensionAggregation {
	if o == nil || IsNil(o.DimensionAggregation) {
		var ret DimensionAggregation
		return ret
	}
	return *o.DimensionAggregation
}

// GetDimensionAggregationOk returns a tuple with the DimensionAggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpansAggregationDimensionAggregation) GetDimensionAggregationOk() (*DimensionAggregation, bool) {
	if o == nil || IsNil(o.DimensionAggregation) {
		return nil, false
	}
	return o.DimensionAggregation, true
}

// HasDimensionAggregation returns a boolean if a field has been set.
func (o *SpansAggregationDimensionAggregation) HasDimensionAggregation() bool {
	if o != nil && !IsNil(o.DimensionAggregation) {
		return true
	}

	return false
}

// SetDimensionAggregation gets a reference to the given DimensionAggregation and assigns it to the DimensionAggregation field.
func (o *SpansAggregationDimensionAggregation) SetDimensionAggregation(v DimensionAggregation) {
	o.DimensionAggregation = &v
}

func (o SpansAggregationDimensionAggregation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpansAggregationDimensionAggregation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DimensionAggregation) {
		toSerialize["dimensionAggregation"] = o.DimensionAggregation
	}
	return toSerialize, nil
}

type NullableSpansAggregationDimensionAggregation struct {
	value *SpansAggregationDimensionAggregation
	isSet bool
}

func (v NullableSpansAggregationDimensionAggregation) Get() *SpansAggregationDimensionAggregation {
	return v.value
}

func (v *NullableSpansAggregationDimensionAggregation) Set(val *SpansAggregationDimensionAggregation) {
	v.value = val
	v.isSet = true
}

func (v NullableSpansAggregationDimensionAggregation) IsSet() bool {
	return v.isSet
}

func (v *NullableSpansAggregationDimensionAggregation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpansAggregationDimensionAggregation(val *SpansAggregationDimensionAggregation) *NullableSpansAggregationDimensionAggregation {
	return &NullableSpansAggregationDimensionAggregation{value: val, isSet: true}
}

func (v NullableSpansAggregationDimensionAggregation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpansAggregationDimensionAggregation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


