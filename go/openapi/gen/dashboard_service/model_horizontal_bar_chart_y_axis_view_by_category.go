/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the HorizontalBarChartYAxisViewByCategory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HorizontalBarChartYAxisViewByCategory{}

// HorizontalBarChartYAxisViewByCategory struct for HorizontalBarChartYAxisViewByCategory
type HorizontalBarChartYAxisViewByCategory struct {
	Category map[string]interface{} `json:"category,omitempty"`
}

// NewHorizontalBarChartYAxisViewByCategory instantiates a new HorizontalBarChartYAxisViewByCategory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHorizontalBarChartYAxisViewByCategory() *HorizontalBarChartYAxisViewByCategory {
	this := HorizontalBarChartYAxisViewByCategory{}
	return &this
}

// NewHorizontalBarChartYAxisViewByCategoryWithDefaults instantiates a new HorizontalBarChartYAxisViewByCategory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHorizontalBarChartYAxisViewByCategoryWithDefaults() *HorizontalBarChartYAxisViewByCategory {
	this := HorizontalBarChartYAxisViewByCategory{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *HorizontalBarChartYAxisViewByCategory) GetCategory() map[string]interface{} {
	if o == nil || IsNil(o.Category) {
		var ret map[string]interface{}
		return ret
	}
	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HorizontalBarChartYAxisViewByCategory) GetCategoryOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Category) {
		return map[string]interface{}{}, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *HorizontalBarChartYAxisViewByCategory) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given map[string]interface{} and assigns it to the Category field.
func (o *HorizontalBarChartYAxisViewByCategory) SetCategory(v map[string]interface{}) {
	o.Category = v
}

func (o HorizontalBarChartYAxisViewByCategory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HorizontalBarChartYAxisViewByCategory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	return toSerialize, nil
}

type NullableHorizontalBarChartYAxisViewByCategory struct {
	value *HorizontalBarChartYAxisViewByCategory
	isSet bool
}

func (v NullableHorizontalBarChartYAxisViewByCategory) Get() *HorizontalBarChartYAxisViewByCategory {
	return v.value
}

func (v *NullableHorizontalBarChartYAxisViewByCategory) Set(val *HorizontalBarChartYAxisViewByCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableHorizontalBarChartYAxisViewByCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableHorizontalBarChartYAxisViewByCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHorizontalBarChartYAxisViewByCategory(val *HorizontalBarChartYAxisViewByCategory) *NullableHorizontalBarChartYAxisViewByCategory {
	return &NullableHorizontalBarChartYAxisViewByCategory{value: val, isSet: true}
}

func (v NullableHorizontalBarChartYAxisViewByCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHorizontalBarChartYAxisViewByCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


