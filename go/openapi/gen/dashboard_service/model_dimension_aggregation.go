/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the DimensionAggregation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DimensionAggregation{}

// DimensionAggregation struct for DimensionAggregation
type DimensionAggregation struct {
	AggregationType *DimensionAggregationType `json:"aggregationType,omitempty"`
	DimensionField *DimensionField `json:"dimensionField,omitempty"`
}

// NewDimensionAggregation instantiates a new DimensionAggregation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDimensionAggregation() *DimensionAggregation {
	this := DimensionAggregation{}
	return &this
}

// NewDimensionAggregationWithDefaults instantiates a new DimensionAggregation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDimensionAggregationWithDefaults() *DimensionAggregation {
	this := DimensionAggregation{}
	return &this
}

// GetAggregationType returns the AggregationType field value if set, zero value otherwise.
func (o *DimensionAggregation) GetAggregationType() DimensionAggregationType {
	if o == nil || IsNil(o.AggregationType) {
		var ret DimensionAggregationType
		return ret
	}
	return *o.AggregationType
}

// GetAggregationTypeOk returns a tuple with the AggregationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionAggregation) GetAggregationTypeOk() (*DimensionAggregationType, bool) {
	if o == nil || IsNil(o.AggregationType) {
		return nil, false
	}
	return o.AggregationType, true
}

// HasAggregationType returns a boolean if a field has been set.
func (o *DimensionAggregation) HasAggregationType() bool {
	if o != nil && !IsNil(o.AggregationType) {
		return true
	}

	return false
}

// SetAggregationType gets a reference to the given DimensionAggregationType and assigns it to the AggregationType field.
func (o *DimensionAggregation) SetAggregationType(v DimensionAggregationType) {
	o.AggregationType = &v
}

// GetDimensionField returns the DimensionField field value if set, zero value otherwise.
func (o *DimensionAggregation) GetDimensionField() DimensionField {
	if o == nil || IsNil(o.DimensionField) {
		var ret DimensionField
		return ret
	}
	return *o.DimensionField
}

// GetDimensionFieldOk returns a tuple with the DimensionField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionAggregation) GetDimensionFieldOk() (*DimensionField, bool) {
	if o == nil || IsNil(o.DimensionField) {
		return nil, false
	}
	return o.DimensionField, true
}

// HasDimensionField returns a boolean if a field has been set.
func (o *DimensionAggregation) HasDimensionField() bool {
	if o != nil && !IsNil(o.DimensionField) {
		return true
	}

	return false
}

// SetDimensionField gets a reference to the given DimensionField and assigns it to the DimensionField field.
func (o *DimensionAggregation) SetDimensionField(v DimensionField) {
	o.DimensionField = &v
}

func (o DimensionAggregation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DimensionAggregation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AggregationType) {
		toSerialize["aggregationType"] = o.AggregationType
	}
	if !IsNil(o.DimensionField) {
		toSerialize["dimensionField"] = o.DimensionField
	}
	return toSerialize, nil
}

type NullableDimensionAggregation struct {
	value *DimensionAggregation
	isSet bool
}

func (v NullableDimensionAggregation) Get() *DimensionAggregation {
	return v.value
}

func (v *NullableDimensionAggregation) Set(val *DimensionAggregation) {
	v.value = val
	v.isSet = true
}

func (v NullableDimensionAggregation) IsSet() bool {
	return v.isSet
}

func (v *NullableDimensionAggregation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDimensionAggregation(val *DimensionAggregation) *NullableDimensionAggregation {
	return &NullableDimensionAggregation{value: val, isSet: true}
}

func (v NullableDimensionAggregation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDimensionAggregation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


