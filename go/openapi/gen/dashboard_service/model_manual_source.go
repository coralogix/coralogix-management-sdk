/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the ManualSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManualSource{}

// ManualSource struct for ManualSource
type ManualSource struct {
	MessageTemplate *string `json:"messageTemplate,omitempty"`
	Orientation *AnnotationOrientation `json:"orientation,omitempty"`
	Strategy *ManualSourceStrategy `json:"strategy,omitempty"`
}

// NewManualSource instantiates a new ManualSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManualSource() *ManualSource {
	this := ManualSource{}
	return &this
}

// NewManualSourceWithDefaults instantiates a new ManualSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManualSourceWithDefaults() *ManualSource {
	this := ManualSource{}
	return &this
}

// GetMessageTemplate returns the MessageTemplate field value if set, zero value otherwise.
func (o *ManualSource) GetMessageTemplate() string {
	if o == nil || IsNil(o.MessageTemplate) {
		var ret string
		return ret
	}
	return *o.MessageTemplate
}

// GetMessageTemplateOk returns a tuple with the MessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualSource) GetMessageTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.MessageTemplate) {
		return nil, false
	}
	return o.MessageTemplate, true
}

// HasMessageTemplate returns a boolean if a field has been set.
func (o *ManualSource) HasMessageTemplate() bool {
	if o != nil && !IsNil(o.MessageTemplate) {
		return true
	}

	return false
}

// SetMessageTemplate gets a reference to the given string and assigns it to the MessageTemplate field.
func (o *ManualSource) SetMessageTemplate(v string) {
	o.MessageTemplate = &v
}

// GetOrientation returns the Orientation field value if set, zero value otherwise.
func (o *ManualSource) GetOrientation() AnnotationOrientation {
	if o == nil || IsNil(o.Orientation) {
		var ret AnnotationOrientation
		return ret
	}
	return *o.Orientation
}

// GetOrientationOk returns a tuple with the Orientation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualSource) GetOrientationOk() (*AnnotationOrientation, bool) {
	if o == nil || IsNil(o.Orientation) {
		return nil, false
	}
	return o.Orientation, true
}

// HasOrientation returns a boolean if a field has been set.
func (o *ManualSource) HasOrientation() bool {
	if o != nil && !IsNil(o.Orientation) {
		return true
	}

	return false
}

// SetOrientation gets a reference to the given AnnotationOrientation and assigns it to the Orientation field.
func (o *ManualSource) SetOrientation(v AnnotationOrientation) {
	o.Orientation = &v
}

// GetStrategy returns the Strategy field value if set, zero value otherwise.
func (o *ManualSource) GetStrategy() ManualSourceStrategy {
	if o == nil || IsNil(o.Strategy) {
		var ret ManualSourceStrategy
		return ret
	}
	return *o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualSource) GetStrategyOk() (*ManualSourceStrategy, bool) {
	if o == nil || IsNil(o.Strategy) {
		return nil, false
	}
	return o.Strategy, true
}

// HasStrategy returns a boolean if a field has been set.
func (o *ManualSource) HasStrategy() bool {
	if o != nil && !IsNil(o.Strategy) {
		return true
	}

	return false
}

// SetStrategy gets a reference to the given ManualSourceStrategy and assigns it to the Strategy field.
func (o *ManualSource) SetStrategy(v ManualSourceStrategy) {
	o.Strategy = &v
}

func (o ManualSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManualSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessageTemplate) {
		toSerialize["messageTemplate"] = o.MessageTemplate
	}
	if !IsNil(o.Orientation) {
		toSerialize["orientation"] = o.Orientation
	}
	if !IsNil(o.Strategy) {
		toSerialize["strategy"] = o.Strategy
	}
	return toSerialize, nil
}

type NullableManualSource struct {
	value *ManualSource
	isSet bool
}

func (v NullableManualSource) Get() *ManualSource {
	return v.value
}

func (v *NullableManualSource) Set(val *ManualSource) {
	v.value = val
	v.isSet = true
}

func (v NullableManualSource) IsSet() bool {
	return v.isSet
}

func (v *NullableManualSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManualSource(val *ManualSource) *NullableManualSource {
	return &NullableManualSource{value: val, isSet: true}
}

func (v NullableManualSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManualSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


