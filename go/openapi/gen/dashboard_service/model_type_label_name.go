/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the TypeLabelName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TypeLabelName{}

// TypeLabelName struct for TypeLabelName
type TypeLabelName struct {
	LabelName *QueryMetricsQueryTypeLabelName `json:"labelName,omitempty"`
}

// NewTypeLabelName instantiates a new TypeLabelName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypeLabelName() *TypeLabelName {
	this := TypeLabelName{}
	return &this
}

// NewTypeLabelNameWithDefaults instantiates a new TypeLabelName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypeLabelNameWithDefaults() *TypeLabelName {
	this := TypeLabelName{}
	return &this
}

// GetLabelName returns the LabelName field value if set, zero value otherwise.
func (o *TypeLabelName) GetLabelName() QueryMetricsQueryTypeLabelName {
	if o == nil || IsNil(o.LabelName) {
		var ret QueryMetricsQueryTypeLabelName
		return ret
	}
	return *o.LabelName
}

// GetLabelNameOk returns a tuple with the LabelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeLabelName) GetLabelNameOk() (*QueryMetricsQueryTypeLabelName, bool) {
	if o == nil || IsNil(o.LabelName) {
		return nil, false
	}
	return o.LabelName, true
}

// HasLabelName returns a boolean if a field has been set.
func (o *TypeLabelName) HasLabelName() bool {
	if o != nil && !IsNil(o.LabelName) {
		return true
	}

	return false
}

// SetLabelName gets a reference to the given QueryMetricsQueryTypeLabelName and assigns it to the LabelName field.
func (o *TypeLabelName) SetLabelName(v QueryMetricsQueryTypeLabelName) {
	o.LabelName = &v
}

func (o TypeLabelName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TypeLabelName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LabelName) {
		toSerialize["labelName"] = o.LabelName
	}
	return toSerialize, nil
}

type NullableTypeLabelName struct {
	value *TypeLabelName
	isSet bool
}

func (v NullableTypeLabelName) Get() *TypeLabelName {
	return v.value
}

func (v *NullableTypeLabelName) Set(val *TypeLabelName) {
	v.value = val
	v.isSet = true
}

func (v NullableTypeLabelName) IsSet() bool {
	return v.isSet
}

func (v *NullableTypeLabelName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypeLabelName(val *TypeLabelName) *NullableTypeLabelName {
	return &NullableTypeLabelName{value: val, isSet: true}
}

func (v NullableTypeLabelName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypeLabelName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


