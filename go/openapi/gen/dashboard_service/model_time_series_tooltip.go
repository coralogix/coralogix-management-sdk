/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the TimeSeriesTooltip type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeSeriesTooltip{}

// TimeSeriesTooltip struct for TimeSeriesTooltip
type TimeSeriesTooltip struct {
	// Type of the tooltip display, can be showing single series value or all series values at once
	ShowAllSeries *bool `json:"showAllSeries,omitempty"`
	ShowLabels *bool `json:"showLabels,omitempty"`
}

// NewTimeSeriesTooltip instantiates a new TimeSeriesTooltip object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeSeriesTooltip() *TimeSeriesTooltip {
	this := TimeSeriesTooltip{}
	return &this
}

// NewTimeSeriesTooltipWithDefaults instantiates a new TimeSeriesTooltip object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeSeriesTooltipWithDefaults() *TimeSeriesTooltip {
	this := TimeSeriesTooltip{}
	return &this
}

// GetShowAllSeries returns the ShowAllSeries field value if set, zero value otherwise.
func (o *TimeSeriesTooltip) GetShowAllSeries() bool {
	if o == nil || IsNil(o.ShowAllSeries) {
		var ret bool
		return ret
	}
	return *o.ShowAllSeries
}

// GetShowAllSeriesOk returns a tuple with the ShowAllSeries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesTooltip) GetShowAllSeriesOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowAllSeries) {
		return nil, false
	}
	return o.ShowAllSeries, true
}

// HasShowAllSeries returns a boolean if a field has been set.
func (o *TimeSeriesTooltip) HasShowAllSeries() bool {
	if o != nil && !IsNil(o.ShowAllSeries) {
		return true
	}

	return false
}

// SetShowAllSeries gets a reference to the given bool and assigns it to the ShowAllSeries field.
func (o *TimeSeriesTooltip) SetShowAllSeries(v bool) {
	o.ShowAllSeries = &v
}

// GetShowLabels returns the ShowLabels field value if set, zero value otherwise.
func (o *TimeSeriesTooltip) GetShowLabels() bool {
	if o == nil || IsNil(o.ShowLabels) {
		var ret bool
		return ret
	}
	return *o.ShowLabels
}

// GetShowLabelsOk returns a tuple with the ShowLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesTooltip) GetShowLabelsOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowLabels) {
		return nil, false
	}
	return o.ShowLabels, true
}

// HasShowLabels returns a boolean if a field has been set.
func (o *TimeSeriesTooltip) HasShowLabels() bool {
	if o != nil && !IsNil(o.ShowLabels) {
		return true
	}

	return false
}

// SetShowLabels gets a reference to the given bool and assigns it to the ShowLabels field.
func (o *TimeSeriesTooltip) SetShowLabels(v bool) {
	o.ShowLabels = &v
}

func (o TimeSeriesTooltip) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeSeriesTooltip) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShowAllSeries) {
		toSerialize["showAllSeries"] = o.ShowAllSeries
	}
	if !IsNil(o.ShowLabels) {
		toSerialize["showLabels"] = o.ShowLabels
	}
	return toSerialize, nil
}

type NullableTimeSeriesTooltip struct {
	value *TimeSeriesTooltip
	isSet bool
}

func (v NullableTimeSeriesTooltip) Get() *TimeSeriesTooltip {
	return v.value
}

func (v *NullableTimeSeriesTooltip) Set(val *TimeSeriesTooltip) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeSeriesTooltip) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeSeriesTooltip) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeSeriesTooltip(val *TimeSeriesTooltip) *NullableTimeSeriesTooltip {
	return &NullableTimeSeriesTooltip{value: val, isSet: true}
}

func (v NullableTimeSeriesTooltip) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeSeriesTooltip) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


