/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the QuerySourceMetricsQuery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuerySourceMetricsQuery{}

// QuerySourceMetricsQuery struct for QuerySourceMetricsQuery
type QuerySourceMetricsQuery struct {
	AllOption *AllOption `json:"allOption,omitempty"`
	MetricsQuery *QuerySourceMetricsQuery `json:"metricsQuery,omitempty"`
	RefreshStrategy *VariableSourceV2RefreshStrategy `json:"refreshStrategy,omitempty"`
	ValueDisplayOptions *VariableSourceV2ValueDisplayOptions `json:"valueDisplayOptions,omitempty"`
	ValuesOrderDirection *OrderDirection `json:"valuesOrderDirection,omitempty"`
}

// NewQuerySourceMetricsQuery instantiates a new QuerySourceMetricsQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuerySourceMetricsQuery() *QuerySourceMetricsQuery {
	this := QuerySourceMetricsQuery{}
	return &this
}

// NewQuerySourceMetricsQueryWithDefaults instantiates a new QuerySourceMetricsQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuerySourceMetricsQueryWithDefaults() *QuerySourceMetricsQuery {
	this := QuerySourceMetricsQuery{}
	return &this
}

// GetAllOption returns the AllOption field value if set, zero value otherwise.
func (o *QuerySourceMetricsQuery) GetAllOption() AllOption {
	if o == nil || IsNil(o.AllOption) {
		var ret AllOption
		return ret
	}
	return *o.AllOption
}

// GetAllOptionOk returns a tuple with the AllOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySourceMetricsQuery) GetAllOptionOk() (*AllOption, bool) {
	if o == nil || IsNil(o.AllOption) {
		return nil, false
	}
	return o.AllOption, true
}

// HasAllOption returns a boolean if a field has been set.
func (o *QuerySourceMetricsQuery) HasAllOption() bool {
	if o != nil && !IsNil(o.AllOption) {
		return true
	}

	return false
}

// SetAllOption gets a reference to the given AllOption and assigns it to the AllOption field.
func (o *QuerySourceMetricsQuery) SetAllOption(v AllOption) {
	o.AllOption = &v
}

// GetMetricsQuery returns the MetricsQuery field value if set, zero value otherwise.
func (o *QuerySourceMetricsQuery) GetMetricsQuery() QuerySourceMetricsQuery {
	if o == nil || IsNil(o.MetricsQuery) {
		var ret QuerySourceMetricsQuery
		return ret
	}
	return *o.MetricsQuery
}

// GetMetricsQueryOk returns a tuple with the MetricsQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySourceMetricsQuery) GetMetricsQueryOk() (*QuerySourceMetricsQuery, bool) {
	if o == nil || IsNil(o.MetricsQuery) {
		return nil, false
	}
	return o.MetricsQuery, true
}

// HasMetricsQuery returns a boolean if a field has been set.
func (o *QuerySourceMetricsQuery) HasMetricsQuery() bool {
	if o != nil && !IsNil(o.MetricsQuery) {
		return true
	}

	return false
}

// SetMetricsQuery gets a reference to the given QuerySourceMetricsQuery and assigns it to the MetricsQuery field.
func (o *QuerySourceMetricsQuery) SetMetricsQuery(v QuerySourceMetricsQuery) {
	o.MetricsQuery = &v
}

// GetRefreshStrategy returns the RefreshStrategy field value if set, zero value otherwise.
func (o *QuerySourceMetricsQuery) GetRefreshStrategy() VariableSourceV2RefreshStrategy {
	if o == nil || IsNil(o.RefreshStrategy) {
		var ret VariableSourceV2RefreshStrategy
		return ret
	}
	return *o.RefreshStrategy
}

// GetRefreshStrategyOk returns a tuple with the RefreshStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySourceMetricsQuery) GetRefreshStrategyOk() (*VariableSourceV2RefreshStrategy, bool) {
	if o == nil || IsNil(o.RefreshStrategy) {
		return nil, false
	}
	return o.RefreshStrategy, true
}

// HasRefreshStrategy returns a boolean if a field has been set.
func (o *QuerySourceMetricsQuery) HasRefreshStrategy() bool {
	if o != nil && !IsNil(o.RefreshStrategy) {
		return true
	}

	return false
}

// SetRefreshStrategy gets a reference to the given VariableSourceV2RefreshStrategy and assigns it to the RefreshStrategy field.
func (o *QuerySourceMetricsQuery) SetRefreshStrategy(v VariableSourceV2RefreshStrategy) {
	o.RefreshStrategy = &v
}

// GetValueDisplayOptions returns the ValueDisplayOptions field value if set, zero value otherwise.
func (o *QuerySourceMetricsQuery) GetValueDisplayOptions() VariableSourceV2ValueDisplayOptions {
	if o == nil || IsNil(o.ValueDisplayOptions) {
		var ret VariableSourceV2ValueDisplayOptions
		return ret
	}
	return *o.ValueDisplayOptions
}

// GetValueDisplayOptionsOk returns a tuple with the ValueDisplayOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySourceMetricsQuery) GetValueDisplayOptionsOk() (*VariableSourceV2ValueDisplayOptions, bool) {
	if o == nil || IsNil(o.ValueDisplayOptions) {
		return nil, false
	}
	return o.ValueDisplayOptions, true
}

// HasValueDisplayOptions returns a boolean if a field has been set.
func (o *QuerySourceMetricsQuery) HasValueDisplayOptions() bool {
	if o != nil && !IsNil(o.ValueDisplayOptions) {
		return true
	}

	return false
}

// SetValueDisplayOptions gets a reference to the given VariableSourceV2ValueDisplayOptions and assigns it to the ValueDisplayOptions field.
func (o *QuerySourceMetricsQuery) SetValueDisplayOptions(v VariableSourceV2ValueDisplayOptions) {
	o.ValueDisplayOptions = &v
}

// GetValuesOrderDirection returns the ValuesOrderDirection field value if set, zero value otherwise.
func (o *QuerySourceMetricsQuery) GetValuesOrderDirection() OrderDirection {
	if o == nil || IsNil(o.ValuesOrderDirection) {
		var ret OrderDirection
		return ret
	}
	return *o.ValuesOrderDirection
}

// GetValuesOrderDirectionOk returns a tuple with the ValuesOrderDirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySourceMetricsQuery) GetValuesOrderDirectionOk() (*OrderDirection, bool) {
	if o == nil || IsNil(o.ValuesOrderDirection) {
		return nil, false
	}
	return o.ValuesOrderDirection, true
}

// HasValuesOrderDirection returns a boolean if a field has been set.
func (o *QuerySourceMetricsQuery) HasValuesOrderDirection() bool {
	if o != nil && !IsNil(o.ValuesOrderDirection) {
		return true
	}

	return false
}

// SetValuesOrderDirection gets a reference to the given OrderDirection and assigns it to the ValuesOrderDirection field.
func (o *QuerySourceMetricsQuery) SetValuesOrderDirection(v OrderDirection) {
	o.ValuesOrderDirection = &v
}

func (o QuerySourceMetricsQuery) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuerySourceMetricsQuery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllOption) {
		toSerialize["allOption"] = o.AllOption
	}
	if !IsNil(o.MetricsQuery) {
		toSerialize["metricsQuery"] = o.MetricsQuery
	}
	if !IsNil(o.RefreshStrategy) {
		toSerialize["refreshStrategy"] = o.RefreshStrategy
	}
	if !IsNil(o.ValueDisplayOptions) {
		toSerialize["valueDisplayOptions"] = o.ValueDisplayOptions
	}
	if !IsNil(o.ValuesOrderDirection) {
		toSerialize["valuesOrderDirection"] = o.ValuesOrderDirection
	}
	return toSerialize, nil
}

type NullableQuerySourceMetricsQuery struct {
	value *QuerySourceMetricsQuery
	isSet bool
}

func (v NullableQuerySourceMetricsQuery) Get() *QuerySourceMetricsQuery {
	return v.value
}

func (v *NullableQuerySourceMetricsQuery) Set(val *QuerySourceMetricsQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableQuerySourceMetricsQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableQuerySourceMetricsQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuerySourceMetricsQuery(val *QuerySourceMetricsQuery) *NullableQuerySourceMetricsQuery {
	return &NullableQuerySourceMetricsQuery{value: val, isSet: true}
}

func (v NullableQuerySourceMetricsQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuerySourceMetricsQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


