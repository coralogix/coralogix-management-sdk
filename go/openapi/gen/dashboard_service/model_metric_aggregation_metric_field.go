/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
	"fmt"
)

// MetricAggregationMetricField the model 'MetricAggregationMetricField'
type MetricAggregationMetricField string

// List of MetricAggregation.MetricField
const (
	METRICAGGREGATIONMETRICFIELD_METRIC_FIELD_UNSPECIFIED MetricAggregationMetricField = "METRIC_FIELD_UNSPECIFIED"
	METRICAGGREGATIONMETRICFIELD_METRIC_FIELD_DURATION MetricAggregationMetricField = "METRIC_FIELD_DURATION"
)

// All allowed values of MetricAggregationMetricField enum
var AllowedMetricAggregationMetricFieldEnumValues = []MetricAggregationMetricField{
	"METRIC_FIELD_UNSPECIFIED",
	"METRIC_FIELD_DURATION",
}

func (v *MetricAggregationMetricField) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MetricAggregationMetricField(value)
	for _, existing := range AllowedMetricAggregationMetricFieldEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MetricAggregationMetricField", value)
}

// NewMetricAggregationMetricFieldFromValue returns a pointer to a valid MetricAggregationMetricField
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMetricAggregationMetricFieldFromValue(v string) (*MetricAggregationMetricField, error) {
	ev := MetricAggregationMetricField(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MetricAggregationMetricField: valid values are %v", v, AllowedMetricAggregationMetricFieldEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MetricAggregationMetricField) IsValid() bool {
	for _, existing := range AllowedMetricAggregationMetricFieldEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MetricAggregation.MetricField value
func (v MetricAggregationMetricField) Ptr() *MetricAggregationMetricField {
	return &v
}

type NullableMetricAggregationMetricField struct {
	value *MetricAggregationMetricField
	isSet bool
}

func (v NullableMetricAggregationMetricField) Get() *MetricAggregationMetricField {
	return v.value
}

func (v *NullableMetricAggregationMetricField) Set(val *MetricAggregationMetricField) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricAggregationMetricField) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricAggregationMetricField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricAggregationMetricField(val *MetricAggregationMetricField) *NullableMetricAggregationMetricField {
	return &NullableMetricAggregationMetricField{value: val, isSet: true}
}

func (v NullableMetricAggregationMetricField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricAggregationMetricField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

