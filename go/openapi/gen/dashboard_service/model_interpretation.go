/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
	"fmt"
)

// Interpretation the model 'Interpretation'
type Interpretation string

// List of Interpretation
const (
	INTERPRETATION_INTERPRETATION_UNSPECIFIED Interpretation = "INTERPRETATION_UNSPECIFIED"
	INTERPRETATION_INTERPRETATION_RAW_DATA_TABLE Interpretation = "INTERPRETATION_RAW_DATA_TABLE"
	INTERPRETATION_INTERPRETATION_TREND_OVER_TIME_LINE Interpretation = "INTERPRETATION_TREND_OVER_TIME_LINE"
	INTERPRETATION_INTERPRETATION_SINGLE_VALUE_KPI Interpretation = "INTERPRETATION_SINGLE_VALUE_KPI"
	INTERPRETATION_INTERPRETATION_MULTI_VALUE_KPI Interpretation = "INTERPRETATION_MULTI_VALUE_KPI"
	INTERPRETATION_INTERPRETATION_CATEGORICAL_ANALYSIS_VERTICAL_BARS Interpretation = "INTERPRETATION_CATEGORICAL_ANALYSIS_VERTICAL_BARS"
	INTERPRETATION_INTERPRETATION_SINGLE_VALUE_KPI_STAT Interpretation = "INTERPRETATION_SINGLE_VALUE_KPI_STAT"
	INTERPRETATION_INTERPRETATION_SINGLE_VALUE_KPI_GAUGE Interpretation = "INTERPRETATION_SINGLE_VALUE_KPI_GAUGE"
	INTERPRETATION_INTERPRETATION_MULTI_VALUE_KPI_STAT Interpretation = "INTERPRETATION_MULTI_VALUE_KPI_STAT"
	INTERPRETATION_INTERPRETATION_MULTI_VALUE_KPI_GAUGE Interpretation = "INTERPRETATION_MULTI_VALUE_KPI_GAUGE"
	INTERPRETATION_INTERPRETATION_MULTI_VALUE_KPI_HEXAGON_BINS Interpretation = "INTERPRETATION_MULTI_VALUE_KPI_HEXAGON_BINS"
	INTERPRETATION_INTERPRETATION_CATEGORICAL_ANALYSIS_PIE_CHART Interpretation = "INTERPRETATION_CATEGORICAL_ANALYSIS_PIE_CHART"
	INTERPRETATION_INTERPRETATION_CATEGORICAL_ANALYSIS_HORIZONTAL_BARS Interpretation = "INTERPRETATION_CATEGORICAL_ANALYSIS_HORIZONTAL_BARS"
)

// All allowed values of Interpretation enum
var AllowedInterpretationEnumValues = []Interpretation{
	"INTERPRETATION_UNSPECIFIED",
	"INTERPRETATION_RAW_DATA_TABLE",
	"INTERPRETATION_TREND_OVER_TIME_LINE",
	"INTERPRETATION_SINGLE_VALUE_KPI",
	"INTERPRETATION_MULTI_VALUE_KPI",
	"INTERPRETATION_CATEGORICAL_ANALYSIS_VERTICAL_BARS",
	"INTERPRETATION_SINGLE_VALUE_KPI_STAT",
	"INTERPRETATION_SINGLE_VALUE_KPI_GAUGE",
	"INTERPRETATION_MULTI_VALUE_KPI_STAT",
	"INTERPRETATION_MULTI_VALUE_KPI_GAUGE",
	"INTERPRETATION_MULTI_VALUE_KPI_HEXAGON_BINS",
	"INTERPRETATION_CATEGORICAL_ANALYSIS_PIE_CHART",
	"INTERPRETATION_CATEGORICAL_ANALYSIS_HORIZONTAL_BARS",
}

func (v *Interpretation) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Interpretation(value)
	for _, existing := range AllowedInterpretationEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Interpretation", value)
}

// NewInterpretationFromValue returns a pointer to a valid Interpretation
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewInterpretationFromValue(v string) (*Interpretation, error) {
	ev := Interpretation(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Interpretation: valid values are %v", v, AllowedInterpretationEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Interpretation) IsValid() bool {
	for _, existing := range AllowedInterpretationEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Interpretation value
func (v Interpretation) Ptr() *Interpretation {
	return &v
}

type NullableInterpretation struct {
	value *Interpretation
	isSet bool
}

func (v NullableInterpretation) Get() *Interpretation {
	return v.value
}

func (v *NullableInterpretation) Set(val *Interpretation) {
	v.value = val
	v.isSet = true
}

func (v NullableInterpretation) IsSet() bool {
	return v.isSet
}

func (v *NullableInterpretation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterpretation(val *Interpretation) *NullableInterpretation {
	return &NullableInterpretation{value: val, isSet: true}
}

func (v NullableInterpretation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterpretation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

