/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VisualizationStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VisualizationStat{}

// VisualizationStat struct for VisualizationStat
type VisualizationStat struct {
	Stat *Stat `json:"stat,omitempty"`
}

// NewVisualizationStat instantiates a new VisualizationStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVisualizationStat() *VisualizationStat {
	this := VisualizationStat{}
	return &this
}

// NewVisualizationStatWithDefaults instantiates a new VisualizationStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVisualizationStatWithDefaults() *VisualizationStat {
	this := VisualizationStat{}
	return &this
}

// GetStat returns the Stat field value if set, zero value otherwise.
func (o *VisualizationStat) GetStat() Stat {
	if o == nil || IsNil(o.Stat) {
		var ret Stat
		return ret
	}
	return *o.Stat
}

// GetStatOk returns a tuple with the Stat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisualizationStat) GetStatOk() (*Stat, bool) {
	if o == nil || IsNil(o.Stat) {
		return nil, false
	}
	return o.Stat, true
}

// HasStat returns a boolean if a field has been set.
func (o *VisualizationStat) HasStat() bool {
	if o != nil && !IsNil(o.Stat) {
		return true
	}

	return false
}

// SetStat gets a reference to the given Stat and assigns it to the Stat field.
func (o *VisualizationStat) SetStat(v Stat) {
	o.Stat = &v
}

func (o VisualizationStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VisualizationStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Stat) {
		toSerialize["stat"] = o.Stat
	}
	return toSerialize, nil
}

type NullableVisualizationStat struct {
	value *VisualizationStat
	isSet bool
}

func (v NullableVisualizationStat) Get() *VisualizationStat {
	return v.value
}

func (v *NullableVisualizationStat) Set(val *VisualizationStat) {
	v.value = val
	v.isSet = true
}

func (v NullableVisualizationStat) IsSet() bool {
	return v.isSet
}

func (v *NullableVisualizationStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVisualizationStat(val *VisualizationStat) *NullableVisualizationStat {
	return &NullableVisualizationStat{value: val, isSet: true}
}

func (v NullableVisualizationStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVisualizationStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


