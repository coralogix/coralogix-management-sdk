/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the SpanFieldTagField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpanFieldTagField{}

// SpanFieldTagField struct for SpanFieldTagField
type SpanFieldTagField struct {
	TagField *string `json:"tagField,omitempty"`
}

// NewSpanFieldTagField instantiates a new SpanFieldTagField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpanFieldTagField() *SpanFieldTagField {
	this := SpanFieldTagField{}
	return &this
}

// NewSpanFieldTagFieldWithDefaults instantiates a new SpanFieldTagField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpanFieldTagFieldWithDefaults() *SpanFieldTagField {
	this := SpanFieldTagField{}
	return &this
}

// GetTagField returns the TagField field value if set, zero value otherwise.
func (o *SpanFieldTagField) GetTagField() string {
	if o == nil || IsNil(o.TagField) {
		var ret string
		return ret
	}
	return *o.TagField
}

// GetTagFieldOk returns a tuple with the TagField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpanFieldTagField) GetTagFieldOk() (*string, bool) {
	if o == nil || IsNil(o.TagField) {
		return nil, false
	}
	return o.TagField, true
}

// HasTagField returns a boolean if a field has been set.
func (o *SpanFieldTagField) HasTagField() bool {
	if o != nil && !IsNil(o.TagField) {
		return true
	}

	return false
}

// SetTagField gets a reference to the given string and assigns it to the TagField field.
func (o *SpanFieldTagField) SetTagField(v string) {
	o.TagField = &v
}

func (o SpanFieldTagField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpanFieldTagField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TagField) {
		toSerialize["tagField"] = o.TagField
	}
	return toSerialize, nil
}

type NullableSpanFieldTagField struct {
	value *SpanFieldTagField
	isSet bool
}

func (v NullableSpanFieldTagField) Get() *SpanFieldTagField {
	return v.value
}

func (v *NullableSpanFieldTagField) Set(val *SpanFieldTagField) {
	v.value = val
	v.isSet = true
}

func (v NullableSpanFieldTagField) IsSet() bool {
	return v.isSet
}

func (v *NullableSpanFieldTagField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpanFieldTagField(val *SpanFieldTagField) *NullableSpanFieldTagField {
	return &NullableSpanFieldTagField{value: val, isSet: true}
}

func (v NullableSpanFieldTagField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpanFieldTagField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


