/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the WidgetScopeOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WidgetScopeOneOf{}

// WidgetScopeOneOf struct for WidgetScopeOneOf
type WidgetScopeOneOf struct {
	AllWidgets map[string]interface{} `json:"allWidgets,omitempty"`
}

// NewWidgetScopeOneOf instantiates a new WidgetScopeOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetScopeOneOf() *WidgetScopeOneOf {
	this := WidgetScopeOneOf{}
	return &this
}

// NewWidgetScopeOneOfWithDefaults instantiates a new WidgetScopeOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetScopeOneOfWithDefaults() *WidgetScopeOneOf {
	this := WidgetScopeOneOf{}
	return &this
}

// GetAllWidgets returns the AllWidgets field value if set, zero value otherwise.
func (o *WidgetScopeOneOf) GetAllWidgets() map[string]interface{} {
	if o == nil || IsNil(o.AllWidgets) {
		var ret map[string]interface{}
		return ret
	}
	return o.AllWidgets
}

// GetAllWidgetsOk returns a tuple with the AllWidgets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetScopeOneOf) GetAllWidgetsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AllWidgets) {
		return map[string]interface{}{}, false
	}
	return o.AllWidgets, true
}

// HasAllWidgets returns a boolean if a field has been set.
func (o *WidgetScopeOneOf) HasAllWidgets() bool {
	if o != nil && !IsNil(o.AllWidgets) {
		return true
	}

	return false
}

// SetAllWidgets gets a reference to the given map[string]interface{} and assigns it to the AllWidgets field.
func (o *WidgetScopeOneOf) SetAllWidgets(v map[string]interface{}) {
	o.AllWidgets = v
}

func (o WidgetScopeOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WidgetScopeOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllWidgets) {
		toSerialize["allWidgets"] = o.AllWidgets
	}
	return toSerialize, nil
}

type NullableWidgetScopeOneOf struct {
	value *WidgetScopeOneOf
	isSet bool
}

func (v NullableWidgetScopeOneOf) Get() *WidgetScopeOneOf {
	return v.value
}

func (v *NullableWidgetScopeOneOf) Set(val *WidgetScopeOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetScopeOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetScopeOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetScopeOneOf(val *WidgetScopeOneOf) *NullableWidgetScopeOneOf {
	return &NullableWidgetScopeOneOf{value: val, isSet: true}
}

func (v NullableWidgetScopeOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetScopeOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


