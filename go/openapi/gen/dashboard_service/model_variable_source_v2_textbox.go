/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VariableSourceV2Textbox type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariableSourceV2Textbox{}

// VariableSourceV2Textbox struct for VariableSourceV2Textbox
type VariableSourceV2Textbox struct {
	Textbox *TextboxSource `json:"textbox,omitempty"`
}

// NewVariableSourceV2Textbox instantiates a new VariableSourceV2Textbox object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableSourceV2Textbox() *VariableSourceV2Textbox {
	this := VariableSourceV2Textbox{}
	return &this
}

// NewVariableSourceV2TextboxWithDefaults instantiates a new VariableSourceV2Textbox object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableSourceV2TextboxWithDefaults() *VariableSourceV2Textbox {
	this := VariableSourceV2Textbox{}
	return &this
}

// GetTextbox returns the Textbox field value if set, zero value otherwise.
func (o *VariableSourceV2Textbox) GetTextbox() TextboxSource {
	if o == nil || IsNil(o.Textbox) {
		var ret TextboxSource
		return ret
	}
	return *o.Textbox
}

// GetTextboxOk returns a tuple with the Textbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableSourceV2Textbox) GetTextboxOk() (*TextboxSource, bool) {
	if o == nil || IsNil(o.Textbox) {
		return nil, false
	}
	return o.Textbox, true
}

// HasTextbox returns a boolean if a field has been set.
func (o *VariableSourceV2Textbox) HasTextbox() bool {
	if o != nil && !IsNil(o.Textbox) {
		return true
	}

	return false
}

// SetTextbox gets a reference to the given TextboxSource and assigns it to the Textbox field.
func (o *VariableSourceV2Textbox) SetTextbox(v TextboxSource) {
	o.Textbox = &v
}

func (o VariableSourceV2Textbox) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariableSourceV2Textbox) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Textbox) {
		toSerialize["textbox"] = o.Textbox
	}
	return toSerialize, nil
}

type NullableVariableSourceV2Textbox struct {
	value *VariableSourceV2Textbox
	isSet bool
}

func (v NullableVariableSourceV2Textbox) Get() *VariableSourceV2Textbox {
	return v.value
}

func (v *NullableVariableSourceV2Textbox) Set(val *VariableSourceV2Textbox) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableSourceV2Textbox) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableSourceV2Textbox) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableSourceV2Textbox(val *VariableSourceV2Textbox) *NullableVariableSourceV2Textbox {
	return &NullableVariableSourceV2Textbox{value: val, isSet: true}
}

func (v NullableVariableSourceV2Textbox) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableSourceV2Textbox) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


