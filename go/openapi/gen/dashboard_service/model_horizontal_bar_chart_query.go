/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// HorizontalBarChartQuery - struct for HorizontalBarChartQuery
type HorizontalBarChartQuery struct {
	HorizontalBarChartQueryOneOf *HorizontalBarChartQueryOneOf
	HorizontalBarChartQueryOneOf1 *HorizontalBarChartQueryOneOf1
	HorizontalBarChartQueryOneOf2 *HorizontalBarChartQueryOneOf2
	HorizontalBarChartQueryOneOf3 *HorizontalBarChartQueryOneOf3
}

// HorizontalBarChartQueryOneOfAsHorizontalBarChartQuery is a convenience function that returns HorizontalBarChartQueryOneOf wrapped in HorizontalBarChartQuery
func HorizontalBarChartQueryOneOfAsHorizontalBarChartQuery(v *HorizontalBarChartQueryOneOf) HorizontalBarChartQuery {
	return HorizontalBarChartQuery{
		HorizontalBarChartQueryOneOf: v,
	}
}

// HorizontalBarChartQueryOneOf1AsHorizontalBarChartQuery is a convenience function that returns HorizontalBarChartQueryOneOf1 wrapped in HorizontalBarChartQuery
func HorizontalBarChartQueryOneOf1AsHorizontalBarChartQuery(v *HorizontalBarChartQueryOneOf1) HorizontalBarChartQuery {
	return HorizontalBarChartQuery{
		HorizontalBarChartQueryOneOf1: v,
	}
}

// HorizontalBarChartQueryOneOf2AsHorizontalBarChartQuery is a convenience function that returns HorizontalBarChartQueryOneOf2 wrapped in HorizontalBarChartQuery
func HorizontalBarChartQueryOneOf2AsHorizontalBarChartQuery(v *HorizontalBarChartQueryOneOf2) HorizontalBarChartQuery {
	return HorizontalBarChartQuery{
		HorizontalBarChartQueryOneOf2: v,
	}
}

// HorizontalBarChartQueryOneOf3AsHorizontalBarChartQuery is a convenience function that returns HorizontalBarChartQueryOneOf3 wrapped in HorizontalBarChartQuery
func HorizontalBarChartQueryOneOf3AsHorizontalBarChartQuery(v *HorizontalBarChartQueryOneOf3) HorizontalBarChartQuery {
	return HorizontalBarChartQuery{
		HorizontalBarChartQueryOneOf3: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *HorizontalBarChartQuery) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into HorizontalBarChartQueryOneOf
	err = newStrictDecoder(data).Decode(&dst.HorizontalBarChartQueryOneOf)
	if err == nil {
		jsonHorizontalBarChartQueryOneOf, _ := json.Marshal(dst.HorizontalBarChartQueryOneOf)
		if string(jsonHorizontalBarChartQueryOneOf) == "{}" { // empty struct
			dst.HorizontalBarChartQueryOneOf = nil
		} else {
			if err = validator.Validate(dst.HorizontalBarChartQueryOneOf); err != nil {
				dst.HorizontalBarChartQueryOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.HorizontalBarChartQueryOneOf = nil
	}

	// try to unmarshal data into HorizontalBarChartQueryOneOf1
	err = newStrictDecoder(data).Decode(&dst.HorizontalBarChartQueryOneOf1)
	if err == nil {
		jsonHorizontalBarChartQueryOneOf1, _ := json.Marshal(dst.HorizontalBarChartQueryOneOf1)
		if string(jsonHorizontalBarChartQueryOneOf1) == "{}" { // empty struct
			dst.HorizontalBarChartQueryOneOf1 = nil
		} else {
			if err = validator.Validate(dst.HorizontalBarChartQueryOneOf1); err != nil {
				dst.HorizontalBarChartQueryOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.HorizontalBarChartQueryOneOf1 = nil
	}

	// try to unmarshal data into HorizontalBarChartQueryOneOf2
	err = newStrictDecoder(data).Decode(&dst.HorizontalBarChartQueryOneOf2)
	if err == nil {
		jsonHorizontalBarChartQueryOneOf2, _ := json.Marshal(dst.HorizontalBarChartQueryOneOf2)
		if string(jsonHorizontalBarChartQueryOneOf2) == "{}" { // empty struct
			dst.HorizontalBarChartQueryOneOf2 = nil
		} else {
			if err = validator.Validate(dst.HorizontalBarChartQueryOneOf2); err != nil {
				dst.HorizontalBarChartQueryOneOf2 = nil
			} else {
				match++
			}
		}
	} else {
		dst.HorizontalBarChartQueryOneOf2 = nil
	}

	// try to unmarshal data into HorizontalBarChartQueryOneOf3
	err = newStrictDecoder(data).Decode(&dst.HorizontalBarChartQueryOneOf3)
	if err == nil {
		jsonHorizontalBarChartQueryOneOf3, _ := json.Marshal(dst.HorizontalBarChartQueryOneOf3)
		if string(jsonHorizontalBarChartQueryOneOf3) == "{}" { // empty struct
			dst.HorizontalBarChartQueryOneOf3 = nil
		} else {
			if err = validator.Validate(dst.HorizontalBarChartQueryOneOf3); err != nil {
				dst.HorizontalBarChartQueryOneOf3 = nil
			} else {
				match++
			}
		}
	} else {
		dst.HorizontalBarChartQueryOneOf3 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.HorizontalBarChartQueryOneOf = nil
		dst.HorizontalBarChartQueryOneOf1 = nil
		dst.HorizontalBarChartQueryOneOf2 = nil
		dst.HorizontalBarChartQueryOneOf3 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(HorizontalBarChartQuery)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(HorizontalBarChartQuery)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src HorizontalBarChartQuery) MarshalJSON() ([]byte, error) {
	if src.HorizontalBarChartQueryOneOf != nil {
		return json.Marshal(&src.HorizontalBarChartQueryOneOf)
	}

	if src.HorizontalBarChartQueryOneOf1 != nil {
		return json.Marshal(&src.HorizontalBarChartQueryOneOf1)
	}

	if src.HorizontalBarChartQueryOneOf2 != nil {
		return json.Marshal(&src.HorizontalBarChartQueryOneOf2)
	}

	if src.HorizontalBarChartQueryOneOf3 != nil {
		return json.Marshal(&src.HorizontalBarChartQueryOneOf3)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *HorizontalBarChartQuery) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.HorizontalBarChartQueryOneOf != nil {
		return obj.HorizontalBarChartQueryOneOf
	}

	if obj.HorizontalBarChartQueryOneOf1 != nil {
		return obj.HorizontalBarChartQueryOneOf1
	}

	if obj.HorizontalBarChartQueryOneOf2 != nil {
		return obj.HorizontalBarChartQueryOneOf2
	}

	if obj.HorizontalBarChartQueryOneOf3 != nil {
		return obj.HorizontalBarChartQueryOneOf3
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj HorizontalBarChartQuery) GetActualInstanceValue() (interface{}) {
	if obj.HorizontalBarChartQueryOneOf != nil {
		return *obj.HorizontalBarChartQueryOneOf
	}

	if obj.HorizontalBarChartQueryOneOf1 != nil {
		return *obj.HorizontalBarChartQueryOneOf1
	}

	if obj.HorizontalBarChartQueryOneOf2 != nil {
		return *obj.HorizontalBarChartQueryOneOf2
	}

	if obj.HorizontalBarChartQueryOneOf3 != nil {
		return *obj.HorizontalBarChartQueryOneOf3
	}

	// all schemas are nil
	return nil
}

type NullableHorizontalBarChartQuery struct {
	value *HorizontalBarChartQuery
	isSet bool
}

func (v NullableHorizontalBarChartQuery) Get() *HorizontalBarChartQuery {
	return v.value
}

func (v *NullableHorizontalBarChartQuery) Set(val *HorizontalBarChartQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableHorizontalBarChartQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableHorizontalBarChartQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHorizontalBarChartQuery(val *HorizontalBarChartQuery) *NullableHorizontalBarChartQuery {
	return &NullableHorizontalBarChartQuery{value: val, isSet: true}
}

func (v NullableHorizontalBarChartQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHorizontalBarChartQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


