/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the LogsAggregationCountDistinct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogsAggregationCountDistinct{}

// LogsAggregationCountDistinct struct for LogsAggregationCountDistinct
type LogsAggregationCountDistinct struct {
	CountDistinct *CountDistinct `json:"countDistinct,omitempty"`
}

// NewLogsAggregationCountDistinct instantiates a new LogsAggregationCountDistinct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsAggregationCountDistinct() *LogsAggregationCountDistinct {
	this := LogsAggregationCountDistinct{}
	return &this
}

// NewLogsAggregationCountDistinctWithDefaults instantiates a new LogsAggregationCountDistinct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsAggregationCountDistinctWithDefaults() *LogsAggregationCountDistinct {
	this := LogsAggregationCountDistinct{}
	return &this
}

// GetCountDistinct returns the CountDistinct field value if set, zero value otherwise.
func (o *LogsAggregationCountDistinct) GetCountDistinct() CountDistinct {
	if o == nil || IsNil(o.CountDistinct) {
		var ret CountDistinct
		return ret
	}
	return *o.CountDistinct
}

// GetCountDistinctOk returns a tuple with the CountDistinct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsAggregationCountDistinct) GetCountDistinctOk() (*CountDistinct, bool) {
	if o == nil || IsNil(o.CountDistinct) {
		return nil, false
	}
	return o.CountDistinct, true
}

// HasCountDistinct returns a boolean if a field has been set.
func (o *LogsAggregationCountDistinct) HasCountDistinct() bool {
	if o != nil && !IsNil(o.CountDistinct) {
		return true
	}

	return false
}

// SetCountDistinct gets a reference to the given CountDistinct and assigns it to the CountDistinct field.
func (o *LogsAggregationCountDistinct) SetCountDistinct(v CountDistinct) {
	o.CountDistinct = &v
}

func (o LogsAggregationCountDistinct) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogsAggregationCountDistinct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CountDistinct) {
		toSerialize["countDistinct"] = o.CountDistinct
	}
	return toSerialize, nil
}

type NullableLogsAggregationCountDistinct struct {
	value *LogsAggregationCountDistinct
	isSet bool
}

func (v NullableLogsAggregationCountDistinct) Get() *LogsAggregationCountDistinct {
	return v.value
}

func (v *NullableLogsAggregationCountDistinct) Set(val *LogsAggregationCountDistinct) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsAggregationCountDistinct) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsAggregationCountDistinct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsAggregationCountDistinct(val *LogsAggregationCountDistinct) *NullableLogsAggregationCountDistinct {
	return &NullableLogsAggregationCountDistinct{value: val, isSet: true}
}

func (v NullableLogsAggregationCountDistinct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsAggregationCountDistinct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


