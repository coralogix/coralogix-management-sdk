/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the LineChartQueryOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LineChartQueryOneOf1{}

// LineChartQueryOneOf1 struct for LineChartQueryOneOf1
type LineChartQueryOneOf1 struct {
	Metrics *LineChartMetricsQuery `json:"metrics,omitempty"`
}

// NewLineChartQueryOneOf1 instantiates a new LineChartQueryOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLineChartQueryOneOf1() *LineChartQueryOneOf1 {
	this := LineChartQueryOneOf1{}
	return &this
}

// NewLineChartQueryOneOf1WithDefaults instantiates a new LineChartQueryOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLineChartQueryOneOf1WithDefaults() *LineChartQueryOneOf1 {
	this := LineChartQueryOneOf1{}
	return &this
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *LineChartQueryOneOf1) GetMetrics() LineChartMetricsQuery {
	if o == nil || IsNil(o.Metrics) {
		var ret LineChartMetricsQuery
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineChartQueryOneOf1) GetMetricsOk() (*LineChartMetricsQuery, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *LineChartQueryOneOf1) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given LineChartMetricsQuery and assigns it to the Metrics field.
func (o *LineChartQueryOneOf1) SetMetrics(v LineChartMetricsQuery) {
	o.Metrics = &v
}

func (o LineChartQueryOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LineChartQueryOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	return toSerialize, nil
}

type NullableLineChartQueryOneOf1 struct {
	value *LineChartQueryOneOf1
	isSet bool
}

func (v NullableLineChartQueryOneOf1) Get() *LineChartQueryOneOf1 {
	return v.value
}

func (v *NullableLineChartQueryOneOf1) Set(val *LineChartQueryOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableLineChartQueryOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableLineChartQueryOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLineChartQueryOneOf1(val *LineChartQueryOneOf1) *NullableLineChartQueryOneOf1 {
	return &NullableLineChartQueryOneOf1{value: val, isSet: true}
}

func (v NullableLineChartQueryOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLineChartQueryOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


