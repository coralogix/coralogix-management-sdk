/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VariableDefinitionOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariableDefinitionOneOf1{}

// VariableDefinitionOneOf1 struct for VariableDefinitionOneOf1
type VariableDefinitionOneOf1 struct {
	MultiSelect *MultiSelect `json:"multiSelect,omitempty"`
}

// NewVariableDefinitionOneOf1 instantiates a new VariableDefinitionOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableDefinitionOneOf1() *VariableDefinitionOneOf1 {
	this := VariableDefinitionOneOf1{}
	return &this
}

// NewVariableDefinitionOneOf1WithDefaults instantiates a new VariableDefinitionOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableDefinitionOneOf1WithDefaults() *VariableDefinitionOneOf1 {
	this := VariableDefinitionOneOf1{}
	return &this
}

// GetMultiSelect returns the MultiSelect field value if set, zero value otherwise.
func (o *VariableDefinitionOneOf1) GetMultiSelect() MultiSelect {
	if o == nil || IsNil(o.MultiSelect) {
		var ret MultiSelect
		return ret
	}
	return *o.MultiSelect
}

// GetMultiSelectOk returns a tuple with the MultiSelect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableDefinitionOneOf1) GetMultiSelectOk() (*MultiSelect, bool) {
	if o == nil || IsNil(o.MultiSelect) {
		return nil, false
	}
	return o.MultiSelect, true
}

// HasMultiSelect returns a boolean if a field has been set.
func (o *VariableDefinitionOneOf1) HasMultiSelect() bool {
	if o != nil && !IsNil(o.MultiSelect) {
		return true
	}

	return false
}

// SetMultiSelect gets a reference to the given MultiSelect and assigns it to the MultiSelect field.
func (o *VariableDefinitionOneOf1) SetMultiSelect(v MultiSelect) {
	o.MultiSelect = &v
}

func (o VariableDefinitionOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariableDefinitionOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MultiSelect) {
		toSerialize["multiSelect"] = o.MultiSelect
	}
	return toSerialize, nil
}

type NullableVariableDefinitionOneOf1 struct {
	value *VariableDefinitionOneOf1
	isSet bool
}

func (v NullableVariableDefinitionOneOf1) Get() *VariableDefinitionOneOf1 {
	return v.value
}

func (v *NullableVariableDefinitionOneOf1) Set(val *VariableDefinitionOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableDefinitionOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableDefinitionOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableDefinitionOneOf1(val *VariableDefinitionOneOf1) *NullableVariableDefinitionOneOf1 {
	return &NullableVariableDefinitionOneOf1{value: val, isSet: true}
}

func (v NullableVariableDefinitionOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableDefinitionOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


