/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
	"time"
)

// checks if the GetDashboardResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDashboardResponse{}

// GetDashboardResponse This is a response containing the requested dashboard
type GetDashboardResponse struct {
	AuthorId *string `json:"authorId,omitempty"`
	AuthorName *string `json:"authorName,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	CreatedOriginType *TokenOriginType `json:"createdOriginType,omitempty"`
	Dashboard *Dashboard `json:"dashboard,omitempty"`
	IsLocked *bool `json:"isLocked,omitempty"`
	LockerAuthorId *string `json:"lockerAuthorId,omitempty"`
	LockerName *string `json:"lockerName,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	UpdatedOriginType *TokenOriginType `json:"updatedOriginType,omitempty"`
	UpdaterAuthorId *string `json:"updaterAuthorId,omitempty"`
	UpdaterName *string `json:"updaterName,omitempty"`
}

// NewGetDashboardResponse instantiates a new GetDashboardResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDashboardResponse() *GetDashboardResponse {
	this := GetDashboardResponse{}
	return &this
}

// NewGetDashboardResponseWithDefaults instantiates a new GetDashboardResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDashboardResponseWithDefaults() *GetDashboardResponse {
	this := GetDashboardResponse{}
	return &this
}

// GetAuthorId returns the AuthorId field value if set, zero value otherwise.
func (o *GetDashboardResponse) GetAuthorId() string {
	if o == nil || IsNil(o.AuthorId) {
		var ret string
		return ret
	}
	return *o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDashboardResponse) GetAuthorIdOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorId) {
		return nil, false
	}
	return o.AuthorId, true
}

// HasAuthorId returns a boolean if a field has been set.
func (o *GetDashboardResponse) HasAuthorId() bool {
	if o != nil && !IsNil(o.AuthorId) {
		return true
	}

	return false
}

// SetAuthorId gets a reference to the given string and assigns it to the AuthorId field.
func (o *GetDashboardResponse) SetAuthorId(v string) {
	o.AuthorId = &v
}

// GetAuthorName returns the AuthorName field value if set, zero value otherwise.
func (o *GetDashboardResponse) GetAuthorName() string {
	if o == nil || IsNil(o.AuthorName) {
		var ret string
		return ret
	}
	return *o.AuthorName
}

// GetAuthorNameOk returns a tuple with the AuthorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDashboardResponse) GetAuthorNameOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorName) {
		return nil, false
	}
	return o.AuthorName, true
}

// HasAuthorName returns a boolean if a field has been set.
func (o *GetDashboardResponse) HasAuthorName() bool {
	if o != nil && !IsNil(o.AuthorName) {
		return true
	}

	return false
}

// SetAuthorName gets a reference to the given string and assigns it to the AuthorName field.
func (o *GetDashboardResponse) SetAuthorName(v string) {
	o.AuthorName = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GetDashboardResponse) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDashboardResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GetDashboardResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *GetDashboardResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreatedOriginType returns the CreatedOriginType field value if set, zero value otherwise.
func (o *GetDashboardResponse) GetCreatedOriginType() TokenOriginType {
	if o == nil || IsNil(o.CreatedOriginType) {
		var ret TokenOriginType
		return ret
	}
	return *o.CreatedOriginType
}

// GetCreatedOriginTypeOk returns a tuple with the CreatedOriginType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDashboardResponse) GetCreatedOriginTypeOk() (*TokenOriginType, bool) {
	if o == nil || IsNil(o.CreatedOriginType) {
		return nil, false
	}
	return o.CreatedOriginType, true
}

// HasCreatedOriginType returns a boolean if a field has been set.
func (o *GetDashboardResponse) HasCreatedOriginType() bool {
	if o != nil && !IsNil(o.CreatedOriginType) {
		return true
	}

	return false
}

// SetCreatedOriginType gets a reference to the given TokenOriginType and assigns it to the CreatedOriginType field.
func (o *GetDashboardResponse) SetCreatedOriginType(v TokenOriginType) {
	o.CreatedOriginType = &v
}

// GetDashboard returns the Dashboard field value if set, zero value otherwise.
func (o *GetDashboardResponse) GetDashboard() Dashboard {
	if o == nil || IsNil(o.Dashboard) {
		var ret Dashboard
		return ret
	}
	return *o.Dashboard
}

// GetDashboardOk returns a tuple with the Dashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDashboardResponse) GetDashboardOk() (*Dashboard, bool) {
	if o == nil || IsNil(o.Dashboard) {
		return nil, false
	}
	return o.Dashboard, true
}

// HasDashboard returns a boolean if a field has been set.
func (o *GetDashboardResponse) HasDashboard() bool {
	if o != nil && !IsNil(o.Dashboard) {
		return true
	}

	return false
}

// SetDashboard gets a reference to the given Dashboard and assigns it to the Dashboard field.
func (o *GetDashboardResponse) SetDashboard(v Dashboard) {
	o.Dashboard = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *GetDashboardResponse) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDashboardResponse) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *GetDashboardResponse) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *GetDashboardResponse) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetLockerAuthorId returns the LockerAuthorId field value if set, zero value otherwise.
func (o *GetDashboardResponse) GetLockerAuthorId() string {
	if o == nil || IsNil(o.LockerAuthorId) {
		var ret string
		return ret
	}
	return *o.LockerAuthorId
}

// GetLockerAuthorIdOk returns a tuple with the LockerAuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDashboardResponse) GetLockerAuthorIdOk() (*string, bool) {
	if o == nil || IsNil(o.LockerAuthorId) {
		return nil, false
	}
	return o.LockerAuthorId, true
}

// HasLockerAuthorId returns a boolean if a field has been set.
func (o *GetDashboardResponse) HasLockerAuthorId() bool {
	if o != nil && !IsNil(o.LockerAuthorId) {
		return true
	}

	return false
}

// SetLockerAuthorId gets a reference to the given string and assigns it to the LockerAuthorId field.
func (o *GetDashboardResponse) SetLockerAuthorId(v string) {
	o.LockerAuthorId = &v
}

// GetLockerName returns the LockerName field value if set, zero value otherwise.
func (o *GetDashboardResponse) GetLockerName() string {
	if o == nil || IsNil(o.LockerName) {
		var ret string
		return ret
	}
	return *o.LockerName
}

// GetLockerNameOk returns a tuple with the LockerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDashboardResponse) GetLockerNameOk() (*string, bool) {
	if o == nil || IsNil(o.LockerName) {
		return nil, false
	}
	return o.LockerName, true
}

// HasLockerName returns a boolean if a field has been set.
func (o *GetDashboardResponse) HasLockerName() bool {
	if o != nil && !IsNil(o.LockerName) {
		return true
	}

	return false
}

// SetLockerName gets a reference to the given string and assigns it to the LockerName field.
func (o *GetDashboardResponse) SetLockerName(v string) {
	o.LockerName = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GetDashboardResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDashboardResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GetDashboardResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *GetDashboardResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUpdatedOriginType returns the UpdatedOriginType field value if set, zero value otherwise.
func (o *GetDashboardResponse) GetUpdatedOriginType() TokenOriginType {
	if o == nil || IsNil(o.UpdatedOriginType) {
		var ret TokenOriginType
		return ret
	}
	return *o.UpdatedOriginType
}

// GetUpdatedOriginTypeOk returns a tuple with the UpdatedOriginType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDashboardResponse) GetUpdatedOriginTypeOk() (*TokenOriginType, bool) {
	if o == nil || IsNil(o.UpdatedOriginType) {
		return nil, false
	}
	return o.UpdatedOriginType, true
}

// HasUpdatedOriginType returns a boolean if a field has been set.
func (o *GetDashboardResponse) HasUpdatedOriginType() bool {
	if o != nil && !IsNil(o.UpdatedOriginType) {
		return true
	}

	return false
}

// SetUpdatedOriginType gets a reference to the given TokenOriginType and assigns it to the UpdatedOriginType field.
func (o *GetDashboardResponse) SetUpdatedOriginType(v TokenOriginType) {
	o.UpdatedOriginType = &v
}

// GetUpdaterAuthorId returns the UpdaterAuthorId field value if set, zero value otherwise.
func (o *GetDashboardResponse) GetUpdaterAuthorId() string {
	if o == nil || IsNil(o.UpdaterAuthorId) {
		var ret string
		return ret
	}
	return *o.UpdaterAuthorId
}

// GetUpdaterAuthorIdOk returns a tuple with the UpdaterAuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDashboardResponse) GetUpdaterAuthorIdOk() (*string, bool) {
	if o == nil || IsNil(o.UpdaterAuthorId) {
		return nil, false
	}
	return o.UpdaterAuthorId, true
}

// HasUpdaterAuthorId returns a boolean if a field has been set.
func (o *GetDashboardResponse) HasUpdaterAuthorId() bool {
	if o != nil && !IsNil(o.UpdaterAuthorId) {
		return true
	}

	return false
}

// SetUpdaterAuthorId gets a reference to the given string and assigns it to the UpdaterAuthorId field.
func (o *GetDashboardResponse) SetUpdaterAuthorId(v string) {
	o.UpdaterAuthorId = &v
}

// GetUpdaterName returns the UpdaterName field value if set, zero value otherwise.
func (o *GetDashboardResponse) GetUpdaterName() string {
	if o == nil || IsNil(o.UpdaterName) {
		var ret string
		return ret
	}
	return *o.UpdaterName
}

// GetUpdaterNameOk returns a tuple with the UpdaterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDashboardResponse) GetUpdaterNameOk() (*string, bool) {
	if o == nil || IsNil(o.UpdaterName) {
		return nil, false
	}
	return o.UpdaterName, true
}

// HasUpdaterName returns a boolean if a field has been set.
func (o *GetDashboardResponse) HasUpdaterName() bool {
	if o != nil && !IsNil(o.UpdaterName) {
		return true
	}

	return false
}

// SetUpdaterName gets a reference to the given string and assigns it to the UpdaterName field.
func (o *GetDashboardResponse) SetUpdaterName(v string) {
	o.UpdaterName = &v
}

func (o GetDashboardResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDashboardResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorId) {
		toSerialize["authorId"] = o.AuthorId
	}
	if !IsNil(o.AuthorName) {
		toSerialize["authorName"] = o.AuthorName
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.CreatedOriginType) {
		toSerialize["createdOriginType"] = o.CreatedOriginType
	}
	if !IsNil(o.Dashboard) {
		toSerialize["dashboard"] = o.Dashboard
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.LockerAuthorId) {
		toSerialize["lockerAuthorId"] = o.LockerAuthorId
	}
	if !IsNil(o.LockerName) {
		toSerialize["lockerName"] = o.LockerName
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.UpdatedOriginType) {
		toSerialize["updatedOriginType"] = o.UpdatedOriginType
	}
	if !IsNil(o.UpdaterAuthorId) {
		toSerialize["updaterAuthorId"] = o.UpdaterAuthorId
	}
	if !IsNil(o.UpdaterName) {
		toSerialize["updaterName"] = o.UpdaterName
	}
	return toSerialize, nil
}

type NullableGetDashboardResponse struct {
	value *GetDashboardResponse
	isSet bool
}

func (v NullableGetDashboardResponse) Get() *GetDashboardResponse {
	return v.value
}

func (v *NullableGetDashboardResponse) Set(val *GetDashboardResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDashboardResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDashboardResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDashboardResponse(val *GetDashboardResponse) *NullableGetDashboardResponse {
	return &NullableGetDashboardResponse{value: val, isSet: true}
}

func (v NullableGetDashboardResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDashboardResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


