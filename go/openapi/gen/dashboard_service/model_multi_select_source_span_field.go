/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the MultiSelectSourceSpanField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiSelectSourceSpanField{}

// MultiSelectSourceSpanField struct for MultiSelectSourceSpanField
type MultiSelectSourceSpanField struct {
	SpanField *SpanFieldSource `json:"spanField,omitempty"`
}

// NewMultiSelectSourceSpanField instantiates a new MultiSelectSourceSpanField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiSelectSourceSpanField() *MultiSelectSourceSpanField {
	this := MultiSelectSourceSpanField{}
	return &this
}

// NewMultiSelectSourceSpanFieldWithDefaults instantiates a new MultiSelectSourceSpanField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiSelectSourceSpanFieldWithDefaults() *MultiSelectSourceSpanField {
	this := MultiSelectSourceSpanField{}
	return &this
}

// GetSpanField returns the SpanField field value if set, zero value otherwise.
func (o *MultiSelectSourceSpanField) GetSpanField() SpanFieldSource {
	if o == nil || IsNil(o.SpanField) {
		var ret SpanFieldSource
		return ret
	}
	return *o.SpanField
}

// GetSpanFieldOk returns a tuple with the SpanField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiSelectSourceSpanField) GetSpanFieldOk() (*SpanFieldSource, bool) {
	if o == nil || IsNil(o.SpanField) {
		return nil, false
	}
	return o.SpanField, true
}

// HasSpanField returns a boolean if a field has been set.
func (o *MultiSelectSourceSpanField) HasSpanField() bool {
	if o != nil && !IsNil(o.SpanField) {
		return true
	}

	return false
}

// SetSpanField gets a reference to the given SpanFieldSource and assigns it to the SpanField field.
func (o *MultiSelectSourceSpanField) SetSpanField(v SpanFieldSource) {
	o.SpanField = &v
}

func (o MultiSelectSourceSpanField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiSelectSourceSpanField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpanField) {
		toSerialize["spanField"] = o.SpanField
	}
	return toSerialize, nil
}

type NullableMultiSelectSourceSpanField struct {
	value *MultiSelectSourceSpanField
	isSet bool
}

func (v NullableMultiSelectSourceSpanField) Get() *MultiSelectSourceSpanField {
	return v.value
}

func (v *NullableMultiSelectSourceSpanField) Set(val *MultiSelectSourceSpanField) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiSelectSourceSpanField) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiSelectSourceSpanField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiSelectSourceSpanField(val *MultiSelectSourceSpanField) *NullableMultiSelectSourceSpanField {
	return &NullableMultiSelectSourceSpanField{value: val, isSet: true}
}

func (v NullableMultiSelectSourceSpanField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiSelectSourceSpanField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


