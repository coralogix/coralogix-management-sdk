/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the WidgetAppearance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WidgetAppearance{}

// WidgetAppearance struct for WidgetAppearance
type WidgetAppearance struct {
	Width *int32 `json:"width,omitempty"`
}

// NewWidgetAppearance instantiates a new WidgetAppearance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetAppearance() *WidgetAppearance {
	this := WidgetAppearance{}
	return &this
}

// NewWidgetAppearanceWithDefaults instantiates a new WidgetAppearance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetAppearanceWithDefaults() *WidgetAppearance {
	this := WidgetAppearance{}
	return &this
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *WidgetAppearance) GetWidth() int32 {
	if o == nil || IsNil(o.Width) {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetAppearance) GetWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *WidgetAppearance) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *WidgetAppearance) SetWidth(v int32) {
	o.Width = &v
}

func (o WidgetAppearance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WidgetAppearance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	return toSerialize, nil
}

type NullableWidgetAppearance struct {
	value *WidgetAppearance
	isSet bool
}

func (v NullableWidgetAppearance) Get() *WidgetAppearance {
	return v.value
}

func (v *NullableWidgetAppearance) Set(val *WidgetAppearance) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetAppearance) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetAppearance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetAppearance(val *WidgetAppearance) *NullableWidgetAppearance {
	return &NullableWidgetAppearance{value: val, isSet: true}
}

func (v NullableWidgetAppearance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetAppearance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


