/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the LineChartQueryOneOf3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LineChartQueryOneOf3{}

// LineChartQueryOneOf3 struct for LineChartQueryOneOf3
type LineChartQueryOneOf3 struct {
	Dataprime *LineChartDataprimeQuery `json:"dataprime,omitempty"`
}

// NewLineChartQueryOneOf3 instantiates a new LineChartQueryOneOf3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLineChartQueryOneOf3() *LineChartQueryOneOf3 {
	this := LineChartQueryOneOf3{}
	return &this
}

// NewLineChartQueryOneOf3WithDefaults instantiates a new LineChartQueryOneOf3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLineChartQueryOneOf3WithDefaults() *LineChartQueryOneOf3 {
	this := LineChartQueryOneOf3{}
	return &this
}

// GetDataprime returns the Dataprime field value if set, zero value otherwise.
func (o *LineChartQueryOneOf3) GetDataprime() LineChartDataprimeQuery {
	if o == nil || IsNil(o.Dataprime) {
		var ret LineChartDataprimeQuery
		return ret
	}
	return *o.Dataprime
}

// GetDataprimeOk returns a tuple with the Dataprime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineChartQueryOneOf3) GetDataprimeOk() (*LineChartDataprimeQuery, bool) {
	if o == nil || IsNil(o.Dataprime) {
		return nil, false
	}
	return o.Dataprime, true
}

// HasDataprime returns a boolean if a field has been set.
func (o *LineChartQueryOneOf3) HasDataprime() bool {
	if o != nil && !IsNil(o.Dataprime) {
		return true
	}

	return false
}

// SetDataprime gets a reference to the given LineChartDataprimeQuery and assigns it to the Dataprime field.
func (o *LineChartQueryOneOf3) SetDataprime(v LineChartDataprimeQuery) {
	o.Dataprime = &v
}

func (o LineChartQueryOneOf3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LineChartQueryOneOf3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dataprime) {
		toSerialize["dataprime"] = o.Dataprime
	}
	return toSerialize, nil
}

type NullableLineChartQueryOneOf3 struct {
	value *LineChartQueryOneOf3
	isSet bool
}

func (v NullableLineChartQueryOneOf3) Get() *LineChartQueryOneOf3 {
	return v.value
}

func (v *NullableLineChartQueryOneOf3) Set(val *LineChartQueryOneOf3) {
	v.value = val
	v.isSet = true
}

func (v NullableLineChartQueryOneOf3) IsSet() bool {
	return v.isSet
}

func (v *NullableLineChartQueryOneOf3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLineChartQueryOneOf3(val *LineChartQueryOneOf3) *NullableLineChartQueryOneOf3 {
	return &NullableLineChartQueryOneOf3{value: val, isSet: true}
}

func (v NullableLineChartQueryOneOf3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLineChartQueryOneOf3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


