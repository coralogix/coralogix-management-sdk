/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the ManualSourceStrategyRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManualSourceStrategyRange{}

// ManualSourceStrategyRange struct for ManualSourceStrategyRange
type ManualSourceStrategyRange struct {
	CustomUnit *string `json:"customUnit,omitempty"`
	EndValue *float64 `json:"endValue,omitempty"`
	StartValue *float64 `json:"startValue,omitempty"`
	Unit *CommonUnit `json:"unit,omitempty"`
}

// NewManualSourceStrategyRange instantiates a new ManualSourceStrategyRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManualSourceStrategyRange() *ManualSourceStrategyRange {
	this := ManualSourceStrategyRange{}
	return &this
}

// NewManualSourceStrategyRangeWithDefaults instantiates a new ManualSourceStrategyRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManualSourceStrategyRangeWithDefaults() *ManualSourceStrategyRange {
	this := ManualSourceStrategyRange{}
	return &this
}

// GetCustomUnit returns the CustomUnit field value if set, zero value otherwise.
func (o *ManualSourceStrategyRange) GetCustomUnit() string {
	if o == nil || IsNil(o.CustomUnit) {
		var ret string
		return ret
	}
	return *o.CustomUnit
}

// GetCustomUnitOk returns a tuple with the CustomUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualSourceStrategyRange) GetCustomUnitOk() (*string, bool) {
	if o == nil || IsNil(o.CustomUnit) {
		return nil, false
	}
	return o.CustomUnit, true
}

// HasCustomUnit returns a boolean if a field has been set.
func (o *ManualSourceStrategyRange) HasCustomUnit() bool {
	if o != nil && !IsNil(o.CustomUnit) {
		return true
	}

	return false
}

// SetCustomUnit gets a reference to the given string and assigns it to the CustomUnit field.
func (o *ManualSourceStrategyRange) SetCustomUnit(v string) {
	o.CustomUnit = &v
}

// GetEndValue returns the EndValue field value if set, zero value otherwise.
func (o *ManualSourceStrategyRange) GetEndValue() float64 {
	if o == nil || IsNil(o.EndValue) {
		var ret float64
		return ret
	}
	return *o.EndValue
}

// GetEndValueOk returns a tuple with the EndValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualSourceStrategyRange) GetEndValueOk() (*float64, bool) {
	if o == nil || IsNil(o.EndValue) {
		return nil, false
	}
	return o.EndValue, true
}

// HasEndValue returns a boolean if a field has been set.
func (o *ManualSourceStrategyRange) HasEndValue() bool {
	if o != nil && !IsNil(o.EndValue) {
		return true
	}

	return false
}

// SetEndValue gets a reference to the given float64 and assigns it to the EndValue field.
func (o *ManualSourceStrategyRange) SetEndValue(v float64) {
	o.EndValue = &v
}

// GetStartValue returns the StartValue field value if set, zero value otherwise.
func (o *ManualSourceStrategyRange) GetStartValue() float64 {
	if o == nil || IsNil(o.StartValue) {
		var ret float64
		return ret
	}
	return *o.StartValue
}

// GetStartValueOk returns a tuple with the StartValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualSourceStrategyRange) GetStartValueOk() (*float64, bool) {
	if o == nil || IsNil(o.StartValue) {
		return nil, false
	}
	return o.StartValue, true
}

// HasStartValue returns a boolean if a field has been set.
func (o *ManualSourceStrategyRange) HasStartValue() bool {
	if o != nil && !IsNil(o.StartValue) {
		return true
	}

	return false
}

// SetStartValue gets a reference to the given float64 and assigns it to the StartValue field.
func (o *ManualSourceStrategyRange) SetStartValue(v float64) {
	o.StartValue = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *ManualSourceStrategyRange) GetUnit() CommonUnit {
	if o == nil || IsNil(o.Unit) {
		var ret CommonUnit
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualSourceStrategyRange) GetUnitOk() (*CommonUnit, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *ManualSourceStrategyRange) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given CommonUnit and assigns it to the Unit field.
func (o *ManualSourceStrategyRange) SetUnit(v CommonUnit) {
	o.Unit = &v
}

func (o ManualSourceStrategyRange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManualSourceStrategyRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomUnit) {
		toSerialize["customUnit"] = o.CustomUnit
	}
	if !IsNil(o.EndValue) {
		toSerialize["endValue"] = o.EndValue
	}
	if !IsNil(o.StartValue) {
		toSerialize["startValue"] = o.StartValue
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	return toSerialize, nil
}

type NullableManualSourceStrategyRange struct {
	value *ManualSourceStrategyRange
	isSet bool
}

func (v NullableManualSourceStrategyRange) Get() *ManualSourceStrategyRange {
	return v.value
}

func (v *NullableManualSourceStrategyRange) Set(val *ManualSourceStrategyRange) {
	v.value = val
	v.isSet = true
}

func (v NullableManualSourceStrategyRange) IsSet() bool {
	return v.isSet
}

func (v *NullableManualSourceStrategyRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManualSourceStrategyRange(val *ManualSourceStrategyRange) *NullableManualSourceStrategyRange {
	return &NullableManualSourceStrategyRange{value: val, isSet: true}
}

func (v NullableManualSourceStrategyRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManualSourceStrategyRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


