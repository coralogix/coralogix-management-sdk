/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the MultiSelectSourceLogsPath type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiSelectSourceLogsPath{}

// MultiSelectSourceLogsPath struct for MultiSelectSourceLogsPath
type MultiSelectSourceLogsPath struct {
	LogsPath *LogsPathSource `json:"logsPath,omitempty"`
}

// NewMultiSelectSourceLogsPath instantiates a new MultiSelectSourceLogsPath object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiSelectSourceLogsPath() *MultiSelectSourceLogsPath {
	this := MultiSelectSourceLogsPath{}
	return &this
}

// NewMultiSelectSourceLogsPathWithDefaults instantiates a new MultiSelectSourceLogsPath object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiSelectSourceLogsPathWithDefaults() *MultiSelectSourceLogsPath {
	this := MultiSelectSourceLogsPath{}
	return &this
}

// GetLogsPath returns the LogsPath field value if set, zero value otherwise.
func (o *MultiSelectSourceLogsPath) GetLogsPath() LogsPathSource {
	if o == nil || IsNil(o.LogsPath) {
		var ret LogsPathSource
		return ret
	}
	return *o.LogsPath
}

// GetLogsPathOk returns a tuple with the LogsPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiSelectSourceLogsPath) GetLogsPathOk() (*LogsPathSource, bool) {
	if o == nil || IsNil(o.LogsPath) {
		return nil, false
	}
	return o.LogsPath, true
}

// HasLogsPath returns a boolean if a field has been set.
func (o *MultiSelectSourceLogsPath) HasLogsPath() bool {
	if o != nil && !IsNil(o.LogsPath) {
		return true
	}

	return false
}

// SetLogsPath gets a reference to the given LogsPathSource and assigns it to the LogsPath field.
func (o *MultiSelectSourceLogsPath) SetLogsPath(v LogsPathSource) {
	o.LogsPath = &v
}

func (o MultiSelectSourceLogsPath) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiSelectSourceLogsPath) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LogsPath) {
		toSerialize["logsPath"] = o.LogsPath
	}
	return toSerialize, nil
}

type NullableMultiSelectSourceLogsPath struct {
	value *MultiSelectSourceLogsPath
	isSet bool
}

func (v NullableMultiSelectSourceLogsPath) Get() *MultiSelectSourceLogsPath {
	return v.value
}

func (v *NullableMultiSelectSourceLogsPath) Set(val *MultiSelectSourceLogsPath) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiSelectSourceLogsPath) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiSelectSourceLogsPath) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiSelectSourceLogsPath(val *MultiSelectSourceLogsPath) *NullableMultiSelectSourceLogsPath {
	return &NullableMultiSelectSourceLogsPath{value: val, isSet: true}
}

func (v NullableMultiSelectSourceLogsPath) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiSelectSourceLogsPath) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


