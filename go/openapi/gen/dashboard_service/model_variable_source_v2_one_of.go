/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VariableSourceV2OneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariableSourceV2OneOf{}

// VariableSourceV2OneOf struct for VariableSourceV2OneOf
type VariableSourceV2OneOf struct {
	Static *StaticSource `json:"static,omitempty"`
}

// NewVariableSourceV2OneOf instantiates a new VariableSourceV2OneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableSourceV2OneOf() *VariableSourceV2OneOf {
	this := VariableSourceV2OneOf{}
	return &this
}

// NewVariableSourceV2OneOfWithDefaults instantiates a new VariableSourceV2OneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableSourceV2OneOfWithDefaults() *VariableSourceV2OneOf {
	this := VariableSourceV2OneOf{}
	return &this
}

// GetStatic returns the Static field value if set, zero value otherwise.
func (o *VariableSourceV2OneOf) GetStatic() StaticSource {
	if o == nil || IsNil(o.Static) {
		var ret StaticSource
		return ret
	}
	return *o.Static
}

// GetStaticOk returns a tuple with the Static field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableSourceV2OneOf) GetStaticOk() (*StaticSource, bool) {
	if o == nil || IsNil(o.Static) {
		return nil, false
	}
	return o.Static, true
}

// HasStatic returns a boolean if a field has been set.
func (o *VariableSourceV2OneOf) HasStatic() bool {
	if o != nil && !IsNil(o.Static) {
		return true
	}

	return false
}

// SetStatic gets a reference to the given StaticSource and assigns it to the Static field.
func (o *VariableSourceV2OneOf) SetStatic(v StaticSource) {
	o.Static = &v
}

func (o VariableSourceV2OneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariableSourceV2OneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Static) {
		toSerialize["static"] = o.Static
	}
	return toSerialize, nil
}

type NullableVariableSourceV2OneOf struct {
	value *VariableSourceV2OneOf
	isSet bool
}

func (v NullableVariableSourceV2OneOf) Get() *VariableSourceV2OneOf {
	return v.value
}

func (v *NullableVariableSourceV2OneOf) Set(val *VariableSourceV2OneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableSourceV2OneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableSourceV2OneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableSourceV2OneOf(val *VariableSourceV2OneOf) *NullableVariableSourceV2OneOf {
	return &NullableVariableSourceV2OneOf{value: val, isSet: true}
}

func (v NullableVariableSourceV2OneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableSourceV2OneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


