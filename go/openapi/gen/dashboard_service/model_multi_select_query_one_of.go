/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the MultiSelectQueryOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiSelectQueryOneOf{}

// MultiSelectQueryOneOf struct for MultiSelectQueryOneOf
type MultiSelectQueryOneOf struct {
	LogsQuery *QueryLogsQuery `json:"logsQuery,omitempty"`
}

// NewMultiSelectQueryOneOf instantiates a new MultiSelectQueryOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiSelectQueryOneOf() *MultiSelectQueryOneOf {
	this := MultiSelectQueryOneOf{}
	return &this
}

// NewMultiSelectQueryOneOfWithDefaults instantiates a new MultiSelectQueryOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiSelectQueryOneOfWithDefaults() *MultiSelectQueryOneOf {
	this := MultiSelectQueryOneOf{}
	return &this
}

// GetLogsQuery returns the LogsQuery field value if set, zero value otherwise.
func (o *MultiSelectQueryOneOf) GetLogsQuery() QueryLogsQuery {
	if o == nil || IsNil(o.LogsQuery) {
		var ret QueryLogsQuery
		return ret
	}
	return *o.LogsQuery
}

// GetLogsQueryOk returns a tuple with the LogsQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiSelectQueryOneOf) GetLogsQueryOk() (*QueryLogsQuery, bool) {
	if o == nil || IsNil(o.LogsQuery) {
		return nil, false
	}
	return o.LogsQuery, true
}

// HasLogsQuery returns a boolean if a field has been set.
func (o *MultiSelectQueryOneOf) HasLogsQuery() bool {
	if o != nil && !IsNil(o.LogsQuery) {
		return true
	}

	return false
}

// SetLogsQuery gets a reference to the given QueryLogsQuery and assigns it to the LogsQuery field.
func (o *MultiSelectQueryOneOf) SetLogsQuery(v QueryLogsQuery) {
	o.LogsQuery = &v
}

func (o MultiSelectQueryOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiSelectQueryOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LogsQuery) {
		toSerialize["logsQuery"] = o.LogsQuery
	}
	return toSerialize, nil
}

type NullableMultiSelectQueryOneOf struct {
	value *MultiSelectQueryOneOf
	isSet bool
}

func (v NullableMultiSelectQueryOneOf) Get() *MultiSelectQueryOneOf {
	return v.value
}

func (v *NullableMultiSelectQueryOneOf) Set(val *MultiSelectQueryOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiSelectQueryOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiSelectQueryOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiSelectQueryOneOf(val *MultiSelectQueryOneOf) *NullableMultiSelectQueryOneOf {
	return &NullableMultiSelectQueryOneOf{value: val, isSet: true}
}

func (v NullableMultiSelectQueryOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiSelectQueryOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


