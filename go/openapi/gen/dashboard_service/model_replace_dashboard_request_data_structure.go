/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ReplaceDashboardRequestDataStructure type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplaceDashboardRequestDataStructure{}

// ReplaceDashboardRequestDataStructure This is a request sent to update an existing dashboard with new information
type ReplaceDashboardRequestDataStructure struct {
	Dashboard Dashboard `json:"dashboard"`
	IsLocked *bool `json:"isLocked,omitempty"`
	RequestId string `json:"requestId"`
}

type _ReplaceDashboardRequestDataStructure ReplaceDashboardRequestDataStructure

// NewReplaceDashboardRequestDataStructure instantiates a new ReplaceDashboardRequestDataStructure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplaceDashboardRequestDataStructure(dashboard Dashboard, requestId string) *ReplaceDashboardRequestDataStructure {
	this := ReplaceDashboardRequestDataStructure{}
	this.Dashboard = dashboard
	this.RequestId = requestId
	return &this
}

// NewReplaceDashboardRequestDataStructureWithDefaults instantiates a new ReplaceDashboardRequestDataStructure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplaceDashboardRequestDataStructureWithDefaults() *ReplaceDashboardRequestDataStructure {
	this := ReplaceDashboardRequestDataStructure{}
	return &this
}

// GetDashboard returns the Dashboard field value
func (o *ReplaceDashboardRequestDataStructure) GetDashboard() Dashboard {
	if o == nil {
		var ret Dashboard
		return ret
	}

	return o.Dashboard
}

// GetDashboardOk returns a tuple with the Dashboard field value
// and a boolean to check if the value has been set.
func (o *ReplaceDashboardRequestDataStructure) GetDashboardOk() (*Dashboard, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dashboard, true
}

// SetDashboard sets field value
func (o *ReplaceDashboardRequestDataStructure) SetDashboard(v Dashboard) {
	o.Dashboard = v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *ReplaceDashboardRequestDataStructure) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplaceDashboardRequestDataStructure) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *ReplaceDashboardRequestDataStructure) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *ReplaceDashboardRequestDataStructure) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetRequestId returns the RequestId field value
func (o *ReplaceDashboardRequestDataStructure) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *ReplaceDashboardRequestDataStructure) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *ReplaceDashboardRequestDataStructure) SetRequestId(v string) {
	o.RequestId = v
}

func (o ReplaceDashboardRequestDataStructure) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplaceDashboardRequestDataStructure) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dashboard"] = o.Dashboard
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	toSerialize["requestId"] = o.RequestId
	return toSerialize, nil
}

func (o *ReplaceDashboardRequestDataStructure) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dashboard",
		"requestId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReplaceDashboardRequestDataStructure := _ReplaceDashboardRequestDataStructure{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReplaceDashboardRequestDataStructure)

	if err != nil {
		return err
	}

	*o = ReplaceDashboardRequestDataStructure(varReplaceDashboardRequestDataStructure)

	return err
}

type NullableReplaceDashboardRequestDataStructure struct {
	value *ReplaceDashboardRequestDataStructure
	isSet bool
}

func (v NullableReplaceDashboardRequestDataStructure) Get() *ReplaceDashboardRequestDataStructure {
	return v.value
}

func (v *NullableReplaceDashboardRequestDataStructure) Set(val *ReplaceDashboardRequestDataStructure) {
	v.value = val
	v.isSet = true
}

func (v NullableReplaceDashboardRequestDataStructure) IsSet() bool {
	return v.isSet
}

func (v *NullableReplaceDashboardRequestDataStructure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplaceDashboardRequestDataStructure(val *ReplaceDashboardRequestDataStructure) *NullableReplaceDashboardRequestDataStructure {
	return &NullableReplaceDashboardRequestDataStructure{value: val, isSet: true}
}

func (v NullableReplaceDashboardRequestDataStructure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplaceDashboardRequestDataStructure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


