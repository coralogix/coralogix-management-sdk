/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the RowAppearance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RowAppearance{}

// RowAppearance struct for RowAppearance
type RowAppearance struct {
	// Height of a row, defined as a multiplier number of the base height, where 1 = 1 * base height, 2 = 2 * base height etc
	Height *int32 `json:"height,omitempty"`
}

// NewRowAppearance instantiates a new RowAppearance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRowAppearance() *RowAppearance {
	this := RowAppearance{}
	return &this
}

// NewRowAppearanceWithDefaults instantiates a new RowAppearance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRowAppearanceWithDefaults() *RowAppearance {
	this := RowAppearance{}
	return &this
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *RowAppearance) GetHeight() int32 {
	if o == nil || IsNil(o.Height) {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RowAppearance) GetHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *RowAppearance) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *RowAppearance) SetHeight(v int32) {
	o.Height = &v
}

func (o RowAppearance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RowAppearance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	return toSerialize, nil
}

type NullableRowAppearance struct {
	value *RowAppearance
	isSet bool
}

func (v NullableRowAppearance) Get() *RowAppearance {
	return v.value
}

func (v *NullableRowAppearance) Set(val *RowAppearance) {
	v.value = val
	v.isSet = true
}

func (v NullableRowAppearance) IsSet() bool {
	return v.isSet
}

func (v *NullableRowAppearance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRowAppearance(val *RowAppearance) *NullableRowAppearance {
	return &NullableRowAppearance{value: val, isSet: true}
}

func (v NullableRowAppearance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRowAppearance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


