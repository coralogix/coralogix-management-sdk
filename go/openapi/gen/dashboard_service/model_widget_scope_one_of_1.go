/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the WidgetScopeOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WidgetScopeOneOf1{}

// WidgetScopeOneOf1 struct for WidgetScopeOneOf1
type WidgetScopeOneOf1 struct {
	SpecificWidgets *SpecificWidgets `json:"specificWidgets,omitempty"`
}

// NewWidgetScopeOneOf1 instantiates a new WidgetScopeOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetScopeOneOf1() *WidgetScopeOneOf1 {
	this := WidgetScopeOneOf1{}
	return &this
}

// NewWidgetScopeOneOf1WithDefaults instantiates a new WidgetScopeOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetScopeOneOf1WithDefaults() *WidgetScopeOneOf1 {
	this := WidgetScopeOneOf1{}
	return &this
}

// GetSpecificWidgets returns the SpecificWidgets field value if set, zero value otherwise.
func (o *WidgetScopeOneOf1) GetSpecificWidgets() SpecificWidgets {
	if o == nil || IsNil(o.SpecificWidgets) {
		var ret SpecificWidgets
		return ret
	}
	return *o.SpecificWidgets
}

// GetSpecificWidgetsOk returns a tuple with the SpecificWidgets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetScopeOneOf1) GetSpecificWidgetsOk() (*SpecificWidgets, bool) {
	if o == nil || IsNil(o.SpecificWidgets) {
		return nil, false
	}
	return o.SpecificWidgets, true
}

// HasSpecificWidgets returns a boolean if a field has been set.
func (o *WidgetScopeOneOf1) HasSpecificWidgets() bool {
	if o != nil && !IsNil(o.SpecificWidgets) {
		return true
	}

	return false
}

// SetSpecificWidgets gets a reference to the given SpecificWidgets and assigns it to the SpecificWidgets field.
func (o *WidgetScopeOneOf1) SetSpecificWidgets(v SpecificWidgets) {
	o.SpecificWidgets = &v
}

func (o WidgetScopeOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WidgetScopeOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpecificWidgets) {
		toSerialize["specificWidgets"] = o.SpecificWidgets
	}
	return toSerialize, nil
}

type NullableWidgetScopeOneOf1 struct {
	value *WidgetScopeOneOf1
	isSet bool
}

func (v NullableWidgetScopeOneOf1) Get() *WidgetScopeOneOf1 {
	return v.value
}

func (v *NullableWidgetScopeOneOf1) Set(val *WidgetScopeOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetScopeOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetScopeOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetScopeOneOf1(val *WidgetScopeOneOf1) *NullableWidgetScopeOneOf1 {
	return &NullableWidgetScopeOneOf1{value: val, isSet: true}
}

func (v NullableWidgetScopeOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetScopeOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


