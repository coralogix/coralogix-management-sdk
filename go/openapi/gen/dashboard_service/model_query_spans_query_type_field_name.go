/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the QuerySpansQueryTypeFieldName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuerySpansQueryTypeFieldName{}

// QuerySpansQueryTypeFieldName struct for QuerySpansQueryTypeFieldName
type QuerySpansQueryTypeFieldName struct {
	SpanRegex *string `json:"spanRegex,omitempty"`
}

// NewQuerySpansQueryTypeFieldName instantiates a new QuerySpansQueryTypeFieldName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuerySpansQueryTypeFieldName() *QuerySpansQueryTypeFieldName {
	this := QuerySpansQueryTypeFieldName{}
	return &this
}

// NewQuerySpansQueryTypeFieldNameWithDefaults instantiates a new QuerySpansQueryTypeFieldName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuerySpansQueryTypeFieldNameWithDefaults() *QuerySpansQueryTypeFieldName {
	this := QuerySpansQueryTypeFieldName{}
	return &this
}

// GetSpanRegex returns the SpanRegex field value if set, zero value otherwise.
func (o *QuerySpansQueryTypeFieldName) GetSpanRegex() string {
	if o == nil || IsNil(o.SpanRegex) {
		var ret string
		return ret
	}
	return *o.SpanRegex
}

// GetSpanRegexOk returns a tuple with the SpanRegex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySpansQueryTypeFieldName) GetSpanRegexOk() (*string, bool) {
	if o == nil || IsNil(o.SpanRegex) {
		return nil, false
	}
	return o.SpanRegex, true
}

// HasSpanRegex returns a boolean if a field has been set.
func (o *QuerySpansQueryTypeFieldName) HasSpanRegex() bool {
	if o != nil && !IsNil(o.SpanRegex) {
		return true
	}

	return false
}

// SetSpanRegex gets a reference to the given string and assigns it to the SpanRegex field.
func (o *QuerySpansQueryTypeFieldName) SetSpanRegex(v string) {
	o.SpanRegex = &v
}

func (o QuerySpansQueryTypeFieldName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuerySpansQueryTypeFieldName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpanRegex) {
		toSerialize["spanRegex"] = o.SpanRegex
	}
	return toSerialize, nil
}

type NullableQuerySpansQueryTypeFieldName struct {
	value *QuerySpansQueryTypeFieldName
	isSet bool
}

func (v NullableQuerySpansQueryTypeFieldName) Get() *QuerySpansQueryTypeFieldName {
	return v.value
}

func (v *NullableQuerySpansQueryTypeFieldName) Set(val *QuerySpansQueryTypeFieldName) {
	v.value = val
	v.isSet = true
}

func (v NullableQuerySpansQueryTypeFieldName) IsSet() bool {
	return v.isSet
}

func (v *NullableQuerySpansQueryTypeFieldName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuerySpansQueryTypeFieldName(val *QuerySpansQueryTypeFieldName) *NullableQuerySpansQueryTypeFieldName {
	return &NullableQuerySpansQueryTypeFieldName{value: val, isSet: true}
}

func (v NullableQuerySpansQueryTypeFieldName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuerySpansQueryTypeFieldName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


