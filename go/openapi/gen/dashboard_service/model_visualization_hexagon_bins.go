/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VisualizationHexagonBins type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VisualizationHexagonBins{}

// VisualizationHexagonBins struct for VisualizationHexagonBins
type VisualizationHexagonBins struct {
	HexagonBins *HexagonBins `json:"hexagonBins,omitempty"`
}

// NewVisualizationHexagonBins instantiates a new VisualizationHexagonBins object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVisualizationHexagonBins() *VisualizationHexagonBins {
	this := VisualizationHexagonBins{}
	return &this
}

// NewVisualizationHexagonBinsWithDefaults instantiates a new VisualizationHexagonBins object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVisualizationHexagonBinsWithDefaults() *VisualizationHexagonBins {
	this := VisualizationHexagonBins{}
	return &this
}

// GetHexagonBins returns the HexagonBins field value if set, zero value otherwise.
func (o *VisualizationHexagonBins) GetHexagonBins() HexagonBins {
	if o == nil || IsNil(o.HexagonBins) {
		var ret HexagonBins
		return ret
	}
	return *o.HexagonBins
}

// GetHexagonBinsOk returns a tuple with the HexagonBins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisualizationHexagonBins) GetHexagonBinsOk() (*HexagonBins, bool) {
	if o == nil || IsNil(o.HexagonBins) {
		return nil, false
	}
	return o.HexagonBins, true
}

// HasHexagonBins returns a boolean if a field has been set.
func (o *VisualizationHexagonBins) HasHexagonBins() bool {
	if o != nil && !IsNil(o.HexagonBins) {
		return true
	}

	return false
}

// SetHexagonBins gets a reference to the given HexagonBins and assigns it to the HexagonBins field.
func (o *VisualizationHexagonBins) SetHexagonBins(v HexagonBins) {
	o.HexagonBins = &v
}

func (o VisualizationHexagonBins) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VisualizationHexagonBins) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HexagonBins) {
		toSerialize["hexagonBins"] = o.HexagonBins
	}
	return toSerialize, nil
}

type NullableVisualizationHexagonBins struct {
	value *VisualizationHexagonBins
	isSet bool
}

func (v NullableVisualizationHexagonBins) Get() *VisualizationHexagonBins {
	return v.value
}

func (v *NullableVisualizationHexagonBins) Set(val *VisualizationHexagonBins) {
	v.value = val
	v.isSet = true
}

func (v NullableVisualizationHexagonBins) IsSet() bool {
	return v.isSet
}

func (v *NullableVisualizationHexagonBins) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVisualizationHexagonBins(val *VisualizationHexagonBins) *NullableVisualizationHexagonBins {
	return &NullableVisualizationHexagonBins{value: val, isSet: true}
}

func (v NullableVisualizationHexagonBins) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVisualizationHexagonBins) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


