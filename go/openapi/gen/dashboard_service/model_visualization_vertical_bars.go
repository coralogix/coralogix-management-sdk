/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VisualizationVerticalBars type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VisualizationVerticalBars{}

// VisualizationVerticalBars struct for VisualizationVerticalBars
type VisualizationVerticalBars struct {
	VerticalBars *VerticalBars `json:"verticalBars,omitempty"`
}

// NewVisualizationVerticalBars instantiates a new VisualizationVerticalBars object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVisualizationVerticalBars() *VisualizationVerticalBars {
	this := VisualizationVerticalBars{}
	return &this
}

// NewVisualizationVerticalBarsWithDefaults instantiates a new VisualizationVerticalBars object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVisualizationVerticalBarsWithDefaults() *VisualizationVerticalBars {
	this := VisualizationVerticalBars{}
	return &this
}

// GetVerticalBars returns the VerticalBars field value if set, zero value otherwise.
func (o *VisualizationVerticalBars) GetVerticalBars() VerticalBars {
	if o == nil || IsNil(o.VerticalBars) {
		var ret VerticalBars
		return ret
	}
	return *o.VerticalBars
}

// GetVerticalBarsOk returns a tuple with the VerticalBars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisualizationVerticalBars) GetVerticalBarsOk() (*VerticalBars, bool) {
	if o == nil || IsNil(o.VerticalBars) {
		return nil, false
	}
	return o.VerticalBars, true
}

// HasVerticalBars returns a boolean if a field has been set.
func (o *VisualizationVerticalBars) HasVerticalBars() bool {
	if o != nil && !IsNil(o.VerticalBars) {
		return true
	}

	return false
}

// SetVerticalBars gets a reference to the given VerticalBars and assigns it to the VerticalBars field.
func (o *VisualizationVerticalBars) SetVerticalBars(v VerticalBars) {
	o.VerticalBars = &v
}

func (o VisualizationVerticalBars) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VisualizationVerticalBars) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VerticalBars) {
		toSerialize["verticalBars"] = o.VerticalBars
	}
	return toSerialize, nil
}

type NullableVisualizationVerticalBars struct {
	value *VisualizationVerticalBars
	isSet bool
}

func (v NullableVisualizationVerticalBars) Get() *VisualizationVerticalBars {
	return v.value
}

func (v *NullableVisualizationVerticalBars) Set(val *VisualizationVerticalBars) {
	v.value = val
	v.isSet = true
}

func (v NullableVisualizationVerticalBars) IsSet() bool {
	return v.isSet
}

func (v *NullableVisualizationVerticalBars) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVisualizationVerticalBars(val *VisualizationVerticalBars) *NullableVisualizationVerticalBars {
	return &NullableVisualizationVerticalBars{value: val, isSet: true}
}

func (v NullableVisualizationVerticalBars) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVisualizationVerticalBars) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


