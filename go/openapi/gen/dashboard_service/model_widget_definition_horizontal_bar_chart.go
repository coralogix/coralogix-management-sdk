/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the WidgetDefinitionHorizontalBarChart type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WidgetDefinitionHorizontalBarChart{}

// WidgetDefinitionHorizontalBarChart struct for WidgetDefinitionHorizontalBarChart
type WidgetDefinitionHorizontalBarChart struct {
	HorizontalBarChart *HorizontalBarChart `json:"horizontalBarChart,omitempty"`
}

// NewWidgetDefinitionHorizontalBarChart instantiates a new WidgetDefinitionHorizontalBarChart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetDefinitionHorizontalBarChart() *WidgetDefinitionHorizontalBarChart {
	this := WidgetDefinitionHorizontalBarChart{}
	return &this
}

// NewWidgetDefinitionHorizontalBarChartWithDefaults instantiates a new WidgetDefinitionHorizontalBarChart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetDefinitionHorizontalBarChartWithDefaults() *WidgetDefinitionHorizontalBarChart {
	this := WidgetDefinitionHorizontalBarChart{}
	return &this
}

// GetHorizontalBarChart returns the HorizontalBarChart field value if set, zero value otherwise.
func (o *WidgetDefinitionHorizontalBarChart) GetHorizontalBarChart() HorizontalBarChart {
	if o == nil || IsNil(o.HorizontalBarChart) {
		var ret HorizontalBarChart
		return ret
	}
	return *o.HorizontalBarChart
}

// GetHorizontalBarChartOk returns a tuple with the HorizontalBarChart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetDefinitionHorizontalBarChart) GetHorizontalBarChartOk() (*HorizontalBarChart, bool) {
	if o == nil || IsNil(o.HorizontalBarChart) {
		return nil, false
	}
	return o.HorizontalBarChart, true
}

// HasHorizontalBarChart returns a boolean if a field has been set.
func (o *WidgetDefinitionHorizontalBarChart) HasHorizontalBarChart() bool {
	if o != nil && !IsNil(o.HorizontalBarChart) {
		return true
	}

	return false
}

// SetHorizontalBarChart gets a reference to the given HorizontalBarChart and assigns it to the HorizontalBarChart field.
func (o *WidgetDefinitionHorizontalBarChart) SetHorizontalBarChart(v HorizontalBarChart) {
	o.HorizontalBarChart = &v
}

func (o WidgetDefinitionHorizontalBarChart) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WidgetDefinitionHorizontalBarChart) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HorizontalBarChart) {
		toSerialize["horizontalBarChart"] = o.HorizontalBarChart
	}
	return toSerialize, nil
}

type NullableWidgetDefinitionHorizontalBarChart struct {
	value *WidgetDefinitionHorizontalBarChart
	isSet bool
}

func (v NullableWidgetDefinitionHorizontalBarChart) Get() *WidgetDefinitionHorizontalBarChart {
	return v.value
}

func (v *NullableWidgetDefinitionHorizontalBarChart) Set(val *WidgetDefinitionHorizontalBarChart) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetDefinitionHorizontalBarChart) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetDefinitionHorizontalBarChart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetDefinitionHorizontalBarChart(val *WidgetDefinitionHorizontalBarChart) *NullableWidgetDefinitionHorizontalBarChart {
	return &NullableWidgetDefinitionHorizontalBarChart{value: val, isSet: true}
}

func (v NullableWidgetDefinitionHorizontalBarChart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetDefinitionHorizontalBarChart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


