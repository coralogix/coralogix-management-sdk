/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the TimeSeriesBars type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeSeriesBars{}

// TimeSeriesBars struct for TimeSeriesBars
type TimeSeriesBars struct {
	// Whether to render numeric value without abbreviation
	AllowAbbreviation *bool `json:"allowAbbreviation,omitempty"`
	BarValueDisplay *VisualizationBarValueDisplay `json:"barValueDisplay,omitempty"`
	CategoryFields []ObservationField `json:"categoryFields,omitempty"`
	// Applied color scheme for this query, one of the predefined values
	ColorScheme *string `json:"colorScheme,omitempty"`
	// Custom unit (requires to have unit field as 'custom' to take effect)
	CustomUnit *string `json:"customUnit,omitempty"`
	// Number indicating the decimal precision of the numeric values, within range 0-15
	DecimalPrecision *int32 `json:"decimalPrecision,omitempty"`
	// Whether to ignore color scheme and derive colors from algorithm
	HashColors *bool `json:"hashColors,omitempty"`
	Legend *Legend `json:"legend,omitempty"`
	// How many slices can fit in a single bar
	MaxSlicesPerBar *int32 `json:"maxSlicesPerBar,omitempty"`
	ScaleType *ScaleType `json:"scaleType,omitempty"`
	// Custom template for the series name
	SeriesNameTemplate *string `json:"seriesNameTemplate,omitempty"`
	SortBy *SortByType `json:"sortBy,omitempty"`
	TemporalField *ObservationField `json:"temporalField,omitempty"`
	Tooltip *TimeSeriesTooltip `json:"tooltip,omitempty"`
	Unit *CommonUnit `json:"unit,omitempty"`
	ValueFields []ObservationField `json:"valueFields,omitempty"`
	// Number indicating the upper band for y axis
	YAxisMax *float32 `json:"yAxisMax,omitempty"`
	// Number indicating the lower band for y axis
	YAxisMin *float32 `json:"yAxisMin,omitempty"`
}

// NewTimeSeriesBars instantiates a new TimeSeriesBars object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeSeriesBars() *TimeSeriesBars {
	this := TimeSeriesBars{}
	return &this
}

// NewTimeSeriesBarsWithDefaults instantiates a new TimeSeriesBars object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeSeriesBarsWithDefaults() *TimeSeriesBars {
	this := TimeSeriesBars{}
	return &this
}

// GetAllowAbbreviation returns the AllowAbbreviation field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetAllowAbbreviation() bool {
	if o == nil || IsNil(o.AllowAbbreviation) {
		var ret bool
		return ret
	}
	return *o.AllowAbbreviation
}

// GetAllowAbbreviationOk returns a tuple with the AllowAbbreviation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetAllowAbbreviationOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowAbbreviation) {
		return nil, false
	}
	return o.AllowAbbreviation, true
}

// HasAllowAbbreviation returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasAllowAbbreviation() bool {
	if o != nil && !IsNil(o.AllowAbbreviation) {
		return true
	}

	return false
}

// SetAllowAbbreviation gets a reference to the given bool and assigns it to the AllowAbbreviation field.
func (o *TimeSeriesBars) SetAllowAbbreviation(v bool) {
	o.AllowAbbreviation = &v
}

// GetBarValueDisplay returns the BarValueDisplay field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetBarValueDisplay() VisualizationBarValueDisplay {
	if o == nil || IsNil(o.BarValueDisplay) {
		var ret VisualizationBarValueDisplay
		return ret
	}
	return *o.BarValueDisplay
}

// GetBarValueDisplayOk returns a tuple with the BarValueDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetBarValueDisplayOk() (*VisualizationBarValueDisplay, bool) {
	if o == nil || IsNil(o.BarValueDisplay) {
		return nil, false
	}
	return o.BarValueDisplay, true
}

// HasBarValueDisplay returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasBarValueDisplay() bool {
	if o != nil && !IsNil(o.BarValueDisplay) {
		return true
	}

	return false
}

// SetBarValueDisplay gets a reference to the given VisualizationBarValueDisplay and assigns it to the BarValueDisplay field.
func (o *TimeSeriesBars) SetBarValueDisplay(v VisualizationBarValueDisplay) {
	o.BarValueDisplay = &v
}

// GetCategoryFields returns the CategoryFields field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetCategoryFields() []ObservationField {
	if o == nil || IsNil(o.CategoryFields) {
		var ret []ObservationField
		return ret
	}
	return o.CategoryFields
}

// GetCategoryFieldsOk returns a tuple with the CategoryFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetCategoryFieldsOk() ([]ObservationField, bool) {
	if o == nil || IsNil(o.CategoryFields) {
		return nil, false
	}
	return o.CategoryFields, true
}

// HasCategoryFields returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasCategoryFields() bool {
	if o != nil && !IsNil(o.CategoryFields) {
		return true
	}

	return false
}

// SetCategoryFields gets a reference to the given []ObservationField and assigns it to the CategoryFields field.
func (o *TimeSeriesBars) SetCategoryFields(v []ObservationField) {
	o.CategoryFields = v
}

// GetColorScheme returns the ColorScheme field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetColorScheme() string {
	if o == nil || IsNil(o.ColorScheme) {
		var ret string
		return ret
	}
	return *o.ColorScheme
}

// GetColorSchemeOk returns a tuple with the ColorScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetColorSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.ColorScheme) {
		return nil, false
	}
	return o.ColorScheme, true
}

// HasColorScheme returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasColorScheme() bool {
	if o != nil && !IsNil(o.ColorScheme) {
		return true
	}

	return false
}

// SetColorScheme gets a reference to the given string and assigns it to the ColorScheme field.
func (o *TimeSeriesBars) SetColorScheme(v string) {
	o.ColorScheme = &v
}

// GetCustomUnit returns the CustomUnit field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetCustomUnit() string {
	if o == nil || IsNil(o.CustomUnit) {
		var ret string
		return ret
	}
	return *o.CustomUnit
}

// GetCustomUnitOk returns a tuple with the CustomUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetCustomUnitOk() (*string, bool) {
	if o == nil || IsNil(o.CustomUnit) {
		return nil, false
	}
	return o.CustomUnit, true
}

// HasCustomUnit returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasCustomUnit() bool {
	if o != nil && !IsNil(o.CustomUnit) {
		return true
	}

	return false
}

// SetCustomUnit gets a reference to the given string and assigns it to the CustomUnit field.
func (o *TimeSeriesBars) SetCustomUnit(v string) {
	o.CustomUnit = &v
}

// GetDecimalPrecision returns the DecimalPrecision field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetDecimalPrecision() int32 {
	if o == nil || IsNil(o.DecimalPrecision) {
		var ret int32
		return ret
	}
	return *o.DecimalPrecision
}

// GetDecimalPrecisionOk returns a tuple with the DecimalPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetDecimalPrecisionOk() (*int32, bool) {
	if o == nil || IsNil(o.DecimalPrecision) {
		return nil, false
	}
	return o.DecimalPrecision, true
}

// HasDecimalPrecision returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasDecimalPrecision() bool {
	if o != nil && !IsNil(o.DecimalPrecision) {
		return true
	}

	return false
}

// SetDecimalPrecision gets a reference to the given int32 and assigns it to the DecimalPrecision field.
func (o *TimeSeriesBars) SetDecimalPrecision(v int32) {
	o.DecimalPrecision = &v
}

// GetHashColors returns the HashColors field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetHashColors() bool {
	if o == nil || IsNil(o.HashColors) {
		var ret bool
		return ret
	}
	return *o.HashColors
}

// GetHashColorsOk returns a tuple with the HashColors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetHashColorsOk() (*bool, bool) {
	if o == nil || IsNil(o.HashColors) {
		return nil, false
	}
	return o.HashColors, true
}

// HasHashColors returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasHashColors() bool {
	if o != nil && !IsNil(o.HashColors) {
		return true
	}

	return false
}

// SetHashColors gets a reference to the given bool and assigns it to the HashColors field.
func (o *TimeSeriesBars) SetHashColors(v bool) {
	o.HashColors = &v
}

// GetLegend returns the Legend field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetLegend() Legend {
	if o == nil || IsNil(o.Legend) {
		var ret Legend
		return ret
	}
	return *o.Legend
}

// GetLegendOk returns a tuple with the Legend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetLegendOk() (*Legend, bool) {
	if o == nil || IsNil(o.Legend) {
		return nil, false
	}
	return o.Legend, true
}

// HasLegend returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasLegend() bool {
	if o != nil && !IsNil(o.Legend) {
		return true
	}

	return false
}

// SetLegend gets a reference to the given Legend and assigns it to the Legend field.
func (o *TimeSeriesBars) SetLegend(v Legend) {
	o.Legend = &v
}

// GetMaxSlicesPerBar returns the MaxSlicesPerBar field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetMaxSlicesPerBar() int32 {
	if o == nil || IsNil(o.MaxSlicesPerBar) {
		var ret int32
		return ret
	}
	return *o.MaxSlicesPerBar
}

// GetMaxSlicesPerBarOk returns a tuple with the MaxSlicesPerBar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetMaxSlicesPerBarOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSlicesPerBar) {
		return nil, false
	}
	return o.MaxSlicesPerBar, true
}

// HasMaxSlicesPerBar returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasMaxSlicesPerBar() bool {
	if o != nil && !IsNil(o.MaxSlicesPerBar) {
		return true
	}

	return false
}

// SetMaxSlicesPerBar gets a reference to the given int32 and assigns it to the MaxSlicesPerBar field.
func (o *TimeSeriesBars) SetMaxSlicesPerBar(v int32) {
	o.MaxSlicesPerBar = &v
}

// GetScaleType returns the ScaleType field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetScaleType() ScaleType {
	if o == nil || IsNil(o.ScaleType) {
		var ret ScaleType
		return ret
	}
	return *o.ScaleType
}

// GetScaleTypeOk returns a tuple with the ScaleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetScaleTypeOk() (*ScaleType, bool) {
	if o == nil || IsNil(o.ScaleType) {
		return nil, false
	}
	return o.ScaleType, true
}

// HasScaleType returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasScaleType() bool {
	if o != nil && !IsNil(o.ScaleType) {
		return true
	}

	return false
}

// SetScaleType gets a reference to the given ScaleType and assigns it to the ScaleType field.
func (o *TimeSeriesBars) SetScaleType(v ScaleType) {
	o.ScaleType = &v
}

// GetSeriesNameTemplate returns the SeriesNameTemplate field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetSeriesNameTemplate() string {
	if o == nil || IsNil(o.SeriesNameTemplate) {
		var ret string
		return ret
	}
	return *o.SeriesNameTemplate
}

// GetSeriesNameTemplateOk returns a tuple with the SeriesNameTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetSeriesNameTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesNameTemplate) {
		return nil, false
	}
	return o.SeriesNameTemplate, true
}

// HasSeriesNameTemplate returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasSeriesNameTemplate() bool {
	if o != nil && !IsNil(o.SeriesNameTemplate) {
		return true
	}

	return false
}

// SetSeriesNameTemplate gets a reference to the given string and assigns it to the SeriesNameTemplate field.
func (o *TimeSeriesBars) SetSeriesNameTemplate(v string) {
	o.SeriesNameTemplate = &v
}

// GetSortBy returns the SortBy field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetSortBy() SortByType {
	if o == nil || IsNil(o.SortBy) {
		var ret SortByType
		return ret
	}
	return *o.SortBy
}

// GetSortByOk returns a tuple with the SortBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetSortByOk() (*SortByType, bool) {
	if o == nil || IsNil(o.SortBy) {
		return nil, false
	}
	return o.SortBy, true
}

// HasSortBy returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasSortBy() bool {
	if o != nil && !IsNil(o.SortBy) {
		return true
	}

	return false
}

// SetSortBy gets a reference to the given SortByType and assigns it to the SortBy field.
func (o *TimeSeriesBars) SetSortBy(v SortByType) {
	o.SortBy = &v
}

// GetTemporalField returns the TemporalField field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetTemporalField() ObservationField {
	if o == nil || IsNil(o.TemporalField) {
		var ret ObservationField
		return ret
	}
	return *o.TemporalField
}

// GetTemporalFieldOk returns a tuple with the TemporalField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetTemporalFieldOk() (*ObservationField, bool) {
	if o == nil || IsNil(o.TemporalField) {
		return nil, false
	}
	return o.TemporalField, true
}

// HasTemporalField returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasTemporalField() bool {
	if o != nil && !IsNil(o.TemporalField) {
		return true
	}

	return false
}

// SetTemporalField gets a reference to the given ObservationField and assigns it to the TemporalField field.
func (o *TimeSeriesBars) SetTemporalField(v ObservationField) {
	o.TemporalField = &v
}

// GetTooltip returns the Tooltip field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetTooltip() TimeSeriesTooltip {
	if o == nil || IsNil(o.Tooltip) {
		var ret TimeSeriesTooltip
		return ret
	}
	return *o.Tooltip
}

// GetTooltipOk returns a tuple with the Tooltip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetTooltipOk() (*TimeSeriesTooltip, bool) {
	if o == nil || IsNil(o.Tooltip) {
		return nil, false
	}
	return o.Tooltip, true
}

// HasTooltip returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasTooltip() bool {
	if o != nil && !IsNil(o.Tooltip) {
		return true
	}

	return false
}

// SetTooltip gets a reference to the given TimeSeriesTooltip and assigns it to the Tooltip field.
func (o *TimeSeriesBars) SetTooltip(v TimeSeriesTooltip) {
	o.Tooltip = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetUnit() CommonUnit {
	if o == nil || IsNil(o.Unit) {
		var ret CommonUnit
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetUnitOk() (*CommonUnit, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given CommonUnit and assigns it to the Unit field.
func (o *TimeSeriesBars) SetUnit(v CommonUnit) {
	o.Unit = &v
}

// GetValueFields returns the ValueFields field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetValueFields() []ObservationField {
	if o == nil || IsNil(o.ValueFields) {
		var ret []ObservationField
		return ret
	}
	return o.ValueFields
}

// GetValueFieldsOk returns a tuple with the ValueFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetValueFieldsOk() ([]ObservationField, bool) {
	if o == nil || IsNil(o.ValueFields) {
		return nil, false
	}
	return o.ValueFields, true
}

// HasValueFields returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasValueFields() bool {
	if o != nil && !IsNil(o.ValueFields) {
		return true
	}

	return false
}

// SetValueFields gets a reference to the given []ObservationField and assigns it to the ValueFields field.
func (o *TimeSeriesBars) SetValueFields(v []ObservationField) {
	o.ValueFields = v
}

// GetYAxisMax returns the YAxisMax field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetYAxisMax() float32 {
	if o == nil || IsNil(o.YAxisMax) {
		var ret float32
		return ret
	}
	return *o.YAxisMax
}

// GetYAxisMaxOk returns a tuple with the YAxisMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetYAxisMaxOk() (*float32, bool) {
	if o == nil || IsNil(o.YAxisMax) {
		return nil, false
	}
	return o.YAxisMax, true
}

// HasYAxisMax returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasYAxisMax() bool {
	if o != nil && !IsNil(o.YAxisMax) {
		return true
	}

	return false
}

// SetYAxisMax gets a reference to the given float32 and assigns it to the YAxisMax field.
func (o *TimeSeriesBars) SetYAxisMax(v float32) {
	o.YAxisMax = &v
}

// GetYAxisMin returns the YAxisMin field value if set, zero value otherwise.
func (o *TimeSeriesBars) GetYAxisMin() float32 {
	if o == nil || IsNil(o.YAxisMin) {
		var ret float32
		return ret
	}
	return *o.YAxisMin
}

// GetYAxisMinOk returns a tuple with the YAxisMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesBars) GetYAxisMinOk() (*float32, bool) {
	if o == nil || IsNil(o.YAxisMin) {
		return nil, false
	}
	return o.YAxisMin, true
}

// HasYAxisMin returns a boolean if a field has been set.
func (o *TimeSeriesBars) HasYAxisMin() bool {
	if o != nil && !IsNil(o.YAxisMin) {
		return true
	}

	return false
}

// SetYAxisMin gets a reference to the given float32 and assigns it to the YAxisMin field.
func (o *TimeSeriesBars) SetYAxisMin(v float32) {
	o.YAxisMin = &v
}

func (o TimeSeriesBars) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeSeriesBars) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowAbbreviation) {
		toSerialize["allowAbbreviation"] = o.AllowAbbreviation
	}
	if !IsNil(o.BarValueDisplay) {
		toSerialize["barValueDisplay"] = o.BarValueDisplay
	}
	if !IsNil(o.CategoryFields) {
		toSerialize["categoryFields"] = o.CategoryFields
	}
	if !IsNil(o.ColorScheme) {
		toSerialize["colorScheme"] = o.ColorScheme
	}
	if !IsNil(o.CustomUnit) {
		toSerialize["customUnit"] = o.CustomUnit
	}
	if !IsNil(o.DecimalPrecision) {
		toSerialize["decimalPrecision"] = o.DecimalPrecision
	}
	if !IsNil(o.HashColors) {
		toSerialize["hashColors"] = o.HashColors
	}
	if !IsNil(o.Legend) {
		toSerialize["legend"] = o.Legend
	}
	if !IsNil(o.MaxSlicesPerBar) {
		toSerialize["maxSlicesPerBar"] = o.MaxSlicesPerBar
	}
	if !IsNil(o.ScaleType) {
		toSerialize["scaleType"] = o.ScaleType
	}
	if !IsNil(o.SeriesNameTemplate) {
		toSerialize["seriesNameTemplate"] = o.SeriesNameTemplate
	}
	if !IsNil(o.SortBy) {
		toSerialize["sortBy"] = o.SortBy
	}
	if !IsNil(o.TemporalField) {
		toSerialize["temporalField"] = o.TemporalField
	}
	if !IsNil(o.Tooltip) {
		toSerialize["tooltip"] = o.Tooltip
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	if !IsNil(o.ValueFields) {
		toSerialize["valueFields"] = o.ValueFields
	}
	if !IsNil(o.YAxisMax) {
		toSerialize["yAxisMax"] = o.YAxisMax
	}
	if !IsNil(o.YAxisMin) {
		toSerialize["yAxisMin"] = o.YAxisMin
	}
	return toSerialize, nil
}

type NullableTimeSeriesBars struct {
	value *TimeSeriesBars
	isSet bool
}

func (v NullableTimeSeriesBars) Get() *TimeSeriesBars {
	return v.value
}

func (v *NullableTimeSeriesBars) Set(val *TimeSeriesBars) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeSeriesBars) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeSeriesBars) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeSeriesBars(val *TimeSeriesBars) *NullableTimeSeriesBars {
	return &NullableTimeSeriesBars{value: val, isSet: true}
}

func (v NullableTimeSeriesBars) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeSeriesBars) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


