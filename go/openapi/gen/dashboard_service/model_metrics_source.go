/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the MetricsSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricsSource{}

// MetricsSource struct for MetricsSource
type MetricsSource struct {
	Labels []string `json:"labels,omitempty"`
	MessageTemplate *string `json:"messageTemplate,omitempty"`
	Orientation *AnnotationOrientation `json:"orientation,omitempty"`
	PromqlQuery *PromQlQuery `json:"promqlQuery,omitempty"`
	Strategy *MetricsSourceStrategy `json:"strategy,omitempty"`
}

// NewMetricsSource instantiates a new MetricsSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricsSource() *MetricsSource {
	this := MetricsSource{}
	return &this
}

// NewMetricsSourceWithDefaults instantiates a new MetricsSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsSourceWithDefaults() *MetricsSource {
	this := MetricsSource{}
	return &this
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *MetricsSource) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSource) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *MetricsSource) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *MetricsSource) SetLabels(v []string) {
	o.Labels = v
}

// GetMessageTemplate returns the MessageTemplate field value if set, zero value otherwise.
func (o *MetricsSource) GetMessageTemplate() string {
	if o == nil || IsNil(o.MessageTemplate) {
		var ret string
		return ret
	}
	return *o.MessageTemplate
}

// GetMessageTemplateOk returns a tuple with the MessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSource) GetMessageTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.MessageTemplate) {
		return nil, false
	}
	return o.MessageTemplate, true
}

// HasMessageTemplate returns a boolean if a field has been set.
func (o *MetricsSource) HasMessageTemplate() bool {
	if o != nil && !IsNil(o.MessageTemplate) {
		return true
	}

	return false
}

// SetMessageTemplate gets a reference to the given string and assigns it to the MessageTemplate field.
func (o *MetricsSource) SetMessageTemplate(v string) {
	o.MessageTemplate = &v
}

// GetOrientation returns the Orientation field value if set, zero value otherwise.
func (o *MetricsSource) GetOrientation() AnnotationOrientation {
	if o == nil || IsNil(o.Orientation) {
		var ret AnnotationOrientation
		return ret
	}
	return *o.Orientation
}

// GetOrientationOk returns a tuple with the Orientation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSource) GetOrientationOk() (*AnnotationOrientation, bool) {
	if o == nil || IsNil(o.Orientation) {
		return nil, false
	}
	return o.Orientation, true
}

// HasOrientation returns a boolean if a field has been set.
func (o *MetricsSource) HasOrientation() bool {
	if o != nil && !IsNil(o.Orientation) {
		return true
	}

	return false
}

// SetOrientation gets a reference to the given AnnotationOrientation and assigns it to the Orientation field.
func (o *MetricsSource) SetOrientation(v AnnotationOrientation) {
	o.Orientation = &v
}

// GetPromqlQuery returns the PromqlQuery field value if set, zero value otherwise.
func (o *MetricsSource) GetPromqlQuery() PromQlQuery {
	if o == nil || IsNil(o.PromqlQuery) {
		var ret PromQlQuery
		return ret
	}
	return *o.PromqlQuery
}

// GetPromqlQueryOk returns a tuple with the PromqlQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSource) GetPromqlQueryOk() (*PromQlQuery, bool) {
	if o == nil || IsNil(o.PromqlQuery) {
		return nil, false
	}
	return o.PromqlQuery, true
}

// HasPromqlQuery returns a boolean if a field has been set.
func (o *MetricsSource) HasPromqlQuery() bool {
	if o != nil && !IsNil(o.PromqlQuery) {
		return true
	}

	return false
}

// SetPromqlQuery gets a reference to the given PromQlQuery and assigns it to the PromqlQuery field.
func (o *MetricsSource) SetPromqlQuery(v PromQlQuery) {
	o.PromqlQuery = &v
}

// GetStrategy returns the Strategy field value if set, zero value otherwise.
func (o *MetricsSource) GetStrategy() MetricsSourceStrategy {
	if o == nil || IsNil(o.Strategy) {
		var ret MetricsSourceStrategy
		return ret
	}
	return *o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsSource) GetStrategyOk() (*MetricsSourceStrategy, bool) {
	if o == nil || IsNil(o.Strategy) {
		return nil, false
	}
	return o.Strategy, true
}

// HasStrategy returns a boolean if a field has been set.
func (o *MetricsSource) HasStrategy() bool {
	if o != nil && !IsNil(o.Strategy) {
		return true
	}

	return false
}

// SetStrategy gets a reference to the given MetricsSourceStrategy and assigns it to the Strategy field.
func (o *MetricsSource) SetStrategy(v MetricsSourceStrategy) {
	o.Strategy = &v
}

func (o MetricsSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricsSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.MessageTemplate) {
		toSerialize["messageTemplate"] = o.MessageTemplate
	}
	if !IsNil(o.Orientation) {
		toSerialize["orientation"] = o.Orientation
	}
	if !IsNil(o.PromqlQuery) {
		toSerialize["promqlQuery"] = o.PromqlQuery
	}
	if !IsNil(o.Strategy) {
		toSerialize["strategy"] = o.Strategy
	}
	return toSerialize, nil
}

type NullableMetricsSource struct {
	value *MetricsSource
	isSet bool
}

func (v NullableMetricsSource) Get() *MetricsSource {
	return v.value
}

func (v *NullableMetricsSource) Set(val *MetricsSource) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricsSource) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricsSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricsSource(val *MetricsSource) *NullableMetricsSource {
	return &NullableMetricsSource{value: val, isSet: true}
}

func (v NullableMetricsSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricsSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


