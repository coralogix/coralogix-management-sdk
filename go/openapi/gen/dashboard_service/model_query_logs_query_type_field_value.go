/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the QueryLogsQueryTypeFieldValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryLogsQueryTypeFieldValue{}

// QueryLogsQueryTypeFieldValue struct for QueryLogsQueryTypeFieldValue
type QueryLogsQueryTypeFieldValue struct {
	ObservationField *ObservationField `json:"observationField,omitempty"`
}

// NewQueryLogsQueryTypeFieldValue instantiates a new QueryLogsQueryTypeFieldValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryLogsQueryTypeFieldValue() *QueryLogsQueryTypeFieldValue {
	this := QueryLogsQueryTypeFieldValue{}
	return &this
}

// NewQueryLogsQueryTypeFieldValueWithDefaults instantiates a new QueryLogsQueryTypeFieldValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryLogsQueryTypeFieldValueWithDefaults() *QueryLogsQueryTypeFieldValue {
	this := QueryLogsQueryTypeFieldValue{}
	return &this
}

// GetObservationField returns the ObservationField field value if set, zero value otherwise.
func (o *QueryLogsQueryTypeFieldValue) GetObservationField() ObservationField {
	if o == nil || IsNil(o.ObservationField) {
		var ret ObservationField
		return ret
	}
	return *o.ObservationField
}

// GetObservationFieldOk returns a tuple with the ObservationField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryLogsQueryTypeFieldValue) GetObservationFieldOk() (*ObservationField, bool) {
	if o == nil || IsNil(o.ObservationField) {
		return nil, false
	}
	return o.ObservationField, true
}

// HasObservationField returns a boolean if a field has been set.
func (o *QueryLogsQueryTypeFieldValue) HasObservationField() bool {
	if o != nil && !IsNil(o.ObservationField) {
		return true
	}

	return false
}

// SetObservationField gets a reference to the given ObservationField and assigns it to the ObservationField field.
func (o *QueryLogsQueryTypeFieldValue) SetObservationField(v ObservationField) {
	o.ObservationField = &v
}

func (o QueryLogsQueryTypeFieldValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryLogsQueryTypeFieldValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObservationField) {
		toSerialize["observationField"] = o.ObservationField
	}
	return toSerialize, nil
}

type NullableQueryLogsQueryTypeFieldValue struct {
	value *QueryLogsQueryTypeFieldValue
	isSet bool
}

func (v NullableQueryLogsQueryTypeFieldValue) Get() *QueryLogsQueryTypeFieldValue {
	return v.value
}

func (v *NullableQueryLogsQueryTypeFieldValue) Set(val *QueryLogsQueryTypeFieldValue) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryLogsQueryTypeFieldValue) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryLogsQueryTypeFieldValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryLogsQueryTypeFieldValue(val *QueryLogsQueryTypeFieldValue) *NullableQueryLogsQueryTypeFieldValue {
	return &NullableQueryLogsQueryTypeFieldValue{value: val, isSet: true}
}

func (v NullableQueryLogsQueryTypeFieldValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryLogsQueryTypeFieldValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


