/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VariableSourceV2Static type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariableSourceV2Static{}

// VariableSourceV2Static struct for VariableSourceV2Static
type VariableSourceV2Static struct {
	Static *StaticSource `json:"static,omitempty"`
}

// NewVariableSourceV2Static instantiates a new VariableSourceV2Static object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableSourceV2Static() *VariableSourceV2Static {
	this := VariableSourceV2Static{}
	return &this
}

// NewVariableSourceV2StaticWithDefaults instantiates a new VariableSourceV2Static object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableSourceV2StaticWithDefaults() *VariableSourceV2Static {
	this := VariableSourceV2Static{}
	return &this
}

// GetStatic returns the Static field value if set, zero value otherwise.
func (o *VariableSourceV2Static) GetStatic() StaticSource {
	if o == nil || IsNil(o.Static) {
		var ret StaticSource
		return ret
	}
	return *o.Static
}

// GetStaticOk returns a tuple with the Static field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableSourceV2Static) GetStaticOk() (*StaticSource, bool) {
	if o == nil || IsNil(o.Static) {
		return nil, false
	}
	return o.Static, true
}

// HasStatic returns a boolean if a field has been set.
func (o *VariableSourceV2Static) HasStatic() bool {
	if o != nil && !IsNil(o.Static) {
		return true
	}

	return false
}

// SetStatic gets a reference to the given StaticSource and assigns it to the Static field.
func (o *VariableSourceV2Static) SetStatic(v StaticSource) {
	o.Static = &v
}

func (o VariableSourceV2Static) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariableSourceV2Static) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Static) {
		toSerialize["static"] = o.Static
	}
	return toSerialize, nil
}

type NullableVariableSourceV2Static struct {
	value *VariableSourceV2Static
	isSet bool
}

func (v NullableVariableSourceV2Static) Get() *VariableSourceV2Static {
	return v.value
}

func (v *NullableVariableSourceV2Static) Set(val *VariableSourceV2Static) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableSourceV2Static) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableSourceV2Static) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableSourceV2Static(val *VariableSourceV2Static) *NullableVariableSourceV2Static {
	return &NullableVariableSourceV2Static{value: val, isSet: true}
}

func (v NullableVariableSourceV2Static) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableSourceV2Static) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


