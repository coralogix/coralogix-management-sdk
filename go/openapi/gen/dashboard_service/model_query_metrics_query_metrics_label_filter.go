/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the QueryMetricsQueryMetricsLabelFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryMetricsQueryMetricsLabelFilter{}

// QueryMetricsQueryMetricsLabelFilter struct for QueryMetricsQueryMetricsLabelFilter
type QueryMetricsQueryMetricsLabelFilter struct {
	Label *QueryMetricsQueryStringOrVariable `json:"label,omitempty"`
	Metric *QueryMetricsQueryStringOrVariable `json:"metric,omitempty"`
	Operator *QueryMetricsQueryOperator `json:"operator,omitempty"`
}

// NewQueryMetricsQueryMetricsLabelFilter instantiates a new QueryMetricsQueryMetricsLabelFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryMetricsQueryMetricsLabelFilter() *QueryMetricsQueryMetricsLabelFilter {
	this := QueryMetricsQueryMetricsLabelFilter{}
	return &this
}

// NewQueryMetricsQueryMetricsLabelFilterWithDefaults instantiates a new QueryMetricsQueryMetricsLabelFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryMetricsQueryMetricsLabelFilterWithDefaults() *QueryMetricsQueryMetricsLabelFilter {
	this := QueryMetricsQueryMetricsLabelFilter{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *QueryMetricsQueryMetricsLabelFilter) GetLabel() QueryMetricsQueryStringOrVariable {
	if o == nil || IsNil(o.Label) {
		var ret QueryMetricsQueryStringOrVariable
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMetricsQueryMetricsLabelFilter) GetLabelOk() (*QueryMetricsQueryStringOrVariable, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *QueryMetricsQueryMetricsLabelFilter) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given QueryMetricsQueryStringOrVariable and assigns it to the Label field.
func (o *QueryMetricsQueryMetricsLabelFilter) SetLabel(v QueryMetricsQueryStringOrVariable) {
	o.Label = &v
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *QueryMetricsQueryMetricsLabelFilter) GetMetric() QueryMetricsQueryStringOrVariable {
	if o == nil || IsNil(o.Metric) {
		var ret QueryMetricsQueryStringOrVariable
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMetricsQueryMetricsLabelFilter) GetMetricOk() (*QueryMetricsQueryStringOrVariable, bool) {
	if o == nil || IsNil(o.Metric) {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *QueryMetricsQueryMetricsLabelFilter) HasMetric() bool {
	if o != nil && !IsNil(o.Metric) {
		return true
	}

	return false
}

// SetMetric gets a reference to the given QueryMetricsQueryStringOrVariable and assigns it to the Metric field.
func (o *QueryMetricsQueryMetricsLabelFilter) SetMetric(v QueryMetricsQueryStringOrVariable) {
	o.Metric = &v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *QueryMetricsQueryMetricsLabelFilter) GetOperator() QueryMetricsQueryOperator {
	if o == nil || IsNil(o.Operator) {
		var ret QueryMetricsQueryOperator
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMetricsQueryMetricsLabelFilter) GetOperatorOk() (*QueryMetricsQueryOperator, bool) {
	if o == nil || IsNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *QueryMetricsQueryMetricsLabelFilter) HasOperator() bool {
	if o != nil && !IsNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given QueryMetricsQueryOperator and assigns it to the Operator field.
func (o *QueryMetricsQueryMetricsLabelFilter) SetOperator(v QueryMetricsQueryOperator) {
	o.Operator = &v
}

func (o QueryMetricsQueryMetricsLabelFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryMetricsQueryMetricsLabelFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Metric) {
		toSerialize["metric"] = o.Metric
	}
	if !IsNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}
	return toSerialize, nil
}

type NullableQueryMetricsQueryMetricsLabelFilter struct {
	value *QueryMetricsQueryMetricsLabelFilter
	isSet bool
}

func (v NullableQueryMetricsQueryMetricsLabelFilter) Get() *QueryMetricsQueryMetricsLabelFilter {
	return v.value
}

func (v *NullableQueryMetricsQueryMetricsLabelFilter) Set(val *QueryMetricsQueryMetricsLabelFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryMetricsQueryMetricsLabelFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryMetricsQueryMetricsLabelFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryMetricsQueryMetricsLabelFilter(val *QueryMetricsQueryMetricsLabelFilter) *NullableQueryMetricsQueryMetricsLabelFilter {
	return &NullableQueryMetricsQueryMetricsLabelFilter{value: val, isSet: true}
}

func (v NullableQueryMetricsQueryMetricsLabelFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryMetricsQueryMetricsLabelFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


