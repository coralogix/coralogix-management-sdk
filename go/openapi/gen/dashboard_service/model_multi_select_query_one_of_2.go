/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the MultiSelectQueryOneOf2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiSelectQueryOneOf2{}

// MultiSelectQueryOneOf2 struct for MultiSelectQueryOneOf2
type MultiSelectQueryOneOf2 struct {
	SpansQuery *QuerySpansQuery `json:"spansQuery,omitempty"`
}

// NewMultiSelectQueryOneOf2 instantiates a new MultiSelectQueryOneOf2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiSelectQueryOneOf2() *MultiSelectQueryOneOf2 {
	this := MultiSelectQueryOneOf2{}
	return &this
}

// NewMultiSelectQueryOneOf2WithDefaults instantiates a new MultiSelectQueryOneOf2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiSelectQueryOneOf2WithDefaults() *MultiSelectQueryOneOf2 {
	this := MultiSelectQueryOneOf2{}
	return &this
}

// GetSpansQuery returns the SpansQuery field value if set, zero value otherwise.
func (o *MultiSelectQueryOneOf2) GetSpansQuery() QuerySpansQuery {
	if o == nil || IsNil(o.SpansQuery) {
		var ret QuerySpansQuery
		return ret
	}
	return *o.SpansQuery
}

// GetSpansQueryOk returns a tuple with the SpansQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiSelectQueryOneOf2) GetSpansQueryOk() (*QuerySpansQuery, bool) {
	if o == nil || IsNil(o.SpansQuery) {
		return nil, false
	}
	return o.SpansQuery, true
}

// HasSpansQuery returns a boolean if a field has been set.
func (o *MultiSelectQueryOneOf2) HasSpansQuery() bool {
	if o != nil && !IsNil(o.SpansQuery) {
		return true
	}

	return false
}

// SetSpansQuery gets a reference to the given QuerySpansQuery and assigns it to the SpansQuery field.
func (o *MultiSelectQueryOneOf2) SetSpansQuery(v QuerySpansQuery) {
	o.SpansQuery = &v
}

func (o MultiSelectQueryOneOf2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiSelectQueryOneOf2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpansQuery) {
		toSerialize["spansQuery"] = o.SpansQuery
	}
	return toSerialize, nil
}

type NullableMultiSelectQueryOneOf2 struct {
	value *MultiSelectQueryOneOf2
	isSet bool
}

func (v NullableMultiSelectQueryOneOf2) Get() *MultiSelectQueryOneOf2 {
	return v.value
}

func (v *NullableMultiSelectQueryOneOf2) Set(val *MultiSelectQueryOneOf2) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiSelectQueryOneOf2) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiSelectQueryOneOf2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiSelectQueryOneOf2(val *MultiSelectQueryOneOf2) *NullableMultiSelectQueryOneOf2 {
	return &NullableMultiSelectQueryOneOf2{value: val, isSet: true}
}

func (v NullableMultiSelectQueryOneOf2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiSelectQueryOneOf2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


