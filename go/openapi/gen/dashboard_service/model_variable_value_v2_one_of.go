/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VariableValueV2OneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariableValueV2OneOf{}

// VariableValueV2OneOf struct for VariableValueV2OneOf
type VariableValueV2OneOf struct {
	MultiString *MultiStringValue `json:"multiString,omitempty"`
}

// NewVariableValueV2OneOf instantiates a new VariableValueV2OneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableValueV2OneOf() *VariableValueV2OneOf {
	this := VariableValueV2OneOf{}
	return &this
}

// NewVariableValueV2OneOfWithDefaults instantiates a new VariableValueV2OneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableValueV2OneOfWithDefaults() *VariableValueV2OneOf {
	this := VariableValueV2OneOf{}
	return &this
}

// GetMultiString returns the MultiString field value if set, zero value otherwise.
func (o *VariableValueV2OneOf) GetMultiString() MultiStringValue {
	if o == nil || IsNil(o.MultiString) {
		var ret MultiStringValue
		return ret
	}
	return *o.MultiString
}

// GetMultiStringOk returns a tuple with the MultiString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableValueV2OneOf) GetMultiStringOk() (*MultiStringValue, bool) {
	if o == nil || IsNil(o.MultiString) {
		return nil, false
	}
	return o.MultiString, true
}

// HasMultiString returns a boolean if a field has been set.
func (o *VariableValueV2OneOf) HasMultiString() bool {
	if o != nil && !IsNil(o.MultiString) {
		return true
	}

	return false
}

// SetMultiString gets a reference to the given MultiStringValue and assigns it to the MultiString field.
func (o *VariableValueV2OneOf) SetMultiString(v MultiStringValue) {
	o.MultiString = &v
}

func (o VariableValueV2OneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariableValueV2OneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MultiString) {
		toSerialize["multiString"] = o.MultiString
	}
	return toSerialize, nil
}

type NullableVariableValueV2OneOf struct {
	value *VariableValueV2OneOf
	isSet bool
}

func (v NullableVariableValueV2OneOf) Get() *VariableValueV2OneOf {
	return v.value
}

func (v *NullableVariableValueV2OneOf) Set(val *VariableValueV2OneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableValueV2OneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableValueV2OneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableValueV2OneOf(val *VariableValueV2OneOf) *NullableVariableValueV2OneOf {
	return &NullableVariableValueV2OneOf{value: val, isSet: true}
}

func (v NullableVariableValueV2OneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableValueV2OneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


