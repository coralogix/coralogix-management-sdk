/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the VariableSourceV2Query type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariableSourceV2Query{}

// VariableSourceV2Query struct for VariableSourceV2Query
type VariableSourceV2Query struct {
	Query *VariableSourceV2QuerySource `json:"query,omitempty"`
}

// NewVariableSourceV2Query instantiates a new VariableSourceV2Query object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableSourceV2Query() *VariableSourceV2Query {
	this := VariableSourceV2Query{}
	return &this
}

// NewVariableSourceV2QueryWithDefaults instantiates a new VariableSourceV2Query object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableSourceV2QueryWithDefaults() *VariableSourceV2Query {
	this := VariableSourceV2Query{}
	return &this
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *VariableSourceV2Query) GetQuery() VariableSourceV2QuerySource {
	if o == nil || IsNil(o.Query) {
		var ret VariableSourceV2QuerySource
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableSourceV2Query) GetQueryOk() (*VariableSourceV2QuerySource, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *VariableSourceV2Query) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given VariableSourceV2QuerySource and assigns it to the Query field.
func (o *VariableSourceV2Query) SetQuery(v VariableSourceV2QuerySource) {
	o.Query = &v
}

func (o VariableSourceV2Query) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariableSourceV2Query) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	return toSerialize, nil
}

type NullableVariableSourceV2Query struct {
	value *VariableSourceV2Query
	isSet bool
}

func (v NullableVariableSourceV2Query) Get() *VariableSourceV2Query {
	return v.value
}

func (v *NullableVariableSourceV2Query) Set(val *VariableSourceV2Query) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableSourceV2Query) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableSourceV2Query) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableSourceV2Query(val *VariableSourceV2Query) *NullableVariableSourceV2Query {
	return &NullableVariableSourceV2Query{value: val, isSet: true}
}

func (v NullableVariableSourceV2Query) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableSourceV2Query) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


