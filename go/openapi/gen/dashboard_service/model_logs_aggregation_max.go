/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the LogsAggregationMax type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogsAggregationMax{}

// LogsAggregationMax struct for LogsAggregationMax
type LogsAggregationMax struct {
	Max *Max `json:"max,omitempty"`
}

// NewLogsAggregationMax instantiates a new LogsAggregationMax object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsAggregationMax() *LogsAggregationMax {
	this := LogsAggregationMax{}
	return &this
}

// NewLogsAggregationMaxWithDefaults instantiates a new LogsAggregationMax object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsAggregationMaxWithDefaults() *LogsAggregationMax {
	this := LogsAggregationMax{}
	return &this
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *LogsAggregationMax) GetMax() Max {
	if o == nil || IsNil(o.Max) {
		var ret Max
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsAggregationMax) GetMaxOk() (*Max, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *LogsAggregationMax) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given Max and assigns it to the Max field.
func (o *LogsAggregationMax) SetMax(v Max) {
	o.Max = &v
}

func (o LogsAggregationMax) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogsAggregationMax) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	return toSerialize, nil
}

type NullableLogsAggregationMax struct {
	value *LogsAggregationMax
	isSet bool
}

func (v NullableLogsAggregationMax) Get() *LogsAggregationMax {
	return v.value
}

func (v *NullableLogsAggregationMax) Set(val *LogsAggregationMax) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsAggregationMax) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsAggregationMax) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsAggregationMax(val *LogsAggregationMax) *NullableLogsAggregationMax {
	return &NullableLogsAggregationMax{value: val, isSet: true}
}

func (v NullableLogsAggregationMax) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsAggregationMax) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


