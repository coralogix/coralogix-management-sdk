/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the FolderPath type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FolderPath{}

// FolderPath struct for FolderPath
type FolderPath struct {
	Segments []string `json:"segments,omitempty"`
}

// NewFolderPath instantiates a new FolderPath object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFolderPath() *FolderPath {
	this := FolderPath{}
	return &this
}

// NewFolderPathWithDefaults instantiates a new FolderPath object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFolderPathWithDefaults() *FolderPath {
	this := FolderPath{}
	return &this
}

// GetSegments returns the Segments field value if set, zero value otherwise.
func (o *FolderPath) GetSegments() []string {
	if o == nil || IsNil(o.Segments) {
		var ret []string
		return ret
	}
	return o.Segments
}

// GetSegmentsOk returns a tuple with the Segments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolderPath) GetSegmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Segments) {
		return nil, false
	}
	return o.Segments, true
}

// HasSegments returns a boolean if a field has been set.
func (o *FolderPath) HasSegments() bool {
	if o != nil && !IsNil(o.Segments) {
		return true
	}

	return false
}

// SetSegments gets a reference to the given []string and assigns it to the Segments field.
func (o *FolderPath) SetSegments(v []string) {
	o.Segments = v
}

func (o FolderPath) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FolderPath) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Segments) {
		toSerialize["segments"] = o.Segments
	}
	return toSerialize, nil
}

type NullableFolderPath struct {
	value *FolderPath
	isSet bool
}

func (v NullableFolderPath) Get() *FolderPath {
	return v.value
}

func (v *NullableFolderPath) Set(val *FolderPath) {
	v.value = val
	v.isSet = true
}

func (v NullableFolderPath) IsSet() bool {
	return v.isSet
}

func (v *NullableFolderPath) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFolderPath(val *FolderPath) *NullableFolderPath {
	return &NullableFolderPath{value: val, isSet: true}
}

func (v NullableFolderPath) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFolderPath) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


