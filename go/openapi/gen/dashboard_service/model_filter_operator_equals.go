/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the FilterOperatorEquals type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilterOperatorEquals{}

// FilterOperatorEquals This data structure defines the comparison operation for the filter.
type FilterOperatorEquals struct {
	Equals *FilterEquals `json:"equals,omitempty"`
}

// NewFilterOperatorEquals instantiates a new FilterOperatorEquals object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilterOperatorEquals() *FilterOperatorEquals {
	this := FilterOperatorEquals{}
	return &this
}

// NewFilterOperatorEqualsWithDefaults instantiates a new FilterOperatorEquals object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilterOperatorEqualsWithDefaults() *FilterOperatorEquals {
	this := FilterOperatorEquals{}
	return &this
}

// GetEquals returns the Equals field value if set, zero value otherwise.
func (o *FilterOperatorEquals) GetEquals() FilterEquals {
	if o == nil || IsNil(o.Equals) {
		var ret FilterEquals
		return ret
	}
	return *o.Equals
}

// GetEqualsOk returns a tuple with the Equals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterOperatorEquals) GetEqualsOk() (*FilterEquals, bool) {
	if o == nil || IsNil(o.Equals) {
		return nil, false
	}
	return o.Equals, true
}

// HasEquals returns a boolean if a field has been set.
func (o *FilterOperatorEquals) HasEquals() bool {
	if o != nil && !IsNil(o.Equals) {
		return true
	}

	return false
}

// SetEquals gets a reference to the given FilterEquals and assigns it to the Equals field.
func (o *FilterOperatorEquals) SetEquals(v FilterEquals) {
	o.Equals = &v
}

func (o FilterOperatorEquals) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilterOperatorEquals) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Equals) {
		toSerialize["equals"] = o.Equals
	}
	return toSerialize, nil
}

type NullableFilterOperatorEquals struct {
	value *FilterOperatorEquals
	isSet bool
}

func (v NullableFilterOperatorEquals) Get() *FilterOperatorEquals {
	return v.value
}

func (v *NullableFilterOperatorEquals) Set(val *FilterOperatorEquals) {
	v.value = val
	v.isSet = true
}

func (v NullableFilterOperatorEquals) IsSet() bool {
	return v.isSet
}

func (v *NullableFilterOperatorEquals) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilterOperatorEquals(val *FilterOperatorEquals) *NullableFilterOperatorEquals {
	return &NullableFilterOperatorEquals{value: val, isSet: true}
}

func (v NullableFilterOperatorEquals) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilterOperatorEquals) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


