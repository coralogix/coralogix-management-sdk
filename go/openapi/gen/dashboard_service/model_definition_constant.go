/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the DefinitionConstant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefinitionConstant{}

// DefinitionConstant struct for DefinitionConstant
type DefinitionConstant struct {
	Constant *Constant `json:"constant,omitempty"`
}

// NewDefinitionConstant instantiates a new DefinitionConstant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefinitionConstant() *DefinitionConstant {
	this := DefinitionConstant{}
	return &this
}

// NewDefinitionConstantWithDefaults instantiates a new DefinitionConstant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefinitionConstantWithDefaults() *DefinitionConstant {
	this := DefinitionConstant{}
	return &this
}

// GetConstant returns the Constant field value if set, zero value otherwise.
func (o *DefinitionConstant) GetConstant() Constant {
	if o == nil || IsNil(o.Constant) {
		var ret Constant
		return ret
	}
	return *o.Constant
}

// GetConstantOk returns a tuple with the Constant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefinitionConstant) GetConstantOk() (*Constant, bool) {
	if o == nil || IsNil(o.Constant) {
		return nil, false
	}
	return o.Constant, true
}

// HasConstant returns a boolean if a field has been set.
func (o *DefinitionConstant) HasConstant() bool {
	if o != nil && !IsNil(o.Constant) {
		return true
	}

	return false
}

// SetConstant gets a reference to the given Constant and assigns it to the Constant field.
func (o *DefinitionConstant) SetConstant(v Constant) {
	o.Constant = &v
}

func (o DefinitionConstant) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefinitionConstant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Constant) {
		toSerialize["constant"] = o.Constant
	}
	return toSerialize, nil
}

type NullableDefinitionConstant struct {
	value *DefinitionConstant
	isSet bool
}

func (v NullableDefinitionConstant) Get() *DefinitionConstant {
	return v.value
}

func (v *NullableDefinitionConstant) Set(val *DefinitionConstant) {
	v.value = val
	v.isSet = true
}

func (v NullableDefinitionConstant) IsSet() bool {
	return v.isSet
}

func (v *NullableDefinitionConstant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefinitionConstant(val *DefinitionConstant) *NullableDefinitionConstant {
	return &NullableDefinitionConstant{value: val, isSet: true}
}

func (v NullableDefinitionConstant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefinitionConstant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


