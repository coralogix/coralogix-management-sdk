/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the SpanFieldMetadataField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpanFieldMetadataField{}

// SpanFieldMetadataField struct for SpanFieldMetadataField
type SpanFieldMetadataField struct {
	MetadataField *MetadataField `json:"metadataField,omitempty"`
}

// NewSpanFieldMetadataField instantiates a new SpanFieldMetadataField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpanFieldMetadataField() *SpanFieldMetadataField {
	this := SpanFieldMetadataField{}
	return &this
}

// NewSpanFieldMetadataFieldWithDefaults instantiates a new SpanFieldMetadataField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpanFieldMetadataFieldWithDefaults() *SpanFieldMetadataField {
	this := SpanFieldMetadataField{}
	return &this
}

// GetMetadataField returns the MetadataField field value if set, zero value otherwise.
func (o *SpanFieldMetadataField) GetMetadataField() MetadataField {
	if o == nil || IsNil(o.MetadataField) {
		var ret MetadataField
		return ret
	}
	return *o.MetadataField
}

// GetMetadataFieldOk returns a tuple with the MetadataField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpanFieldMetadataField) GetMetadataFieldOk() (*MetadataField, bool) {
	if o == nil || IsNil(o.MetadataField) {
		return nil, false
	}
	return o.MetadataField, true
}

// HasMetadataField returns a boolean if a field has been set.
func (o *SpanFieldMetadataField) HasMetadataField() bool {
	if o != nil && !IsNil(o.MetadataField) {
		return true
	}

	return false
}

// SetMetadataField gets a reference to the given MetadataField and assigns it to the MetadataField field.
func (o *SpanFieldMetadataField) SetMetadataField(v MetadataField) {
	o.MetadataField = &v
}

func (o SpanFieldMetadataField) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpanFieldMetadataField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MetadataField) {
		toSerialize["metadataField"] = o.MetadataField
	}
	return toSerialize, nil
}

type NullableSpanFieldMetadataField struct {
	value *SpanFieldMetadataField
	isSet bool
}

func (v NullableSpanFieldMetadataField) Get() *SpanFieldMetadataField {
	return v.value
}

func (v *NullableSpanFieldMetadataField) Set(val *SpanFieldMetadataField) {
	v.value = val
	v.isSet = true
}

func (v NullableSpanFieldMetadataField) IsSet() bool {
	return v.isSet
}

func (v *NullableSpanFieldMetadataField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpanFieldMetadataField(val *SpanFieldMetadataField) *NullableSpanFieldMetadataField {
	return &NullableSpanFieldMetadataField{value: val, isSet: true}
}

func (v NullableSpanFieldMetadataField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpanFieldMetadataField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


