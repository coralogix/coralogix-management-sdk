/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the WidgetScopeSpecificWidgets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WidgetScopeSpecificWidgets{}

// WidgetScopeSpecificWidgets struct for WidgetScopeSpecificWidgets
type WidgetScopeSpecificWidgets struct {
	SpecificWidgets *SpecificWidgets `json:"specificWidgets,omitempty"`
}

// NewWidgetScopeSpecificWidgets instantiates a new WidgetScopeSpecificWidgets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetScopeSpecificWidgets() *WidgetScopeSpecificWidgets {
	this := WidgetScopeSpecificWidgets{}
	return &this
}

// NewWidgetScopeSpecificWidgetsWithDefaults instantiates a new WidgetScopeSpecificWidgets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetScopeSpecificWidgetsWithDefaults() *WidgetScopeSpecificWidgets {
	this := WidgetScopeSpecificWidgets{}
	return &this
}

// GetSpecificWidgets returns the SpecificWidgets field value if set, zero value otherwise.
func (o *WidgetScopeSpecificWidgets) GetSpecificWidgets() SpecificWidgets {
	if o == nil || IsNil(o.SpecificWidgets) {
		var ret SpecificWidgets
		return ret
	}
	return *o.SpecificWidgets
}

// GetSpecificWidgetsOk returns a tuple with the SpecificWidgets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WidgetScopeSpecificWidgets) GetSpecificWidgetsOk() (*SpecificWidgets, bool) {
	if o == nil || IsNil(o.SpecificWidgets) {
		return nil, false
	}
	return o.SpecificWidgets, true
}

// HasSpecificWidgets returns a boolean if a field has been set.
func (o *WidgetScopeSpecificWidgets) HasSpecificWidgets() bool {
	if o != nil && !IsNil(o.SpecificWidgets) {
		return true
	}

	return false
}

// SetSpecificWidgets gets a reference to the given SpecificWidgets and assigns it to the SpecificWidgets field.
func (o *WidgetScopeSpecificWidgets) SetSpecificWidgets(v SpecificWidgets) {
	o.SpecificWidgets = &v
}

func (o WidgetScopeSpecificWidgets) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WidgetScopeSpecificWidgets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpecificWidgets) {
		toSerialize["specificWidgets"] = o.SpecificWidgets
	}
	return toSerialize, nil
}

type NullableWidgetScopeSpecificWidgets struct {
	value *WidgetScopeSpecificWidgets
	isSet bool
}

func (v NullableWidgetScopeSpecificWidgets) Get() *WidgetScopeSpecificWidgets {
	return v.value
}

func (v *NullableWidgetScopeSpecificWidgets) Set(val *WidgetScopeSpecificWidgets) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetScopeSpecificWidgets) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetScopeSpecificWidgets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetScopeSpecificWidgets(val *WidgetScopeSpecificWidgets) *NullableWidgetScopeSpecificWidgets {
	return &NullableWidgetScopeSpecificWidgets{value: val, isSet: true}
}

func (v NullableWidgetScopeSpecificWidgets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetScopeSpecificWidgets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


