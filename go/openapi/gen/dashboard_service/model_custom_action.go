/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the CustomAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomAction{}

// CustomAction struct for CustomAction
type CustomAction struct {
	// Static URL that may contain variables using {{variable_name}} syntax
	Url *string `json:"url,omitempty"`
}

// NewCustomAction instantiates a new CustomAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomAction() *CustomAction {
	this := CustomAction{}
	return &this
}

// NewCustomActionWithDefaults instantiates a new CustomAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomActionWithDefaults() *CustomAction {
	this := CustomAction{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CustomAction) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomAction) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CustomAction) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CustomAction) SetUrl(v string) {
	o.Url = &v
}

func (o CustomAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableCustomAction struct {
	value *CustomAction
	isSet bool
}

func (v NullableCustomAction) Get() *CustomAction {
	return v.value
}

func (v *NullableCustomAction) Set(val *CustomAction) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomAction) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomAction(val *CustomAction) *NullableCustomAction {
	return &NullableCustomAction{value: val, isSet: true}
}

func (v NullableCustomAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


