/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the HexagonLogsQuery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HexagonLogsQuery{}

// HexagonLogsQuery A logs variant of the query
type HexagonLogsQuery struct {
	Filters []FilterLogsFilter `json:"filters,omitempty"`
	GroupBy []ObservationField `json:"groupBy,omitempty"`
	LogsAggregation *LogsAggregation `json:"logsAggregation,omitempty"`
	LuceneQuery *LuceneQuery `json:"luceneQuery,omitempty"`
	TimeFrame *TimeFrameSelect `json:"timeFrame,omitempty"`
}

// NewHexagonLogsQuery instantiates a new HexagonLogsQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHexagonLogsQuery() *HexagonLogsQuery {
	this := HexagonLogsQuery{}
	return &this
}

// NewHexagonLogsQueryWithDefaults instantiates a new HexagonLogsQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHexagonLogsQueryWithDefaults() *HexagonLogsQuery {
	this := HexagonLogsQuery{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *HexagonLogsQuery) GetFilters() []FilterLogsFilter {
	if o == nil || IsNil(o.Filters) {
		var ret []FilterLogsFilter
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HexagonLogsQuery) GetFiltersOk() ([]FilterLogsFilter, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *HexagonLogsQuery) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []FilterLogsFilter and assigns it to the Filters field.
func (o *HexagonLogsQuery) SetFilters(v []FilterLogsFilter) {
	o.Filters = v
}

// GetGroupBy returns the GroupBy field value if set, zero value otherwise.
func (o *HexagonLogsQuery) GetGroupBy() []ObservationField {
	if o == nil || IsNil(o.GroupBy) {
		var ret []ObservationField
		return ret
	}
	return o.GroupBy
}

// GetGroupByOk returns a tuple with the GroupBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HexagonLogsQuery) GetGroupByOk() ([]ObservationField, bool) {
	if o == nil || IsNil(o.GroupBy) {
		return nil, false
	}
	return o.GroupBy, true
}

// HasGroupBy returns a boolean if a field has been set.
func (o *HexagonLogsQuery) HasGroupBy() bool {
	if o != nil && !IsNil(o.GroupBy) {
		return true
	}

	return false
}

// SetGroupBy gets a reference to the given []ObservationField and assigns it to the GroupBy field.
func (o *HexagonLogsQuery) SetGroupBy(v []ObservationField) {
	o.GroupBy = v
}

// GetLogsAggregation returns the LogsAggregation field value if set, zero value otherwise.
func (o *HexagonLogsQuery) GetLogsAggregation() LogsAggregation {
	if o == nil || IsNil(o.LogsAggregation) {
		var ret LogsAggregation
		return ret
	}
	return *o.LogsAggregation
}

// GetLogsAggregationOk returns a tuple with the LogsAggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HexagonLogsQuery) GetLogsAggregationOk() (*LogsAggregation, bool) {
	if o == nil || IsNil(o.LogsAggregation) {
		return nil, false
	}
	return o.LogsAggregation, true
}

// HasLogsAggregation returns a boolean if a field has been set.
func (o *HexagonLogsQuery) HasLogsAggregation() bool {
	if o != nil && !IsNil(o.LogsAggregation) {
		return true
	}

	return false
}

// SetLogsAggregation gets a reference to the given LogsAggregation and assigns it to the LogsAggregation field.
func (o *HexagonLogsQuery) SetLogsAggregation(v LogsAggregation) {
	o.LogsAggregation = &v
}

// GetLuceneQuery returns the LuceneQuery field value if set, zero value otherwise.
func (o *HexagonLogsQuery) GetLuceneQuery() LuceneQuery {
	if o == nil || IsNil(o.LuceneQuery) {
		var ret LuceneQuery
		return ret
	}
	return *o.LuceneQuery
}

// GetLuceneQueryOk returns a tuple with the LuceneQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HexagonLogsQuery) GetLuceneQueryOk() (*LuceneQuery, bool) {
	if o == nil || IsNil(o.LuceneQuery) {
		return nil, false
	}
	return o.LuceneQuery, true
}

// HasLuceneQuery returns a boolean if a field has been set.
func (o *HexagonLogsQuery) HasLuceneQuery() bool {
	if o != nil && !IsNil(o.LuceneQuery) {
		return true
	}

	return false
}

// SetLuceneQuery gets a reference to the given LuceneQuery and assigns it to the LuceneQuery field.
func (o *HexagonLogsQuery) SetLuceneQuery(v LuceneQuery) {
	o.LuceneQuery = &v
}

// GetTimeFrame returns the TimeFrame field value if set, zero value otherwise.
func (o *HexagonLogsQuery) GetTimeFrame() TimeFrameSelect {
	if o == nil || IsNil(o.TimeFrame) {
		var ret TimeFrameSelect
		return ret
	}
	return *o.TimeFrame
}

// GetTimeFrameOk returns a tuple with the TimeFrame field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HexagonLogsQuery) GetTimeFrameOk() (*TimeFrameSelect, bool) {
	if o == nil || IsNil(o.TimeFrame) {
		return nil, false
	}
	return o.TimeFrame, true
}

// HasTimeFrame returns a boolean if a field has been set.
func (o *HexagonLogsQuery) HasTimeFrame() bool {
	if o != nil && !IsNil(o.TimeFrame) {
		return true
	}

	return false
}

// SetTimeFrame gets a reference to the given TimeFrameSelect and assigns it to the TimeFrame field.
func (o *HexagonLogsQuery) SetTimeFrame(v TimeFrameSelect) {
	o.TimeFrame = &v
}

func (o HexagonLogsQuery) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HexagonLogsQuery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.GroupBy) {
		toSerialize["groupBy"] = o.GroupBy
	}
	if !IsNil(o.LogsAggregation) {
		toSerialize["logsAggregation"] = o.LogsAggregation
	}
	if !IsNil(o.LuceneQuery) {
		toSerialize["luceneQuery"] = o.LuceneQuery
	}
	if !IsNil(o.TimeFrame) {
		toSerialize["timeFrame"] = o.TimeFrame
	}
	return toSerialize, nil
}

type NullableHexagonLogsQuery struct {
	value *HexagonLogsQuery
	isSet bool
}

func (v NullableHexagonLogsQuery) Get() *HexagonLogsQuery {
	return v.value
}

func (v *NullableHexagonLogsQuery) Set(val *HexagonLogsQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableHexagonLogsQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableHexagonLogsQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHexagonLogsQuery(val *HexagonLogsQuery) *NullableHexagonLogsQuery {
	return &NullableHexagonLogsQuery{value: val, isSet: true}
}

func (v NullableHexagonLogsQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHexagonLogsQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


