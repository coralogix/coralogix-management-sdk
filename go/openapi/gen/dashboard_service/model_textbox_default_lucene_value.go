/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the TextboxDefaultLuceneValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TextboxDefaultLuceneValue{}

// TextboxDefaultLuceneValue struct for TextboxDefaultLuceneValue
type TextboxDefaultLuceneValue struct {
	DataModeType *V1CommonDataModeType `json:"dataModeType,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewTextboxDefaultLuceneValue instantiates a new TextboxDefaultLuceneValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTextboxDefaultLuceneValue() *TextboxDefaultLuceneValue {
	this := TextboxDefaultLuceneValue{}
	return &this
}

// NewTextboxDefaultLuceneValueWithDefaults instantiates a new TextboxDefaultLuceneValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTextboxDefaultLuceneValueWithDefaults() *TextboxDefaultLuceneValue {
	this := TextboxDefaultLuceneValue{}
	return &this
}

// GetDataModeType returns the DataModeType field value if set, zero value otherwise.
func (o *TextboxDefaultLuceneValue) GetDataModeType() V1CommonDataModeType {
	if o == nil || IsNil(o.DataModeType) {
		var ret V1CommonDataModeType
		return ret
	}
	return *o.DataModeType
}

// GetDataModeTypeOk returns a tuple with the DataModeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TextboxDefaultLuceneValue) GetDataModeTypeOk() (*V1CommonDataModeType, bool) {
	if o == nil || IsNil(o.DataModeType) {
		return nil, false
	}
	return o.DataModeType, true
}

// HasDataModeType returns a boolean if a field has been set.
func (o *TextboxDefaultLuceneValue) HasDataModeType() bool {
	if o != nil && !IsNil(o.DataModeType) {
		return true
	}

	return false
}

// SetDataModeType gets a reference to the given V1CommonDataModeType and assigns it to the DataModeType field.
func (o *TextboxDefaultLuceneValue) SetDataModeType(v V1CommonDataModeType) {
	o.DataModeType = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *TextboxDefaultLuceneValue) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TextboxDefaultLuceneValue) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *TextboxDefaultLuceneValue) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *TextboxDefaultLuceneValue) SetValue(v string) {
	o.Value = &v
}

func (o TextboxDefaultLuceneValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TextboxDefaultLuceneValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataModeType) {
		toSerialize["dataModeType"] = o.DataModeType
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableTextboxDefaultLuceneValue struct {
	value *TextboxDefaultLuceneValue
	isSet bool
}

func (v NullableTextboxDefaultLuceneValue) Get() *TextboxDefaultLuceneValue {
	return v.value
}

func (v *NullableTextboxDefaultLuceneValue) Set(val *TextboxDefaultLuceneValue) {
	v.value = val
	v.isSet = true
}

func (v NullableTextboxDefaultLuceneValue) IsSet() bool {
	return v.isSet
}

func (v *NullableTextboxDefaultLuceneValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTextboxDefaultLuceneValue(val *TextboxDefaultLuceneValue) *NullableTextboxDefaultLuceneValue {
	return &NullableTextboxDefaultLuceneValue{value: val, isSet: true}
}

func (v NullableTextboxDefaultLuceneValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTextboxDefaultLuceneValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


