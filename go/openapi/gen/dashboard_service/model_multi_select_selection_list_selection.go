/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dashboard_service

import (
	"encoding/json"
)

// checks if the MultiSelectSelectionListSelection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiSelectSelectionListSelection{}

// MultiSelectSelectionListSelection struct for MultiSelectSelectionListSelection
type MultiSelectSelectionListSelection struct {
	Labels []string `json:"labels,omitempty"`
	Values []string `json:"values,omitempty"`
}

// NewMultiSelectSelectionListSelection instantiates a new MultiSelectSelectionListSelection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiSelectSelectionListSelection() *MultiSelectSelectionListSelection {
	this := MultiSelectSelectionListSelection{}
	return &this
}

// NewMultiSelectSelectionListSelectionWithDefaults instantiates a new MultiSelectSelectionListSelection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiSelectSelectionListSelectionWithDefaults() *MultiSelectSelectionListSelection {
	this := MultiSelectSelectionListSelection{}
	return &this
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *MultiSelectSelectionListSelection) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiSelectSelectionListSelection) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *MultiSelectSelectionListSelection) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *MultiSelectSelectionListSelection) SetLabels(v []string) {
	o.Labels = v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *MultiSelectSelectionListSelection) GetValues() []string {
	if o == nil || IsNil(o.Values) {
		var ret []string
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiSelectSelectionListSelection) GetValuesOk() ([]string, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *MultiSelectSelectionListSelection) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *MultiSelectSelectionListSelection) SetValues(v []string) {
	o.Values = v
}

func (o MultiSelectSelectionListSelection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiSelectSelectionListSelection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableMultiSelectSelectionListSelection struct {
	value *MultiSelectSelectionListSelection
	isSet bool
}

func (v NullableMultiSelectSelectionListSelection) Get() *MultiSelectSelectionListSelection {
	return v.value
}

func (v *NullableMultiSelectSelectionListSelection) Set(val *MultiSelectSelectionListSelection) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiSelectSelectionListSelection) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiSelectSelectionListSelection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiSelectSelectionListSelection(val *MultiSelectSelectionListSelection) *NullableMultiSelectSelectionListSelection {
	return &NullableMultiSelectSelectionListSelection{value: val, isSet: true}
}

func (v NullableMultiSelectSelectionListSelection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiSelectSelectionListSelection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


