/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
)

// checks if the NotificationRouting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationRouting{}

// NotificationRouting struct for NotificationRouting
type NotificationRouting struct {
	ConfigOverrides *V3SourceOverrides `json:"configOverrides,omitempty"`
}

// NewNotificationRouting instantiates a new NotificationRouting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationRouting() *NotificationRouting {
	this := NotificationRouting{}
	return &this
}

// NewNotificationRoutingWithDefaults instantiates a new NotificationRouting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationRoutingWithDefaults() *NotificationRouting {
	this := NotificationRouting{}
	return &this
}

// GetConfigOverrides returns the ConfigOverrides field value if set, zero value otherwise.
func (o *NotificationRouting) GetConfigOverrides() V3SourceOverrides {
	if o == nil || IsNil(o.ConfigOverrides) {
		var ret V3SourceOverrides
		return ret
	}
	return *o.ConfigOverrides
}

// GetConfigOverridesOk returns a tuple with the ConfigOverrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationRouting) GetConfigOverridesOk() (*V3SourceOverrides, bool) {
	if o == nil || IsNil(o.ConfigOverrides) {
		return nil, false
	}
	return o.ConfigOverrides, true
}

// HasConfigOverrides returns a boolean if a field has been set.
func (o *NotificationRouting) HasConfigOverrides() bool {
	if o != nil && !IsNil(o.ConfigOverrides) {
		return true
	}

	return false
}

// SetConfigOverrides gets a reference to the given V3SourceOverrides and assigns it to the ConfigOverrides field.
func (o *NotificationRouting) SetConfigOverrides(v V3SourceOverrides) {
	o.ConfigOverrides = &v
}

func (o NotificationRouting) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationRouting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfigOverrides) {
		toSerialize["configOverrides"] = o.ConfigOverrides
	}
	return toSerialize, nil
}

type NullableNotificationRouting struct {
	value *NotificationRouting
	isSet bool
}

func (v NullableNotificationRouting) Get() *NotificationRouting {
	return v.value
}

func (v *NullableNotificationRouting) Set(val *NotificationRouting) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationRouting) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationRouting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationRouting(val *NotificationRouting) *NullableNotificationRouting {
	return &NullableNotificationRouting{value: val, isSet: true}
}

func (v NullableNotificationRouting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationRouting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


