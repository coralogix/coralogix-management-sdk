/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V3SourceOverrides type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3SourceOverrides{}

// V3SourceOverrides struct for V3SourceOverrides
type V3SourceOverrides struct {
	ConnectorConfigFields []V3ConnectorConfigField `json:"connectorConfigFields"`
	MessageConfigFields []V3MessageConfigField `json:"messageConfigFields"`
	// the payload type for the notification
	PayloadType string `json:"payloadType"`
}

type _V3SourceOverrides V3SourceOverrides

// NewV3SourceOverrides instantiates a new V3SourceOverrides object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3SourceOverrides(connectorConfigFields []V3ConnectorConfigField, messageConfigFields []V3MessageConfigField, payloadType string) *V3SourceOverrides {
	this := V3SourceOverrides{}
	this.ConnectorConfigFields = connectorConfigFields
	this.MessageConfigFields = messageConfigFields
	this.PayloadType = payloadType
	return &this
}

// NewV3SourceOverridesWithDefaults instantiates a new V3SourceOverrides object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3SourceOverridesWithDefaults() *V3SourceOverrides {
	this := V3SourceOverrides{}
	return &this
}

// GetConnectorConfigFields returns the ConnectorConfigFields field value
func (o *V3SourceOverrides) GetConnectorConfigFields() []V3ConnectorConfigField {
	if o == nil {
		var ret []V3ConnectorConfigField
		return ret
	}

	return o.ConnectorConfigFields
}

// GetConnectorConfigFieldsOk returns a tuple with the ConnectorConfigFields field value
// and a boolean to check if the value has been set.
func (o *V3SourceOverrides) GetConnectorConfigFieldsOk() ([]V3ConnectorConfigField, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectorConfigFields, true
}

// SetConnectorConfigFields sets field value
func (o *V3SourceOverrides) SetConnectorConfigFields(v []V3ConnectorConfigField) {
	o.ConnectorConfigFields = v
}

// GetMessageConfigFields returns the MessageConfigFields field value
func (o *V3SourceOverrides) GetMessageConfigFields() []V3MessageConfigField {
	if o == nil {
		var ret []V3MessageConfigField
		return ret
	}

	return o.MessageConfigFields
}

// GetMessageConfigFieldsOk returns a tuple with the MessageConfigFields field value
// and a boolean to check if the value has been set.
func (o *V3SourceOverrides) GetMessageConfigFieldsOk() ([]V3MessageConfigField, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessageConfigFields, true
}

// SetMessageConfigFields sets field value
func (o *V3SourceOverrides) SetMessageConfigFields(v []V3MessageConfigField) {
	o.MessageConfigFields = v
}

// GetPayloadType returns the PayloadType field value
func (o *V3SourceOverrides) GetPayloadType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PayloadType
}

// GetPayloadTypeOk returns a tuple with the PayloadType field value
// and a boolean to check if the value has been set.
func (o *V3SourceOverrides) GetPayloadTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayloadType, true
}

// SetPayloadType sets field value
func (o *V3SourceOverrides) SetPayloadType(v string) {
	o.PayloadType = v
}

func (o V3SourceOverrides) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3SourceOverrides) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["connectorConfigFields"] = o.ConnectorConfigFields
	toSerialize["messageConfigFields"] = o.MessageConfigFields
	toSerialize["payloadType"] = o.PayloadType
	return toSerialize, nil
}

func (o *V3SourceOverrides) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"connectorConfigFields",
		"messageConfigFields",
		"payloadType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV3SourceOverrides := _V3SourceOverrides{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV3SourceOverrides)

	if err != nil {
		return err
	}

	*o = V3SourceOverrides(varV3SourceOverrides)

	return err
}

type NullableV3SourceOverrides struct {
	value *V3SourceOverrides
	isSet bool
}

func (v NullableV3SourceOverrides) Get() *V3SourceOverrides {
	return v.value
}

func (v *NullableV3SourceOverrides) Set(val *V3SourceOverrides) {
	v.value = val
	v.isSet = true
}

func (v NullableV3SourceOverrides) IsSet() bool {
	return v.isSet
}

func (v *NullableV3SourceOverrides) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3SourceOverrides(val *V3SourceOverrides) *NullableV3SourceOverrides {
	return &NullableV3SourceOverrides{value: val, isSet: true}
}

func (v NullableV3SourceOverrides) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3SourceOverrides) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


