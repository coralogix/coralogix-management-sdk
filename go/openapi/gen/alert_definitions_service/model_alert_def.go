/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AlertDef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertDef{}

// AlertDef This data structure represents an alert definition
type AlertDef struct {
	AlertDefProperties AlertDefProperties `json:"alertDefProperties"`
	// The old alert ID
	AlertVersionId string `json:"alertVersionId"`
	// The time when the alert definition was created
	CreatedTime *time.Time `json:"createdTime,omitempty"`
	// The alert definition's persistent ID
	Id string `json:"id"`
	// The last time the alert definition was triggered
	LastTriggeredTime *time.Time `json:"lastTriggeredTime,omitempty"`
	Status *AlertDefStatus `json:"status,omitempty"`
	// The time when the alert definition was last updated
	UpdatedTime *time.Time `json:"updatedTime,omitempty"`
}

type _AlertDef AlertDef

// NewAlertDef instantiates a new AlertDef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertDef(alertDefProperties AlertDefProperties, alertVersionId string, id string) *AlertDef {
	this := AlertDef{}
	this.AlertDefProperties = alertDefProperties
	this.AlertVersionId = alertVersionId
	this.Id = id
	return &this
}

// NewAlertDefWithDefaults instantiates a new AlertDef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertDefWithDefaults() *AlertDef {
	this := AlertDef{}
	return &this
}

// GetAlertDefProperties returns the AlertDefProperties field value
func (o *AlertDef) GetAlertDefProperties() AlertDefProperties {
	if o == nil {
		var ret AlertDefProperties
		return ret
	}

	return o.AlertDefProperties
}

// GetAlertDefPropertiesOk returns a tuple with the AlertDefProperties field value
// and a boolean to check if the value has been set.
func (o *AlertDef) GetAlertDefPropertiesOk() (*AlertDefProperties, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertDefProperties, true
}

// SetAlertDefProperties sets field value
func (o *AlertDef) SetAlertDefProperties(v AlertDefProperties) {
	o.AlertDefProperties = v
}

// GetAlertVersionId returns the AlertVersionId field value
func (o *AlertDef) GetAlertVersionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlertVersionId
}

// GetAlertVersionIdOk returns a tuple with the AlertVersionId field value
// and a boolean to check if the value has been set.
func (o *AlertDef) GetAlertVersionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertVersionId, true
}

// SetAlertVersionId sets field value
func (o *AlertDef) SetAlertVersionId(v string) {
	o.AlertVersionId = v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *AlertDef) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDef) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *AlertDef) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *AlertDef) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetId returns the Id field value
func (o *AlertDef) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AlertDef) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AlertDef) SetId(v string) {
	o.Id = v
}

// GetLastTriggeredTime returns the LastTriggeredTime field value if set, zero value otherwise.
func (o *AlertDef) GetLastTriggeredTime() time.Time {
	if o == nil || IsNil(o.LastTriggeredTime) {
		var ret time.Time
		return ret
	}
	return *o.LastTriggeredTime
}

// GetLastTriggeredTimeOk returns a tuple with the LastTriggeredTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDef) GetLastTriggeredTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastTriggeredTime) {
		return nil, false
	}
	return o.LastTriggeredTime, true
}

// HasLastTriggeredTime returns a boolean if a field has been set.
func (o *AlertDef) HasLastTriggeredTime() bool {
	if o != nil && !IsNil(o.LastTriggeredTime) {
		return true
	}

	return false
}

// SetLastTriggeredTime gets a reference to the given time.Time and assigns it to the LastTriggeredTime field.
func (o *AlertDef) SetLastTriggeredTime(v time.Time) {
	o.LastTriggeredTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AlertDef) GetStatus() AlertDefStatus {
	if o == nil || IsNil(o.Status) {
		var ret AlertDefStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDef) GetStatusOk() (*AlertDefStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AlertDef) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AlertDefStatus and assigns it to the Status field.
func (o *AlertDef) SetStatus(v AlertDefStatus) {
	o.Status = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *AlertDef) GetUpdatedTime() time.Time {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDef) GetUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *AlertDef) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given time.Time and assigns it to the UpdatedTime field.
func (o *AlertDef) SetUpdatedTime(v time.Time) {
	o.UpdatedTime = &v
}

func (o AlertDef) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertDef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alertDefProperties"] = o.AlertDefProperties
	toSerialize["alertVersionId"] = o.AlertVersionId
	if !IsNil(o.CreatedTime) {
		toSerialize["createdTime"] = o.CreatedTime
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.LastTriggeredTime) {
		toSerialize["lastTriggeredTime"] = o.LastTriggeredTime
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updatedTime"] = o.UpdatedTime
	}
	return toSerialize, nil
}

func (o *AlertDef) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alertDefProperties",
		"alertVersionId",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertDef := _AlertDef{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlertDef)

	if err != nil {
		return err
	}

	*o = AlertDef(varAlertDef)

	return err
}

type NullableAlertDef struct {
	value *AlertDef
	isSet bool
}

func (v NullableAlertDef) Get() *AlertDef {
	return v.value
}

func (v *NullableAlertDef) Set(val *AlertDef) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertDef) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertDef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertDef(val *AlertDef) *NullableAlertDef {
	return &NullableAlertDef{value: val, isSet: true}
}

func (v NullableAlertDef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertDef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


