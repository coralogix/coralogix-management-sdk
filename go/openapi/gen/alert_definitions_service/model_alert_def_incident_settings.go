/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
)

// checks if the AlertDefIncidentSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertDefIncidentSettings{}

// AlertDefIncidentSettings struct for AlertDefIncidentSettings
type AlertDefIncidentSettings struct {
	// The time in minutes before the alert can be retriggered
	Minutes *int64 `json:"minutes,omitempty"`
	NotifyOn *NotifyOn `json:"notifyOn,omitempty"`
}

// NewAlertDefIncidentSettings instantiates a new AlertDefIncidentSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertDefIncidentSettings() *AlertDefIncidentSettings {
	this := AlertDefIncidentSettings{}
	return &this
}

// NewAlertDefIncidentSettingsWithDefaults instantiates a new AlertDefIncidentSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertDefIncidentSettingsWithDefaults() *AlertDefIncidentSettings {
	this := AlertDefIncidentSettings{}
	return &this
}

// GetMinutes returns the Minutes field value if set, zero value otherwise.
func (o *AlertDefIncidentSettings) GetMinutes() int64 {
	if o == nil || IsNil(o.Minutes) {
		var ret int64
		return ret
	}
	return *o.Minutes
}

// GetMinutesOk returns a tuple with the Minutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDefIncidentSettings) GetMinutesOk() (*int64, bool) {
	if o == nil || IsNil(o.Minutes) {
		return nil, false
	}
	return o.Minutes, true
}

// HasMinutes returns a boolean if a field has been set.
func (o *AlertDefIncidentSettings) HasMinutes() bool {
	if o != nil && !IsNil(o.Minutes) {
		return true
	}

	return false
}

// SetMinutes gets a reference to the given int64 and assigns it to the Minutes field.
func (o *AlertDefIncidentSettings) SetMinutes(v int64) {
	o.Minutes = &v
}

// GetNotifyOn returns the NotifyOn field value if set, zero value otherwise.
func (o *AlertDefIncidentSettings) GetNotifyOn() NotifyOn {
	if o == nil || IsNil(o.NotifyOn) {
		var ret NotifyOn
		return ret
	}
	return *o.NotifyOn
}

// GetNotifyOnOk returns a tuple with the NotifyOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDefIncidentSettings) GetNotifyOnOk() (*NotifyOn, bool) {
	if o == nil || IsNil(o.NotifyOn) {
		return nil, false
	}
	return o.NotifyOn, true
}

// HasNotifyOn returns a boolean if a field has been set.
func (o *AlertDefIncidentSettings) HasNotifyOn() bool {
	if o != nil && !IsNil(o.NotifyOn) {
		return true
	}

	return false
}

// SetNotifyOn gets a reference to the given NotifyOn and assigns it to the NotifyOn field.
func (o *AlertDefIncidentSettings) SetNotifyOn(v NotifyOn) {
	o.NotifyOn = &v
}

func (o AlertDefIncidentSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertDefIncidentSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Minutes) {
		toSerialize["minutes"] = o.Minutes
	}
	if !IsNil(o.NotifyOn) {
		toSerialize["notifyOn"] = o.NotifyOn
	}
	return toSerialize, nil
}

type NullableAlertDefIncidentSettings struct {
	value *AlertDefIncidentSettings
	isSet bool
}

func (v NullableAlertDefIncidentSettings) Get() *AlertDefIncidentSettings {
	return v.value
}

func (v *NullableAlertDefIncidentSettings) Set(val *AlertDefIncidentSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertDefIncidentSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertDefIncidentSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertDefIncidentSettings(val *AlertDefIncidentSettings) *NullableAlertDefIncidentSettings {
	return &NullableAlertDefIncidentSettings{value: val, isSet: true}
}

func (v NullableAlertDefIncidentSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertDefIncidentSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


