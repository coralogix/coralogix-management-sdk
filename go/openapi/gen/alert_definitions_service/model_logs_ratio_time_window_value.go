/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"fmt"
)

// LogsRatioTimeWindowValue the model 'LogsRatioTimeWindowValue'
type LogsRatioTimeWindowValue string

// List of LogsRatioTimeWindowValue
const (
	LOGSRATIOTIMEWINDOWVALUE_LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_5_OR_UNSPECIFIED LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_5_OR_UNSPECIFIED"
	LOGSRATIOTIMEWINDOWVALUE_LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_10 LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_10"
	LOGSRATIOTIMEWINDOWVALUE_LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_15 LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_15"
	LOGSRATIOTIMEWINDOWVALUE_LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_30 LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_30"
	LOGSRATIOTIMEWINDOWVALUE_LOGS_RATIO_TIME_WINDOW_VALUE_HOUR_1 LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_HOUR_1"
	LOGSRATIOTIMEWINDOWVALUE_LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_2 LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_2"
	LOGSRATIOTIMEWINDOWVALUE_LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_4 LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_4"
	LOGSRATIOTIMEWINDOWVALUE_LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_6 LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_6"
	LOGSRATIOTIMEWINDOWVALUE_LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_12 LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_12"
	LOGSRATIOTIMEWINDOWVALUE_LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_24 LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_24"
	LOGSRATIOTIMEWINDOWVALUE_LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_36 LogsRatioTimeWindowValue = "LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_36"
)

// All allowed values of LogsRatioTimeWindowValue enum
var AllowedLogsRatioTimeWindowValueEnumValues = []LogsRatioTimeWindowValue{
	"LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_5_OR_UNSPECIFIED",
	"LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_10",
	"LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_15",
	"LOGS_RATIO_TIME_WINDOW_VALUE_MINUTES_30",
	"LOGS_RATIO_TIME_WINDOW_VALUE_HOUR_1",
	"LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_2",
	"LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_4",
	"LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_6",
	"LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_12",
	"LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_24",
	"LOGS_RATIO_TIME_WINDOW_VALUE_HOURS_36",
}

func (v *LogsRatioTimeWindowValue) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := LogsRatioTimeWindowValue(value)
	for _, existing := range AllowedLogsRatioTimeWindowValueEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid LogsRatioTimeWindowValue", value)
}

// NewLogsRatioTimeWindowValueFromValue returns a pointer to a valid LogsRatioTimeWindowValue
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLogsRatioTimeWindowValueFromValue(v string) (*LogsRatioTimeWindowValue, error) {
	ev := LogsRatioTimeWindowValue(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for LogsRatioTimeWindowValue: valid values are %v", v, AllowedLogsRatioTimeWindowValueEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LogsRatioTimeWindowValue) IsValid() bool {
	for _, existing := range AllowedLogsRatioTimeWindowValueEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to LogsRatioTimeWindowValue value
func (v LogsRatioTimeWindowValue) Ptr() *LogsRatioTimeWindowValue {
	return &v
}

type NullableLogsRatioTimeWindowValue struct {
	value *LogsRatioTimeWindowValue
	isSet bool
}

func (v NullableLogsRatioTimeWindowValue) Get() *LogsRatioTimeWindowValue {
	return v.value
}

func (v *NullableLogsRatioTimeWindowValue) Set(val *LogsRatioTimeWindowValue) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsRatioTimeWindowValue) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsRatioTimeWindowValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsRatioTimeWindowValue(val *LogsRatioTimeWindowValue) *NullableLogsRatioTimeWindowValue {
	return &NullableLogsRatioTimeWindowValue{value: val, isSet: true}
}

func (v NullableLogsRatioTimeWindowValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsRatioTimeWindowValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

