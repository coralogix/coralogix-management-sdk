/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
)

// checks if the AlertDefNotificationGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertDefNotificationGroup{}

// AlertDefNotificationGroup struct for AlertDefNotificationGroup
type AlertDefNotificationGroup struct {
	Destinations []NotificationDestination `json:"destinations,omitempty"`
	GroupByKeys []string `json:"groupByKeys,omitempty"`
	Router *NotificationRouter `json:"router,omitempty"`
	Webhooks []AlertDefWebhooksSettings `json:"webhooks,omitempty"`
}

// NewAlertDefNotificationGroup instantiates a new AlertDefNotificationGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertDefNotificationGroup() *AlertDefNotificationGroup {
	this := AlertDefNotificationGroup{}
	return &this
}

// NewAlertDefNotificationGroupWithDefaults instantiates a new AlertDefNotificationGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertDefNotificationGroupWithDefaults() *AlertDefNotificationGroup {
	this := AlertDefNotificationGroup{}
	return &this
}

// GetDestinations returns the Destinations field value if set, zero value otherwise.
func (o *AlertDefNotificationGroup) GetDestinations() []NotificationDestination {
	if o == nil || IsNil(o.Destinations) {
		var ret []NotificationDestination
		return ret
	}
	return o.Destinations
}

// GetDestinationsOk returns a tuple with the Destinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDefNotificationGroup) GetDestinationsOk() ([]NotificationDestination, bool) {
	if o == nil || IsNil(o.Destinations) {
		return nil, false
	}
	return o.Destinations, true
}

// HasDestinations returns a boolean if a field has been set.
func (o *AlertDefNotificationGroup) HasDestinations() bool {
	if o != nil && !IsNil(o.Destinations) {
		return true
	}

	return false
}

// SetDestinations gets a reference to the given []NotificationDestination and assigns it to the Destinations field.
func (o *AlertDefNotificationGroup) SetDestinations(v []NotificationDestination) {
	o.Destinations = v
}

// GetGroupByKeys returns the GroupByKeys field value if set, zero value otherwise.
func (o *AlertDefNotificationGroup) GetGroupByKeys() []string {
	if o == nil || IsNil(o.GroupByKeys) {
		var ret []string
		return ret
	}
	return o.GroupByKeys
}

// GetGroupByKeysOk returns a tuple with the GroupByKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDefNotificationGroup) GetGroupByKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupByKeys) {
		return nil, false
	}
	return o.GroupByKeys, true
}

// HasGroupByKeys returns a boolean if a field has been set.
func (o *AlertDefNotificationGroup) HasGroupByKeys() bool {
	if o != nil && !IsNil(o.GroupByKeys) {
		return true
	}

	return false
}

// SetGroupByKeys gets a reference to the given []string and assigns it to the GroupByKeys field.
func (o *AlertDefNotificationGroup) SetGroupByKeys(v []string) {
	o.GroupByKeys = v
}

// GetRouter returns the Router field value if set, zero value otherwise.
func (o *AlertDefNotificationGroup) GetRouter() NotificationRouter {
	if o == nil || IsNil(o.Router) {
		var ret NotificationRouter
		return ret
	}
	return *o.Router
}

// GetRouterOk returns a tuple with the Router field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDefNotificationGroup) GetRouterOk() (*NotificationRouter, bool) {
	if o == nil || IsNil(o.Router) {
		return nil, false
	}
	return o.Router, true
}

// HasRouter returns a boolean if a field has been set.
func (o *AlertDefNotificationGroup) HasRouter() bool {
	if o != nil && !IsNil(o.Router) {
		return true
	}

	return false
}

// SetRouter gets a reference to the given NotificationRouter and assigns it to the Router field.
func (o *AlertDefNotificationGroup) SetRouter(v NotificationRouter) {
	o.Router = &v
}

// GetWebhooks returns the Webhooks field value if set, zero value otherwise.
func (o *AlertDefNotificationGroup) GetWebhooks() []AlertDefWebhooksSettings {
	if o == nil || IsNil(o.Webhooks) {
		var ret []AlertDefWebhooksSettings
		return ret
	}
	return o.Webhooks
}

// GetWebhooksOk returns a tuple with the Webhooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDefNotificationGroup) GetWebhooksOk() ([]AlertDefWebhooksSettings, bool) {
	if o == nil || IsNil(o.Webhooks) {
		return nil, false
	}
	return o.Webhooks, true
}

// HasWebhooks returns a boolean if a field has been set.
func (o *AlertDefNotificationGroup) HasWebhooks() bool {
	if o != nil && !IsNil(o.Webhooks) {
		return true
	}

	return false
}

// SetWebhooks gets a reference to the given []AlertDefWebhooksSettings and assigns it to the Webhooks field.
func (o *AlertDefNotificationGroup) SetWebhooks(v []AlertDefWebhooksSettings) {
	o.Webhooks = v
}

func (o AlertDefNotificationGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertDefNotificationGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Destinations) {
		toSerialize["destinations"] = o.Destinations
	}
	if !IsNil(o.GroupByKeys) {
		toSerialize["groupByKeys"] = o.GroupByKeys
	}
	if !IsNil(o.Router) {
		toSerialize["router"] = o.Router
	}
	if !IsNil(o.Webhooks) {
		toSerialize["webhooks"] = o.Webhooks
	}
	return toSerialize, nil
}

type NullableAlertDefNotificationGroup struct {
	value *AlertDefNotificationGroup
	isSet bool
}

func (v NullableAlertDefNotificationGroup) Get() *AlertDefNotificationGroup {
	return v.value
}

func (v *NullableAlertDefNotificationGroup) Set(val *AlertDefNotificationGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertDefNotificationGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertDefNotificationGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertDefNotificationGroup(val *AlertDefNotificationGroup) *NullableAlertDefNotificationGroup {
	return &NullableAlertDefNotificationGroup{value: val, isSet: true}
}

func (v NullableAlertDefNotificationGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertDefNotificationGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


