/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"fmt"
)

// AlertDefStatus the model 'AlertDefStatus'
type AlertDefStatus string

// List of AlertDefStatus
const (
	ALERTDEFSTATUS_ALERT_DEF_STATUS_UNSPECIFIED AlertDefStatus = "ALERT_DEF_STATUS_UNSPECIFIED"
	ALERTDEFSTATUS_ALERT_DEF_STATUS_ALERTING AlertDefStatus = "ALERT_DEF_STATUS_ALERTING"
	ALERTDEFSTATUS_ALERT_DEF_STATUS_OK AlertDefStatus = "ALERT_DEF_STATUS_OK"
	ALERTDEFSTATUS_ALERT_DEF_STATUS_NO_DATA AlertDefStatus = "ALERT_DEF_STATUS_NO_DATA"
)

// All allowed values of AlertDefStatus enum
var AllowedAlertDefStatusEnumValues = []AlertDefStatus{
	"ALERT_DEF_STATUS_UNSPECIFIED",
	"ALERT_DEF_STATUS_ALERTING",
	"ALERT_DEF_STATUS_OK",
	"ALERT_DEF_STATUS_NO_DATA",
}

func (v *AlertDefStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AlertDefStatus(value)
	for _, existing := range AllowedAlertDefStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AlertDefStatus", value)
}

// NewAlertDefStatusFromValue returns a pointer to a valid AlertDefStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAlertDefStatusFromValue(v string) (*AlertDefStatus, error) {
	ev := AlertDefStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AlertDefStatus: valid values are %v", v, AllowedAlertDefStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AlertDefStatus) IsValid() bool {
	for _, existing := range AllowedAlertDefStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AlertDefStatus value
func (v AlertDefStatus) Ptr() *AlertDefStatus {
	return &v
}

type NullableAlertDefStatus struct {
	value *AlertDefStatus
	isSet bool
}

func (v NullableAlertDefStatus) Get() *AlertDefStatus {
	return v.value
}

func (v *NullableAlertDefStatus) Set(val *AlertDefStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertDefStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertDefStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertDefStatus(val *AlertDefStatus) *NullableAlertDefStatus {
	return &NullableAlertDefStatus{value: val, isSet: true}
}

func (v NullableAlertDefStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertDefStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

