/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"fmt"
)

// MetricTimeWindowValue the model 'MetricTimeWindowValue'
type MetricTimeWindowValue string

// List of MetricTimeWindowValue
const (
	METRICTIMEWINDOWVALUE_METRIC_TIME_WINDOW_VALUE_MINUTES_1_OR_UNSPECIFIED MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_MINUTES_1_OR_UNSPECIFIED"
	METRICTIMEWINDOWVALUE_METRIC_TIME_WINDOW_VALUE_MINUTES_5 MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_MINUTES_5"
	METRICTIMEWINDOWVALUE_METRIC_TIME_WINDOW_VALUE_MINUTES_10 MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_MINUTES_10"
	METRICTIMEWINDOWVALUE_METRIC_TIME_WINDOW_VALUE_MINUTES_15 MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_MINUTES_15"
	METRICTIMEWINDOWVALUE_METRIC_TIME_WINDOW_VALUE_MINUTES_20 MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_MINUTES_20"
	METRICTIMEWINDOWVALUE_METRIC_TIME_WINDOW_VALUE_MINUTES_30 MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_MINUTES_30"
	METRICTIMEWINDOWVALUE_METRIC_TIME_WINDOW_VALUE_HOUR_1 MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_HOUR_1"
	METRICTIMEWINDOWVALUE_METRIC_TIME_WINDOW_VALUE_HOURS_2 MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_HOURS_2"
	METRICTIMEWINDOWVALUE_METRIC_TIME_WINDOW_VALUE_HOURS_4 MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_HOURS_4"
	METRICTIMEWINDOWVALUE_METRIC_TIME_WINDOW_VALUE_HOURS_6 MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_HOURS_6"
	METRICTIMEWINDOWVALUE_METRIC_TIME_WINDOW_VALUE_HOURS_12 MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_HOURS_12"
	METRICTIMEWINDOWVALUE_METRIC_TIME_WINDOW_VALUE_HOURS_24 MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_HOURS_24"
	METRICTIMEWINDOWVALUE_METRIC_TIME_WINDOW_VALUE_HOURS_36 MetricTimeWindowValue = "METRIC_TIME_WINDOW_VALUE_HOURS_36"
)

// All allowed values of MetricTimeWindowValue enum
var AllowedMetricTimeWindowValueEnumValues = []MetricTimeWindowValue{
	"METRIC_TIME_WINDOW_VALUE_MINUTES_1_OR_UNSPECIFIED",
	"METRIC_TIME_WINDOW_VALUE_MINUTES_5",
	"METRIC_TIME_WINDOW_VALUE_MINUTES_10",
	"METRIC_TIME_WINDOW_VALUE_MINUTES_15",
	"METRIC_TIME_WINDOW_VALUE_MINUTES_20",
	"METRIC_TIME_WINDOW_VALUE_MINUTES_30",
	"METRIC_TIME_WINDOW_VALUE_HOUR_1",
	"METRIC_TIME_WINDOW_VALUE_HOURS_2",
	"METRIC_TIME_WINDOW_VALUE_HOURS_4",
	"METRIC_TIME_WINDOW_VALUE_HOURS_6",
	"METRIC_TIME_WINDOW_VALUE_HOURS_12",
	"METRIC_TIME_WINDOW_VALUE_HOURS_24",
	"METRIC_TIME_WINDOW_VALUE_HOURS_36",
}

func (v *MetricTimeWindowValue) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MetricTimeWindowValue(value)
	for _, existing := range AllowedMetricTimeWindowValueEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MetricTimeWindowValue", value)
}

// NewMetricTimeWindowValueFromValue returns a pointer to a valid MetricTimeWindowValue
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMetricTimeWindowValueFromValue(v string) (*MetricTimeWindowValue, error) {
	ev := MetricTimeWindowValue(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MetricTimeWindowValue: valid values are %v", v, AllowedMetricTimeWindowValueEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MetricTimeWindowValue) IsValid() bool {
	for _, existing := range AllowedMetricTimeWindowValueEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MetricTimeWindowValue value
func (v MetricTimeWindowValue) Ptr() *MetricTimeWindowValue {
	return &v
}

type NullableMetricTimeWindowValue struct {
	value *MetricTimeWindowValue
	isSet bool
}

func (v NullableMetricTimeWindowValue) Get() *MetricTimeWindowValue {
	return v.value
}

func (v *NullableMetricTimeWindowValue) Set(val *MetricTimeWindowValue) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricTimeWindowValue) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricTimeWindowValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricTimeWindowValue(val *MetricTimeWindowValue) *NullableMetricTimeWindowValue {
	return &NullableMetricTimeWindowValue{value: val, isSet: true}
}

func (v NullableMetricTimeWindowValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricTimeWindowValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

