/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
)

// checks if the LogsUniqueValueTimeWindow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogsUniqueValueTimeWindow{}

// LogsUniqueValueTimeWindow Time window configuration for log-based unique value alerts
type LogsUniqueValueTimeWindow struct {
	LogsUniqueValueTimeWindowSpecificValue *LogsUniqueValueTimeWindowValue `json:"logsUniqueValueTimeWindowSpecificValue,omitempty"`
}

// NewLogsUniqueValueTimeWindow instantiates a new LogsUniqueValueTimeWindow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsUniqueValueTimeWindow() *LogsUniqueValueTimeWindow {
	this := LogsUniqueValueTimeWindow{}
	return &this
}

// NewLogsUniqueValueTimeWindowWithDefaults instantiates a new LogsUniqueValueTimeWindow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsUniqueValueTimeWindowWithDefaults() *LogsUniqueValueTimeWindow {
	this := LogsUniqueValueTimeWindow{}
	return &this
}

// GetLogsUniqueValueTimeWindowSpecificValue returns the LogsUniqueValueTimeWindowSpecificValue field value if set, zero value otherwise.
func (o *LogsUniqueValueTimeWindow) GetLogsUniqueValueTimeWindowSpecificValue() LogsUniqueValueTimeWindowValue {
	if o == nil || IsNil(o.LogsUniqueValueTimeWindowSpecificValue) {
		var ret LogsUniqueValueTimeWindowValue
		return ret
	}
	return *o.LogsUniqueValueTimeWindowSpecificValue
}

// GetLogsUniqueValueTimeWindowSpecificValueOk returns a tuple with the LogsUniqueValueTimeWindowSpecificValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsUniqueValueTimeWindow) GetLogsUniqueValueTimeWindowSpecificValueOk() (*LogsUniqueValueTimeWindowValue, bool) {
	if o == nil || IsNil(o.LogsUniqueValueTimeWindowSpecificValue) {
		return nil, false
	}
	return o.LogsUniqueValueTimeWindowSpecificValue, true
}

// HasLogsUniqueValueTimeWindowSpecificValue returns a boolean if a field has been set.
func (o *LogsUniqueValueTimeWindow) HasLogsUniqueValueTimeWindowSpecificValue() bool {
	if o != nil && !IsNil(o.LogsUniqueValueTimeWindowSpecificValue) {
		return true
	}

	return false
}

// SetLogsUniqueValueTimeWindowSpecificValue gets a reference to the given LogsUniqueValueTimeWindowValue and assigns it to the LogsUniqueValueTimeWindowSpecificValue field.
func (o *LogsUniqueValueTimeWindow) SetLogsUniqueValueTimeWindowSpecificValue(v LogsUniqueValueTimeWindowValue) {
	o.LogsUniqueValueTimeWindowSpecificValue = &v
}

func (o LogsUniqueValueTimeWindow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogsUniqueValueTimeWindow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LogsUniqueValueTimeWindowSpecificValue) {
		toSerialize["logsUniqueValueTimeWindowSpecificValue"] = o.LogsUniqueValueTimeWindowSpecificValue
	}
	return toSerialize, nil
}

type NullableLogsUniqueValueTimeWindow struct {
	value *LogsUniqueValueTimeWindow
	isSet bool
}

func (v NullableLogsUniqueValueTimeWindow) Get() *LogsUniqueValueTimeWindow {
	return v.value
}

func (v *NullableLogsUniqueValueTimeWindow) Set(val *LogsUniqueValueTimeWindow) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsUniqueValueTimeWindow) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsUniqueValueTimeWindow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsUniqueValueTimeWindow(val *LogsUniqueValueTimeWindow) *NullableLogsUniqueValueTimeWindow {
	return &NullableLogsUniqueValueTimeWindow{value: val, isSet: true}
}

func (v NullableLogsUniqueValueTimeWindow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsUniqueValueTimeWindow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


