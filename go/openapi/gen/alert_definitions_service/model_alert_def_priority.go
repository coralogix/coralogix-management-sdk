/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"fmt"
)

// AlertDefPriority the model 'AlertDefPriority'
type AlertDefPriority string

// List of AlertDefPriority
const (
	ALERTDEFPRIORITY_ALERT_DEF_PRIORITY_P5_OR_UNSPECIFIED AlertDefPriority = "ALERT_DEF_PRIORITY_P5_OR_UNSPECIFIED"
	ALERTDEFPRIORITY_ALERT_DEF_PRIORITY_P4 AlertDefPriority = "ALERT_DEF_PRIORITY_P4"
	ALERTDEFPRIORITY_ALERT_DEF_PRIORITY_P3 AlertDefPriority = "ALERT_DEF_PRIORITY_P3"
	ALERTDEFPRIORITY_ALERT_DEF_PRIORITY_P2 AlertDefPriority = "ALERT_DEF_PRIORITY_P2"
	ALERTDEFPRIORITY_ALERT_DEF_PRIORITY_P1 AlertDefPriority = "ALERT_DEF_PRIORITY_P1"
)

// All allowed values of AlertDefPriority enum
var AllowedAlertDefPriorityEnumValues = []AlertDefPriority{
	"ALERT_DEF_PRIORITY_P5_OR_UNSPECIFIED",
	"ALERT_DEF_PRIORITY_P4",
	"ALERT_DEF_PRIORITY_P3",
	"ALERT_DEF_PRIORITY_P2",
	"ALERT_DEF_PRIORITY_P1",
}

func (v *AlertDefPriority) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AlertDefPriority(value)
	for _, existing := range AllowedAlertDefPriorityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AlertDefPriority", value)
}

// NewAlertDefPriorityFromValue returns a pointer to a valid AlertDefPriority
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAlertDefPriorityFromValue(v string) (*AlertDefPriority, error) {
	ev := AlertDefPriority(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AlertDefPriority: valid values are %v", v, AllowedAlertDefPriorityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AlertDefPriority) IsValid() bool {
	for _, existing := range AllowedAlertDefPriorityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AlertDefPriority value
func (v AlertDefPriority) Ptr() *AlertDefPriority {
	return &v
}

type NullableAlertDefPriority struct {
	value *AlertDefPriority
	isSet bool
}

func (v NullableAlertDefPriority) Get() *AlertDefPriority {
	return v.value
}

func (v *NullableAlertDefPriority) Set(val *AlertDefPriority) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertDefPriority) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertDefPriority) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertDefPriority(val *AlertDefPriority) *NullableAlertDefPriority {
	return &NullableAlertDefPriority{value: val, isSet: true}
}

func (v NullableAlertDefPriority) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertDefPriority) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

