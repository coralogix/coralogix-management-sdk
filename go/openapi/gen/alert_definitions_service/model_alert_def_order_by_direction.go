/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"fmt"
)

// AlertDefOrderByDirection the model 'AlertDefOrderByDirection'
type AlertDefOrderByDirection string

// List of AlertDefOrderByDirection
const (
	ALERTDEFORDERBYDIRECTION_ALERT_DEF_ORDER_BY_DIRECTION_ASC_OR_UNSPECIFIED AlertDefOrderByDirection = "ALERT_DEF_ORDER_BY_DIRECTION_ASC_OR_UNSPECIFIED"
	ALERTDEFORDERBYDIRECTION_ALERT_DEF_ORDER_BY_DIRECTION_DESC AlertDefOrderByDirection = "ALERT_DEF_ORDER_BY_DIRECTION_DESC"
)

// All allowed values of AlertDefOrderByDirection enum
var AllowedAlertDefOrderByDirectionEnumValues = []AlertDefOrderByDirection{
	"ALERT_DEF_ORDER_BY_DIRECTION_ASC_OR_UNSPECIFIED",
	"ALERT_DEF_ORDER_BY_DIRECTION_DESC",
}

func (v *AlertDefOrderByDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AlertDefOrderByDirection(value)
	for _, existing := range AllowedAlertDefOrderByDirectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AlertDefOrderByDirection", value)
}

// NewAlertDefOrderByDirectionFromValue returns a pointer to a valid AlertDefOrderByDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAlertDefOrderByDirectionFromValue(v string) (*AlertDefOrderByDirection, error) {
	ev := AlertDefOrderByDirection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AlertDefOrderByDirection: valid values are %v", v, AllowedAlertDefOrderByDirectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AlertDefOrderByDirection) IsValid() bool {
	for _, existing := range AllowedAlertDefOrderByDirectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AlertDefOrderByDirection value
func (v AlertDefOrderByDirection) Ptr() *AlertDefOrderByDirection {
	return &v
}

type NullableAlertDefOrderByDirection struct {
	value *AlertDefOrderByDirection
	isSet bool
}

func (v NullableAlertDefOrderByDirection) Get() *AlertDefOrderByDirection {
	return v.value
}

func (v *NullableAlertDefOrderByDirection) Set(val *AlertDefOrderByDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertDefOrderByDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertDefOrderByDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertDefOrderByDirection(val *AlertDefOrderByDirection) *NullableAlertDefOrderByDirection {
	return &NullableAlertDefOrderByDirection{value: val, isSet: true}
}

func (v NullableAlertDefOrderByDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertDefOrderByDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

