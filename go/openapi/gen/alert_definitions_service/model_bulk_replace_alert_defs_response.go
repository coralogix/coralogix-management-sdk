/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BulkReplaceAlertDefsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkReplaceAlertDefsResponse{}

// BulkReplaceAlertDefsResponse A response that contains the results of the bulk replace operation
type BulkReplaceAlertDefsResponse struct {
	AlertDefs []AlertDef `json:"alertDefs"`
	FailedToReplaceAlertDefs []FailedToReplaceAlertDef `json:"failedToReplaceAlertDefs"`
	NotFoundIds []string `json:"notFoundIds"`
	SkippedIds []string `json:"skippedIds"`
}

type _BulkReplaceAlertDefsResponse BulkReplaceAlertDefsResponse

// NewBulkReplaceAlertDefsResponse instantiates a new BulkReplaceAlertDefsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkReplaceAlertDefsResponse(alertDefs []AlertDef, failedToReplaceAlertDefs []FailedToReplaceAlertDef, notFoundIds []string, skippedIds []string) *BulkReplaceAlertDefsResponse {
	this := BulkReplaceAlertDefsResponse{}
	this.AlertDefs = alertDefs
	this.FailedToReplaceAlertDefs = failedToReplaceAlertDefs
	this.NotFoundIds = notFoundIds
	this.SkippedIds = skippedIds
	return &this
}

// NewBulkReplaceAlertDefsResponseWithDefaults instantiates a new BulkReplaceAlertDefsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkReplaceAlertDefsResponseWithDefaults() *BulkReplaceAlertDefsResponse {
	this := BulkReplaceAlertDefsResponse{}
	return &this
}

// GetAlertDefs returns the AlertDefs field value
func (o *BulkReplaceAlertDefsResponse) GetAlertDefs() []AlertDef {
	if o == nil {
		var ret []AlertDef
		return ret
	}

	return o.AlertDefs
}

// GetAlertDefsOk returns a tuple with the AlertDefs field value
// and a boolean to check if the value has been set.
func (o *BulkReplaceAlertDefsResponse) GetAlertDefsOk() ([]AlertDef, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertDefs, true
}

// SetAlertDefs sets field value
func (o *BulkReplaceAlertDefsResponse) SetAlertDefs(v []AlertDef) {
	o.AlertDefs = v
}

// GetFailedToReplaceAlertDefs returns the FailedToReplaceAlertDefs field value
func (o *BulkReplaceAlertDefsResponse) GetFailedToReplaceAlertDefs() []FailedToReplaceAlertDef {
	if o == nil {
		var ret []FailedToReplaceAlertDef
		return ret
	}

	return o.FailedToReplaceAlertDefs
}

// GetFailedToReplaceAlertDefsOk returns a tuple with the FailedToReplaceAlertDefs field value
// and a boolean to check if the value has been set.
func (o *BulkReplaceAlertDefsResponse) GetFailedToReplaceAlertDefsOk() ([]FailedToReplaceAlertDef, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailedToReplaceAlertDefs, true
}

// SetFailedToReplaceAlertDefs sets field value
func (o *BulkReplaceAlertDefsResponse) SetFailedToReplaceAlertDefs(v []FailedToReplaceAlertDef) {
	o.FailedToReplaceAlertDefs = v
}

// GetNotFoundIds returns the NotFoundIds field value
func (o *BulkReplaceAlertDefsResponse) GetNotFoundIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.NotFoundIds
}

// GetNotFoundIdsOk returns a tuple with the NotFoundIds field value
// and a boolean to check if the value has been set.
func (o *BulkReplaceAlertDefsResponse) GetNotFoundIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotFoundIds, true
}

// SetNotFoundIds sets field value
func (o *BulkReplaceAlertDefsResponse) SetNotFoundIds(v []string) {
	o.NotFoundIds = v
}

// GetSkippedIds returns the SkippedIds field value
func (o *BulkReplaceAlertDefsResponse) GetSkippedIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SkippedIds
}

// GetSkippedIdsOk returns a tuple with the SkippedIds field value
// and a boolean to check if the value has been set.
func (o *BulkReplaceAlertDefsResponse) GetSkippedIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SkippedIds, true
}

// SetSkippedIds sets field value
func (o *BulkReplaceAlertDefsResponse) SetSkippedIds(v []string) {
	o.SkippedIds = v
}

func (o BulkReplaceAlertDefsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkReplaceAlertDefsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alertDefs"] = o.AlertDefs
	toSerialize["failedToReplaceAlertDefs"] = o.FailedToReplaceAlertDefs
	toSerialize["notFoundIds"] = o.NotFoundIds
	toSerialize["skippedIds"] = o.SkippedIds
	return toSerialize, nil
}

func (o *BulkReplaceAlertDefsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alertDefs",
		"failedToReplaceAlertDefs",
		"notFoundIds",
		"skippedIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkReplaceAlertDefsResponse := _BulkReplaceAlertDefsResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBulkReplaceAlertDefsResponse)

	if err != nil {
		return err
	}

	*o = BulkReplaceAlertDefsResponse(varBulkReplaceAlertDefsResponse)

	return err
}

type NullableBulkReplaceAlertDefsResponse struct {
	value *BulkReplaceAlertDefsResponse
	isSet bool
}

func (v NullableBulkReplaceAlertDefsResponse) Get() *BulkReplaceAlertDefsResponse {
	return v.value
}

func (v *NullableBulkReplaceAlertDefsResponse) Set(val *BulkReplaceAlertDefsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkReplaceAlertDefsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkReplaceAlertDefsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkReplaceAlertDefsResponse(val *BulkReplaceAlertDefsResponse) *NullableBulkReplaceAlertDefsResponse {
	return &NullableBulkReplaceAlertDefsResponse{value: val, isSet: true}
}

func (v NullableBulkReplaceAlertDefsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkReplaceAlertDefsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


