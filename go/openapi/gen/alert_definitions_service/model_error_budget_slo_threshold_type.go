/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ErrorBudgetSLOThresholdType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorBudgetSLOThresholdType{}

// ErrorBudgetSLOThresholdType SLO threshold type definition
type ErrorBudgetSLOThresholdType struct {
	ErrorBudget *ErrorBudgetThreshold `json:"errorBudget,omitempty"`
	SloDefinition V3SloDefinition `json:"sloDefinition"`
}

type _ErrorBudgetSLOThresholdType ErrorBudgetSLOThresholdType

// NewErrorBudgetSLOThresholdType instantiates a new ErrorBudgetSLOThresholdType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorBudgetSLOThresholdType(sloDefinition V3SloDefinition) *ErrorBudgetSLOThresholdType {
	this := ErrorBudgetSLOThresholdType{}
	this.SloDefinition = sloDefinition
	return &this
}

// NewErrorBudgetSLOThresholdTypeWithDefaults instantiates a new ErrorBudgetSLOThresholdType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorBudgetSLOThresholdTypeWithDefaults() *ErrorBudgetSLOThresholdType {
	this := ErrorBudgetSLOThresholdType{}
	return &this
}

// GetErrorBudget returns the ErrorBudget field value if set, zero value otherwise.
func (o *ErrorBudgetSLOThresholdType) GetErrorBudget() ErrorBudgetThreshold {
	if o == nil || IsNil(o.ErrorBudget) {
		var ret ErrorBudgetThreshold
		return ret
	}
	return *o.ErrorBudget
}

// GetErrorBudgetOk returns a tuple with the ErrorBudget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorBudgetSLOThresholdType) GetErrorBudgetOk() (*ErrorBudgetThreshold, bool) {
	if o == nil || IsNil(o.ErrorBudget) {
		return nil, false
	}
	return o.ErrorBudget, true
}

// HasErrorBudget returns a boolean if a field has been set.
func (o *ErrorBudgetSLOThresholdType) HasErrorBudget() bool {
	if o != nil && !IsNil(o.ErrorBudget) {
		return true
	}

	return false
}

// SetErrorBudget gets a reference to the given ErrorBudgetThreshold and assigns it to the ErrorBudget field.
func (o *ErrorBudgetSLOThresholdType) SetErrorBudget(v ErrorBudgetThreshold) {
	o.ErrorBudget = &v
}

// GetSloDefinition returns the SloDefinition field value
func (o *ErrorBudgetSLOThresholdType) GetSloDefinition() V3SloDefinition {
	if o == nil {
		var ret V3SloDefinition
		return ret
	}

	return o.SloDefinition
}

// GetSloDefinitionOk returns a tuple with the SloDefinition field value
// and a boolean to check if the value has been set.
func (o *ErrorBudgetSLOThresholdType) GetSloDefinitionOk() (*V3SloDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SloDefinition, true
}

// SetSloDefinition sets field value
func (o *ErrorBudgetSLOThresholdType) SetSloDefinition(v V3SloDefinition) {
	o.SloDefinition = v
}

func (o ErrorBudgetSLOThresholdType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorBudgetSLOThresholdType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorBudget) {
		toSerialize["errorBudget"] = o.ErrorBudget
	}
	toSerialize["sloDefinition"] = o.SloDefinition
	return toSerialize, nil
}

func (o *ErrorBudgetSLOThresholdType) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sloDefinition",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varErrorBudgetSLOThresholdType := _ErrorBudgetSLOThresholdType{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varErrorBudgetSLOThresholdType)

	if err != nil {
		return err
	}

	*o = ErrorBudgetSLOThresholdType(varErrorBudgetSLOThresholdType)

	return err
}

type NullableErrorBudgetSLOThresholdType struct {
	value *ErrorBudgetSLOThresholdType
	isSet bool
}

func (v NullableErrorBudgetSLOThresholdType) Get() *ErrorBudgetSLOThresholdType {
	return v.value
}

func (v *NullableErrorBudgetSLOThresholdType) Set(val *ErrorBudgetSLOThresholdType) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorBudgetSLOThresholdType) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorBudgetSLOThresholdType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorBudgetSLOThresholdType(val *ErrorBudgetSLOThresholdType) *NullableErrorBudgetSLOThresholdType {
	return &NullableErrorBudgetSLOThresholdType{value: val, isSet: true}
}

func (v NullableErrorBudgetSLOThresholdType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorBudgetSLOThresholdType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


