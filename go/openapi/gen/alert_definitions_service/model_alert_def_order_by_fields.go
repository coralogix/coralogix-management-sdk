/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"fmt"
)

// AlertDefOrderByFields the model 'AlertDefOrderByFields'
type AlertDefOrderByFields string

// List of AlertDefOrderByFields
const (
	ALERTDEFORDERBYFIELDS_ALERT_DEF_ORDER_BY_FIELDS_UNSPECIFIED AlertDefOrderByFields = "ALERT_DEF_ORDER_BY_FIELDS_UNSPECIFIED"
	ALERTDEFORDERBYFIELDS_ALERT_DEF_ORDER_BY_FIELDS_PRIORITY AlertDefOrderByFields = "ALERT_DEF_ORDER_BY_FIELDS_PRIORITY"
	ALERTDEFORDERBYFIELDS_ALERT_DEF_ORDER_BY_FIELDS_LAST_TRIGGERED_TIME AlertDefOrderByFields = "ALERT_DEF_ORDER_BY_FIELDS_LAST_TRIGGERED_TIME"
	ALERTDEFORDERBYFIELDS_ALERT_DEF_ORDER_BY_FIELDS_UPDATED_TIME AlertDefOrderByFields = "ALERT_DEF_ORDER_BY_FIELDS_UPDATED_TIME"
	ALERTDEFORDERBYFIELDS_ALERT_DEF_ORDER_BY_FIELDS_ENABLED AlertDefOrderByFields = "ALERT_DEF_ORDER_BY_FIELDS_ENABLED"
)

// All allowed values of AlertDefOrderByFields enum
var AllowedAlertDefOrderByFieldsEnumValues = []AlertDefOrderByFields{
	"ALERT_DEF_ORDER_BY_FIELDS_UNSPECIFIED",
	"ALERT_DEF_ORDER_BY_FIELDS_PRIORITY",
	"ALERT_DEF_ORDER_BY_FIELDS_LAST_TRIGGERED_TIME",
	"ALERT_DEF_ORDER_BY_FIELDS_UPDATED_TIME",
	"ALERT_DEF_ORDER_BY_FIELDS_ENABLED",
}

func (v *AlertDefOrderByFields) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AlertDefOrderByFields(value)
	for _, existing := range AllowedAlertDefOrderByFieldsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AlertDefOrderByFields", value)
}

// NewAlertDefOrderByFieldsFromValue returns a pointer to a valid AlertDefOrderByFields
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAlertDefOrderByFieldsFromValue(v string) (*AlertDefOrderByFields, error) {
	ev := AlertDefOrderByFields(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AlertDefOrderByFields: valid values are %v", v, AllowedAlertDefOrderByFieldsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AlertDefOrderByFields) IsValid() bool {
	for _, existing := range AllowedAlertDefOrderByFieldsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AlertDefOrderByFields value
func (v AlertDefOrderByFields) Ptr() *AlertDefOrderByFields {
	return &v
}

type NullableAlertDefOrderByFields struct {
	value *AlertDefOrderByFields
	isSet bool
}

func (v NullableAlertDefOrderByFields) Get() *AlertDefOrderByFields {
	return v.value
}

func (v *NullableAlertDefOrderByFields) Set(val *AlertDefOrderByFields) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertDefOrderByFields) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertDefOrderByFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertDefOrderByFields(val *AlertDefOrderByFields) *NullableAlertDefOrderByFields {
	return &NullableAlertDefOrderByFields{value: val, isSet: true}
}

func (v NullableAlertDefOrderByFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertDefOrderByFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

