/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"fmt"
)

// V3AutoRetireTimeframe the model 'V3AutoRetireTimeframe'
type V3AutoRetireTimeframe string

// List of v3.AutoRetireTimeframe
const (
	V3AUTORETIRETIMEFRAME_AUTO_RETIRE_TIMEFRAME_NEVER_OR_UNSPECIFIED V3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_NEVER_OR_UNSPECIFIED"
	V3AUTORETIRETIMEFRAME_AUTO_RETIRE_TIMEFRAME_MINUTES_5 V3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_MINUTES_5"
	V3AUTORETIRETIMEFRAME_AUTO_RETIRE_TIMEFRAME_MINUTES_10 V3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_MINUTES_10"
	V3AUTORETIRETIMEFRAME_AUTO_RETIRE_TIMEFRAME_HOUR_1 V3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_HOUR_1"
	V3AUTORETIRETIMEFRAME_AUTO_RETIRE_TIMEFRAME_HOURS_2 V3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_HOURS_2"
	V3AUTORETIRETIMEFRAME_AUTO_RETIRE_TIMEFRAME_HOURS_6 V3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_HOURS_6"
	V3AUTORETIRETIMEFRAME_AUTO_RETIRE_TIMEFRAME_HOURS_12 V3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_HOURS_12"
	V3AUTORETIRETIMEFRAME_AUTO_RETIRE_TIMEFRAME_HOURS_24 V3AutoRetireTimeframe = "AUTO_RETIRE_TIMEFRAME_HOURS_24"
)

// All allowed values of V3AutoRetireTimeframe enum
var AllowedV3AutoRetireTimeframeEnumValues = []V3AutoRetireTimeframe{
	"AUTO_RETIRE_TIMEFRAME_NEVER_OR_UNSPECIFIED",
	"AUTO_RETIRE_TIMEFRAME_MINUTES_5",
	"AUTO_RETIRE_TIMEFRAME_MINUTES_10",
	"AUTO_RETIRE_TIMEFRAME_HOUR_1",
	"AUTO_RETIRE_TIMEFRAME_HOURS_2",
	"AUTO_RETIRE_TIMEFRAME_HOURS_6",
	"AUTO_RETIRE_TIMEFRAME_HOURS_12",
	"AUTO_RETIRE_TIMEFRAME_HOURS_24",
}

func (v *V3AutoRetireTimeframe) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := V3AutoRetireTimeframe(value)
	for _, existing := range AllowedV3AutoRetireTimeframeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid V3AutoRetireTimeframe", value)
}

// NewV3AutoRetireTimeframeFromValue returns a pointer to a valid V3AutoRetireTimeframe
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewV3AutoRetireTimeframeFromValue(v string) (*V3AutoRetireTimeframe, error) {
	ev := V3AutoRetireTimeframe(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for V3AutoRetireTimeframe: valid values are %v", v, AllowedV3AutoRetireTimeframeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v V3AutoRetireTimeframe) IsValid() bool {
	for _, existing := range AllowedV3AutoRetireTimeframeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to v3.AutoRetireTimeframe value
func (v V3AutoRetireTimeframe) Ptr() *V3AutoRetireTimeframe {
	return &v
}

type NullableV3AutoRetireTimeframe struct {
	value *V3AutoRetireTimeframe
	isSet bool
}

func (v NullableV3AutoRetireTimeframe) Get() *V3AutoRetireTimeframe {
	return v.value
}

func (v *NullableV3AutoRetireTimeframe) Set(val *V3AutoRetireTimeframe) {
	v.value = val
	v.isSet = true
}

func (v NullableV3AutoRetireTimeframe) IsSet() bool {
	return v.isSet
}

func (v *NullableV3AutoRetireTimeframe) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3AutoRetireTimeframe(val *V3AutoRetireTimeframe) *NullableV3AutoRetireTimeframe {
	return &NullableV3AutoRetireTimeframe{value: val, isSet: true}
}

func (v NullableV3AutoRetireTimeframe) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3AutoRetireTimeframe) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

