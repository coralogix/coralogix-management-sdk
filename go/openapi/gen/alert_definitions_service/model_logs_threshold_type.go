/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LogsThresholdType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogsThresholdType{}

// LogsThresholdType Configuration for alerts triggered when log counts exceed or fall below specified thresholds
type LogsThresholdType struct {
	// The delay in milliseconds before evaluating the alert condition
	EvaluationDelayMs *int32 `json:"evaluationDelayMs,omitempty"`
	LogsFilter *V3LogsFilter `json:"logsFilter,omitempty"`
	NotificationPayloadFilter []string `json:"notificationPayloadFilter,omitempty"`
	Rules []LogsThresholdRule `json:"rules"`
	UndetectedValuesManagement *V3UndetectedValuesManagement `json:"undetectedValuesManagement,omitempty"`
}

type _LogsThresholdType LogsThresholdType

// NewLogsThresholdType instantiates a new LogsThresholdType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogsThresholdType(rules []LogsThresholdRule) *LogsThresholdType {
	this := LogsThresholdType{}
	this.Rules = rules
	return &this
}

// NewLogsThresholdTypeWithDefaults instantiates a new LogsThresholdType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogsThresholdTypeWithDefaults() *LogsThresholdType {
	this := LogsThresholdType{}
	return &this
}

// GetEvaluationDelayMs returns the EvaluationDelayMs field value if set, zero value otherwise.
func (o *LogsThresholdType) GetEvaluationDelayMs() int32 {
	if o == nil || IsNil(o.EvaluationDelayMs) {
		var ret int32
		return ret
	}
	return *o.EvaluationDelayMs
}

// GetEvaluationDelayMsOk returns a tuple with the EvaluationDelayMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsThresholdType) GetEvaluationDelayMsOk() (*int32, bool) {
	if o == nil || IsNil(o.EvaluationDelayMs) {
		return nil, false
	}
	return o.EvaluationDelayMs, true
}

// HasEvaluationDelayMs returns a boolean if a field has been set.
func (o *LogsThresholdType) HasEvaluationDelayMs() bool {
	if o != nil && !IsNil(o.EvaluationDelayMs) {
		return true
	}

	return false
}

// SetEvaluationDelayMs gets a reference to the given int32 and assigns it to the EvaluationDelayMs field.
func (o *LogsThresholdType) SetEvaluationDelayMs(v int32) {
	o.EvaluationDelayMs = &v
}

// GetLogsFilter returns the LogsFilter field value if set, zero value otherwise.
func (o *LogsThresholdType) GetLogsFilter() V3LogsFilter {
	if o == nil || IsNil(o.LogsFilter) {
		var ret V3LogsFilter
		return ret
	}
	return *o.LogsFilter
}

// GetLogsFilterOk returns a tuple with the LogsFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsThresholdType) GetLogsFilterOk() (*V3LogsFilter, bool) {
	if o == nil || IsNil(o.LogsFilter) {
		return nil, false
	}
	return o.LogsFilter, true
}

// HasLogsFilter returns a boolean if a field has been set.
func (o *LogsThresholdType) HasLogsFilter() bool {
	if o != nil && !IsNil(o.LogsFilter) {
		return true
	}

	return false
}

// SetLogsFilter gets a reference to the given V3LogsFilter and assigns it to the LogsFilter field.
func (o *LogsThresholdType) SetLogsFilter(v V3LogsFilter) {
	o.LogsFilter = &v
}

// GetNotificationPayloadFilter returns the NotificationPayloadFilter field value if set, zero value otherwise.
func (o *LogsThresholdType) GetNotificationPayloadFilter() []string {
	if o == nil || IsNil(o.NotificationPayloadFilter) {
		var ret []string
		return ret
	}
	return o.NotificationPayloadFilter
}

// GetNotificationPayloadFilterOk returns a tuple with the NotificationPayloadFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsThresholdType) GetNotificationPayloadFilterOk() ([]string, bool) {
	if o == nil || IsNil(o.NotificationPayloadFilter) {
		return nil, false
	}
	return o.NotificationPayloadFilter, true
}

// HasNotificationPayloadFilter returns a boolean if a field has been set.
func (o *LogsThresholdType) HasNotificationPayloadFilter() bool {
	if o != nil && !IsNil(o.NotificationPayloadFilter) {
		return true
	}

	return false
}

// SetNotificationPayloadFilter gets a reference to the given []string and assigns it to the NotificationPayloadFilter field.
func (o *LogsThresholdType) SetNotificationPayloadFilter(v []string) {
	o.NotificationPayloadFilter = v
}

// GetRules returns the Rules field value
func (o *LogsThresholdType) GetRules() []LogsThresholdRule {
	if o == nil {
		var ret []LogsThresholdRule
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *LogsThresholdType) GetRulesOk() ([]LogsThresholdRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *LogsThresholdType) SetRules(v []LogsThresholdRule) {
	o.Rules = v
}

// GetUndetectedValuesManagement returns the UndetectedValuesManagement field value if set, zero value otherwise.
func (o *LogsThresholdType) GetUndetectedValuesManagement() V3UndetectedValuesManagement {
	if o == nil || IsNil(o.UndetectedValuesManagement) {
		var ret V3UndetectedValuesManagement
		return ret
	}
	return *o.UndetectedValuesManagement
}

// GetUndetectedValuesManagementOk returns a tuple with the UndetectedValuesManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogsThresholdType) GetUndetectedValuesManagementOk() (*V3UndetectedValuesManagement, bool) {
	if o == nil || IsNil(o.UndetectedValuesManagement) {
		return nil, false
	}
	return o.UndetectedValuesManagement, true
}

// HasUndetectedValuesManagement returns a boolean if a field has been set.
func (o *LogsThresholdType) HasUndetectedValuesManagement() bool {
	if o != nil && !IsNil(o.UndetectedValuesManagement) {
		return true
	}

	return false
}

// SetUndetectedValuesManagement gets a reference to the given V3UndetectedValuesManagement and assigns it to the UndetectedValuesManagement field.
func (o *LogsThresholdType) SetUndetectedValuesManagement(v V3UndetectedValuesManagement) {
	o.UndetectedValuesManagement = &v
}

func (o LogsThresholdType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogsThresholdType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EvaluationDelayMs) {
		toSerialize["evaluationDelayMs"] = o.EvaluationDelayMs
	}
	if !IsNil(o.LogsFilter) {
		toSerialize["logsFilter"] = o.LogsFilter
	}
	if !IsNil(o.NotificationPayloadFilter) {
		toSerialize["notificationPayloadFilter"] = o.NotificationPayloadFilter
	}
	toSerialize["rules"] = o.Rules
	if !IsNil(o.UndetectedValuesManagement) {
		toSerialize["undetectedValuesManagement"] = o.UndetectedValuesManagement
	}
	return toSerialize, nil
}

func (o *LogsThresholdType) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rules",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogsThresholdType := _LogsThresholdType{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLogsThresholdType)

	if err != nil {
		return err
	}

	*o = LogsThresholdType(varLogsThresholdType)

	return err
}

type NullableLogsThresholdType struct {
	value *LogsThresholdType
	isSet bool
}

func (v NullableLogsThresholdType) Get() *LogsThresholdType {
	return v.value
}

func (v *NullableLogsThresholdType) Set(val *LogsThresholdType) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsThresholdType) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsThresholdType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsThresholdType(val *LogsThresholdType) *NullableLogsThresholdType {
	return &NullableLogsThresholdType{value: val, isSet: true}
}

func (v NullableLogsThresholdType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsThresholdType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


