/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
)

// checks if the MetricMissingValuesConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricMissingValuesConfiguration{}

// MetricMissingValuesConfiguration Configuration for handling missing values in metric threshold alerts.
type MetricMissingValuesConfiguration struct {
	// If set to true, missing values will be replaced with zero
	ReplaceWithZero *bool `json:"replaceWithZero,omitempty"`
}

// NewMetricMissingValuesConfiguration instantiates a new MetricMissingValuesConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricMissingValuesConfiguration() *MetricMissingValuesConfiguration {
	this := MetricMissingValuesConfiguration{}
	return &this
}

// NewMetricMissingValuesConfigurationWithDefaults instantiates a new MetricMissingValuesConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricMissingValuesConfigurationWithDefaults() *MetricMissingValuesConfiguration {
	this := MetricMissingValuesConfiguration{}
	return &this
}

// GetReplaceWithZero returns the ReplaceWithZero field value if set, zero value otherwise.
func (o *MetricMissingValuesConfiguration) GetReplaceWithZero() bool {
	if o == nil || IsNil(o.ReplaceWithZero) {
		var ret bool
		return ret
	}
	return *o.ReplaceWithZero
}

// GetReplaceWithZeroOk returns a tuple with the ReplaceWithZero field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricMissingValuesConfiguration) GetReplaceWithZeroOk() (*bool, bool) {
	if o == nil || IsNil(o.ReplaceWithZero) {
		return nil, false
	}
	return o.ReplaceWithZero, true
}

// HasReplaceWithZero returns a boolean if a field has been set.
func (o *MetricMissingValuesConfiguration) HasReplaceWithZero() bool {
	if o != nil && !IsNil(o.ReplaceWithZero) {
		return true
	}

	return false
}

// SetReplaceWithZero gets a reference to the given bool and assigns it to the ReplaceWithZero field.
func (o *MetricMissingValuesConfiguration) SetReplaceWithZero(v bool) {
	o.ReplaceWithZero = &v
}

func (o MetricMissingValuesConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricMissingValuesConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReplaceWithZero) {
		toSerialize["replaceWithZero"] = o.ReplaceWithZero
	}
	return toSerialize, nil
}

type NullableMetricMissingValuesConfiguration struct {
	value *MetricMissingValuesConfiguration
	isSet bool
}

func (v NullableMetricMissingValuesConfiguration) Get() *MetricMissingValuesConfiguration {
	return v.value
}

func (v *NullableMetricMissingValuesConfiguration) Set(val *MetricMissingValuesConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricMissingValuesConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricMissingValuesConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricMissingValuesConfiguration(val *MetricMissingValuesConfiguration) *NullableMetricMissingValuesConfiguration {
	return &NullableMetricMissingValuesConfiguration{value: val, isSet: true}
}

func (v NullableMetricMissingValuesConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricMissingValuesConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


