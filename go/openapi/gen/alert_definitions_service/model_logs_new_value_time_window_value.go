/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"fmt"
)

// LogsNewValueTimeWindowValue the model 'LogsNewValueTimeWindowValue'
type LogsNewValueTimeWindowValue string

// List of LogsNewValueTimeWindowValue
const (
	LOGSNEWVALUETIMEWINDOWVALUE_LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_12_OR_UNSPECIFIED LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_12_OR_UNSPECIFIED"
	LOGSNEWVALUETIMEWINDOWVALUE_LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_24 LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_24"
	LOGSNEWVALUETIMEWINDOWVALUE_LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_48 LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_48"
	LOGSNEWVALUETIMEWINDOWVALUE_LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_72 LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_72"
	LOGSNEWVALUETIMEWINDOWVALUE_LOGS_NEW_VALUE_TIME_WINDOW_VALUE_WEEK_1 LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_WEEK_1"
	LOGSNEWVALUETIMEWINDOWVALUE_LOGS_NEW_VALUE_TIME_WINDOW_VALUE_MONTH_1 LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_MONTH_1"
	LOGSNEWVALUETIMEWINDOWVALUE_LOGS_NEW_VALUE_TIME_WINDOW_VALUE_MONTHS_2 LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_MONTHS_2"
	LOGSNEWVALUETIMEWINDOWVALUE_LOGS_NEW_VALUE_TIME_WINDOW_VALUE_MONTHS_3 LogsNewValueTimeWindowValue = "LOGS_NEW_VALUE_TIME_WINDOW_VALUE_MONTHS_3"
)

// All allowed values of LogsNewValueTimeWindowValue enum
var AllowedLogsNewValueTimeWindowValueEnumValues = []LogsNewValueTimeWindowValue{
	"LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_12_OR_UNSPECIFIED",
	"LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_24",
	"LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_48",
	"LOGS_NEW_VALUE_TIME_WINDOW_VALUE_HOURS_72",
	"LOGS_NEW_VALUE_TIME_WINDOW_VALUE_WEEK_1",
	"LOGS_NEW_VALUE_TIME_WINDOW_VALUE_MONTH_1",
	"LOGS_NEW_VALUE_TIME_WINDOW_VALUE_MONTHS_2",
	"LOGS_NEW_VALUE_TIME_WINDOW_VALUE_MONTHS_3",
}

func (v *LogsNewValueTimeWindowValue) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := LogsNewValueTimeWindowValue(value)
	for _, existing := range AllowedLogsNewValueTimeWindowValueEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid LogsNewValueTimeWindowValue", value)
}

// NewLogsNewValueTimeWindowValueFromValue returns a pointer to a valid LogsNewValueTimeWindowValue
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLogsNewValueTimeWindowValueFromValue(v string) (*LogsNewValueTimeWindowValue, error) {
	ev := LogsNewValueTimeWindowValue(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for LogsNewValueTimeWindowValue: valid values are %v", v, AllowedLogsNewValueTimeWindowValueEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LogsNewValueTimeWindowValue) IsValid() bool {
	for _, existing := range AllowedLogsNewValueTimeWindowValueEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to LogsNewValueTimeWindowValue value
func (v LogsNewValueTimeWindowValue) Ptr() *LogsNewValueTimeWindowValue {
	return &v
}

type NullableLogsNewValueTimeWindowValue struct {
	value *LogsNewValueTimeWindowValue
	isSet bool
}

func (v NullableLogsNewValueTimeWindowValue) Get() *LogsNewValueTimeWindowValue {
	return v.value
}

func (v *NullableLogsNewValueTimeWindowValue) Set(val *LogsNewValueTimeWindowValue) {
	v.value = val
	v.isSet = true
}

func (v NullableLogsNewValueTimeWindowValue) IsSet() bool {
	return v.isSet
}

func (v *NullableLogsNewValueTimeWindowValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogsNewValueTimeWindowValue(val *LogsNewValueTimeWindowValue) *NullableLogsNewValueTimeWindowValue {
	return &NullableLogsNewValueTimeWindowValue{value: val, isSet: true}
}

func (v NullableLogsNewValueTimeWindowValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogsNewValueTimeWindowValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

