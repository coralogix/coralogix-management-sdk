/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AlertDefWebhooksSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertDefWebhooksSettings{}

// AlertDefWebhooksSettings Configuration for webhook notifications for an alert
type AlertDefWebhooksSettings struct {
	Integration V3IntegrationType `json:"integration"`
	// The time in minutes before the alert can be retriggered
	Minutes *int64 `json:"minutes,omitempty"`
	NotifyOn *NotifyOn `json:"notifyOn,omitempty"`
}

type _AlertDefWebhooksSettings AlertDefWebhooksSettings

// NewAlertDefWebhooksSettings instantiates a new AlertDefWebhooksSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertDefWebhooksSettings(integration V3IntegrationType) *AlertDefWebhooksSettings {
	this := AlertDefWebhooksSettings{}
	this.Integration = integration
	return &this
}

// NewAlertDefWebhooksSettingsWithDefaults instantiates a new AlertDefWebhooksSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertDefWebhooksSettingsWithDefaults() *AlertDefWebhooksSettings {
	this := AlertDefWebhooksSettings{}
	return &this
}

// GetIntegration returns the Integration field value
func (o *AlertDefWebhooksSettings) GetIntegration() V3IntegrationType {
	if o == nil {
		var ret V3IntegrationType
		return ret
	}

	return o.Integration
}

// GetIntegrationOk returns a tuple with the Integration field value
// and a boolean to check if the value has been set.
func (o *AlertDefWebhooksSettings) GetIntegrationOk() (*V3IntegrationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Integration, true
}

// SetIntegration sets field value
func (o *AlertDefWebhooksSettings) SetIntegration(v V3IntegrationType) {
	o.Integration = v
}

// GetMinutes returns the Minutes field value if set, zero value otherwise.
func (o *AlertDefWebhooksSettings) GetMinutes() int64 {
	if o == nil || IsNil(o.Minutes) {
		var ret int64
		return ret
	}
	return *o.Minutes
}

// GetMinutesOk returns a tuple with the Minutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDefWebhooksSettings) GetMinutesOk() (*int64, bool) {
	if o == nil || IsNil(o.Minutes) {
		return nil, false
	}
	return o.Minutes, true
}

// HasMinutes returns a boolean if a field has been set.
func (o *AlertDefWebhooksSettings) HasMinutes() bool {
	if o != nil && !IsNil(o.Minutes) {
		return true
	}

	return false
}

// SetMinutes gets a reference to the given int64 and assigns it to the Minutes field.
func (o *AlertDefWebhooksSettings) SetMinutes(v int64) {
	o.Minutes = &v
}

// GetNotifyOn returns the NotifyOn field value if set, zero value otherwise.
func (o *AlertDefWebhooksSettings) GetNotifyOn() NotifyOn {
	if o == nil || IsNil(o.NotifyOn) {
		var ret NotifyOn
		return ret
	}
	return *o.NotifyOn
}

// GetNotifyOnOk returns a tuple with the NotifyOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDefWebhooksSettings) GetNotifyOnOk() (*NotifyOn, bool) {
	if o == nil || IsNil(o.NotifyOn) {
		return nil, false
	}
	return o.NotifyOn, true
}

// HasNotifyOn returns a boolean if a field has been set.
func (o *AlertDefWebhooksSettings) HasNotifyOn() bool {
	if o != nil && !IsNil(o.NotifyOn) {
		return true
	}

	return false
}

// SetNotifyOn gets a reference to the given NotifyOn and assigns it to the NotifyOn field.
func (o *AlertDefWebhooksSettings) SetNotifyOn(v NotifyOn) {
	o.NotifyOn = &v
}

func (o AlertDefWebhooksSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertDefWebhooksSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["integration"] = o.Integration
	if !IsNil(o.Minutes) {
		toSerialize["minutes"] = o.Minutes
	}
	if !IsNil(o.NotifyOn) {
		toSerialize["notifyOn"] = o.NotifyOn
	}
	return toSerialize, nil
}

func (o *AlertDefWebhooksSettings) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"integration",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertDefWebhooksSettings := _AlertDefWebhooksSettings{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlertDefWebhooksSettings)

	if err != nil {
		return err
	}

	*o = AlertDefWebhooksSettings(varAlertDefWebhooksSettings)

	return err
}

type NullableAlertDefWebhooksSettings struct {
	value *AlertDefWebhooksSettings
	isSet bool
}

func (v NullableAlertDefWebhooksSettings) Get() *AlertDefWebhooksSettings {
	return v.value
}

func (v *NullableAlertDefWebhooksSettings) Set(val *AlertDefWebhooksSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertDefWebhooksSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertDefWebhooksSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertDefWebhooksSettings(val *AlertDefWebhooksSettings) *NullableAlertDefWebhooksSettings {
	return &NullableAlertDefWebhooksSettings{value: val, isSet: true}
}

func (v NullableAlertDefWebhooksSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertDefWebhooksSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


