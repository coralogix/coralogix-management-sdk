/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_definitions_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BulkReplaceAlertDefinitionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkReplaceAlertDefinitionsRequest{}

// BulkReplaceAlertDefinitionsRequest A request to bulk replace multiple alert definitions
type BulkReplaceAlertDefinitionsRequest struct {
	AlertDefsToReplace []AlertDefToReplace `json:"alertDefsToReplace"`
}

type _BulkReplaceAlertDefinitionsRequest BulkReplaceAlertDefinitionsRequest

// NewBulkReplaceAlertDefinitionsRequest instantiates a new BulkReplaceAlertDefinitionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkReplaceAlertDefinitionsRequest(alertDefsToReplace []AlertDefToReplace) *BulkReplaceAlertDefinitionsRequest {
	this := BulkReplaceAlertDefinitionsRequest{}
	this.AlertDefsToReplace = alertDefsToReplace
	return &this
}

// NewBulkReplaceAlertDefinitionsRequestWithDefaults instantiates a new BulkReplaceAlertDefinitionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkReplaceAlertDefinitionsRequestWithDefaults() *BulkReplaceAlertDefinitionsRequest {
	this := BulkReplaceAlertDefinitionsRequest{}
	return &this
}

// GetAlertDefsToReplace returns the AlertDefsToReplace field value
func (o *BulkReplaceAlertDefinitionsRequest) GetAlertDefsToReplace() []AlertDefToReplace {
	if o == nil {
		var ret []AlertDefToReplace
		return ret
	}

	return o.AlertDefsToReplace
}

// GetAlertDefsToReplaceOk returns a tuple with the AlertDefsToReplace field value
// and a boolean to check if the value has been set.
func (o *BulkReplaceAlertDefinitionsRequest) GetAlertDefsToReplaceOk() ([]AlertDefToReplace, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertDefsToReplace, true
}

// SetAlertDefsToReplace sets field value
func (o *BulkReplaceAlertDefinitionsRequest) SetAlertDefsToReplace(v []AlertDefToReplace) {
	o.AlertDefsToReplace = v
}

func (o BulkReplaceAlertDefinitionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkReplaceAlertDefinitionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alertDefsToReplace"] = o.AlertDefsToReplace
	return toSerialize, nil
}

func (o *BulkReplaceAlertDefinitionsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alertDefsToReplace",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkReplaceAlertDefinitionsRequest := _BulkReplaceAlertDefinitionsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBulkReplaceAlertDefinitionsRequest)

	if err != nil {
		return err
	}

	*o = BulkReplaceAlertDefinitionsRequest(varBulkReplaceAlertDefinitionsRequest)

	return err
}

type NullableBulkReplaceAlertDefinitionsRequest struct {
	value *BulkReplaceAlertDefinitionsRequest
	isSet bool
}

func (v NullableBulkReplaceAlertDefinitionsRequest) Get() *BulkReplaceAlertDefinitionsRequest {
	return v.value
}

func (v *NullableBulkReplaceAlertDefinitionsRequest) Set(val *BulkReplaceAlertDefinitionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkReplaceAlertDefinitionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkReplaceAlertDefinitionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkReplaceAlertDefinitionsRequest(val *BulkReplaceAlertDefinitionsRequest) *NullableBulkReplaceAlertDefinitionsRequest {
	return &NullableBulkReplaceAlertDefinitionsRequest{value: val, isSet: true}
}

func (v NullableBulkReplaceAlertDefinitionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkReplaceAlertDefinitionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


