/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
)

// checks if the IntegrationMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationMetadata{}

// IntegrationMetadata This data structure represents the metadata of an integration.
type IntegrationMetadata struct {
	IntegrationKey *string `json:"integrationKey,omitempty"`
	IntegrationParameters *GenericIntegrationParameters `json:"integrationParameters,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewIntegrationMetadata instantiates a new IntegrationMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationMetadata() *IntegrationMetadata {
	this := IntegrationMetadata{}
	return &this
}

// NewIntegrationMetadataWithDefaults instantiates a new IntegrationMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationMetadataWithDefaults() *IntegrationMetadata {
	this := IntegrationMetadata{}
	return &this
}

// GetIntegrationKey returns the IntegrationKey field value if set, zero value otherwise.
func (o *IntegrationMetadata) GetIntegrationKey() string {
	if o == nil || IsNil(o.IntegrationKey) {
		var ret string
		return ret
	}
	return *o.IntegrationKey
}

// GetIntegrationKeyOk returns a tuple with the IntegrationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationMetadata) GetIntegrationKeyOk() (*string, bool) {
	if o == nil || IsNil(o.IntegrationKey) {
		return nil, false
	}
	return o.IntegrationKey, true
}

// HasIntegrationKey returns a boolean if a field has been set.
func (o *IntegrationMetadata) HasIntegrationKey() bool {
	if o != nil && !IsNil(o.IntegrationKey) {
		return true
	}

	return false
}

// SetIntegrationKey gets a reference to the given string and assigns it to the IntegrationKey field.
func (o *IntegrationMetadata) SetIntegrationKey(v string) {
	o.IntegrationKey = &v
}

// GetIntegrationParameters returns the IntegrationParameters field value if set, zero value otherwise.
func (o *IntegrationMetadata) GetIntegrationParameters() GenericIntegrationParameters {
	if o == nil || IsNil(o.IntegrationParameters) {
		var ret GenericIntegrationParameters
		return ret
	}
	return *o.IntegrationParameters
}

// GetIntegrationParametersOk returns a tuple with the IntegrationParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationMetadata) GetIntegrationParametersOk() (*GenericIntegrationParameters, bool) {
	if o == nil || IsNil(o.IntegrationParameters) {
		return nil, false
	}
	return o.IntegrationParameters, true
}

// HasIntegrationParameters returns a boolean if a field has been set.
func (o *IntegrationMetadata) HasIntegrationParameters() bool {
	if o != nil && !IsNil(o.IntegrationParameters) {
		return true
	}

	return false
}

// SetIntegrationParameters gets a reference to the given GenericIntegrationParameters and assigns it to the IntegrationParameters field.
func (o *IntegrationMetadata) SetIntegrationParameters(v GenericIntegrationParameters) {
	o.IntegrationParameters = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *IntegrationMetadata) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationMetadata) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *IntegrationMetadata) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *IntegrationMetadata) SetVersion(v string) {
	o.Version = &v
}

func (o IntegrationMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IntegrationKey) {
		toSerialize["integrationKey"] = o.IntegrationKey
	}
	if !IsNil(o.IntegrationParameters) {
		toSerialize["integrationParameters"] = o.IntegrationParameters
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableIntegrationMetadata struct {
	value *IntegrationMetadata
	isSet bool
}

func (v NullableIntegrationMetadata) Get() *IntegrationMetadata {
	return v.value
}

func (v *NullableIntegrationMetadata) Set(val *IntegrationMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationMetadata(val *IntegrationMetadata) *NullableIntegrationMetadata {
	return &NullableIntegrationMetadata{value: val, isSet: true}
}

func (v NullableIntegrationMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


