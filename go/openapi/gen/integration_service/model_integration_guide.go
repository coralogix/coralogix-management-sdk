/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
)

// checks if the IntegrationGuide type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationGuide{}

// IntegrationGuide struct for IntegrationGuide
type IntegrationGuide struct {
	InstallationRequirements *string `json:"installationRequirements,omitempty"`
	Introduction *string `json:"introduction,omitempty"`
}

// NewIntegrationGuide instantiates a new IntegrationGuide object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationGuide() *IntegrationGuide {
	this := IntegrationGuide{}
	return &this
}

// NewIntegrationGuideWithDefaults instantiates a new IntegrationGuide object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationGuideWithDefaults() *IntegrationGuide {
	this := IntegrationGuide{}
	return &this
}

// GetInstallationRequirements returns the InstallationRequirements field value if set, zero value otherwise.
func (o *IntegrationGuide) GetInstallationRequirements() string {
	if o == nil || IsNil(o.InstallationRequirements) {
		var ret string
		return ret
	}
	return *o.InstallationRequirements
}

// GetInstallationRequirementsOk returns a tuple with the InstallationRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationGuide) GetInstallationRequirementsOk() (*string, bool) {
	if o == nil || IsNil(o.InstallationRequirements) {
		return nil, false
	}
	return o.InstallationRequirements, true
}

// HasInstallationRequirements returns a boolean if a field has been set.
func (o *IntegrationGuide) HasInstallationRequirements() bool {
	if o != nil && !IsNil(o.InstallationRequirements) {
		return true
	}

	return false
}

// SetInstallationRequirements gets a reference to the given string and assigns it to the InstallationRequirements field.
func (o *IntegrationGuide) SetInstallationRequirements(v string) {
	o.InstallationRequirements = &v
}

// GetIntroduction returns the Introduction field value if set, zero value otherwise.
func (o *IntegrationGuide) GetIntroduction() string {
	if o == nil || IsNil(o.Introduction) {
		var ret string
		return ret
	}
	return *o.Introduction
}

// GetIntroductionOk returns a tuple with the Introduction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationGuide) GetIntroductionOk() (*string, bool) {
	if o == nil || IsNil(o.Introduction) {
		return nil, false
	}
	return o.Introduction, true
}

// HasIntroduction returns a boolean if a field has been set.
func (o *IntegrationGuide) HasIntroduction() bool {
	if o != nil && !IsNil(o.Introduction) {
		return true
	}

	return false
}

// SetIntroduction gets a reference to the given string and assigns it to the Introduction field.
func (o *IntegrationGuide) SetIntroduction(v string) {
	o.Introduction = &v
}

func (o IntegrationGuide) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationGuide) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstallationRequirements) {
		toSerialize["installationRequirements"] = o.InstallationRequirements
	}
	if !IsNil(o.Introduction) {
		toSerialize["introduction"] = o.Introduction
	}
	return toSerialize, nil
}

type NullableIntegrationGuide struct {
	value *IntegrationGuide
	isSet bool
}

func (v NullableIntegrationGuide) Get() *IntegrationGuide {
	return v.value
}

func (v *NullableIntegrationGuide) Set(val *IntegrationGuide) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationGuide) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationGuide) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationGuide(val *IntegrationGuide) *NullableIntegrationGuide {
	return &NullableIntegrationGuide{value: val, isSet: true}
}

func (v NullableIntegrationGuide) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationGuide) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


