/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
)

// checks if the GenericIntegrationParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenericIntegrationParameters{}

// GenericIntegrationParameters struct for GenericIntegrationParameters
type GenericIntegrationParameters struct {
	Parameters []Parameter `json:"parameters,omitempty"`
}

// NewGenericIntegrationParameters instantiates a new GenericIntegrationParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericIntegrationParameters() *GenericIntegrationParameters {
	this := GenericIntegrationParameters{}
	return &this
}

// NewGenericIntegrationParametersWithDefaults instantiates a new GenericIntegrationParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericIntegrationParametersWithDefaults() *GenericIntegrationParameters {
	this := GenericIntegrationParameters{}
	return &this
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *GenericIntegrationParameters) GetParameters() []Parameter {
	if o == nil || IsNil(o.Parameters) {
		var ret []Parameter
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericIntegrationParameters) GetParametersOk() ([]Parameter, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *GenericIntegrationParameters) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []Parameter and assigns it to the Parameters field.
func (o *GenericIntegrationParameters) SetParameters(v []Parameter) {
	o.Parameters = v
}

func (o GenericIntegrationParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenericIntegrationParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableGenericIntegrationParameters struct {
	value *GenericIntegrationParameters
	isSet bool
}

func (v NullableGenericIntegrationParameters) Get() *GenericIntegrationParameters {
	return v.value
}

func (v *NullableGenericIntegrationParameters) Set(val *GenericIntegrationParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericIntegrationParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericIntegrationParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericIntegrationParameters(val *GenericIntegrationParameters) *NullableGenericIntegrationParameters {
	return &NullableGenericIntegrationParameters{value: val, isSet: true}
}

func (v NullableGenericIntegrationParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericIntegrationParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


