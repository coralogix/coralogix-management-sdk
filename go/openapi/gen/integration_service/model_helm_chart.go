/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
)

// checks if the HelmChart type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HelmChart{}

// HelmChart This data structure represents a Helm chart.
type HelmChart struct {
	Commands []CommandInformation `json:"commands,omitempty"`
	Guide *IntegrationGuide `json:"guide,omitempty"`
	Template *string `json:"template,omitempty"`
}

// NewHelmChart instantiates a new HelmChart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelmChart() *HelmChart {
	this := HelmChart{}
	return &this
}

// NewHelmChartWithDefaults instantiates a new HelmChart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelmChartWithDefaults() *HelmChart {
	this := HelmChart{}
	return &this
}

// GetCommands returns the Commands field value if set, zero value otherwise.
func (o *HelmChart) GetCommands() []CommandInformation {
	if o == nil || IsNil(o.Commands) {
		var ret []CommandInformation
		return ret
	}
	return o.Commands
}

// GetCommandsOk returns a tuple with the Commands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmChart) GetCommandsOk() ([]CommandInformation, bool) {
	if o == nil || IsNil(o.Commands) {
		return nil, false
	}
	return o.Commands, true
}

// HasCommands returns a boolean if a field has been set.
func (o *HelmChart) HasCommands() bool {
	if o != nil && !IsNil(o.Commands) {
		return true
	}

	return false
}

// SetCommands gets a reference to the given []CommandInformation and assigns it to the Commands field.
func (o *HelmChart) SetCommands(v []CommandInformation) {
	o.Commands = v
}

// GetGuide returns the Guide field value if set, zero value otherwise.
func (o *HelmChart) GetGuide() IntegrationGuide {
	if o == nil || IsNil(o.Guide) {
		var ret IntegrationGuide
		return ret
	}
	return *o.Guide
}

// GetGuideOk returns a tuple with the Guide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmChart) GetGuideOk() (*IntegrationGuide, bool) {
	if o == nil || IsNil(o.Guide) {
		return nil, false
	}
	return o.Guide, true
}

// HasGuide returns a boolean if a field has been set.
func (o *HelmChart) HasGuide() bool {
	if o != nil && !IsNil(o.Guide) {
		return true
	}

	return false
}

// SetGuide gets a reference to the given IntegrationGuide and assigns it to the Guide field.
func (o *HelmChart) SetGuide(v IntegrationGuide) {
	o.Guide = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *HelmChart) GetTemplate() string {
	if o == nil || IsNil(o.Template) {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelmChart) GetTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *HelmChart) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *HelmChart) SetTemplate(v string) {
	o.Template = &v
}

func (o HelmChart) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HelmChart) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Commands) {
		toSerialize["commands"] = o.Commands
	}
	if !IsNil(o.Guide) {
		toSerialize["guide"] = o.Guide
	}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	return toSerialize, nil
}

type NullableHelmChart struct {
	value *HelmChart
	isSet bool
}

func (v NullableHelmChart) Get() *HelmChart {
	return v.value
}

func (v *NullableHelmChart) Set(val *HelmChart) {
	v.value = val
	v.isSet = true
}

func (v NullableHelmChart) IsSet() bool {
	return v.isSet
}

func (v *NullableHelmChart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelmChart(val *HelmChart) *NullableHelmChart {
	return &NullableHelmChart{value: val, isSet: true}
}

func (v NullableHelmChart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelmChart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


