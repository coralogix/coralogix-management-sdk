/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetRumApplicationVersionDataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRumApplicationVersionDataResponse{}

// GetRumApplicationVersionDataResponse struct for GetRumApplicationVersionDataResponse
type GetRumApplicationVersionDataResponse struct {
	VersionData RumVersionData `json:"versionData"`
}

type _GetRumApplicationVersionDataResponse GetRumApplicationVersionDataResponse

// NewGetRumApplicationVersionDataResponse instantiates a new GetRumApplicationVersionDataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRumApplicationVersionDataResponse(versionData RumVersionData) *GetRumApplicationVersionDataResponse {
	this := GetRumApplicationVersionDataResponse{}
	this.VersionData = versionData
	return &this
}

// NewGetRumApplicationVersionDataResponseWithDefaults instantiates a new GetRumApplicationVersionDataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRumApplicationVersionDataResponseWithDefaults() *GetRumApplicationVersionDataResponse {
	this := GetRumApplicationVersionDataResponse{}
	return &this
}

// GetVersionData returns the VersionData field value
func (o *GetRumApplicationVersionDataResponse) GetVersionData() RumVersionData {
	if o == nil {
		var ret RumVersionData
		return ret
	}

	return o.VersionData
}

// GetVersionDataOk returns a tuple with the VersionData field value
// and a boolean to check if the value has been set.
func (o *GetRumApplicationVersionDataResponse) GetVersionDataOk() (*RumVersionData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VersionData, true
}

// SetVersionData sets field value
func (o *GetRumApplicationVersionDataResponse) SetVersionData(v RumVersionData) {
	o.VersionData = v
}

func (o GetRumApplicationVersionDataResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRumApplicationVersionDataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["versionData"] = o.VersionData
	return toSerialize, nil
}

func (o *GetRumApplicationVersionDataResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"versionData",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetRumApplicationVersionDataResponse := _GetRumApplicationVersionDataResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetRumApplicationVersionDataResponse)

	if err != nil {
		return err
	}

	*o = GetRumApplicationVersionDataResponse(varGetRumApplicationVersionDataResponse)

	return err
}

type NullableGetRumApplicationVersionDataResponse struct {
	value *GetRumApplicationVersionDataResponse
	isSet bool
}

func (v NullableGetRumApplicationVersionDataResponse) Get() *GetRumApplicationVersionDataResponse {
	return v.value
}

func (v *NullableGetRumApplicationVersionDataResponse) Set(val *GetRumApplicationVersionDataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRumApplicationVersionDataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRumApplicationVersionDataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRumApplicationVersionDataResponse(val *GetRumApplicationVersionDataResponse) *NullableGetRumApplicationVersionDataResponse {
	return &NullableGetRumApplicationVersionDataResponse{value: val, isSet: true}
}

func (v NullableGetRumApplicationVersionDataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRumApplicationVersionDataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


