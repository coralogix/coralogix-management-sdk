/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
)

// checks if the GetTemplateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTemplateResponse{}

// GetTemplateResponse struct for GetTemplateResponse
type GetTemplateResponse struct {
	TemplateUrl *string `json:"templateUrl,omitempty"`
}

// NewGetTemplateResponse instantiates a new GetTemplateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTemplateResponse() *GetTemplateResponse {
	this := GetTemplateResponse{}
	return &this
}

// NewGetTemplateResponseWithDefaults instantiates a new GetTemplateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTemplateResponseWithDefaults() *GetTemplateResponse {
	this := GetTemplateResponse{}
	return &this
}

// GetTemplateUrl returns the TemplateUrl field value if set, zero value otherwise.
func (o *GetTemplateResponse) GetTemplateUrl() string {
	if o == nil || IsNil(o.TemplateUrl) {
		var ret string
		return ret
	}
	return *o.TemplateUrl
}

// GetTemplateUrlOk returns a tuple with the TemplateUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTemplateResponse) GetTemplateUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateUrl) {
		return nil, false
	}
	return o.TemplateUrl, true
}

// HasTemplateUrl returns a boolean if a field has been set.
func (o *GetTemplateResponse) HasTemplateUrl() bool {
	if o != nil && !IsNil(o.TemplateUrl) {
		return true
	}

	return false
}

// SetTemplateUrl gets a reference to the given string and assigns it to the TemplateUrl field.
func (o *GetTemplateResponse) SetTemplateUrl(v string) {
	o.TemplateUrl = &v
}

func (o GetTemplateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTemplateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TemplateUrl) {
		toSerialize["templateUrl"] = o.TemplateUrl
	}
	return toSerialize, nil
}

type NullableGetTemplateResponse struct {
	value *GetTemplateResponse
	isSet bool
}

func (v NullableGetTemplateResponse) Get() *GetTemplateResponse {
	return v.value
}

func (v *NullableGetTemplateResponse) Set(val *GetTemplateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTemplateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTemplateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTemplateResponse(val *GetTemplateResponse) *NullableGetTemplateResponse {
	return &NullableGetTemplateResponse{value: val, isSet: true}
}

func (v NullableGetTemplateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTemplateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


