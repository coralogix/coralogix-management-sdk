/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
)

// checks if the Parameter5 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Parameter5{}

// Parameter5 struct for Parameter5
type Parameter5 struct {
	Key *string `json:"key,omitempty"`
	NumericValue *float64 `json:"numericValue,omitempty"`
}

// NewParameter5 instantiates a new Parameter5 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameter5() *Parameter5 {
	this := Parameter5{}
	return &this
}

// NewParameter5WithDefaults instantiates a new Parameter5 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParameter5WithDefaults() *Parameter5 {
	this := Parameter5{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *Parameter5) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Parameter5) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *Parameter5) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *Parameter5) SetKey(v string) {
	o.Key = &v
}

// GetNumericValue returns the NumericValue field value if set, zero value otherwise.
func (o *Parameter5) GetNumericValue() float64 {
	if o == nil || IsNil(o.NumericValue) {
		var ret float64
		return ret
	}
	return *o.NumericValue
}

// GetNumericValueOk returns a tuple with the NumericValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Parameter5) GetNumericValueOk() (*float64, bool) {
	if o == nil || IsNil(o.NumericValue) {
		return nil, false
	}
	return o.NumericValue, true
}

// HasNumericValue returns a boolean if a field has been set.
func (o *Parameter5) HasNumericValue() bool {
	if o != nil && !IsNil(o.NumericValue) {
		return true
	}

	return false
}

// SetNumericValue gets a reference to the given float64 and assigns it to the NumericValue field.
func (o *Parameter5) SetNumericValue(v float64) {
	o.NumericValue = &v
}

func (o Parameter5) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Parameter5) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.NumericValue) {
		toSerialize["numericValue"] = o.NumericValue
	}
	return toSerialize, nil
}

type NullableParameter5 struct {
	value *Parameter5
	isSet bool
}

func (v NullableParameter5) Get() *Parameter5 {
	return v.value
}

func (v *NullableParameter5) Set(val *Parameter5) {
	v.value = val
	v.isSet = true
}

func (v NullableParameter5) IsSet() bool {
	return v.isSet
}

func (v *NullableParameter5) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameter5(val *Parameter5) *NullableParameter5 {
	return &NullableParameter5{value: val, isSet: true}
}

func (v NullableParameter5) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameter5) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


