/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the SyncRumDataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncRumDataResponse{}

// SyncRumDataResponse struct for SyncRumDataResponse
type SyncRumDataResponse struct {
	SyncExecuted *bool `json:"syncExecuted,omitempty"`
	SyncedAt time.Time `json:"syncedAt"`
}

type _SyncRumDataResponse SyncRumDataResponse

// NewSyncRumDataResponse instantiates a new SyncRumDataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncRumDataResponse(syncedAt time.Time) *SyncRumDataResponse {
	this := SyncRumDataResponse{}
	this.SyncedAt = syncedAt
	return &this
}

// NewSyncRumDataResponseWithDefaults instantiates a new SyncRumDataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncRumDataResponseWithDefaults() *SyncRumDataResponse {
	this := SyncRumDataResponse{}
	return &this
}

// GetSyncExecuted returns the SyncExecuted field value if set, zero value otherwise.
func (o *SyncRumDataResponse) GetSyncExecuted() bool {
	if o == nil || IsNil(o.SyncExecuted) {
		var ret bool
		return ret
	}
	return *o.SyncExecuted
}

// GetSyncExecutedOk returns a tuple with the SyncExecuted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncRumDataResponse) GetSyncExecutedOk() (*bool, bool) {
	if o == nil || IsNil(o.SyncExecuted) {
		return nil, false
	}
	return o.SyncExecuted, true
}

// HasSyncExecuted returns a boolean if a field has been set.
func (o *SyncRumDataResponse) HasSyncExecuted() bool {
	if o != nil && !IsNil(o.SyncExecuted) {
		return true
	}

	return false
}

// SetSyncExecuted gets a reference to the given bool and assigns it to the SyncExecuted field.
func (o *SyncRumDataResponse) SetSyncExecuted(v bool) {
	o.SyncExecuted = &v
}

// GetSyncedAt returns the SyncedAt field value
func (o *SyncRumDataResponse) GetSyncedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.SyncedAt
}

// GetSyncedAtOk returns a tuple with the SyncedAt field value
// and a boolean to check if the value has been set.
func (o *SyncRumDataResponse) GetSyncedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SyncedAt, true
}

// SetSyncedAt sets field value
func (o *SyncRumDataResponse) SetSyncedAt(v time.Time) {
	o.SyncedAt = v
}

func (o SyncRumDataResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncRumDataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SyncExecuted) {
		toSerialize["syncExecuted"] = o.SyncExecuted
	}
	toSerialize["syncedAt"] = o.SyncedAt
	return toSerialize, nil
}

func (o *SyncRumDataResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"syncedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSyncRumDataResponse := _SyncRumDataResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSyncRumDataResponse)

	if err != nil {
		return err
	}

	*o = SyncRumDataResponse(varSyncRumDataResponse)

	return err
}

type NullableSyncRumDataResponse struct {
	value *SyncRumDataResponse
	isSet bool
}

func (v NullableSyncRumDataResponse) Get() *SyncRumDataResponse {
	return v.value
}

func (v *NullableSyncRumDataResponse) Set(val *SyncRumDataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncRumDataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncRumDataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncRumDataResponse(val *SyncRumDataResponse) *NullableSyncRumDataResponse {
	return &NullableSyncRumDataResponse{value: val, isSet: true}
}

func (v NullableSyncRumDataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncRumDataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


