/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
)

// checks if the IntegrationType2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationType2{}

// IntegrationType2 This data structure represents an integration type.
type IntegrationType2 struct {
	// This data structure represents a CloudFormation integration.
	Cloudformation map[string]interface{} `json:"cloudformation,omitempty"`
}

// NewIntegrationType2 instantiates a new IntegrationType2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationType2() *IntegrationType2 {
	this := IntegrationType2{}
	return &this
}

// NewIntegrationType2WithDefaults instantiates a new IntegrationType2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationType2WithDefaults() *IntegrationType2 {
	this := IntegrationType2{}
	return &this
}

// GetCloudformation returns the Cloudformation field value if set, zero value otherwise.
func (o *IntegrationType2) GetCloudformation() map[string]interface{} {
	if o == nil || IsNil(o.Cloudformation) {
		var ret map[string]interface{}
		return ret
	}
	return o.Cloudformation
}

// GetCloudformationOk returns a tuple with the Cloudformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationType2) GetCloudformationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Cloudformation) {
		return map[string]interface{}{}, false
	}
	return o.Cloudformation, true
}

// HasCloudformation returns a boolean if a field has been set.
func (o *IntegrationType2) HasCloudformation() bool {
	if o != nil && !IsNil(o.Cloudformation) {
		return true
	}

	return false
}

// SetCloudformation gets a reference to the given map[string]interface{} and assigns it to the Cloudformation field.
func (o *IntegrationType2) SetCloudformation(v map[string]interface{}) {
	o.Cloudformation = v
}

func (o IntegrationType2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationType2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cloudformation) {
		toSerialize["cloudformation"] = o.Cloudformation
	}
	return toSerialize, nil
}

type NullableIntegrationType2 struct {
	value *IntegrationType2
	isSet bool
}

func (v NullableIntegrationType2) Get() *IntegrationType2 {
	return v.value
}

func (v *NullableIntegrationType2) Set(val *IntegrationType2) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationType2) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationType2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationType2(val *IntegrationType2) *NullableIntegrationType2 {
	return &NullableIntegrationType2{value: val, isSet: true}
}

func (v NullableIntegrationType2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationType2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


