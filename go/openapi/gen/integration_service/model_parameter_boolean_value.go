/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
)

// checks if the ParameterBooleanValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParameterBooleanValue{}

// ParameterBooleanValue struct for ParameterBooleanValue
type ParameterBooleanValue struct {
	BooleanValue *bool `json:"booleanValue,omitempty"`
	Key *string `json:"key,omitempty"`
}

// NewParameterBooleanValue instantiates a new ParameterBooleanValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameterBooleanValue() *ParameterBooleanValue {
	this := ParameterBooleanValue{}
	return &this
}

// NewParameterBooleanValueWithDefaults instantiates a new ParameterBooleanValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParameterBooleanValueWithDefaults() *ParameterBooleanValue {
	this := ParameterBooleanValue{}
	return &this
}

// GetBooleanValue returns the BooleanValue field value if set, zero value otherwise.
func (o *ParameterBooleanValue) GetBooleanValue() bool {
	if o == nil || IsNil(o.BooleanValue) {
		var ret bool
		return ret
	}
	return *o.BooleanValue
}

// GetBooleanValueOk returns a tuple with the BooleanValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterBooleanValue) GetBooleanValueOk() (*bool, bool) {
	if o == nil || IsNil(o.BooleanValue) {
		return nil, false
	}
	return o.BooleanValue, true
}

// HasBooleanValue returns a boolean if a field has been set.
func (o *ParameterBooleanValue) HasBooleanValue() bool {
	if o != nil && !IsNil(o.BooleanValue) {
		return true
	}

	return false
}

// SetBooleanValue gets a reference to the given bool and assigns it to the BooleanValue field.
func (o *ParameterBooleanValue) SetBooleanValue(v bool) {
	o.BooleanValue = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ParameterBooleanValue) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterBooleanValue) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ParameterBooleanValue) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ParameterBooleanValue) SetKey(v string) {
	o.Key = &v
}

func (o ParameterBooleanValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParameterBooleanValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BooleanValue) {
		toSerialize["booleanValue"] = o.BooleanValue
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	return toSerialize, nil
}

type NullableParameterBooleanValue struct {
	value *ParameterBooleanValue
	isSet bool
}

func (v NullableParameterBooleanValue) Get() *ParameterBooleanValue {
	return v.value
}

func (v *NullableParameterBooleanValue) Set(val *ParameterBooleanValue) {
	v.value = val
	v.isSet = true
}

func (v NullableParameterBooleanValue) IsSet() bool {
	return v.isSet
}

func (v *NullableParameterBooleanValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameterBooleanValue(val *ParameterBooleanValue) *NullableParameterBooleanValue {
	return &NullableParameterBooleanValue{value: val, isSet: true}
}

func (v NullableParameterBooleanValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameterBooleanValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


