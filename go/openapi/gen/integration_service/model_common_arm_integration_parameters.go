/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CommonARMIntegrationParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonARMIntegrationParameters{}

// CommonARMIntegrationParameters struct for CommonARMIntegrationParameters
type CommonARMIntegrationParameters struct {
	ApiKey string `json:"apiKey"`
	CgxDomain string `json:"cgxDomain"`
	LogsUrl string `json:"logsUrl"`
}

type _CommonARMIntegrationParameters CommonARMIntegrationParameters

// NewCommonARMIntegrationParameters instantiates a new CommonARMIntegrationParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonARMIntegrationParameters(apiKey string, cgxDomain string, logsUrl string) *CommonARMIntegrationParameters {
	this := CommonARMIntegrationParameters{}
	this.ApiKey = apiKey
	this.CgxDomain = cgxDomain
	this.LogsUrl = logsUrl
	return &this
}

// NewCommonARMIntegrationParametersWithDefaults instantiates a new CommonARMIntegrationParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonARMIntegrationParametersWithDefaults() *CommonARMIntegrationParameters {
	this := CommonARMIntegrationParameters{}
	return &this
}

// GetApiKey returns the ApiKey field value
func (o *CommonARMIntegrationParameters) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *CommonARMIntegrationParameters) GetApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *CommonARMIntegrationParameters) SetApiKey(v string) {
	o.ApiKey = v
}

// GetCgxDomain returns the CgxDomain field value
func (o *CommonARMIntegrationParameters) GetCgxDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CgxDomain
}

// GetCgxDomainOk returns a tuple with the CgxDomain field value
// and a boolean to check if the value has been set.
func (o *CommonARMIntegrationParameters) GetCgxDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CgxDomain, true
}

// SetCgxDomain sets field value
func (o *CommonARMIntegrationParameters) SetCgxDomain(v string) {
	o.CgxDomain = v
}

// GetLogsUrl returns the LogsUrl field value
func (o *CommonARMIntegrationParameters) GetLogsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LogsUrl
}

// GetLogsUrlOk returns a tuple with the LogsUrl field value
// and a boolean to check if the value has been set.
func (o *CommonARMIntegrationParameters) GetLogsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LogsUrl, true
}

// SetLogsUrl sets field value
func (o *CommonARMIntegrationParameters) SetLogsUrl(v string) {
	o.LogsUrl = v
}

func (o CommonARMIntegrationParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonARMIntegrationParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiKey"] = o.ApiKey
	toSerialize["cgxDomain"] = o.CgxDomain
	toSerialize["logsUrl"] = o.LogsUrl
	return toSerialize, nil
}

func (o *CommonARMIntegrationParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"apiKey",
		"cgxDomain",
		"logsUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCommonARMIntegrationParameters := _CommonARMIntegrationParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCommonARMIntegrationParameters)

	if err != nil {
		return err
	}

	*o = CommonARMIntegrationParameters(varCommonARMIntegrationParameters)

	return err
}

type NullableCommonARMIntegrationParameters struct {
	value *CommonARMIntegrationParameters
	isSet bool
}

func (v NullableCommonARMIntegrationParameters) Get() *CommonARMIntegrationParameters {
	return v.value
}

func (v *NullableCommonARMIntegrationParameters) Set(val *CommonARMIntegrationParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonARMIntegrationParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonARMIntegrationParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonARMIntegrationParameters(val *CommonARMIntegrationParameters) *NullableCommonARMIntegrationParameters {
	return &NullableCommonARMIntegrationParameters{value: val, isSet: true}
}

func (v NullableCommonARMIntegrationParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonARMIntegrationParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


