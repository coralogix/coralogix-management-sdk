/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
)

// checks if the Terraform type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Terraform{}

// Terraform This data structure represents a Terraform integration.
type Terraform struct {
	ConfigurationBlocks []ConfigurationBlock `json:"configurationBlocks,omitempty"`
}

// NewTerraform instantiates a new Terraform object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTerraform() *Terraform {
	this := Terraform{}
	return &this
}

// NewTerraformWithDefaults instantiates a new Terraform object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerraformWithDefaults() *Terraform {
	this := Terraform{}
	return &this
}

// GetConfigurationBlocks returns the ConfigurationBlocks field value if set, zero value otherwise.
func (o *Terraform) GetConfigurationBlocks() []ConfigurationBlock {
	if o == nil || IsNil(o.ConfigurationBlocks) {
		var ret []ConfigurationBlock
		return ret
	}
	return o.ConfigurationBlocks
}

// GetConfigurationBlocksOk returns a tuple with the ConfigurationBlocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Terraform) GetConfigurationBlocksOk() ([]ConfigurationBlock, bool) {
	if o == nil || IsNil(o.ConfigurationBlocks) {
		return nil, false
	}
	return o.ConfigurationBlocks, true
}

// HasConfigurationBlocks returns a boolean if a field has been set.
func (o *Terraform) HasConfigurationBlocks() bool {
	if o != nil && !IsNil(o.ConfigurationBlocks) {
		return true
	}

	return false
}

// SetConfigurationBlocks gets a reference to the given []ConfigurationBlock and assigns it to the ConfigurationBlocks field.
func (o *Terraform) SetConfigurationBlocks(v []ConfigurationBlock) {
	o.ConfigurationBlocks = v
}

func (o Terraform) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Terraform) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfigurationBlocks) {
		toSerialize["configurationBlocks"] = o.ConfigurationBlocks
	}
	return toSerialize, nil
}

type NullableTerraform struct {
	value *Terraform
	isSet bool
}

func (v NullableTerraform) Get() *Terraform {
	return v.value
}

func (v *NullableTerraform) Set(val *Terraform) {
	v.value = val
	v.isSet = true
}

func (v NullableTerraform) IsSet() bool {
	return v.isSet
}

func (v *NullableTerraform) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTerraform(val *Terraform) *NullableTerraform {
	return &NullableTerraform{value: val, isSet: true}
}

func (v NullableTerraform) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTerraform) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


