/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
)

// checks if the IntegrationRevision type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationRevision{}

// IntegrationRevision This data structure represents an integration revision.
type IntegrationRevision struct {
	CloudFormation *CloudFormationTemplate `json:"cloudFormation,omitempty"`
	FeatureFlag *string `json:"featureFlag,omitempty"`
	Fields []FieldInformation `json:"fields,omitempty"`
	Groups []IntegrationRevisionGroup `json:"groups,omitempty"`
	Id *string `json:"id,omitempty"`
	RevisionDeploymentSupported *bool `json:"revisionDeploymentSupported,omitempty"`
	UpgradeInstructionsMd *string `json:"upgradeInstructionsMd,omitempty"`
}

// NewIntegrationRevision instantiates a new IntegrationRevision object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationRevision() *IntegrationRevision {
	this := IntegrationRevision{}
	return &this
}

// NewIntegrationRevisionWithDefaults instantiates a new IntegrationRevision object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationRevisionWithDefaults() *IntegrationRevision {
	this := IntegrationRevision{}
	return &this
}

// GetCloudFormation returns the CloudFormation field value if set, zero value otherwise.
func (o *IntegrationRevision) GetCloudFormation() CloudFormationTemplate {
	if o == nil || IsNil(o.CloudFormation) {
		var ret CloudFormationTemplate
		return ret
	}
	return *o.CloudFormation
}

// GetCloudFormationOk returns a tuple with the CloudFormation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRevision) GetCloudFormationOk() (*CloudFormationTemplate, bool) {
	if o == nil || IsNil(o.CloudFormation) {
		return nil, false
	}
	return o.CloudFormation, true
}

// HasCloudFormation returns a boolean if a field has been set.
func (o *IntegrationRevision) HasCloudFormation() bool {
	if o != nil && !IsNil(o.CloudFormation) {
		return true
	}

	return false
}

// SetCloudFormation gets a reference to the given CloudFormationTemplate and assigns it to the CloudFormation field.
func (o *IntegrationRevision) SetCloudFormation(v CloudFormationTemplate) {
	o.CloudFormation = &v
}

// GetFeatureFlag returns the FeatureFlag field value if set, zero value otherwise.
func (o *IntegrationRevision) GetFeatureFlag() string {
	if o == nil || IsNil(o.FeatureFlag) {
		var ret string
		return ret
	}
	return *o.FeatureFlag
}

// GetFeatureFlagOk returns a tuple with the FeatureFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRevision) GetFeatureFlagOk() (*string, bool) {
	if o == nil || IsNil(o.FeatureFlag) {
		return nil, false
	}
	return o.FeatureFlag, true
}

// HasFeatureFlag returns a boolean if a field has been set.
func (o *IntegrationRevision) HasFeatureFlag() bool {
	if o != nil && !IsNil(o.FeatureFlag) {
		return true
	}

	return false
}

// SetFeatureFlag gets a reference to the given string and assigns it to the FeatureFlag field.
func (o *IntegrationRevision) SetFeatureFlag(v string) {
	o.FeatureFlag = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *IntegrationRevision) GetFields() []FieldInformation {
	if o == nil || IsNil(o.Fields) {
		var ret []FieldInformation
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRevision) GetFieldsOk() ([]FieldInformation, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *IntegrationRevision) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []FieldInformation and assigns it to the Fields field.
func (o *IntegrationRevision) SetFields(v []FieldInformation) {
	o.Fields = v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *IntegrationRevision) GetGroups() []IntegrationRevisionGroup {
	if o == nil || IsNil(o.Groups) {
		var ret []IntegrationRevisionGroup
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRevision) GetGroupsOk() ([]IntegrationRevisionGroup, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *IntegrationRevision) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []IntegrationRevisionGroup and assigns it to the Groups field.
func (o *IntegrationRevision) SetGroups(v []IntegrationRevisionGroup) {
	o.Groups = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IntegrationRevision) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRevision) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IntegrationRevision) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IntegrationRevision) SetId(v string) {
	o.Id = &v
}

// GetRevisionDeploymentSupported returns the RevisionDeploymentSupported field value if set, zero value otherwise.
func (o *IntegrationRevision) GetRevisionDeploymentSupported() bool {
	if o == nil || IsNil(o.RevisionDeploymentSupported) {
		var ret bool
		return ret
	}
	return *o.RevisionDeploymentSupported
}

// GetRevisionDeploymentSupportedOk returns a tuple with the RevisionDeploymentSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRevision) GetRevisionDeploymentSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.RevisionDeploymentSupported) {
		return nil, false
	}
	return o.RevisionDeploymentSupported, true
}

// HasRevisionDeploymentSupported returns a boolean if a field has been set.
func (o *IntegrationRevision) HasRevisionDeploymentSupported() bool {
	if o != nil && !IsNil(o.RevisionDeploymentSupported) {
		return true
	}

	return false
}

// SetRevisionDeploymentSupported gets a reference to the given bool and assigns it to the RevisionDeploymentSupported field.
func (o *IntegrationRevision) SetRevisionDeploymentSupported(v bool) {
	o.RevisionDeploymentSupported = &v
}

// GetUpgradeInstructionsMd returns the UpgradeInstructionsMd field value if set, zero value otherwise.
func (o *IntegrationRevision) GetUpgradeInstructionsMd() string {
	if o == nil || IsNil(o.UpgradeInstructionsMd) {
		var ret string
		return ret
	}
	return *o.UpgradeInstructionsMd
}

// GetUpgradeInstructionsMdOk returns a tuple with the UpgradeInstructionsMd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRevision) GetUpgradeInstructionsMdOk() (*string, bool) {
	if o == nil || IsNil(o.UpgradeInstructionsMd) {
		return nil, false
	}
	return o.UpgradeInstructionsMd, true
}

// HasUpgradeInstructionsMd returns a boolean if a field has been set.
func (o *IntegrationRevision) HasUpgradeInstructionsMd() bool {
	if o != nil && !IsNil(o.UpgradeInstructionsMd) {
		return true
	}

	return false
}

// SetUpgradeInstructionsMd gets a reference to the given string and assigns it to the UpgradeInstructionsMd field.
func (o *IntegrationRevision) SetUpgradeInstructionsMd(v string) {
	o.UpgradeInstructionsMd = &v
}

func (o IntegrationRevision) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationRevision) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudFormation) {
		toSerialize["cloudFormation"] = o.CloudFormation
	}
	if !IsNil(o.FeatureFlag) {
		toSerialize["featureFlag"] = o.FeatureFlag
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RevisionDeploymentSupported) {
		toSerialize["revisionDeploymentSupported"] = o.RevisionDeploymentSupported
	}
	if !IsNil(o.UpgradeInstructionsMd) {
		toSerialize["upgradeInstructionsMd"] = o.UpgradeInstructionsMd
	}
	return toSerialize, nil
}

type NullableIntegrationRevision struct {
	value *IntegrationRevision
	isSet bool
}

func (v NullableIntegrationRevision) Get() *IntegrationRevision {
	return v.value
}

func (v *NullableIntegrationRevision) Set(val *IntegrationRevision) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationRevision) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationRevision) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationRevision(val *IntegrationRevision) *NullableIntegrationRevision {
	return &NullableIntegrationRevision{value: val, isSet: true}
}

func (v NullableIntegrationRevision) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationRevision) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


