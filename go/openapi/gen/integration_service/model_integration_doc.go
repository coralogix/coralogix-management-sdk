/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
)

// checks if the IntegrationDoc type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationDoc{}

// IntegrationDoc This data structure represents integration documentation.
type IntegrationDoc struct {
	Link *string `json:"link,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewIntegrationDoc instantiates a new IntegrationDoc object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationDoc() *IntegrationDoc {
	this := IntegrationDoc{}
	return &this
}

// NewIntegrationDocWithDefaults instantiates a new IntegrationDoc object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationDocWithDefaults() *IntegrationDoc {
	this := IntegrationDoc{}
	return &this
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *IntegrationDoc) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationDoc) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *IntegrationDoc) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *IntegrationDoc) SetLink(v string) {
	o.Link = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IntegrationDoc) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationDoc) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IntegrationDoc) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IntegrationDoc) SetName(v string) {
	o.Name = &v
}

func (o IntegrationDoc) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationDoc) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableIntegrationDoc struct {
	value *IntegrationDoc
	isSet bool
}

func (v NullableIntegrationDoc) Get() *IntegrationDoc {
	return v.value
}

func (v *NullableIntegrationDoc) Set(val *IntegrationDoc) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationDoc) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationDoc) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationDoc(val *IntegrationDoc) *NullableIntegrationDoc {
	return &NullableIntegrationDoc{value: val, isSet: true}
}

func (v NullableIntegrationDoc) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationDoc) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


