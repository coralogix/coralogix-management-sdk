/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
)

// checks if the DefaultIntegrationDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefaultIntegrationDetails{}

// DefaultIntegrationDetails struct for DefaultIntegrationDetails
type DefaultIntegrationDetails struct {
	Registered []RegisteredInstance `json:"registered,omitempty"`
}

// NewDefaultIntegrationDetails instantiates a new DefaultIntegrationDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultIntegrationDetails() *DefaultIntegrationDetails {
	this := DefaultIntegrationDetails{}
	return &this
}

// NewDefaultIntegrationDetailsWithDefaults instantiates a new DefaultIntegrationDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultIntegrationDetailsWithDefaults() *DefaultIntegrationDetails {
	this := DefaultIntegrationDetails{}
	return &this
}

// GetRegistered returns the Registered field value if set, zero value otherwise.
func (o *DefaultIntegrationDetails) GetRegistered() []RegisteredInstance {
	if o == nil || IsNil(o.Registered) {
		var ret []RegisteredInstance
		return ret
	}
	return o.Registered
}

// GetRegisteredOk returns a tuple with the Registered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultIntegrationDetails) GetRegisteredOk() ([]RegisteredInstance, bool) {
	if o == nil || IsNil(o.Registered) {
		return nil, false
	}
	return o.Registered, true
}

// HasRegistered returns a boolean if a field has been set.
func (o *DefaultIntegrationDetails) HasRegistered() bool {
	if o != nil && !IsNil(o.Registered) {
		return true
	}

	return false
}

// SetRegistered gets a reference to the given []RegisteredInstance and assigns it to the Registered field.
func (o *DefaultIntegrationDetails) SetRegistered(v []RegisteredInstance) {
	o.Registered = v
}

func (o DefaultIntegrationDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefaultIntegrationDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Registered) {
		toSerialize["registered"] = o.Registered
	}
	return toSerialize, nil
}

type NullableDefaultIntegrationDetails struct {
	value *DefaultIntegrationDetails
	isSet bool
}

func (v NullableDefaultIntegrationDetails) Get() *DefaultIntegrationDetails {
	return v.value
}

func (v *NullableDefaultIntegrationDetails) Set(val *DefaultIntegrationDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultIntegrationDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultIntegrationDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultIntegrationDetails(val *DefaultIntegrationDetails) *NullableDefaultIntegrationDetails {
	return &NullableDefaultIntegrationDetails{value: val, isSet: true}
}

func (v NullableDefaultIntegrationDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultIntegrationDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


