/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
)

// checks if the IntegrationType4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationType4{}

// IntegrationType4 This data structure represents an integration type.
type IntegrationType4 struct {
	// This data structure represents a push based contextual data integration.
	PushBasedContextualData map[string]interface{} `json:"pushBasedContextualData,omitempty"`
}

// NewIntegrationType4 instantiates a new IntegrationType4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationType4() *IntegrationType4 {
	this := IntegrationType4{}
	return &this
}

// NewIntegrationType4WithDefaults instantiates a new IntegrationType4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationType4WithDefaults() *IntegrationType4 {
	this := IntegrationType4{}
	return &this
}

// GetPushBasedContextualData returns the PushBasedContextualData field value if set, zero value otherwise.
func (o *IntegrationType4) GetPushBasedContextualData() map[string]interface{} {
	if o == nil || IsNil(o.PushBasedContextualData) {
		var ret map[string]interface{}
		return ret
	}
	return o.PushBasedContextualData
}

// GetPushBasedContextualDataOk returns a tuple with the PushBasedContextualData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationType4) GetPushBasedContextualDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PushBasedContextualData) {
		return map[string]interface{}{}, false
	}
	return o.PushBasedContextualData, true
}

// HasPushBasedContextualData returns a boolean if a field has been set.
func (o *IntegrationType4) HasPushBasedContextualData() bool {
	if o != nil && !IsNil(o.PushBasedContextualData) {
		return true
	}

	return false
}

// SetPushBasedContextualData gets a reference to the given map[string]interface{} and assigns it to the PushBasedContextualData field.
func (o *IntegrationType4) SetPushBasedContextualData(v map[string]interface{}) {
	o.PushBasedContextualData = v
}

func (o IntegrationType4) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationType4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PushBasedContextualData) {
		toSerialize["pushBasedContextualData"] = o.PushBasedContextualData
	}
	return toSerialize, nil
}

type NullableIntegrationType4 struct {
	value *IntegrationType4
	isSet bool
}

func (v NullableIntegrationType4) Get() *IntegrationType4 {
	return v.value
}

func (v *NullableIntegrationType4) Set(val *IntegrationType4) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationType4) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationType4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationType4(val *IntegrationType4) *NullableIntegrationType4 {
	return &NullableIntegrationType4{value: val, isSet: true}
}

func (v NullableIntegrationType4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationType4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


