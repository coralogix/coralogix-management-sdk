/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListManagedIntegrationKeysResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListManagedIntegrationKeysResponse{}

// ListManagedIntegrationKeysResponse struct for ListManagedIntegrationKeysResponse
type ListManagedIntegrationKeysResponse struct {
	IntegrationKeys []string `json:"integrationKeys"`
}

type _ListManagedIntegrationKeysResponse ListManagedIntegrationKeysResponse

// NewListManagedIntegrationKeysResponse instantiates a new ListManagedIntegrationKeysResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListManagedIntegrationKeysResponse(integrationKeys []string) *ListManagedIntegrationKeysResponse {
	this := ListManagedIntegrationKeysResponse{}
	this.IntegrationKeys = integrationKeys
	return &this
}

// NewListManagedIntegrationKeysResponseWithDefaults instantiates a new ListManagedIntegrationKeysResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListManagedIntegrationKeysResponseWithDefaults() *ListManagedIntegrationKeysResponse {
	this := ListManagedIntegrationKeysResponse{}
	return &this
}

// GetIntegrationKeys returns the IntegrationKeys field value
func (o *ListManagedIntegrationKeysResponse) GetIntegrationKeys() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.IntegrationKeys
}

// GetIntegrationKeysOk returns a tuple with the IntegrationKeys field value
// and a boolean to check if the value has been set.
func (o *ListManagedIntegrationKeysResponse) GetIntegrationKeysOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntegrationKeys, true
}

// SetIntegrationKeys sets field value
func (o *ListManagedIntegrationKeysResponse) SetIntegrationKeys(v []string) {
	o.IntegrationKeys = v
}

func (o ListManagedIntegrationKeysResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListManagedIntegrationKeysResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["integrationKeys"] = o.IntegrationKeys
	return toSerialize, nil
}

func (o *ListManagedIntegrationKeysResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"integrationKeys",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListManagedIntegrationKeysResponse := _ListManagedIntegrationKeysResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListManagedIntegrationKeysResponse)

	if err != nil {
		return err
	}

	*o = ListManagedIntegrationKeysResponse(varListManagedIntegrationKeysResponse)

	return err
}

type NullableListManagedIntegrationKeysResponse struct {
	value *ListManagedIntegrationKeysResponse
	isSet bool
}

func (v NullableListManagedIntegrationKeysResponse) Get() *ListManagedIntegrationKeysResponse {
	return v.value
}

func (v *NullableListManagedIntegrationKeysResponse) Set(val *ListManagedIntegrationKeysResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListManagedIntegrationKeysResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListManagedIntegrationKeysResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListManagedIntegrationKeysResponse(val *ListManagedIntegrationKeysResponse) *NullableListManagedIntegrationKeysResponse {
	return &NullableListManagedIntegrationKeysResponse{value: val, isSet: true}
}

func (v NullableListManagedIntegrationKeysResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListManagedIntegrationKeysResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


