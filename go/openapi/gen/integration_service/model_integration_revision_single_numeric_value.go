/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integration_service

import (
	"encoding/json"
)

// checks if the IntegrationRevisionSingleNumericValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationRevisionSingleNumericValue{}

// IntegrationRevisionSingleNumericValue struct for IntegrationRevisionSingleNumericValue
type IntegrationRevisionSingleNumericValue struct {
	DefaultValue *float64 `json:"defaultValue,omitempty"`
}

// NewIntegrationRevisionSingleNumericValue instantiates a new IntegrationRevisionSingleNumericValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationRevisionSingleNumericValue() *IntegrationRevisionSingleNumericValue {
	this := IntegrationRevisionSingleNumericValue{}
	return &this
}

// NewIntegrationRevisionSingleNumericValueWithDefaults instantiates a new IntegrationRevisionSingleNumericValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationRevisionSingleNumericValueWithDefaults() *IntegrationRevisionSingleNumericValue {
	this := IntegrationRevisionSingleNumericValue{}
	return &this
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *IntegrationRevisionSingleNumericValue) GetDefaultValue() float64 {
	if o == nil || IsNil(o.DefaultValue) {
		var ret float64
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationRevisionSingleNumericValue) GetDefaultValueOk() (*float64, bool) {
	if o == nil || IsNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *IntegrationRevisionSingleNumericValue) HasDefaultValue() bool {
	if o != nil && !IsNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given float64 and assigns it to the DefaultValue field.
func (o *IntegrationRevisionSingleNumericValue) SetDefaultValue(v float64) {
	o.DefaultValue = &v
}

func (o IntegrationRevisionSingleNumericValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationRevisionSingleNumericValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultValue) {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	return toSerialize, nil
}

type NullableIntegrationRevisionSingleNumericValue struct {
	value *IntegrationRevisionSingleNumericValue
	isSet bool
}

func (v NullableIntegrationRevisionSingleNumericValue) Get() *IntegrationRevisionSingleNumericValue {
	return v.value
}

func (v *NullableIntegrationRevisionSingleNumericValue) Set(val *IntegrationRevisionSingleNumericValue) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationRevisionSingleNumericValue) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationRevisionSingleNumericValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationRevisionSingleNumericValue(val *IntegrationRevisionSingleNumericValue) *NullableIntegrationRevisionSingleNumericValue {
	return &NullableIntegrationRevisionSingleNumericValue{value: val, isSet: true}
}

func (v NullableIntegrationRevisionSingleNumericValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationRevisionSingleNumericValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


