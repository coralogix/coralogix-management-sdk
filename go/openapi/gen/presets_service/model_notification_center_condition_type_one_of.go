/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package presets_service

import (
	"encoding/json"
)

// checks if the NotificationCenterConditionTypeOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationCenterConditionTypeOneOf{}

// NotificationCenterConditionTypeOneOf struct for NotificationCenterConditionTypeOneOf
type NotificationCenterConditionTypeOneOf struct {
	MatchEntityType map[string]interface{} `json:"matchEntityType,omitempty"`
}

// NewNotificationCenterConditionTypeOneOf instantiates a new NotificationCenterConditionTypeOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationCenterConditionTypeOneOf() *NotificationCenterConditionTypeOneOf {
	this := NotificationCenterConditionTypeOneOf{}
	return &this
}

// NewNotificationCenterConditionTypeOneOfWithDefaults instantiates a new NotificationCenterConditionTypeOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationCenterConditionTypeOneOfWithDefaults() *NotificationCenterConditionTypeOneOf {
	this := NotificationCenterConditionTypeOneOf{}
	return &this
}

// GetMatchEntityType returns the MatchEntityType field value if set, zero value otherwise.
func (o *NotificationCenterConditionTypeOneOf) GetMatchEntityType() map[string]interface{} {
	if o == nil || IsNil(o.MatchEntityType) {
		var ret map[string]interface{}
		return ret
	}
	return o.MatchEntityType
}

// GetMatchEntityTypeOk returns a tuple with the MatchEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationCenterConditionTypeOneOf) GetMatchEntityTypeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MatchEntityType) {
		return map[string]interface{}{}, false
	}
	return o.MatchEntityType, true
}

// HasMatchEntityType returns a boolean if a field has been set.
func (o *NotificationCenterConditionTypeOneOf) HasMatchEntityType() bool {
	if o != nil && !IsNil(o.MatchEntityType) {
		return true
	}

	return false
}

// SetMatchEntityType gets a reference to the given map[string]interface{} and assigns it to the MatchEntityType field.
func (o *NotificationCenterConditionTypeOneOf) SetMatchEntityType(v map[string]interface{}) {
	o.MatchEntityType = v
}

func (o NotificationCenterConditionTypeOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationCenterConditionTypeOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MatchEntityType) {
		toSerialize["matchEntityType"] = o.MatchEntityType
	}
	return toSerialize, nil
}

type NullableNotificationCenterConditionTypeOneOf struct {
	value *NotificationCenterConditionTypeOneOf
	isSet bool
}

func (v NullableNotificationCenterConditionTypeOneOf) Get() *NotificationCenterConditionTypeOneOf {
	return v.value
}

func (v *NullableNotificationCenterConditionTypeOneOf) Set(val *NotificationCenterConditionTypeOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationCenterConditionTypeOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationCenterConditionTypeOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationCenterConditionTypeOneOf(val *NotificationCenterConditionTypeOneOf) *NullableNotificationCenterConditionTypeOneOf {
	return &NullableNotificationCenterConditionTypeOneOf{value: val, isSet: true}
}

func (v NullableNotificationCenterConditionTypeOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationCenterConditionTypeOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


