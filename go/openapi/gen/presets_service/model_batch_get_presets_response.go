/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package presets_service

import (
	"encoding/json"
)

// checks if the BatchGetPresetsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchGetPresetsResponse{}

// BatchGetPresetsResponse Response containing the requested presets and any IDs not found
type BatchGetPresetsResponse struct {
	NotFoundIds []string `json:"notFoundIds,omitempty"`
	Presets *map[string]Preset `json:"presets,omitempty"`
}

// NewBatchGetPresetsResponse instantiates a new BatchGetPresetsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchGetPresetsResponse() *BatchGetPresetsResponse {
	this := BatchGetPresetsResponse{}
	return &this
}

// NewBatchGetPresetsResponseWithDefaults instantiates a new BatchGetPresetsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchGetPresetsResponseWithDefaults() *BatchGetPresetsResponse {
	this := BatchGetPresetsResponse{}
	return &this
}

// GetNotFoundIds returns the NotFoundIds field value if set, zero value otherwise.
func (o *BatchGetPresetsResponse) GetNotFoundIds() []string {
	if o == nil || IsNil(o.NotFoundIds) {
		var ret []string
		return ret
	}
	return o.NotFoundIds
}

// GetNotFoundIdsOk returns a tuple with the NotFoundIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetPresetsResponse) GetNotFoundIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.NotFoundIds) {
		return nil, false
	}
	return o.NotFoundIds, true
}

// HasNotFoundIds returns a boolean if a field has been set.
func (o *BatchGetPresetsResponse) HasNotFoundIds() bool {
	if o != nil && !IsNil(o.NotFoundIds) {
		return true
	}

	return false
}

// SetNotFoundIds gets a reference to the given []string and assigns it to the NotFoundIds field.
func (o *BatchGetPresetsResponse) SetNotFoundIds(v []string) {
	o.NotFoundIds = v
}

// GetPresets returns the Presets field value if set, zero value otherwise.
func (o *BatchGetPresetsResponse) GetPresets() map[string]Preset {
	if o == nil || IsNil(o.Presets) {
		var ret map[string]Preset
		return ret
	}
	return *o.Presets
}

// GetPresetsOk returns a tuple with the Presets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetPresetsResponse) GetPresetsOk() (*map[string]Preset, bool) {
	if o == nil || IsNil(o.Presets) {
		return nil, false
	}
	return o.Presets, true
}

// HasPresets returns a boolean if a field has been set.
func (o *BatchGetPresetsResponse) HasPresets() bool {
	if o != nil && !IsNil(o.Presets) {
		return true
	}

	return false
}

// SetPresets gets a reference to the given map[string]Preset and assigns it to the Presets field.
func (o *BatchGetPresetsResponse) SetPresets(v map[string]Preset) {
	o.Presets = &v
}

func (o BatchGetPresetsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchGetPresetsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NotFoundIds) {
		toSerialize["notFoundIds"] = o.NotFoundIds
	}
	if !IsNil(o.Presets) {
		toSerialize["presets"] = o.Presets
	}
	return toSerialize, nil
}

type NullableBatchGetPresetsResponse struct {
	value *BatchGetPresetsResponse
	isSet bool
}

func (v NullableBatchGetPresetsResponse) Get() *BatchGetPresetsResponse {
	return v.value
}

func (v *NullableBatchGetPresetsResponse) Set(val *BatchGetPresetsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchGetPresetsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchGetPresetsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchGetPresetsResponse(val *BatchGetPresetsResponse) *NullableBatchGetPresetsResponse {
	return &NullableBatchGetPresetsResponse{value: val, isSet: true}
}

func (v NullableBatchGetPresetsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchGetPresetsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


