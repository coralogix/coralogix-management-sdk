/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package presets_service

import (
	"encoding/json"
	"time"
)

// checks if the PresetSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PresetSummary{}

// PresetSummary Provides a concise overview of a preset
type PresetSummary struct {
	ConnectorType *ConnectorType `json:"connectorType,omitempty"`
	CreateTime *time.Time `json:"createTime,omitempty"`
	Description *string `json:"description,omitempty"`
	EntityType *NotificationCenterEntityType `json:"entityType,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	ParentId *string `json:"parentId,omitempty"`
	PresetType *PresetType `json:"presetType,omitempty"`
	UpdateTime *time.Time `json:"updateTime,omitempty"`
}

// NewPresetSummary instantiates a new PresetSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPresetSummary() *PresetSummary {
	this := PresetSummary{}
	return &this
}

// NewPresetSummaryWithDefaults instantiates a new PresetSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPresetSummaryWithDefaults() *PresetSummary {
	this := PresetSummary{}
	return &this
}

// GetConnectorType returns the ConnectorType field value if set, zero value otherwise.
func (o *PresetSummary) GetConnectorType() ConnectorType {
	if o == nil || IsNil(o.ConnectorType) {
		var ret ConnectorType
		return ret
	}
	return *o.ConnectorType
}

// GetConnectorTypeOk returns a tuple with the ConnectorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresetSummary) GetConnectorTypeOk() (*ConnectorType, bool) {
	if o == nil || IsNil(o.ConnectorType) {
		return nil, false
	}
	return o.ConnectorType, true
}

// HasConnectorType returns a boolean if a field has been set.
func (o *PresetSummary) HasConnectorType() bool {
	if o != nil && !IsNil(o.ConnectorType) {
		return true
	}

	return false
}

// SetConnectorType gets a reference to the given ConnectorType and assigns it to the ConnectorType field.
func (o *PresetSummary) SetConnectorType(v ConnectorType) {
	o.ConnectorType = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *PresetSummary) GetCreateTime() time.Time {
	if o == nil || IsNil(o.CreateTime) {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresetSummary) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *PresetSummary) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *PresetSummary) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PresetSummary) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresetSummary) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PresetSummary) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PresetSummary) SetDescription(v string) {
	o.Description = &v
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *PresetSummary) GetEntityType() NotificationCenterEntityType {
	if o == nil || IsNil(o.EntityType) {
		var ret NotificationCenterEntityType
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresetSummary) GetEntityTypeOk() (*NotificationCenterEntityType, bool) {
	if o == nil || IsNil(o.EntityType) {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *PresetSummary) HasEntityType() bool {
	if o != nil && !IsNil(o.EntityType) {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given NotificationCenterEntityType and assigns it to the EntityType field.
func (o *PresetSummary) SetEntityType(v NotificationCenterEntityType) {
	o.EntityType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PresetSummary) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresetSummary) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PresetSummary) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PresetSummary) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PresetSummary) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresetSummary) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PresetSummary) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PresetSummary) SetName(v string) {
	o.Name = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *PresetSummary) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresetSummary) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *PresetSummary) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *PresetSummary) SetParentId(v string) {
	o.ParentId = &v
}

// GetPresetType returns the PresetType field value if set, zero value otherwise.
func (o *PresetSummary) GetPresetType() PresetType {
	if o == nil || IsNil(o.PresetType) {
		var ret PresetType
		return ret
	}
	return *o.PresetType
}

// GetPresetTypeOk returns a tuple with the PresetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresetSummary) GetPresetTypeOk() (*PresetType, bool) {
	if o == nil || IsNil(o.PresetType) {
		return nil, false
	}
	return o.PresetType, true
}

// HasPresetType returns a boolean if a field has been set.
func (o *PresetSummary) HasPresetType() bool {
	if o != nil && !IsNil(o.PresetType) {
		return true
	}

	return false
}

// SetPresetType gets a reference to the given PresetType and assigns it to the PresetType field.
func (o *PresetSummary) SetPresetType(v PresetType) {
	o.PresetType = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *PresetSummary) GetUpdateTime() time.Time {
	if o == nil || IsNil(o.UpdateTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PresetSummary) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *PresetSummary) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *PresetSummary) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

func (o PresetSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PresetSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectorType) {
		toSerialize["connectorType"] = o.ConnectorType
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.EntityType) {
		toSerialize["entityType"] = o.EntityType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if !IsNil(o.PresetType) {
		toSerialize["presetType"] = o.PresetType
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return toSerialize, nil
}

type NullablePresetSummary struct {
	value *PresetSummary
	isSet bool
}

func (v NullablePresetSummary) Get() *PresetSummary {
	return v.value
}

func (v *NullablePresetSummary) Set(val *PresetSummary) {
	v.value = val
	v.isSet = true
}

func (v NullablePresetSummary) IsSet() bool {
	return v.isSet
}

func (v *NullablePresetSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePresetSummary(val *PresetSummary) *NullablePresetSummary {
	return &NullablePresetSummary{value: val, isSet: true}
}

func (v NullablePresetSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePresetSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


