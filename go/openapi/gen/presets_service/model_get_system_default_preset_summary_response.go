/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package presets_service

import (
	"encoding/json"
)

// checks if the GetSystemDefaultPresetSummaryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSystemDefaultPresetSummaryResponse{}

// GetSystemDefaultPresetSummaryResponse struct for GetSystemDefaultPresetSummaryResponse
type GetSystemDefaultPresetSummaryResponse struct {
	PresetSummary *PresetSummary `json:"presetSummary,omitempty"`
}

// NewGetSystemDefaultPresetSummaryResponse instantiates a new GetSystemDefaultPresetSummaryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSystemDefaultPresetSummaryResponse() *GetSystemDefaultPresetSummaryResponse {
	this := GetSystemDefaultPresetSummaryResponse{}
	return &this
}

// NewGetSystemDefaultPresetSummaryResponseWithDefaults instantiates a new GetSystemDefaultPresetSummaryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSystemDefaultPresetSummaryResponseWithDefaults() *GetSystemDefaultPresetSummaryResponse {
	this := GetSystemDefaultPresetSummaryResponse{}
	return &this
}

// GetPresetSummary returns the PresetSummary field value if set, zero value otherwise.
func (o *GetSystemDefaultPresetSummaryResponse) GetPresetSummary() PresetSummary {
	if o == nil || IsNil(o.PresetSummary) {
		var ret PresetSummary
		return ret
	}
	return *o.PresetSummary
}

// GetPresetSummaryOk returns a tuple with the PresetSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemDefaultPresetSummaryResponse) GetPresetSummaryOk() (*PresetSummary, bool) {
	if o == nil || IsNil(o.PresetSummary) {
		return nil, false
	}
	return o.PresetSummary, true
}

// HasPresetSummary returns a boolean if a field has been set.
func (o *GetSystemDefaultPresetSummaryResponse) HasPresetSummary() bool {
	if o != nil && !IsNil(o.PresetSummary) {
		return true
	}

	return false
}

// SetPresetSummary gets a reference to the given PresetSummary and assigns it to the PresetSummary field.
func (o *GetSystemDefaultPresetSummaryResponse) SetPresetSummary(v PresetSummary) {
	o.PresetSummary = &v
}

func (o GetSystemDefaultPresetSummaryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSystemDefaultPresetSummaryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PresetSummary) {
		toSerialize["presetSummary"] = o.PresetSummary
	}
	return toSerialize, nil
}

type NullableGetSystemDefaultPresetSummaryResponse struct {
	value *GetSystemDefaultPresetSummaryResponse
	isSet bool
}

func (v NullableGetSystemDefaultPresetSummaryResponse) Get() *GetSystemDefaultPresetSummaryResponse {
	return v.value
}

func (v *NullableGetSystemDefaultPresetSummaryResponse) Set(val *GetSystemDefaultPresetSummaryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSystemDefaultPresetSummaryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSystemDefaultPresetSummaryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSystemDefaultPresetSummaryResponse(val *GetSystemDefaultPresetSummaryResponse) *NullableGetSystemDefaultPresetSummaryResponse {
	return &NullableGetSystemDefaultPresetSummaryResponse{value: val, isSet: true}
}

func (v NullableGetSystemDefaultPresetSummaryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSystemDefaultPresetSummaryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


