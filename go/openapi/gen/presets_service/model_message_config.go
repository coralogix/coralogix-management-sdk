/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package presets_service

import (
	"encoding/json"
)

// checks if the MessageConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageConfig{}

// MessageConfig struct for MessageConfig
type MessageConfig struct {
	Fields []NotificationCenterMessageConfigField `json:"fields,omitempty"`
}

// NewMessageConfig instantiates a new MessageConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageConfig() *MessageConfig {
	this := MessageConfig{}
	return &this
}

// NewMessageConfigWithDefaults instantiates a new MessageConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageConfigWithDefaults() *MessageConfig {
	this := MessageConfig{}
	return &this
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *MessageConfig) GetFields() []NotificationCenterMessageConfigField {
	if o == nil || IsNil(o.Fields) {
		var ret []NotificationCenterMessageConfigField
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConfig) GetFieldsOk() ([]NotificationCenterMessageConfigField, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *MessageConfig) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []NotificationCenterMessageConfigField and assigns it to the Fields field.
func (o *MessageConfig) SetFields(v []NotificationCenterMessageConfigField) {
	o.Fields = v
}

func (o MessageConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	return toSerialize, nil
}

type NullableMessageConfig struct {
	value *MessageConfig
	isSet bool
}

func (v NullableMessageConfig) Get() *MessageConfig {
	return v.value
}

func (v *NullableMessageConfig) Set(val *MessageConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageConfig(val *MessageConfig) *NullableMessageConfig {
	return &NullableMessageConfig{value: val, isSet: true}
}

func (v NullableMessageConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


