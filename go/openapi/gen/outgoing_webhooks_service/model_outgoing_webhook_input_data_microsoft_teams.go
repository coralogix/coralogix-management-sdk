/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package outgoing_webhooks_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OutgoingWebhookInputDataMicrosoftTeams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutgoingWebhookInputDataMicrosoftTeams{}

// OutgoingWebhookInputDataMicrosoftTeams struct for OutgoingWebhookInputDataMicrosoftTeams
type OutgoingWebhookInputDataMicrosoftTeams struct {
	MicrosoftTeams map[string]interface{} `json:"microsoftTeams,omitempty"`
	Name string `json:"name"`
	Type WebhookType `json:"type"`
	Url *string `json:"url,omitempty"`
}

type _OutgoingWebhookInputDataMicrosoftTeams OutgoingWebhookInputDataMicrosoftTeams

// NewOutgoingWebhookInputDataMicrosoftTeams instantiates a new OutgoingWebhookInputDataMicrosoftTeams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutgoingWebhookInputDataMicrosoftTeams(name string, type_ WebhookType) *OutgoingWebhookInputDataMicrosoftTeams {
	this := OutgoingWebhookInputDataMicrosoftTeams{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewOutgoingWebhookInputDataMicrosoftTeamsWithDefaults instantiates a new OutgoingWebhookInputDataMicrosoftTeams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutgoingWebhookInputDataMicrosoftTeamsWithDefaults() *OutgoingWebhookInputDataMicrosoftTeams {
	this := OutgoingWebhookInputDataMicrosoftTeams{}
	return &this
}

// GetMicrosoftTeams returns the MicrosoftTeams field value if set, zero value otherwise.
func (o *OutgoingWebhookInputDataMicrosoftTeams) GetMicrosoftTeams() map[string]interface{} {
	if o == nil || IsNil(o.MicrosoftTeams) {
		var ret map[string]interface{}
		return ret
	}
	return o.MicrosoftTeams
}

// GetMicrosoftTeamsOk returns a tuple with the MicrosoftTeams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookInputDataMicrosoftTeams) GetMicrosoftTeamsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MicrosoftTeams) {
		return map[string]interface{}{}, false
	}
	return o.MicrosoftTeams, true
}

// HasMicrosoftTeams returns a boolean if a field has been set.
func (o *OutgoingWebhookInputDataMicrosoftTeams) HasMicrosoftTeams() bool {
	if o != nil && !IsNil(o.MicrosoftTeams) {
		return true
	}

	return false
}

// SetMicrosoftTeams gets a reference to the given map[string]interface{} and assigns it to the MicrosoftTeams field.
func (o *OutgoingWebhookInputDataMicrosoftTeams) SetMicrosoftTeams(v map[string]interface{}) {
	o.MicrosoftTeams = v
}

// GetName returns the Name field value
func (o *OutgoingWebhookInputDataMicrosoftTeams) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookInputDataMicrosoftTeams) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OutgoingWebhookInputDataMicrosoftTeams) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *OutgoingWebhookInputDataMicrosoftTeams) GetType() WebhookType {
	if o == nil {
		var ret WebhookType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookInputDataMicrosoftTeams) GetTypeOk() (*WebhookType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OutgoingWebhookInputDataMicrosoftTeams) SetType(v WebhookType) {
	o.Type = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *OutgoingWebhookInputDataMicrosoftTeams) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookInputDataMicrosoftTeams) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *OutgoingWebhookInputDataMicrosoftTeams) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *OutgoingWebhookInputDataMicrosoftTeams) SetUrl(v string) {
	o.Url = &v
}

func (o OutgoingWebhookInputDataMicrosoftTeams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutgoingWebhookInputDataMicrosoftTeams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MicrosoftTeams) {
		toSerialize["microsoftTeams"] = o.MicrosoftTeams
	}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

func (o *OutgoingWebhookInputDataMicrosoftTeams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutgoingWebhookInputDataMicrosoftTeams := _OutgoingWebhookInputDataMicrosoftTeams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOutgoingWebhookInputDataMicrosoftTeams)

	if err != nil {
		return err
	}

	*o = OutgoingWebhookInputDataMicrosoftTeams(varOutgoingWebhookInputDataMicrosoftTeams)

	return err
}

type NullableOutgoingWebhookInputDataMicrosoftTeams struct {
	value *OutgoingWebhookInputDataMicrosoftTeams
	isSet bool
}

func (v NullableOutgoingWebhookInputDataMicrosoftTeams) Get() *OutgoingWebhookInputDataMicrosoftTeams {
	return v.value
}

func (v *NullableOutgoingWebhookInputDataMicrosoftTeams) Set(val *OutgoingWebhookInputDataMicrosoftTeams) {
	v.value = val
	v.isSet = true
}

func (v NullableOutgoingWebhookInputDataMicrosoftTeams) IsSet() bool {
	return v.isSet
}

func (v *NullableOutgoingWebhookInputDataMicrosoftTeams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutgoingWebhookInputDataMicrosoftTeams(val *OutgoingWebhookInputDataMicrosoftTeams) *NullableOutgoingWebhookInputDataMicrosoftTeams {
	return &NullableOutgoingWebhookInputDataMicrosoftTeams{value: val, isSet: true}
}

func (v NullableOutgoingWebhookInputDataMicrosoftTeams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutgoingWebhookInputDataMicrosoftTeams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


