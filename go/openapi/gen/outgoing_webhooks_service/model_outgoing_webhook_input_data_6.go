/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package outgoing_webhooks_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OutgoingWebhookInputData6 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutgoingWebhookInputData6{}

// OutgoingWebhookInputData6 struct for OutgoingWebhookInputData6
type OutgoingWebhookInputData6 struct {
	Jira *JiraConfig `json:"jira,omitempty"`
	Name string `json:"name"`
	Type WebhookType `json:"type"`
	Url *string `json:"url,omitempty"`
}

type _OutgoingWebhookInputData6 OutgoingWebhookInputData6

// NewOutgoingWebhookInputData6 instantiates a new OutgoingWebhookInputData6 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutgoingWebhookInputData6(name string, type_ WebhookType) *OutgoingWebhookInputData6 {
	this := OutgoingWebhookInputData6{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewOutgoingWebhookInputData6WithDefaults instantiates a new OutgoingWebhookInputData6 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutgoingWebhookInputData6WithDefaults() *OutgoingWebhookInputData6 {
	this := OutgoingWebhookInputData6{}
	return &this
}

// GetJira returns the Jira field value if set, zero value otherwise.
func (o *OutgoingWebhookInputData6) GetJira() JiraConfig {
	if o == nil || IsNil(o.Jira) {
		var ret JiraConfig
		return ret
	}
	return *o.Jira
}

// GetJiraOk returns a tuple with the Jira field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookInputData6) GetJiraOk() (*JiraConfig, bool) {
	if o == nil || IsNil(o.Jira) {
		return nil, false
	}
	return o.Jira, true
}

// HasJira returns a boolean if a field has been set.
func (o *OutgoingWebhookInputData6) HasJira() bool {
	if o != nil && !IsNil(o.Jira) {
		return true
	}

	return false
}

// SetJira gets a reference to the given JiraConfig and assigns it to the Jira field.
func (o *OutgoingWebhookInputData6) SetJira(v JiraConfig) {
	o.Jira = &v
}

// GetName returns the Name field value
func (o *OutgoingWebhookInputData6) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookInputData6) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OutgoingWebhookInputData6) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *OutgoingWebhookInputData6) GetType() WebhookType {
	if o == nil {
		var ret WebhookType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookInputData6) GetTypeOk() (*WebhookType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OutgoingWebhookInputData6) SetType(v WebhookType) {
	o.Type = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *OutgoingWebhookInputData6) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookInputData6) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *OutgoingWebhookInputData6) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *OutgoingWebhookInputData6) SetUrl(v string) {
	o.Url = &v
}

func (o OutgoingWebhookInputData6) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutgoingWebhookInputData6) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Jira) {
		toSerialize["jira"] = o.Jira
	}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

func (o *OutgoingWebhookInputData6) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutgoingWebhookInputData6 := _OutgoingWebhookInputData6{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOutgoingWebhookInputData6)

	if err != nil {
		return err
	}

	*o = OutgoingWebhookInputData6(varOutgoingWebhookInputData6)

	return err
}

type NullableOutgoingWebhookInputData6 struct {
	value *OutgoingWebhookInputData6
	isSet bool
}

func (v NullableOutgoingWebhookInputData6) Get() *OutgoingWebhookInputData6 {
	return v.value
}

func (v *NullableOutgoingWebhookInputData6) Set(val *OutgoingWebhookInputData6) {
	v.value = val
	v.isSet = true
}

func (v NullableOutgoingWebhookInputData6) IsSet() bool {
	return v.isSet
}

func (v *NullableOutgoingWebhookInputData6) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutgoingWebhookInputData6(val *OutgoingWebhookInputData6) *NullableOutgoingWebhookInputData6 {
	return &NullableOutgoingWebhookInputData6{value: val, isSet: true}
}

func (v NullableOutgoingWebhookInputData6) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutgoingWebhookInputData6) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


