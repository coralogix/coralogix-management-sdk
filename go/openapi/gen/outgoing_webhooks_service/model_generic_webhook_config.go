/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package outgoing_webhooks_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GenericWebhookConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenericWebhookConfig{}

// GenericWebhookConfig struct for GenericWebhookConfig
type GenericWebhookConfig struct {
	Headers *map[string]string `json:"headers,omitempty"`
	Method MethodType `json:"method"`
	Payload *string `json:"payload,omitempty"`
	Uuid string `json:"uuid"`
}

type _GenericWebhookConfig GenericWebhookConfig

// NewGenericWebhookConfig instantiates a new GenericWebhookConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericWebhookConfig(method MethodType, uuid string) *GenericWebhookConfig {
	this := GenericWebhookConfig{}
	this.Method = method
	this.Uuid = uuid
	return &this
}

// NewGenericWebhookConfigWithDefaults instantiates a new GenericWebhookConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericWebhookConfigWithDefaults() *GenericWebhookConfig {
	this := GenericWebhookConfig{}
	return &this
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *GenericWebhookConfig) GetHeaders() map[string]string {
	if o == nil || IsNil(o.Headers) {
		var ret map[string]string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericWebhookConfig) GetHeadersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *GenericWebhookConfig) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]string and assigns it to the Headers field.
func (o *GenericWebhookConfig) SetHeaders(v map[string]string) {
	o.Headers = &v
}

// GetMethod returns the Method field value
func (o *GenericWebhookConfig) GetMethod() MethodType {
	if o == nil {
		var ret MethodType
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *GenericWebhookConfig) GetMethodOk() (*MethodType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *GenericWebhookConfig) SetMethod(v MethodType) {
	o.Method = v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *GenericWebhookConfig) GetPayload() string {
	if o == nil || IsNil(o.Payload) {
		var ret string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericWebhookConfig) GetPayloadOk() (*string, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *GenericWebhookConfig) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given string and assigns it to the Payload field.
func (o *GenericWebhookConfig) SetPayload(v string) {
	o.Payload = &v
}

// GetUuid returns the Uuid field value
func (o *GenericWebhookConfig) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *GenericWebhookConfig) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *GenericWebhookConfig) SetUuid(v string) {
	o.Uuid = v
}

func (o GenericWebhookConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenericWebhookConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	toSerialize["method"] = o.Method
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	toSerialize["uuid"] = o.Uuid
	return toSerialize, nil
}

func (o *GenericWebhookConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"method",
		"uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGenericWebhookConfig := _GenericWebhookConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGenericWebhookConfig)

	if err != nil {
		return err
	}

	*o = GenericWebhookConfig(varGenericWebhookConfig)

	return err
}

type NullableGenericWebhookConfig struct {
	value *GenericWebhookConfig
	isSet bool
}

func (v NullableGenericWebhookConfig) Get() *GenericWebhookConfig {
	return v.value
}

func (v *NullableGenericWebhookConfig) Set(val *GenericWebhookConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericWebhookConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericWebhookConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericWebhookConfig(val *GenericWebhookConfig) *NullableGenericWebhookConfig {
	return &NullableGenericWebhookConfig{value: val, isSet: true}
}

func (v NullableGenericWebhookConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericWebhookConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


