/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package outgoing_webhooks_service

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the OutgoingWebhookSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutgoingWebhookSummary{}

// OutgoingWebhookSummary struct for OutgoingWebhookSummary
type OutgoingWebhookSummary struct {
	CreatedAt time.Time `json:"createdAt"`
	ExternalId int64 `json:"externalId"`
	Id string `json:"id"`
	Name string `json:"name"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	Url *string `json:"url,omitempty"`
}

type _OutgoingWebhookSummary OutgoingWebhookSummary

// NewOutgoingWebhookSummary instantiates a new OutgoingWebhookSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutgoingWebhookSummary(createdAt time.Time, externalId int64, id string, name string) *OutgoingWebhookSummary {
	this := OutgoingWebhookSummary{}
	this.CreatedAt = createdAt
	this.ExternalId = externalId
	this.Id = id
	this.Name = name
	return &this
}

// NewOutgoingWebhookSummaryWithDefaults instantiates a new OutgoingWebhookSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutgoingWebhookSummaryWithDefaults() *OutgoingWebhookSummary {
	this := OutgoingWebhookSummary{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *OutgoingWebhookSummary) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookSummary) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *OutgoingWebhookSummary) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetExternalId returns the ExternalId field value
func (o *OutgoingWebhookSummary) GetExternalId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookSummary) GetExternalIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *OutgoingWebhookSummary) SetExternalId(v int64) {
	o.ExternalId = v
}

// GetId returns the Id field value
func (o *OutgoingWebhookSummary) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookSummary) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OutgoingWebhookSummary) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *OutgoingWebhookSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookSummary) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OutgoingWebhookSummary) SetName(v string) {
	o.Name = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OutgoingWebhookSummary) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookSummary) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OutgoingWebhookSummary) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *OutgoingWebhookSummary) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *OutgoingWebhookSummary) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookSummary) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *OutgoingWebhookSummary) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *OutgoingWebhookSummary) SetUrl(v string) {
	o.Url = &v
}

func (o OutgoingWebhookSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutgoingWebhookSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["externalId"] = o.ExternalId
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

func (o *OutgoingWebhookSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"externalId",
		"id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutgoingWebhookSummary := _OutgoingWebhookSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOutgoingWebhookSummary)

	if err != nil {
		return err
	}

	*o = OutgoingWebhookSummary(varOutgoingWebhookSummary)

	return err
}

type NullableOutgoingWebhookSummary struct {
	value *OutgoingWebhookSummary
	isSet bool
}

func (v NullableOutgoingWebhookSummary) Get() *OutgoingWebhookSummary {
	return v.value
}

func (v *NullableOutgoingWebhookSummary) Set(val *OutgoingWebhookSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableOutgoingWebhookSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableOutgoingWebhookSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutgoingWebhookSummary(val *OutgoingWebhookSummary) *NullableOutgoingWebhookSummary {
	return &NullableOutgoingWebhookSummary{value: val, isSet: true}
}

func (v NullableOutgoingWebhookSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutgoingWebhookSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


