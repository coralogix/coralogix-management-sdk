/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package outgoing_webhooks_service

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// OutgoingWebhookInputData - struct for OutgoingWebhookInputData
type OutgoingWebhookInputData struct {
	OutgoingWebhookInputDataAwsEventBridge *OutgoingWebhookInputDataAwsEventBridge
	OutgoingWebhookInputDataDemisto *OutgoingWebhookInputDataDemisto
	OutgoingWebhookInputDataEmailGroup *OutgoingWebhookInputDataEmailGroup
	OutgoingWebhookInputDataGenericWebhook *OutgoingWebhookInputDataGenericWebhook
	OutgoingWebhookInputDataIbmEventNotifications *OutgoingWebhookInputDataIbmEventNotifications
	OutgoingWebhookInputDataJira *OutgoingWebhookInputDataJira
	OutgoingWebhookInputDataMicrosoftTeams *OutgoingWebhookInputDataMicrosoftTeams
	OutgoingWebhookInputDataMsTeamsWorkflow *OutgoingWebhookInputDataMsTeamsWorkflow
	OutgoingWebhookInputDataOpsgenie *OutgoingWebhookInputDataOpsgenie
	OutgoingWebhookInputDataPagerDuty *OutgoingWebhookInputDataPagerDuty
	OutgoingWebhookInputDataSendLog *OutgoingWebhookInputDataSendLog
	OutgoingWebhookInputDataSlack *OutgoingWebhookInputDataSlack
}

// OutgoingWebhookInputDataAwsEventBridgeAsOutgoingWebhookInputData is a convenience function that returns OutgoingWebhookInputDataAwsEventBridge wrapped in OutgoingWebhookInputData
func OutgoingWebhookInputDataAwsEventBridgeAsOutgoingWebhookInputData(v *OutgoingWebhookInputDataAwsEventBridge) OutgoingWebhookInputData {
	return OutgoingWebhookInputData{
		OutgoingWebhookInputDataAwsEventBridge: v,
	}
}

// OutgoingWebhookInputDataDemistoAsOutgoingWebhookInputData is a convenience function that returns OutgoingWebhookInputDataDemisto wrapped in OutgoingWebhookInputData
func OutgoingWebhookInputDataDemistoAsOutgoingWebhookInputData(v *OutgoingWebhookInputDataDemisto) OutgoingWebhookInputData {
	return OutgoingWebhookInputData{
		OutgoingWebhookInputDataDemisto: v,
	}
}

// OutgoingWebhookInputDataEmailGroupAsOutgoingWebhookInputData is a convenience function that returns OutgoingWebhookInputDataEmailGroup wrapped in OutgoingWebhookInputData
func OutgoingWebhookInputDataEmailGroupAsOutgoingWebhookInputData(v *OutgoingWebhookInputDataEmailGroup) OutgoingWebhookInputData {
	return OutgoingWebhookInputData{
		OutgoingWebhookInputDataEmailGroup: v,
	}
}

// OutgoingWebhookInputDataGenericWebhookAsOutgoingWebhookInputData is a convenience function that returns OutgoingWebhookInputDataGenericWebhook wrapped in OutgoingWebhookInputData
func OutgoingWebhookInputDataGenericWebhookAsOutgoingWebhookInputData(v *OutgoingWebhookInputDataGenericWebhook) OutgoingWebhookInputData {
	return OutgoingWebhookInputData{
		OutgoingWebhookInputDataGenericWebhook: v,
	}
}

// OutgoingWebhookInputDataIbmEventNotificationsAsOutgoingWebhookInputData is a convenience function that returns OutgoingWebhookInputDataIbmEventNotifications wrapped in OutgoingWebhookInputData
func OutgoingWebhookInputDataIbmEventNotificationsAsOutgoingWebhookInputData(v *OutgoingWebhookInputDataIbmEventNotifications) OutgoingWebhookInputData {
	return OutgoingWebhookInputData{
		OutgoingWebhookInputDataIbmEventNotifications: v,
	}
}

// OutgoingWebhookInputDataJiraAsOutgoingWebhookInputData is a convenience function that returns OutgoingWebhookInputDataJira wrapped in OutgoingWebhookInputData
func OutgoingWebhookInputDataJiraAsOutgoingWebhookInputData(v *OutgoingWebhookInputDataJira) OutgoingWebhookInputData {
	return OutgoingWebhookInputData{
		OutgoingWebhookInputDataJira: v,
	}
}

// OutgoingWebhookInputDataMicrosoftTeamsAsOutgoingWebhookInputData is a convenience function that returns OutgoingWebhookInputDataMicrosoftTeams wrapped in OutgoingWebhookInputData
func OutgoingWebhookInputDataMicrosoftTeamsAsOutgoingWebhookInputData(v *OutgoingWebhookInputDataMicrosoftTeams) OutgoingWebhookInputData {
	return OutgoingWebhookInputData{
		OutgoingWebhookInputDataMicrosoftTeams: v,
	}
}

// OutgoingWebhookInputDataMsTeamsWorkflowAsOutgoingWebhookInputData is a convenience function that returns OutgoingWebhookInputDataMsTeamsWorkflow wrapped in OutgoingWebhookInputData
func OutgoingWebhookInputDataMsTeamsWorkflowAsOutgoingWebhookInputData(v *OutgoingWebhookInputDataMsTeamsWorkflow) OutgoingWebhookInputData {
	return OutgoingWebhookInputData{
		OutgoingWebhookInputDataMsTeamsWorkflow: v,
	}
}

// OutgoingWebhookInputDataOpsgenieAsOutgoingWebhookInputData is a convenience function that returns OutgoingWebhookInputDataOpsgenie wrapped in OutgoingWebhookInputData
func OutgoingWebhookInputDataOpsgenieAsOutgoingWebhookInputData(v *OutgoingWebhookInputDataOpsgenie) OutgoingWebhookInputData {
	return OutgoingWebhookInputData{
		OutgoingWebhookInputDataOpsgenie: v,
	}
}

// OutgoingWebhookInputDataPagerDutyAsOutgoingWebhookInputData is a convenience function that returns OutgoingWebhookInputDataPagerDuty wrapped in OutgoingWebhookInputData
func OutgoingWebhookInputDataPagerDutyAsOutgoingWebhookInputData(v *OutgoingWebhookInputDataPagerDuty) OutgoingWebhookInputData {
	return OutgoingWebhookInputData{
		OutgoingWebhookInputDataPagerDuty: v,
	}
}

// OutgoingWebhookInputDataSendLogAsOutgoingWebhookInputData is a convenience function that returns OutgoingWebhookInputDataSendLog wrapped in OutgoingWebhookInputData
func OutgoingWebhookInputDataSendLogAsOutgoingWebhookInputData(v *OutgoingWebhookInputDataSendLog) OutgoingWebhookInputData {
	return OutgoingWebhookInputData{
		OutgoingWebhookInputDataSendLog: v,
	}
}

// OutgoingWebhookInputDataSlackAsOutgoingWebhookInputData is a convenience function that returns OutgoingWebhookInputDataSlack wrapped in OutgoingWebhookInputData
func OutgoingWebhookInputDataSlackAsOutgoingWebhookInputData(v *OutgoingWebhookInputDataSlack) OutgoingWebhookInputData {
	return OutgoingWebhookInputData{
		OutgoingWebhookInputDataSlack: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *OutgoingWebhookInputData) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into OutgoingWebhookInputDataAwsEventBridge
	err = newStrictDecoder(data).Decode(&dst.OutgoingWebhookInputDataAwsEventBridge)
	if err == nil {
		jsonOutgoingWebhookInputDataAwsEventBridge, _ := json.Marshal(dst.OutgoingWebhookInputDataAwsEventBridge)
		if string(jsonOutgoingWebhookInputDataAwsEventBridge) == "{}" { // empty struct
			dst.OutgoingWebhookInputDataAwsEventBridge = nil
		} else {
			if err = validator.Validate(dst.OutgoingWebhookInputDataAwsEventBridge); err != nil {
				dst.OutgoingWebhookInputDataAwsEventBridge = nil
			} else {
				match++
			}
		}
	} else {
		dst.OutgoingWebhookInputDataAwsEventBridge = nil
	}

	// try to unmarshal data into OutgoingWebhookInputDataDemisto
	err = newStrictDecoder(data).Decode(&dst.OutgoingWebhookInputDataDemisto)
	if err == nil {
		jsonOutgoingWebhookInputDataDemisto, _ := json.Marshal(dst.OutgoingWebhookInputDataDemisto)
		if string(jsonOutgoingWebhookInputDataDemisto) == "{}" { // empty struct
			dst.OutgoingWebhookInputDataDemisto = nil
		} else {
			if err = validator.Validate(dst.OutgoingWebhookInputDataDemisto); err != nil {
				dst.OutgoingWebhookInputDataDemisto = nil
			} else {
				match++
			}
		}
	} else {
		dst.OutgoingWebhookInputDataDemisto = nil
	}

	// try to unmarshal data into OutgoingWebhookInputDataEmailGroup
	err = newStrictDecoder(data).Decode(&dst.OutgoingWebhookInputDataEmailGroup)
	if err == nil {
		jsonOutgoingWebhookInputDataEmailGroup, _ := json.Marshal(dst.OutgoingWebhookInputDataEmailGroup)
		if string(jsonOutgoingWebhookInputDataEmailGroup) == "{}" { // empty struct
			dst.OutgoingWebhookInputDataEmailGroup = nil
		} else {
			if err = validator.Validate(dst.OutgoingWebhookInputDataEmailGroup); err != nil {
				dst.OutgoingWebhookInputDataEmailGroup = nil
			} else {
				match++
			}
		}
	} else {
		dst.OutgoingWebhookInputDataEmailGroup = nil
	}

	// try to unmarshal data into OutgoingWebhookInputDataGenericWebhook
	err = newStrictDecoder(data).Decode(&dst.OutgoingWebhookInputDataGenericWebhook)
	if err == nil {
		jsonOutgoingWebhookInputDataGenericWebhook, _ := json.Marshal(dst.OutgoingWebhookInputDataGenericWebhook)
		if string(jsonOutgoingWebhookInputDataGenericWebhook) == "{}" { // empty struct
			dst.OutgoingWebhookInputDataGenericWebhook = nil
		} else {
			if err = validator.Validate(dst.OutgoingWebhookInputDataGenericWebhook); err != nil {
				dst.OutgoingWebhookInputDataGenericWebhook = nil
			} else {
				match++
			}
		}
	} else {
		dst.OutgoingWebhookInputDataGenericWebhook = nil
	}

	// try to unmarshal data into OutgoingWebhookInputDataIbmEventNotifications
	err = newStrictDecoder(data).Decode(&dst.OutgoingWebhookInputDataIbmEventNotifications)
	if err == nil {
		jsonOutgoingWebhookInputDataIbmEventNotifications, _ := json.Marshal(dst.OutgoingWebhookInputDataIbmEventNotifications)
		if string(jsonOutgoingWebhookInputDataIbmEventNotifications) == "{}" { // empty struct
			dst.OutgoingWebhookInputDataIbmEventNotifications = nil
		} else {
			if err = validator.Validate(dst.OutgoingWebhookInputDataIbmEventNotifications); err != nil {
				dst.OutgoingWebhookInputDataIbmEventNotifications = nil
			} else {
				match++
			}
		}
	} else {
		dst.OutgoingWebhookInputDataIbmEventNotifications = nil
	}

	// try to unmarshal data into OutgoingWebhookInputDataJira
	err = newStrictDecoder(data).Decode(&dst.OutgoingWebhookInputDataJira)
	if err == nil {
		jsonOutgoingWebhookInputDataJira, _ := json.Marshal(dst.OutgoingWebhookInputDataJira)
		if string(jsonOutgoingWebhookInputDataJira) == "{}" { // empty struct
			dst.OutgoingWebhookInputDataJira = nil
		} else {
			if err = validator.Validate(dst.OutgoingWebhookInputDataJira); err != nil {
				dst.OutgoingWebhookInputDataJira = nil
			} else {
				match++
			}
		}
	} else {
		dst.OutgoingWebhookInputDataJira = nil
	}

	// try to unmarshal data into OutgoingWebhookInputDataMicrosoftTeams
	err = newStrictDecoder(data).Decode(&dst.OutgoingWebhookInputDataMicrosoftTeams)
	if err == nil {
		jsonOutgoingWebhookInputDataMicrosoftTeams, _ := json.Marshal(dst.OutgoingWebhookInputDataMicrosoftTeams)
		if string(jsonOutgoingWebhookInputDataMicrosoftTeams) == "{}" { // empty struct
			dst.OutgoingWebhookInputDataMicrosoftTeams = nil
		} else {
			if err = validator.Validate(dst.OutgoingWebhookInputDataMicrosoftTeams); err != nil {
				dst.OutgoingWebhookInputDataMicrosoftTeams = nil
			} else {
				match++
			}
		}
	} else {
		dst.OutgoingWebhookInputDataMicrosoftTeams = nil
	}

	// try to unmarshal data into OutgoingWebhookInputDataMsTeamsWorkflow
	err = newStrictDecoder(data).Decode(&dst.OutgoingWebhookInputDataMsTeamsWorkflow)
	if err == nil {
		jsonOutgoingWebhookInputDataMsTeamsWorkflow, _ := json.Marshal(dst.OutgoingWebhookInputDataMsTeamsWorkflow)
		if string(jsonOutgoingWebhookInputDataMsTeamsWorkflow) == "{}" { // empty struct
			dst.OutgoingWebhookInputDataMsTeamsWorkflow = nil
		} else {
			if err = validator.Validate(dst.OutgoingWebhookInputDataMsTeamsWorkflow); err != nil {
				dst.OutgoingWebhookInputDataMsTeamsWorkflow = nil
			} else {
				match++
			}
		}
	} else {
		dst.OutgoingWebhookInputDataMsTeamsWorkflow = nil
	}

	// try to unmarshal data into OutgoingWebhookInputDataOpsgenie
	err = newStrictDecoder(data).Decode(&dst.OutgoingWebhookInputDataOpsgenie)
	if err == nil {
		jsonOutgoingWebhookInputDataOpsgenie, _ := json.Marshal(dst.OutgoingWebhookInputDataOpsgenie)
		if string(jsonOutgoingWebhookInputDataOpsgenie) == "{}" { // empty struct
			dst.OutgoingWebhookInputDataOpsgenie = nil
		} else {
			if err = validator.Validate(dst.OutgoingWebhookInputDataOpsgenie); err != nil {
				dst.OutgoingWebhookInputDataOpsgenie = nil
			} else {
				match++
			}
		}
	} else {
		dst.OutgoingWebhookInputDataOpsgenie = nil
	}

	// try to unmarshal data into OutgoingWebhookInputDataPagerDuty
	err = newStrictDecoder(data).Decode(&dst.OutgoingWebhookInputDataPagerDuty)
	if err == nil {
		jsonOutgoingWebhookInputDataPagerDuty, _ := json.Marshal(dst.OutgoingWebhookInputDataPagerDuty)
		if string(jsonOutgoingWebhookInputDataPagerDuty) == "{}" { // empty struct
			dst.OutgoingWebhookInputDataPagerDuty = nil
		} else {
			if err = validator.Validate(dst.OutgoingWebhookInputDataPagerDuty); err != nil {
				dst.OutgoingWebhookInputDataPagerDuty = nil
			} else {
				match++
			}
		}
	} else {
		dst.OutgoingWebhookInputDataPagerDuty = nil
	}

	// try to unmarshal data into OutgoingWebhookInputDataSendLog
	err = newStrictDecoder(data).Decode(&dst.OutgoingWebhookInputDataSendLog)
	if err == nil {
		jsonOutgoingWebhookInputDataSendLog, _ := json.Marshal(dst.OutgoingWebhookInputDataSendLog)
		if string(jsonOutgoingWebhookInputDataSendLog) == "{}" { // empty struct
			dst.OutgoingWebhookInputDataSendLog = nil
		} else {
			if err = validator.Validate(dst.OutgoingWebhookInputDataSendLog); err != nil {
				dst.OutgoingWebhookInputDataSendLog = nil
			} else {
				match++
			}
		}
	} else {
		dst.OutgoingWebhookInputDataSendLog = nil
	}

	// try to unmarshal data into OutgoingWebhookInputDataSlack
	err = newStrictDecoder(data).Decode(&dst.OutgoingWebhookInputDataSlack)
	if err == nil {
		jsonOutgoingWebhookInputDataSlack, _ := json.Marshal(dst.OutgoingWebhookInputDataSlack)
		if string(jsonOutgoingWebhookInputDataSlack) == "{}" { // empty struct
			dst.OutgoingWebhookInputDataSlack = nil
		} else {
			if err = validator.Validate(dst.OutgoingWebhookInputDataSlack); err != nil {
				dst.OutgoingWebhookInputDataSlack = nil
			} else {
				match++
			}
		}
	} else {
		dst.OutgoingWebhookInputDataSlack = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.OutgoingWebhookInputDataAwsEventBridge = nil
		dst.OutgoingWebhookInputDataDemisto = nil
		dst.OutgoingWebhookInputDataEmailGroup = nil
		dst.OutgoingWebhookInputDataGenericWebhook = nil
		dst.OutgoingWebhookInputDataIbmEventNotifications = nil
		dst.OutgoingWebhookInputDataJira = nil
		dst.OutgoingWebhookInputDataMicrosoftTeams = nil
		dst.OutgoingWebhookInputDataMsTeamsWorkflow = nil
		dst.OutgoingWebhookInputDataOpsgenie = nil
		dst.OutgoingWebhookInputDataPagerDuty = nil
		dst.OutgoingWebhookInputDataSendLog = nil
		dst.OutgoingWebhookInputDataSlack = nil

		return fmt.Errorf("data matches more than one schema in oneOf(OutgoingWebhookInputData)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(OutgoingWebhookInputData)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src OutgoingWebhookInputData) MarshalJSON() ([]byte, error) {
	if src.OutgoingWebhookInputDataAwsEventBridge != nil {
		return json.Marshal(&src.OutgoingWebhookInputDataAwsEventBridge)
	}

	if src.OutgoingWebhookInputDataDemisto != nil {
		return json.Marshal(&src.OutgoingWebhookInputDataDemisto)
	}

	if src.OutgoingWebhookInputDataEmailGroup != nil {
		return json.Marshal(&src.OutgoingWebhookInputDataEmailGroup)
	}

	if src.OutgoingWebhookInputDataGenericWebhook != nil {
		return json.Marshal(&src.OutgoingWebhookInputDataGenericWebhook)
	}

	if src.OutgoingWebhookInputDataIbmEventNotifications != nil {
		return json.Marshal(&src.OutgoingWebhookInputDataIbmEventNotifications)
	}

	if src.OutgoingWebhookInputDataJira != nil {
		return json.Marshal(&src.OutgoingWebhookInputDataJira)
	}

	if src.OutgoingWebhookInputDataMicrosoftTeams != nil {
		return json.Marshal(&src.OutgoingWebhookInputDataMicrosoftTeams)
	}

	if src.OutgoingWebhookInputDataMsTeamsWorkflow != nil {
		return json.Marshal(&src.OutgoingWebhookInputDataMsTeamsWorkflow)
	}

	if src.OutgoingWebhookInputDataOpsgenie != nil {
		return json.Marshal(&src.OutgoingWebhookInputDataOpsgenie)
	}

	if src.OutgoingWebhookInputDataPagerDuty != nil {
		return json.Marshal(&src.OutgoingWebhookInputDataPagerDuty)
	}

	if src.OutgoingWebhookInputDataSendLog != nil {
		return json.Marshal(&src.OutgoingWebhookInputDataSendLog)
	}

	if src.OutgoingWebhookInputDataSlack != nil {
		return json.Marshal(&src.OutgoingWebhookInputDataSlack)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *OutgoingWebhookInputData) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.OutgoingWebhookInputDataAwsEventBridge != nil {
		return obj.OutgoingWebhookInputDataAwsEventBridge
	}

	if obj.OutgoingWebhookInputDataDemisto != nil {
		return obj.OutgoingWebhookInputDataDemisto
	}

	if obj.OutgoingWebhookInputDataEmailGroup != nil {
		return obj.OutgoingWebhookInputDataEmailGroup
	}

	if obj.OutgoingWebhookInputDataGenericWebhook != nil {
		return obj.OutgoingWebhookInputDataGenericWebhook
	}

	if obj.OutgoingWebhookInputDataIbmEventNotifications != nil {
		return obj.OutgoingWebhookInputDataIbmEventNotifications
	}

	if obj.OutgoingWebhookInputDataJira != nil {
		return obj.OutgoingWebhookInputDataJira
	}

	if obj.OutgoingWebhookInputDataMicrosoftTeams != nil {
		return obj.OutgoingWebhookInputDataMicrosoftTeams
	}

	if obj.OutgoingWebhookInputDataMsTeamsWorkflow != nil {
		return obj.OutgoingWebhookInputDataMsTeamsWorkflow
	}

	if obj.OutgoingWebhookInputDataOpsgenie != nil {
		return obj.OutgoingWebhookInputDataOpsgenie
	}

	if obj.OutgoingWebhookInputDataPagerDuty != nil {
		return obj.OutgoingWebhookInputDataPagerDuty
	}

	if obj.OutgoingWebhookInputDataSendLog != nil {
		return obj.OutgoingWebhookInputDataSendLog
	}

	if obj.OutgoingWebhookInputDataSlack != nil {
		return obj.OutgoingWebhookInputDataSlack
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj OutgoingWebhookInputData) GetActualInstanceValue() (interface{}) {
	if obj.OutgoingWebhookInputDataAwsEventBridge != nil {
		return *obj.OutgoingWebhookInputDataAwsEventBridge
	}

	if obj.OutgoingWebhookInputDataDemisto != nil {
		return *obj.OutgoingWebhookInputDataDemisto
	}

	if obj.OutgoingWebhookInputDataEmailGroup != nil {
		return *obj.OutgoingWebhookInputDataEmailGroup
	}

	if obj.OutgoingWebhookInputDataGenericWebhook != nil {
		return *obj.OutgoingWebhookInputDataGenericWebhook
	}

	if obj.OutgoingWebhookInputDataIbmEventNotifications != nil {
		return *obj.OutgoingWebhookInputDataIbmEventNotifications
	}

	if obj.OutgoingWebhookInputDataJira != nil {
		return *obj.OutgoingWebhookInputDataJira
	}

	if obj.OutgoingWebhookInputDataMicrosoftTeams != nil {
		return *obj.OutgoingWebhookInputDataMicrosoftTeams
	}

	if obj.OutgoingWebhookInputDataMsTeamsWorkflow != nil {
		return *obj.OutgoingWebhookInputDataMsTeamsWorkflow
	}

	if obj.OutgoingWebhookInputDataOpsgenie != nil {
		return *obj.OutgoingWebhookInputDataOpsgenie
	}

	if obj.OutgoingWebhookInputDataPagerDuty != nil {
		return *obj.OutgoingWebhookInputDataPagerDuty
	}

	if obj.OutgoingWebhookInputDataSendLog != nil {
		return *obj.OutgoingWebhookInputDataSendLog
	}

	if obj.OutgoingWebhookInputDataSlack != nil {
		return *obj.OutgoingWebhookInputDataSlack
	}

	// all schemas are nil
	return nil
}

type NullableOutgoingWebhookInputData struct {
	value *OutgoingWebhookInputData
	isSet bool
}

func (v NullableOutgoingWebhookInputData) Get() *OutgoingWebhookInputData {
	return v.value
}

func (v *NullableOutgoingWebhookInputData) Set(val *OutgoingWebhookInputData) {
	v.value = val
	v.isSet = true
}

func (v NullableOutgoingWebhookInputData) IsSet() bool {
	return v.isSet
}

func (v *NullableOutgoingWebhookInputData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutgoingWebhookInputData(val *OutgoingWebhookInputData) *NullableOutgoingWebhookInputData {
	return &NullableOutgoingWebhookInputData{value: val, isSet: true}
}

func (v NullableOutgoingWebhookInputData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutgoingWebhookInputData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


