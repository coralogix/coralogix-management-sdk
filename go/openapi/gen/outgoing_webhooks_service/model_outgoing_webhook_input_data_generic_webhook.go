/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package outgoing_webhooks_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OutgoingWebhookInputDataGenericWebhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutgoingWebhookInputDataGenericWebhook{}

// OutgoingWebhookInputDataGenericWebhook struct for OutgoingWebhookInputDataGenericWebhook
type OutgoingWebhookInputDataGenericWebhook struct {
	GenericWebhook *GenericWebhookConfig `json:"genericWebhook,omitempty"`
	Name string `json:"name"`
	Type WebhookType `json:"type"`
	Url *string `json:"url,omitempty"`
}

type _OutgoingWebhookInputDataGenericWebhook OutgoingWebhookInputDataGenericWebhook

// NewOutgoingWebhookInputDataGenericWebhook instantiates a new OutgoingWebhookInputDataGenericWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutgoingWebhookInputDataGenericWebhook(name string, type_ WebhookType) *OutgoingWebhookInputDataGenericWebhook {
	this := OutgoingWebhookInputDataGenericWebhook{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewOutgoingWebhookInputDataGenericWebhookWithDefaults instantiates a new OutgoingWebhookInputDataGenericWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutgoingWebhookInputDataGenericWebhookWithDefaults() *OutgoingWebhookInputDataGenericWebhook {
	this := OutgoingWebhookInputDataGenericWebhook{}
	return &this
}

// GetGenericWebhook returns the GenericWebhook field value if set, zero value otherwise.
func (o *OutgoingWebhookInputDataGenericWebhook) GetGenericWebhook() GenericWebhookConfig {
	if o == nil || IsNil(o.GenericWebhook) {
		var ret GenericWebhookConfig
		return ret
	}
	return *o.GenericWebhook
}

// GetGenericWebhookOk returns a tuple with the GenericWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookInputDataGenericWebhook) GetGenericWebhookOk() (*GenericWebhookConfig, bool) {
	if o == nil || IsNil(o.GenericWebhook) {
		return nil, false
	}
	return o.GenericWebhook, true
}

// HasGenericWebhook returns a boolean if a field has been set.
func (o *OutgoingWebhookInputDataGenericWebhook) HasGenericWebhook() bool {
	if o != nil && !IsNil(o.GenericWebhook) {
		return true
	}

	return false
}

// SetGenericWebhook gets a reference to the given GenericWebhookConfig and assigns it to the GenericWebhook field.
func (o *OutgoingWebhookInputDataGenericWebhook) SetGenericWebhook(v GenericWebhookConfig) {
	o.GenericWebhook = &v
}

// GetName returns the Name field value
func (o *OutgoingWebhookInputDataGenericWebhook) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookInputDataGenericWebhook) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OutgoingWebhookInputDataGenericWebhook) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *OutgoingWebhookInputDataGenericWebhook) GetType() WebhookType {
	if o == nil {
		var ret WebhookType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookInputDataGenericWebhook) GetTypeOk() (*WebhookType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OutgoingWebhookInputDataGenericWebhook) SetType(v WebhookType) {
	o.Type = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *OutgoingWebhookInputDataGenericWebhook) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookInputDataGenericWebhook) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *OutgoingWebhookInputDataGenericWebhook) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *OutgoingWebhookInputDataGenericWebhook) SetUrl(v string) {
	o.Url = &v
}

func (o OutgoingWebhookInputDataGenericWebhook) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutgoingWebhookInputDataGenericWebhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GenericWebhook) {
		toSerialize["genericWebhook"] = o.GenericWebhook
	}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

func (o *OutgoingWebhookInputDataGenericWebhook) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutgoingWebhookInputDataGenericWebhook := _OutgoingWebhookInputDataGenericWebhook{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOutgoingWebhookInputDataGenericWebhook)

	if err != nil {
		return err
	}

	*o = OutgoingWebhookInputDataGenericWebhook(varOutgoingWebhookInputDataGenericWebhook)

	return err
}

type NullableOutgoingWebhookInputDataGenericWebhook struct {
	value *OutgoingWebhookInputDataGenericWebhook
	isSet bool
}

func (v NullableOutgoingWebhookInputDataGenericWebhook) Get() *OutgoingWebhookInputDataGenericWebhook {
	return v.value
}

func (v *NullableOutgoingWebhookInputDataGenericWebhook) Set(val *OutgoingWebhookInputDataGenericWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableOutgoingWebhookInputDataGenericWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableOutgoingWebhookInputDataGenericWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutgoingWebhookInputDataGenericWebhook(val *OutgoingWebhookInputDataGenericWebhook) *NullableOutgoingWebhookInputDataGenericWebhook {
	return &NullableOutgoingWebhookInputDataGenericWebhook{value: val, isSet: true}
}

func (v NullableOutgoingWebhookInputDataGenericWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutgoingWebhookInputDataGenericWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


