/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package outgoing_webhooks_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TestOutgoingWebhookResponseFailure type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestOutgoingWebhookResponseFailure{}

// TestOutgoingWebhookResponseFailure struct for TestOutgoingWebhookResponseFailure
type TestOutgoingWebhookResponseFailure struct {
	DisplayMessage string `json:"displayMessage"`
	ErrorMessage string `json:"errorMessage"`
	StatusCode *int64 `json:"statusCode,omitempty"`
}

type _TestOutgoingWebhookResponseFailure TestOutgoingWebhookResponseFailure

// NewTestOutgoingWebhookResponseFailure instantiates a new TestOutgoingWebhookResponseFailure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestOutgoingWebhookResponseFailure(displayMessage string, errorMessage string) *TestOutgoingWebhookResponseFailure {
	this := TestOutgoingWebhookResponseFailure{}
	this.DisplayMessage = displayMessage
	this.ErrorMessage = errorMessage
	return &this
}

// NewTestOutgoingWebhookResponseFailureWithDefaults instantiates a new TestOutgoingWebhookResponseFailure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestOutgoingWebhookResponseFailureWithDefaults() *TestOutgoingWebhookResponseFailure {
	this := TestOutgoingWebhookResponseFailure{}
	return &this
}

// GetDisplayMessage returns the DisplayMessage field value
func (o *TestOutgoingWebhookResponseFailure) GetDisplayMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayMessage
}

// GetDisplayMessageOk returns a tuple with the DisplayMessage field value
// and a boolean to check if the value has been set.
func (o *TestOutgoingWebhookResponseFailure) GetDisplayMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayMessage, true
}

// SetDisplayMessage sets field value
func (o *TestOutgoingWebhookResponseFailure) SetDisplayMessage(v string) {
	o.DisplayMessage = v
}

// GetErrorMessage returns the ErrorMessage field value
func (o *TestOutgoingWebhookResponseFailure) GetErrorMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value
// and a boolean to check if the value has been set.
func (o *TestOutgoingWebhookResponseFailure) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorMessage, true
}

// SetErrorMessage sets field value
func (o *TestOutgoingWebhookResponseFailure) SetErrorMessage(v string) {
	o.ErrorMessage = v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *TestOutgoingWebhookResponseFailure) GetStatusCode() int64 {
	if o == nil || IsNil(o.StatusCode) {
		var ret int64
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestOutgoingWebhookResponseFailure) GetStatusCodeOk() (*int64, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *TestOutgoingWebhookResponseFailure) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int64 and assigns it to the StatusCode field.
func (o *TestOutgoingWebhookResponseFailure) SetStatusCode(v int64) {
	o.StatusCode = &v
}

func (o TestOutgoingWebhookResponseFailure) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestOutgoingWebhookResponseFailure) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["displayMessage"] = o.DisplayMessage
	toSerialize["errorMessage"] = o.ErrorMessage
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	return toSerialize, nil
}

func (o *TestOutgoingWebhookResponseFailure) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"displayMessage",
		"errorMessage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestOutgoingWebhookResponseFailure := _TestOutgoingWebhookResponseFailure{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestOutgoingWebhookResponseFailure)

	if err != nil {
		return err
	}

	*o = TestOutgoingWebhookResponseFailure(varTestOutgoingWebhookResponseFailure)

	return err
}

type NullableTestOutgoingWebhookResponseFailure struct {
	value *TestOutgoingWebhookResponseFailure
	isSet bool
}

func (v NullableTestOutgoingWebhookResponseFailure) Get() *TestOutgoingWebhookResponseFailure {
	return v.value
}

func (v *NullableTestOutgoingWebhookResponseFailure) Set(val *TestOutgoingWebhookResponseFailure) {
	v.value = val
	v.isSet = true
}

func (v NullableTestOutgoingWebhookResponseFailure) IsSet() bool {
	return v.isSet
}

func (v *NullableTestOutgoingWebhookResponseFailure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestOutgoingWebhookResponseFailure(val *TestOutgoingWebhookResponseFailure) *NullableTestOutgoingWebhookResponseFailure {
	return &NullableTestOutgoingWebhookResponseFailure{value: val, isSet: true}
}

func (v NullableTestOutgoingWebhookResponseFailure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestOutgoingWebhookResponseFailure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


