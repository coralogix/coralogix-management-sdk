/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package outgoing_webhooks_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OutgoingWebhookDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutgoingWebhookDetails{}

// OutgoingWebhookDetails struct for OutgoingWebhookDetails
type OutgoingWebhookDetails struct {
	Label string `json:"label"`
	Type WebhookType `json:"type"`
}

type _OutgoingWebhookDetails OutgoingWebhookDetails

// NewOutgoingWebhookDetails instantiates a new OutgoingWebhookDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutgoingWebhookDetails(label string, type_ WebhookType) *OutgoingWebhookDetails {
	this := OutgoingWebhookDetails{}
	this.Label = label
	this.Type = type_
	return &this
}

// NewOutgoingWebhookDetailsWithDefaults instantiates a new OutgoingWebhookDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutgoingWebhookDetailsWithDefaults() *OutgoingWebhookDetails {
	this := OutgoingWebhookDetails{}
	return &this
}

// GetLabel returns the Label field value
func (o *OutgoingWebhookDetails) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookDetails) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *OutgoingWebhookDetails) SetLabel(v string) {
	o.Label = v
}

// GetType returns the Type field value
func (o *OutgoingWebhookDetails) GetType() WebhookType {
	if o == nil {
		var ret WebhookType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OutgoingWebhookDetails) GetTypeOk() (*WebhookType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OutgoingWebhookDetails) SetType(v WebhookType) {
	o.Type = v
}

func (o OutgoingWebhookDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutgoingWebhookDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["label"] = o.Label
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *OutgoingWebhookDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutgoingWebhookDetails := _OutgoingWebhookDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOutgoingWebhookDetails)

	if err != nil {
		return err
	}

	*o = OutgoingWebhookDetails(varOutgoingWebhookDetails)

	return err
}

type NullableOutgoingWebhookDetails struct {
	value *OutgoingWebhookDetails
	isSet bool
}

func (v NullableOutgoingWebhookDetails) Get() *OutgoingWebhookDetails {
	return v.value
}

func (v *NullableOutgoingWebhookDetails) Set(val *OutgoingWebhookDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableOutgoingWebhookDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableOutgoingWebhookDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutgoingWebhookDetails(val *OutgoingWebhookDetails) *NullableOutgoingWebhookDetails {
	return &NullableOutgoingWebhookDetails{value: val, isSet: true}
}

func (v NullableOutgoingWebhookDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutgoingWebhookDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


