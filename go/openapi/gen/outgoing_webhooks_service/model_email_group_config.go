/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package outgoing_webhooks_service

import (
	"encoding/json"
)

// checks if the EmailGroupConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailGroupConfig{}

// EmailGroupConfig struct for EmailGroupConfig
type EmailGroupConfig struct {
	EmailAddresses []string `json:"emailAddresses,omitempty"`
}

// NewEmailGroupConfig instantiates a new EmailGroupConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailGroupConfig() *EmailGroupConfig {
	this := EmailGroupConfig{}
	return &this
}

// NewEmailGroupConfigWithDefaults instantiates a new EmailGroupConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailGroupConfigWithDefaults() *EmailGroupConfig {
	this := EmailGroupConfig{}
	return &this
}

// GetEmailAddresses returns the EmailAddresses field value if set, zero value otherwise.
func (o *EmailGroupConfig) GetEmailAddresses() []string {
	if o == nil || IsNil(o.EmailAddresses) {
		var ret []string
		return ret
	}
	return o.EmailAddresses
}

// GetEmailAddressesOk returns a tuple with the EmailAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailGroupConfig) GetEmailAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.EmailAddresses) {
		return nil, false
	}
	return o.EmailAddresses, true
}

// HasEmailAddresses returns a boolean if a field has been set.
func (o *EmailGroupConfig) HasEmailAddresses() bool {
	if o != nil && !IsNil(o.EmailAddresses) {
		return true
	}

	return false
}

// SetEmailAddresses gets a reference to the given []string and assigns it to the EmailAddresses field.
func (o *EmailGroupConfig) SetEmailAddresses(v []string) {
	o.EmailAddresses = v
}

func (o EmailGroupConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailGroupConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EmailAddresses) {
		toSerialize["emailAddresses"] = o.EmailAddresses
	}
	return toSerialize, nil
}

type NullableEmailGroupConfig struct {
	value *EmailGroupConfig
	isSet bool
}

func (v NullableEmailGroupConfig) Get() *EmailGroupConfig {
	return v.value
}

func (v *NullableEmailGroupConfig) Set(val *EmailGroupConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailGroupConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailGroupConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailGroupConfig(val *EmailGroupConfig) *NullableEmailGroupConfig {
	return &NullableEmailGroupConfig{value: val, isSet: true}
}

func (v NullableEmailGroupConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailGroupConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


