/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events2metrics_service

import (
	"encoding/json"
)

// checks if the V2LogsQuery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2LogsQuery{}

// V2LogsQuery This data structure represents a query for logs.
type V2LogsQuery struct {
	Alias *string `json:"alias,omitempty"`
	ApplicationnameFilters []string `json:"applicationnameFilters,omitempty"`
	Lucene *string `json:"lucene,omitempty"`
	SeverityFilters []Logs2metricsV2Severity `json:"severityFilters,omitempty"`
	SubsystemnameFilters []string `json:"subsystemnameFilters,omitempty"`
}

// NewV2LogsQuery instantiates a new V2LogsQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2LogsQuery() *V2LogsQuery {
	this := V2LogsQuery{}
	return &this
}

// NewV2LogsQueryWithDefaults instantiates a new V2LogsQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2LogsQueryWithDefaults() *V2LogsQuery {
	this := V2LogsQuery{}
	return &this
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *V2LogsQuery) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2LogsQuery) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *V2LogsQuery) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *V2LogsQuery) SetAlias(v string) {
	o.Alias = &v
}

// GetApplicationnameFilters returns the ApplicationnameFilters field value if set, zero value otherwise.
func (o *V2LogsQuery) GetApplicationnameFilters() []string {
	if o == nil || IsNil(o.ApplicationnameFilters) {
		var ret []string
		return ret
	}
	return o.ApplicationnameFilters
}

// GetApplicationnameFiltersOk returns a tuple with the ApplicationnameFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2LogsQuery) GetApplicationnameFiltersOk() ([]string, bool) {
	if o == nil || IsNil(o.ApplicationnameFilters) {
		return nil, false
	}
	return o.ApplicationnameFilters, true
}

// HasApplicationnameFilters returns a boolean if a field has been set.
func (o *V2LogsQuery) HasApplicationnameFilters() bool {
	if o != nil && !IsNil(o.ApplicationnameFilters) {
		return true
	}

	return false
}

// SetApplicationnameFilters gets a reference to the given []string and assigns it to the ApplicationnameFilters field.
func (o *V2LogsQuery) SetApplicationnameFilters(v []string) {
	o.ApplicationnameFilters = v
}

// GetLucene returns the Lucene field value if set, zero value otherwise.
func (o *V2LogsQuery) GetLucene() string {
	if o == nil || IsNil(o.Lucene) {
		var ret string
		return ret
	}
	return *o.Lucene
}

// GetLuceneOk returns a tuple with the Lucene field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2LogsQuery) GetLuceneOk() (*string, bool) {
	if o == nil || IsNil(o.Lucene) {
		return nil, false
	}
	return o.Lucene, true
}

// HasLucene returns a boolean if a field has been set.
func (o *V2LogsQuery) HasLucene() bool {
	if o != nil && !IsNil(o.Lucene) {
		return true
	}

	return false
}

// SetLucene gets a reference to the given string and assigns it to the Lucene field.
func (o *V2LogsQuery) SetLucene(v string) {
	o.Lucene = &v
}

// GetSeverityFilters returns the SeverityFilters field value if set, zero value otherwise.
func (o *V2LogsQuery) GetSeverityFilters() []Logs2metricsV2Severity {
	if o == nil || IsNil(o.SeverityFilters) {
		var ret []Logs2metricsV2Severity
		return ret
	}
	return o.SeverityFilters
}

// GetSeverityFiltersOk returns a tuple with the SeverityFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2LogsQuery) GetSeverityFiltersOk() ([]Logs2metricsV2Severity, bool) {
	if o == nil || IsNil(o.SeverityFilters) {
		return nil, false
	}
	return o.SeverityFilters, true
}

// HasSeverityFilters returns a boolean if a field has been set.
func (o *V2LogsQuery) HasSeverityFilters() bool {
	if o != nil && !IsNil(o.SeverityFilters) {
		return true
	}

	return false
}

// SetSeverityFilters gets a reference to the given []Logs2metricsV2Severity and assigns it to the SeverityFilters field.
func (o *V2LogsQuery) SetSeverityFilters(v []Logs2metricsV2Severity) {
	o.SeverityFilters = v
}

// GetSubsystemnameFilters returns the SubsystemnameFilters field value if set, zero value otherwise.
func (o *V2LogsQuery) GetSubsystemnameFilters() []string {
	if o == nil || IsNil(o.SubsystemnameFilters) {
		var ret []string
		return ret
	}
	return o.SubsystemnameFilters
}

// GetSubsystemnameFiltersOk returns a tuple with the SubsystemnameFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2LogsQuery) GetSubsystemnameFiltersOk() ([]string, bool) {
	if o == nil || IsNil(o.SubsystemnameFilters) {
		return nil, false
	}
	return o.SubsystemnameFilters, true
}

// HasSubsystemnameFilters returns a boolean if a field has been set.
func (o *V2LogsQuery) HasSubsystemnameFilters() bool {
	if o != nil && !IsNil(o.SubsystemnameFilters) {
		return true
	}

	return false
}

// SetSubsystemnameFilters gets a reference to the given []string and assigns it to the SubsystemnameFilters field.
func (o *V2LogsQuery) SetSubsystemnameFilters(v []string) {
	o.SubsystemnameFilters = v
}

func (o V2LogsQuery) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2LogsQuery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !IsNil(o.ApplicationnameFilters) {
		toSerialize["applicationnameFilters"] = o.ApplicationnameFilters
	}
	if !IsNil(o.Lucene) {
		toSerialize["lucene"] = o.Lucene
	}
	if !IsNil(o.SeverityFilters) {
		toSerialize["severityFilters"] = o.SeverityFilters
	}
	if !IsNil(o.SubsystemnameFilters) {
		toSerialize["subsystemnameFilters"] = o.SubsystemnameFilters
	}
	return toSerialize, nil
}

type NullableV2LogsQuery struct {
	value *V2LogsQuery
	isSet bool
}

func (v NullableV2LogsQuery) Get() *V2LogsQuery {
	return v.value
}

func (v *NullableV2LogsQuery) Set(val *V2LogsQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableV2LogsQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableV2LogsQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2LogsQuery(val *V2LogsQuery) *NullableV2LogsQuery {
	return &NullableV2LogsQuery{value: val, isSet: true}
}

func (v NullableV2LogsQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2LogsQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


