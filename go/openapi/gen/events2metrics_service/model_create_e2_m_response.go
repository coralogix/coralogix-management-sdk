/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events2metrics_service

import (
	"encoding/json"
)

// checks if the CreateE2MResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateE2MResponse{}

// CreateE2MResponse struct for CreateE2MResponse
type CreateE2MResponse struct {
	E2m *E2M `json:"e2m,omitempty"`
}

// NewCreateE2MResponse instantiates a new CreateE2MResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateE2MResponse() *CreateE2MResponse {
	this := CreateE2MResponse{}
	return &this
}

// NewCreateE2MResponseWithDefaults instantiates a new CreateE2MResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateE2MResponseWithDefaults() *CreateE2MResponse {
	this := CreateE2MResponse{}
	return &this
}

// GetE2m returns the E2m field value if set, zero value otherwise.
func (o *CreateE2MResponse) GetE2m() E2M {
	if o == nil || IsNil(o.E2m) {
		var ret E2M
		return ret
	}
	return *o.E2m
}

// GetE2mOk returns a tuple with the E2m field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateE2MResponse) GetE2mOk() (*E2M, bool) {
	if o == nil || IsNil(o.E2m) {
		return nil, false
	}
	return o.E2m, true
}

// HasE2m returns a boolean if a field has been set.
func (o *CreateE2MResponse) HasE2m() bool {
	if o != nil && !IsNil(o.E2m) {
		return true
	}

	return false
}

// SetE2m gets a reference to the given E2M and assigns it to the E2m field.
func (o *CreateE2MResponse) SetE2m(v E2M) {
	o.E2m = &v
}

func (o CreateE2MResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateE2MResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.E2m) {
		toSerialize["e2m"] = o.E2m
	}
	return toSerialize, nil
}

type NullableCreateE2MResponse struct {
	value *CreateE2MResponse
	isSet bool
}

func (v NullableCreateE2MResponse) Get() *CreateE2MResponse {
	return v.value
}

func (v *NullableCreateE2MResponse) Set(val *CreateE2MResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateE2MResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateE2MResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateE2MResponse(val *CreateE2MResponse) *NullableCreateE2MResponse {
	return &NullableCreateE2MResponse{value: val, isSet: true}
}

func (v NullableCreateE2MResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateE2MResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


