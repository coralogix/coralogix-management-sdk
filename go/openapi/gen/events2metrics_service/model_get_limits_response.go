/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events2metrics_service

import (
	"encoding/json"
)

// checks if the GetLimitsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLimitsResponse{}

// GetLimitsResponse struct for GetLimitsResponse
type GetLimitsResponse struct {
	CompanyId *string `json:"companyId,omitempty"`
	LabelsLimit *int32 `json:"labelsLimit,omitempty"`
	MetricsLimit *LimitUsage `json:"metricsLimit,omitempty"`
	PermutationsLimit *LimitUsage `json:"permutationsLimit,omitempty"`
}

// NewGetLimitsResponse instantiates a new GetLimitsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLimitsResponse() *GetLimitsResponse {
	this := GetLimitsResponse{}
	return &this
}

// NewGetLimitsResponseWithDefaults instantiates a new GetLimitsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLimitsResponseWithDefaults() *GetLimitsResponse {
	this := GetLimitsResponse{}
	return &this
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *GetLimitsResponse) GetCompanyId() string {
	if o == nil || IsNil(o.CompanyId) {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLimitsResponse) GetCompanyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *GetLimitsResponse) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *GetLimitsResponse) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetLabelsLimit returns the LabelsLimit field value if set, zero value otherwise.
func (o *GetLimitsResponse) GetLabelsLimit() int32 {
	if o == nil || IsNil(o.LabelsLimit) {
		var ret int32
		return ret
	}
	return *o.LabelsLimit
}

// GetLabelsLimitOk returns a tuple with the LabelsLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLimitsResponse) GetLabelsLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.LabelsLimit) {
		return nil, false
	}
	return o.LabelsLimit, true
}

// HasLabelsLimit returns a boolean if a field has been set.
func (o *GetLimitsResponse) HasLabelsLimit() bool {
	if o != nil && !IsNil(o.LabelsLimit) {
		return true
	}

	return false
}

// SetLabelsLimit gets a reference to the given int32 and assigns it to the LabelsLimit field.
func (o *GetLimitsResponse) SetLabelsLimit(v int32) {
	o.LabelsLimit = &v
}

// GetMetricsLimit returns the MetricsLimit field value if set, zero value otherwise.
func (o *GetLimitsResponse) GetMetricsLimit() LimitUsage {
	if o == nil || IsNil(o.MetricsLimit) {
		var ret LimitUsage
		return ret
	}
	return *o.MetricsLimit
}

// GetMetricsLimitOk returns a tuple with the MetricsLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLimitsResponse) GetMetricsLimitOk() (*LimitUsage, bool) {
	if o == nil || IsNil(o.MetricsLimit) {
		return nil, false
	}
	return o.MetricsLimit, true
}

// HasMetricsLimit returns a boolean if a field has been set.
func (o *GetLimitsResponse) HasMetricsLimit() bool {
	if o != nil && !IsNil(o.MetricsLimit) {
		return true
	}

	return false
}

// SetMetricsLimit gets a reference to the given LimitUsage and assigns it to the MetricsLimit field.
func (o *GetLimitsResponse) SetMetricsLimit(v LimitUsage) {
	o.MetricsLimit = &v
}

// GetPermutationsLimit returns the PermutationsLimit field value if set, zero value otherwise.
func (o *GetLimitsResponse) GetPermutationsLimit() LimitUsage {
	if o == nil || IsNil(o.PermutationsLimit) {
		var ret LimitUsage
		return ret
	}
	return *o.PermutationsLimit
}

// GetPermutationsLimitOk returns a tuple with the PermutationsLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLimitsResponse) GetPermutationsLimitOk() (*LimitUsage, bool) {
	if o == nil || IsNil(o.PermutationsLimit) {
		return nil, false
	}
	return o.PermutationsLimit, true
}

// HasPermutationsLimit returns a boolean if a field has been set.
func (o *GetLimitsResponse) HasPermutationsLimit() bool {
	if o != nil && !IsNil(o.PermutationsLimit) {
		return true
	}

	return false
}

// SetPermutationsLimit gets a reference to the given LimitUsage and assigns it to the PermutationsLimit field.
func (o *GetLimitsResponse) SetPermutationsLimit(v LimitUsage) {
	o.PermutationsLimit = &v
}

func (o GetLimitsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLimitsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	if !IsNil(o.LabelsLimit) {
		toSerialize["labelsLimit"] = o.LabelsLimit
	}
	if !IsNil(o.MetricsLimit) {
		toSerialize["metricsLimit"] = o.MetricsLimit
	}
	if !IsNil(o.PermutationsLimit) {
		toSerialize["permutationsLimit"] = o.PermutationsLimit
	}
	return toSerialize, nil
}

type NullableGetLimitsResponse struct {
	value *GetLimitsResponse
	isSet bool
}

func (v NullableGetLimitsResponse) Get() *GetLimitsResponse {
	return v.value
}

func (v *NullableGetLimitsResponse) Set(val *GetLimitsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLimitsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLimitsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLimitsResponse(val *GetLimitsResponse) *NullableGetLimitsResponse {
	return &NullableGetLimitsResponse{value: val, isSet: true}
}

func (v NullableGetLimitsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLimitsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


