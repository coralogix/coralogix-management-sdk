/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events2metrics_service

import (
	"encoding/json"
)

// checks if the LabelsPermutationsCardinalityDay type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LabelsPermutationsCardinalityDay{}

// LabelsPermutationsCardinalityDay struct for LabelsPermutationsCardinalityDay
type LabelsPermutationsCardinalityDay struct {
	Day *string `json:"day,omitempty"`
	Permutations *int32 `json:"permutations,omitempty"`
}

// NewLabelsPermutationsCardinalityDay instantiates a new LabelsPermutationsCardinalityDay object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLabelsPermutationsCardinalityDay() *LabelsPermutationsCardinalityDay {
	this := LabelsPermutationsCardinalityDay{}
	return &this
}

// NewLabelsPermutationsCardinalityDayWithDefaults instantiates a new LabelsPermutationsCardinalityDay object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLabelsPermutationsCardinalityDayWithDefaults() *LabelsPermutationsCardinalityDay {
	this := LabelsPermutationsCardinalityDay{}
	return &this
}

// GetDay returns the Day field value if set, zero value otherwise.
func (o *LabelsPermutationsCardinalityDay) GetDay() string {
	if o == nil || IsNil(o.Day) {
		var ret string
		return ret
	}
	return *o.Day
}

// GetDayOk returns a tuple with the Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelsPermutationsCardinalityDay) GetDayOk() (*string, bool) {
	if o == nil || IsNil(o.Day) {
		return nil, false
	}
	return o.Day, true
}

// HasDay returns a boolean if a field has been set.
func (o *LabelsPermutationsCardinalityDay) HasDay() bool {
	if o != nil && !IsNil(o.Day) {
		return true
	}

	return false
}

// SetDay gets a reference to the given string and assigns it to the Day field.
func (o *LabelsPermutationsCardinalityDay) SetDay(v string) {
	o.Day = &v
}

// GetPermutations returns the Permutations field value if set, zero value otherwise.
func (o *LabelsPermutationsCardinalityDay) GetPermutations() int32 {
	if o == nil || IsNil(o.Permutations) {
		var ret int32
		return ret
	}
	return *o.Permutations
}

// GetPermutationsOk returns a tuple with the Permutations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LabelsPermutationsCardinalityDay) GetPermutationsOk() (*int32, bool) {
	if o == nil || IsNil(o.Permutations) {
		return nil, false
	}
	return o.Permutations, true
}

// HasPermutations returns a boolean if a field has been set.
func (o *LabelsPermutationsCardinalityDay) HasPermutations() bool {
	if o != nil && !IsNil(o.Permutations) {
		return true
	}

	return false
}

// SetPermutations gets a reference to the given int32 and assigns it to the Permutations field.
func (o *LabelsPermutationsCardinalityDay) SetPermutations(v int32) {
	o.Permutations = &v
}

func (o LabelsPermutationsCardinalityDay) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LabelsPermutationsCardinalityDay) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Day) {
		toSerialize["day"] = o.Day
	}
	if !IsNil(o.Permutations) {
		toSerialize["permutations"] = o.Permutations
	}
	return toSerialize, nil
}

type NullableLabelsPermutationsCardinalityDay struct {
	value *LabelsPermutationsCardinalityDay
	isSet bool
}

func (v NullableLabelsPermutationsCardinalityDay) Get() *LabelsPermutationsCardinalityDay {
	return v.value
}

func (v *NullableLabelsPermutationsCardinalityDay) Set(val *LabelsPermutationsCardinalityDay) {
	v.value = val
	v.isSet = true
}

func (v NullableLabelsPermutationsCardinalityDay) IsSet() bool {
	return v.isSet
}

func (v *NullableLabelsPermutationsCardinalityDay) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLabelsPermutationsCardinalityDay(val *LabelsPermutationsCardinalityDay) *NullableLabelsPermutationsCardinalityDay {
	return &NullableLabelsPermutationsCardinalityDay{value: val, isSet: true}
}

func (v NullableLabelsPermutationsCardinalityDay) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLabelsPermutationsCardinalityDay) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


