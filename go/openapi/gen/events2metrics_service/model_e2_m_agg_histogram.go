/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events2metrics_service

import (
	"encoding/json"
)

// checks if the E2MAggHistogram type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &E2MAggHistogram{}

// E2MAggHistogram This data structure represents the e2m aggregate histogram
type E2MAggHistogram struct {
	Buckets []float32 `json:"buckets,omitempty"`
}

// NewE2MAggHistogram instantiates a new E2MAggHistogram object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewE2MAggHistogram() *E2MAggHistogram {
	this := E2MAggHistogram{}
	return &this
}

// NewE2MAggHistogramWithDefaults instantiates a new E2MAggHistogram object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewE2MAggHistogramWithDefaults() *E2MAggHistogram {
	this := E2MAggHistogram{}
	return &this
}

// GetBuckets returns the Buckets field value if set, zero value otherwise.
func (o *E2MAggHistogram) GetBuckets() []float32 {
	if o == nil || IsNil(o.Buckets) {
		var ret []float32
		return ret
	}
	return o.Buckets
}

// GetBucketsOk returns a tuple with the Buckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *E2MAggHistogram) GetBucketsOk() ([]float32, bool) {
	if o == nil || IsNil(o.Buckets) {
		return nil, false
	}
	return o.Buckets, true
}

// HasBuckets returns a boolean if a field has been set.
func (o *E2MAggHistogram) HasBuckets() bool {
	if o != nil && !IsNil(o.Buckets) {
		return true
	}

	return false
}

// SetBuckets gets a reference to the given []float32 and assigns it to the Buckets field.
func (o *E2MAggHistogram) SetBuckets(v []float32) {
	o.Buckets = v
}

func (o E2MAggHistogram) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o E2MAggHistogram) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Buckets) {
		toSerialize["buckets"] = o.Buckets
	}
	return toSerialize, nil
}

type NullableE2MAggHistogram struct {
	value *E2MAggHistogram
	isSet bool
}

func (v NullableE2MAggHistogram) Get() *E2MAggHistogram {
	return v.value
}

func (v *NullableE2MAggHistogram) Set(val *E2MAggHistogram) {
	v.value = val
	v.isSet = true
}

func (v NullableE2MAggHistogram) IsSet() bool {
	return v.isSet
}

func (v *NullableE2MAggHistogram) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableE2MAggHistogram(val *E2MAggHistogram) *NullableE2MAggHistogram {
	return &NullableE2MAggHistogram{value: val, isSet: true}
}

func (v NullableE2MAggHistogram) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableE2MAggHistogram) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


