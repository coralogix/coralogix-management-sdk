/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package extension_service

import (
	"encoding/json"
)

// checks if the ItemCounts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ItemCounts{}

// ItemCounts struct for ItemCounts
type ItemCounts struct {
	Actions *int64 `json:"actions,omitempty"`
	Alerts *int64 `json:"alerts,omitempty"`
	CustomDashboards *int64 `json:"customDashboards,omitempty"`
	Enrichments *int64 `json:"enrichments,omitempty"`
	EventsToMetrics *int64 `json:"eventsToMetrics,omitempty"`
	GrafanaDashboards *int64 `json:"grafanaDashboards,omitempty"`
	KibanaDashboards *int64 `json:"kibanaDashboards,omitempty"`
	MetricsRuleGroup *int64 `json:"metricsRuleGroup,omitempty"`
	ParsingRules *int64 `json:"parsingRules,omitempty"`
	SavedViews *int64 `json:"savedViews,omitempty"`
}

// NewItemCounts instantiates a new ItemCounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemCounts() *ItemCounts {
	this := ItemCounts{}
	return &this
}

// NewItemCountsWithDefaults instantiates a new ItemCounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemCountsWithDefaults() *ItemCounts {
	this := ItemCounts{}
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *ItemCounts) GetActions() int64 {
	if o == nil || IsNil(o.Actions) {
		var ret int64
		return ret
	}
	return *o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemCounts) GetActionsOk() (*int64, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *ItemCounts) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given int64 and assigns it to the Actions field.
func (o *ItemCounts) SetActions(v int64) {
	o.Actions = &v
}

// GetAlerts returns the Alerts field value if set, zero value otherwise.
func (o *ItemCounts) GetAlerts() int64 {
	if o == nil || IsNil(o.Alerts) {
		var ret int64
		return ret
	}
	return *o.Alerts
}

// GetAlertsOk returns a tuple with the Alerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemCounts) GetAlertsOk() (*int64, bool) {
	if o == nil || IsNil(o.Alerts) {
		return nil, false
	}
	return o.Alerts, true
}

// HasAlerts returns a boolean if a field has been set.
func (o *ItemCounts) HasAlerts() bool {
	if o != nil && !IsNil(o.Alerts) {
		return true
	}

	return false
}

// SetAlerts gets a reference to the given int64 and assigns it to the Alerts field.
func (o *ItemCounts) SetAlerts(v int64) {
	o.Alerts = &v
}

// GetCustomDashboards returns the CustomDashboards field value if set, zero value otherwise.
func (o *ItemCounts) GetCustomDashboards() int64 {
	if o == nil || IsNil(o.CustomDashboards) {
		var ret int64
		return ret
	}
	return *o.CustomDashboards
}

// GetCustomDashboardsOk returns a tuple with the CustomDashboards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemCounts) GetCustomDashboardsOk() (*int64, bool) {
	if o == nil || IsNil(o.CustomDashboards) {
		return nil, false
	}
	return o.CustomDashboards, true
}

// HasCustomDashboards returns a boolean if a field has been set.
func (o *ItemCounts) HasCustomDashboards() bool {
	if o != nil && !IsNil(o.CustomDashboards) {
		return true
	}

	return false
}

// SetCustomDashboards gets a reference to the given int64 and assigns it to the CustomDashboards field.
func (o *ItemCounts) SetCustomDashboards(v int64) {
	o.CustomDashboards = &v
}

// GetEnrichments returns the Enrichments field value if set, zero value otherwise.
func (o *ItemCounts) GetEnrichments() int64 {
	if o == nil || IsNil(o.Enrichments) {
		var ret int64
		return ret
	}
	return *o.Enrichments
}

// GetEnrichmentsOk returns a tuple with the Enrichments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemCounts) GetEnrichmentsOk() (*int64, bool) {
	if o == nil || IsNil(o.Enrichments) {
		return nil, false
	}
	return o.Enrichments, true
}

// HasEnrichments returns a boolean if a field has been set.
func (o *ItemCounts) HasEnrichments() bool {
	if o != nil && !IsNil(o.Enrichments) {
		return true
	}

	return false
}

// SetEnrichments gets a reference to the given int64 and assigns it to the Enrichments field.
func (o *ItemCounts) SetEnrichments(v int64) {
	o.Enrichments = &v
}

// GetEventsToMetrics returns the EventsToMetrics field value if set, zero value otherwise.
func (o *ItemCounts) GetEventsToMetrics() int64 {
	if o == nil || IsNil(o.EventsToMetrics) {
		var ret int64
		return ret
	}
	return *o.EventsToMetrics
}

// GetEventsToMetricsOk returns a tuple with the EventsToMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemCounts) GetEventsToMetricsOk() (*int64, bool) {
	if o == nil || IsNil(o.EventsToMetrics) {
		return nil, false
	}
	return o.EventsToMetrics, true
}

// HasEventsToMetrics returns a boolean if a field has been set.
func (o *ItemCounts) HasEventsToMetrics() bool {
	if o != nil && !IsNil(o.EventsToMetrics) {
		return true
	}

	return false
}

// SetEventsToMetrics gets a reference to the given int64 and assigns it to the EventsToMetrics field.
func (o *ItemCounts) SetEventsToMetrics(v int64) {
	o.EventsToMetrics = &v
}

// GetGrafanaDashboards returns the GrafanaDashboards field value if set, zero value otherwise.
func (o *ItemCounts) GetGrafanaDashboards() int64 {
	if o == nil || IsNil(o.GrafanaDashboards) {
		var ret int64
		return ret
	}
	return *o.GrafanaDashboards
}

// GetGrafanaDashboardsOk returns a tuple with the GrafanaDashboards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemCounts) GetGrafanaDashboardsOk() (*int64, bool) {
	if o == nil || IsNil(o.GrafanaDashboards) {
		return nil, false
	}
	return o.GrafanaDashboards, true
}

// HasGrafanaDashboards returns a boolean if a field has been set.
func (o *ItemCounts) HasGrafanaDashboards() bool {
	if o != nil && !IsNil(o.GrafanaDashboards) {
		return true
	}

	return false
}

// SetGrafanaDashboards gets a reference to the given int64 and assigns it to the GrafanaDashboards field.
func (o *ItemCounts) SetGrafanaDashboards(v int64) {
	o.GrafanaDashboards = &v
}

// GetKibanaDashboards returns the KibanaDashboards field value if set, zero value otherwise.
func (o *ItemCounts) GetKibanaDashboards() int64 {
	if o == nil || IsNil(o.KibanaDashboards) {
		var ret int64
		return ret
	}
	return *o.KibanaDashboards
}

// GetKibanaDashboardsOk returns a tuple with the KibanaDashboards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemCounts) GetKibanaDashboardsOk() (*int64, bool) {
	if o == nil || IsNil(o.KibanaDashboards) {
		return nil, false
	}
	return o.KibanaDashboards, true
}

// HasKibanaDashboards returns a boolean if a field has been set.
func (o *ItemCounts) HasKibanaDashboards() bool {
	if o != nil && !IsNil(o.KibanaDashboards) {
		return true
	}

	return false
}

// SetKibanaDashboards gets a reference to the given int64 and assigns it to the KibanaDashboards field.
func (o *ItemCounts) SetKibanaDashboards(v int64) {
	o.KibanaDashboards = &v
}

// GetMetricsRuleGroup returns the MetricsRuleGroup field value if set, zero value otherwise.
func (o *ItemCounts) GetMetricsRuleGroup() int64 {
	if o == nil || IsNil(o.MetricsRuleGroup) {
		var ret int64
		return ret
	}
	return *o.MetricsRuleGroup
}

// GetMetricsRuleGroupOk returns a tuple with the MetricsRuleGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemCounts) GetMetricsRuleGroupOk() (*int64, bool) {
	if o == nil || IsNil(o.MetricsRuleGroup) {
		return nil, false
	}
	return o.MetricsRuleGroup, true
}

// HasMetricsRuleGroup returns a boolean if a field has been set.
func (o *ItemCounts) HasMetricsRuleGroup() bool {
	if o != nil && !IsNil(o.MetricsRuleGroup) {
		return true
	}

	return false
}

// SetMetricsRuleGroup gets a reference to the given int64 and assigns it to the MetricsRuleGroup field.
func (o *ItemCounts) SetMetricsRuleGroup(v int64) {
	o.MetricsRuleGroup = &v
}

// GetParsingRules returns the ParsingRules field value if set, zero value otherwise.
func (o *ItemCounts) GetParsingRules() int64 {
	if o == nil || IsNil(o.ParsingRules) {
		var ret int64
		return ret
	}
	return *o.ParsingRules
}

// GetParsingRulesOk returns a tuple with the ParsingRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemCounts) GetParsingRulesOk() (*int64, bool) {
	if o == nil || IsNil(o.ParsingRules) {
		return nil, false
	}
	return o.ParsingRules, true
}

// HasParsingRules returns a boolean if a field has been set.
func (o *ItemCounts) HasParsingRules() bool {
	if o != nil && !IsNil(o.ParsingRules) {
		return true
	}

	return false
}

// SetParsingRules gets a reference to the given int64 and assigns it to the ParsingRules field.
func (o *ItemCounts) SetParsingRules(v int64) {
	o.ParsingRules = &v
}

// GetSavedViews returns the SavedViews field value if set, zero value otherwise.
func (o *ItemCounts) GetSavedViews() int64 {
	if o == nil || IsNil(o.SavedViews) {
		var ret int64
		return ret
	}
	return *o.SavedViews
}

// GetSavedViewsOk returns a tuple with the SavedViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemCounts) GetSavedViewsOk() (*int64, bool) {
	if o == nil || IsNil(o.SavedViews) {
		return nil, false
	}
	return o.SavedViews, true
}

// HasSavedViews returns a boolean if a field has been set.
func (o *ItemCounts) HasSavedViews() bool {
	if o != nil && !IsNil(o.SavedViews) {
		return true
	}

	return false
}

// SetSavedViews gets a reference to the given int64 and assigns it to the SavedViews field.
func (o *ItemCounts) SetSavedViews(v int64) {
	o.SavedViews = &v
}

func (o ItemCounts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ItemCounts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	if !IsNil(o.Alerts) {
		toSerialize["alerts"] = o.Alerts
	}
	if !IsNil(o.CustomDashboards) {
		toSerialize["customDashboards"] = o.CustomDashboards
	}
	if !IsNil(o.Enrichments) {
		toSerialize["enrichments"] = o.Enrichments
	}
	if !IsNil(o.EventsToMetrics) {
		toSerialize["eventsToMetrics"] = o.EventsToMetrics
	}
	if !IsNil(o.GrafanaDashboards) {
		toSerialize["grafanaDashboards"] = o.GrafanaDashboards
	}
	if !IsNil(o.KibanaDashboards) {
		toSerialize["kibanaDashboards"] = o.KibanaDashboards
	}
	if !IsNil(o.MetricsRuleGroup) {
		toSerialize["metricsRuleGroup"] = o.MetricsRuleGroup
	}
	if !IsNil(o.ParsingRules) {
		toSerialize["parsingRules"] = o.ParsingRules
	}
	if !IsNil(o.SavedViews) {
		toSerialize["savedViews"] = o.SavedViews
	}
	return toSerialize, nil
}

type NullableItemCounts struct {
	value *ItemCounts
	isSet bool
}

func (v NullableItemCounts) Get() *ItemCounts {
	return v.value
}

func (v *NullableItemCounts) Set(val *ItemCounts) {
	v.value = val
	v.isSet = true
}

func (v NullableItemCounts) IsSet() bool {
	return v.isSet
}

func (v *NullableItemCounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemCounts(val *ItemCounts) *NullableItemCounts {
	return &NullableItemCounts{value: val, isSet: true}
}

func (v NullableItemCounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemCounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


