/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package extension_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetAllExtensionsResponseRevision type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllExtensionsResponseRevision{}

// GetAllExtensionsResponseRevision struct for GetAllExtensionsResponseRevision
type GetAllExtensionsResponseRevision struct {
	Description *string `json:"description,omitempty"`
	Excerpt *string `json:"excerpt,omitempty"`
	IntegrationDetails []IntegrationDetail `json:"integrationDetails,omitempty"`
	Labels []string `json:"labels,omitempty"`
	Summary RevisionSummary `json:"summary"`
	Version string `json:"version"`
}

type _GetAllExtensionsResponseRevision GetAllExtensionsResponseRevision

// NewGetAllExtensionsResponseRevision instantiates a new GetAllExtensionsResponseRevision object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllExtensionsResponseRevision(summary RevisionSummary, version string) *GetAllExtensionsResponseRevision {
	this := GetAllExtensionsResponseRevision{}
	this.Summary = summary
	this.Version = version
	return &this
}

// NewGetAllExtensionsResponseRevisionWithDefaults instantiates a new GetAllExtensionsResponseRevision object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllExtensionsResponseRevisionWithDefaults() *GetAllExtensionsResponseRevision {
	this := GetAllExtensionsResponseRevision{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetAllExtensionsResponseRevision) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllExtensionsResponseRevision) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetAllExtensionsResponseRevision) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetAllExtensionsResponseRevision) SetDescription(v string) {
	o.Description = &v
}

// GetExcerpt returns the Excerpt field value if set, zero value otherwise.
func (o *GetAllExtensionsResponseRevision) GetExcerpt() string {
	if o == nil || IsNil(o.Excerpt) {
		var ret string
		return ret
	}
	return *o.Excerpt
}

// GetExcerptOk returns a tuple with the Excerpt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllExtensionsResponseRevision) GetExcerptOk() (*string, bool) {
	if o == nil || IsNil(o.Excerpt) {
		return nil, false
	}
	return o.Excerpt, true
}

// HasExcerpt returns a boolean if a field has been set.
func (o *GetAllExtensionsResponseRevision) HasExcerpt() bool {
	if o != nil && !IsNil(o.Excerpt) {
		return true
	}

	return false
}

// SetExcerpt gets a reference to the given string and assigns it to the Excerpt field.
func (o *GetAllExtensionsResponseRevision) SetExcerpt(v string) {
	o.Excerpt = &v
}

// GetIntegrationDetails returns the IntegrationDetails field value if set, zero value otherwise.
func (o *GetAllExtensionsResponseRevision) GetIntegrationDetails() []IntegrationDetail {
	if o == nil || IsNil(o.IntegrationDetails) {
		var ret []IntegrationDetail
		return ret
	}
	return o.IntegrationDetails
}

// GetIntegrationDetailsOk returns a tuple with the IntegrationDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllExtensionsResponseRevision) GetIntegrationDetailsOk() ([]IntegrationDetail, bool) {
	if o == nil || IsNil(o.IntegrationDetails) {
		return nil, false
	}
	return o.IntegrationDetails, true
}

// HasIntegrationDetails returns a boolean if a field has been set.
func (o *GetAllExtensionsResponseRevision) HasIntegrationDetails() bool {
	if o != nil && !IsNil(o.IntegrationDetails) {
		return true
	}

	return false
}

// SetIntegrationDetails gets a reference to the given []IntegrationDetail and assigns it to the IntegrationDetails field.
func (o *GetAllExtensionsResponseRevision) SetIntegrationDetails(v []IntegrationDetail) {
	o.IntegrationDetails = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *GetAllExtensionsResponseRevision) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllExtensionsResponseRevision) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *GetAllExtensionsResponseRevision) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *GetAllExtensionsResponseRevision) SetLabels(v []string) {
	o.Labels = v
}

// GetSummary returns the Summary field value
func (o *GetAllExtensionsResponseRevision) GetSummary() RevisionSummary {
	if o == nil {
		var ret RevisionSummary
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *GetAllExtensionsResponseRevision) GetSummaryOk() (*RevisionSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *GetAllExtensionsResponseRevision) SetSummary(v RevisionSummary) {
	o.Summary = v
}

// GetVersion returns the Version field value
func (o *GetAllExtensionsResponseRevision) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *GetAllExtensionsResponseRevision) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *GetAllExtensionsResponseRevision) SetVersion(v string) {
	o.Version = v
}

func (o GetAllExtensionsResponseRevision) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllExtensionsResponseRevision) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Excerpt) {
		toSerialize["excerpt"] = o.Excerpt
	}
	if !IsNil(o.IntegrationDetails) {
		toSerialize["integrationDetails"] = o.IntegrationDetails
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	toSerialize["summary"] = o.Summary
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

func (o *GetAllExtensionsResponseRevision) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"summary",
		"version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetAllExtensionsResponseRevision := _GetAllExtensionsResponseRevision{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetAllExtensionsResponseRevision)

	if err != nil {
		return err
	}

	*o = GetAllExtensionsResponseRevision(varGetAllExtensionsResponseRevision)

	return err
}

type NullableGetAllExtensionsResponseRevision struct {
	value *GetAllExtensionsResponseRevision
	isSet bool
}

func (v NullableGetAllExtensionsResponseRevision) Get() *GetAllExtensionsResponseRevision {
	return v.value
}

func (v *NullableGetAllExtensionsResponseRevision) Set(val *GetAllExtensionsResponseRevision) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllExtensionsResponseRevision) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllExtensionsResponseRevision) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllExtensionsResponseRevision(val *GetAllExtensionsResponseRevision) *NullableGetAllExtensionsResponseRevision {
	return &NullableGetAllExtensionsResponseRevision{value: val, isSet: true}
}

func (v NullableGetAllExtensionsResponseRevision) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllExtensionsResponseRevision) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


