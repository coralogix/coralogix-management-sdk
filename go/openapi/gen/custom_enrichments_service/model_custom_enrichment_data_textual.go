/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package custom_enrichments_service

import (
	"encoding/json"
)

// checks if the CustomEnrichmentDataTextual type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomEnrichmentDataTextual{}

// CustomEnrichmentDataTextual struct for CustomEnrichmentDataTextual
type CustomEnrichmentDataTextual struct {
	Definition *CustomEnrichment `json:"definition,omitempty"`
	Textual *string `json:"textual,omitempty"`
}

// NewCustomEnrichmentDataTextual instantiates a new CustomEnrichmentDataTextual object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomEnrichmentDataTextual() *CustomEnrichmentDataTextual {
	this := CustomEnrichmentDataTextual{}
	return &this
}

// NewCustomEnrichmentDataTextualWithDefaults instantiates a new CustomEnrichmentDataTextual object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomEnrichmentDataTextualWithDefaults() *CustomEnrichmentDataTextual {
	this := CustomEnrichmentDataTextual{}
	return &this
}

// GetDefinition returns the Definition field value if set, zero value otherwise.
func (o *CustomEnrichmentDataTextual) GetDefinition() CustomEnrichment {
	if o == nil || IsNil(o.Definition) {
		var ret CustomEnrichment
		return ret
	}
	return *o.Definition
}

// GetDefinitionOk returns a tuple with the Definition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEnrichmentDataTextual) GetDefinitionOk() (*CustomEnrichment, bool) {
	if o == nil || IsNil(o.Definition) {
		return nil, false
	}
	return o.Definition, true
}

// HasDefinition returns a boolean if a field has been set.
func (o *CustomEnrichmentDataTextual) HasDefinition() bool {
	if o != nil && !IsNil(o.Definition) {
		return true
	}

	return false
}

// SetDefinition gets a reference to the given CustomEnrichment and assigns it to the Definition field.
func (o *CustomEnrichmentDataTextual) SetDefinition(v CustomEnrichment) {
	o.Definition = &v
}

// GetTextual returns the Textual field value if set, zero value otherwise.
func (o *CustomEnrichmentDataTextual) GetTextual() string {
	if o == nil || IsNil(o.Textual) {
		var ret string
		return ret
	}
	return *o.Textual
}

// GetTextualOk returns a tuple with the Textual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEnrichmentDataTextual) GetTextualOk() (*string, bool) {
	if o == nil || IsNil(o.Textual) {
		return nil, false
	}
	return o.Textual, true
}

// HasTextual returns a boolean if a field has been set.
func (o *CustomEnrichmentDataTextual) HasTextual() bool {
	if o != nil && !IsNil(o.Textual) {
		return true
	}

	return false
}

// SetTextual gets a reference to the given string and assigns it to the Textual field.
func (o *CustomEnrichmentDataTextual) SetTextual(v string) {
	o.Textual = &v
}

func (o CustomEnrichmentDataTextual) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomEnrichmentDataTextual) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Definition) {
		toSerialize["definition"] = o.Definition
	}
	if !IsNil(o.Textual) {
		toSerialize["textual"] = o.Textual
	}
	return toSerialize, nil
}

type NullableCustomEnrichmentDataTextual struct {
	value *CustomEnrichmentDataTextual
	isSet bool
}

func (v NullableCustomEnrichmentDataTextual) Get() *CustomEnrichmentDataTextual {
	return v.value
}

func (v *NullableCustomEnrichmentDataTextual) Set(val *CustomEnrichmentDataTextual) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomEnrichmentDataTextual) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomEnrichmentDataTextual) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomEnrichmentDataTextual(val *CustomEnrichmentDataTextual) *NullableCustomEnrichmentDataTextual {
	return &NullableCustomEnrichmentDataTextual{value: val, isSet: true}
}

func (v NullableCustomEnrichmentDataTextual) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomEnrichmentDataTextual) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


