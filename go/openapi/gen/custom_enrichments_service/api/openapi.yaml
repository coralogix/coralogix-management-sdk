openapi: 3.0.0
info:
  title: ""
  version: 1.0.0
servers:
- url: /
paths:
  /v1/custom_enrichment:
    get:
      description: No description available
      externalDocs:
        url: ""
      operationId: CustomEnrichmentService_GetCustomEnrichments
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCustomEnrichmentsResponse"
          description: ""
      summary: Get Custom Enrichments
      tags:
      - Custom Enrichments Service
      x-codeSamples:
      - lang: Node
        source: |-
          const fetch = require('node-fetch');

          let url = 'https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment';

          let options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};

          fetch(url, options)
            .then(res => res.json())
            .then(json => console.log(json))
            .catch(err => console.error('error:' + err));
      - lang: Python
        source: |-
          import requests

          url = "https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment"

          headers = {"Authorization": "Bearer <API_KEY>"}

          response = requests.request("GET", url, headers=headers)

          print(response.text)
      - lang: Shell
        source: |-
          curl --request GET \
            --url https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment \
            --header 'Authorization: Bearer <API_KEY>'
    post:
      description: No description available
      externalDocs:
        url: ""
      operationId: CustomEnrichmentService_CreateCustomEnrichment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Create_Custom_Enrichment_Request"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCustomEnrichmentResponse"
          description: ""
      summary: Create Custom Enrichments
      tags:
      - Custom Enrichments Service
      x-codeSamples:
      - lang: Node
        source: |-
          const fetch = require('node-fetch');

          let url = 'https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment';

          let options = {
            method: 'POST',
            headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},
            body: '{"description":"custom_enrichment_description","file":{"extension":"csv","name":"file_name","size":100,"textual":"row1,row2 value1,value2"},"name":"custom_enrichment_name"}'
          };

          fetch(url, options)
            .then(res => res.json())
            .then(json => console.log(json))
            .catch(err => console.error('error:' + err));
      - lang: Python
        source: |-
          import requests

          url = "https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment"

          payload = {
              "description": "custom_enrichment_description",
              "file": {
                  "extension": "csv",
                  "name": "file_name",
                  "size": 100,
                  "textual": "row1,row2 value1,value2"
              },
              "name": "custom_enrichment_name"
          }
          headers = {
              "Authorization": "Bearer <API_KEY>",
              "content-type": "application/json"
          }

          response = requests.request("POST", url, json=payload, headers=headers)

          print(response.text)
      - lang: Shell
        source: |-
          curl --request POST \
            --url https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment \
            --header 'Authorization: Bearer <API_KEY>' \
            --header 'content-type: application/json' \
            --data '{"description":"custom_enrichment_description","file":{"extension":"csv","name":"file_name","size":100,"textual":"row1,row2 value1,value2"},"name":"custom_enrichment_name"}'
    put:
      description: No description available
      externalDocs:
        url: ""
      operationId: CustomEnrichmentService_UpdateCustomEnrichment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Update_Custom_Enrichment_Request"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCustomEnrichmentResponse"
          description: ""
      summary: Update Custom Enrichment
      tags:
      - Custom Enrichments Service
      x-codeSamples:
      - lang: Node
        source: |-
          const fetch = require('node-fetch');

          let url = 'https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment';

          let options = {
            method: 'PUT',
            headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},
            body: '{"customEnrichmentId":1,"description":"custom_enrichment_description","file":{"extension":"csv","name":"file_name","size":100,"textual":"row1,row2 value1,value2"},"name":"custom_enrichment_name"}'
          };

          fetch(url, options)
            .then(res => res.json())
            .then(json => console.log(json))
            .catch(err => console.error('error:' + err));
      - lang: Python
        source: |-
          import requests

          url = "https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment"

          payload = {
              "customEnrichmentId": 1,
              "description": "custom_enrichment_description",
              "file": {
                  "extension": "csv",
                  "name": "file_name",
                  "size": 100,
                  "textual": "row1,row2 value1,value2"
              },
              "name": "custom_enrichment_name"
          }
          headers = {
              "Authorization": "Bearer <API_KEY>",
              "content-type": "application/json"
          }

          response = requests.request("PUT", url, json=payload, headers=headers)

          print(response.text)
      - lang: Shell
        source: |-
          curl --request PUT \
            --url https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment \
            --header 'Authorization: Bearer <API_KEY>' \
            --header 'content-type: application/json' \
            --data '{"customEnrichmentId":1,"description":"custom_enrichment_description","file":{"extension":"csv","name":"file_name","size":100,"textual":"row1,row2 value1,value2"},"name":"custom_enrichment_name"}'
  /v1/custom_enrichment/search:
    post:
      description: No description available
      externalDocs:
        url: ""
      operationId: CustomEnrichmentService_SearchCustomEnrichmentData
      parameters:
      - explode: true
        in: query
        name: search_clauses
        required: false
        schema:
          items:
            $ref: "#/components/schemas/CustomEnrichmentService_SearchCustomEnrichmentData_search_clauses_parameter_inner"
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchCustomEnrichmentDataResponse"
          description: ""
      summary: Search Custom Enrichment Data
      tags:
      - Custom Enrichments Service
      x-codeSamples:
      - lang: Node
        source: |-
          const fetch = require('node-fetch');

          let url = 'https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment/search?search_clauses=SOME_ARRAY_VALUE';

          let options = {method: 'POST', headers: {Authorization: 'Bearer <API_KEY>'}};

          fetch(url, options)
            .then(res => res.json())
            .then(json => console.log(json))
            .catch(err => console.error('error:' + err));
      - lang: Python
        source: |-
          import requests

          url = "https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment/search"

          querystring = {"search_clauses":"SOME_ARRAY_VALUE"}

          headers = {"Authorization": "Bearer <API_KEY>"}

          response = requests.request("POST", url, headers=headers, params=querystring)

          print(response.text)
      - lang: Shell
        source: |-
          curl --request POST \
            --url 'https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment/search?search_clauses=SOME_ARRAY_VALUE' \
            --header 'Authorization: Bearer <API_KEY>'
  /v1/custom_enrichment/{custom_enrichment_id}:
    delete:
      description: No description available
      externalDocs:
        url: ""
      operationId: CustomEnrichmentService_DeleteCustomEnrichment
      parameters:
      - explode: false
        in: path
        name: custom_enrichment_id
        required: true
        schema:
          example: 1
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteCustomEnrichmentResponse"
          description: ""
      summary: Delete Custom Enrichments
      tags:
      - Custom Enrichments Service
      x-codeSamples:
      - lang: Node
        source: |-
          const fetch = require('node-fetch');

          let url = 'https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment/1';

          let options = {method: 'DELETE', headers: {Authorization: 'Bearer <API_KEY>'}};

          fetch(url, options)
            .then(res => res.json())
            .then(json => console.log(json))
            .catch(err => console.error('error:' + err));
      - lang: Python
        source: |-
          import requests

          url = "https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment/1"

          headers = {"Authorization": "Bearer <API_KEY>"}

          response = requests.request("DELETE", url, headers=headers)

          print(response.text)
      - lang: Shell
        source: |-
          curl --request DELETE \
            --url https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment/1 \
            --header 'Authorization: Bearer <API_KEY>'
  /v1/custom_enrichment/{id}:
    get:
      description: No description available
      externalDocs:
        url: ""
      operationId: CustomEnrichmentService_GetCustomEnrichment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCustomEnrichmentResponse"
          description: ""
      summary: Get Custom Enrichment
      tags:
      - Custom Enrichments Service
      x-codeSamples:
      - lang: Node
        source: |-
          const fetch = require('node-fetch');

          let url = 'https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment/1';

          let options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};

          fetch(url, options)
            .then(res => res.json())
            .then(json => console.log(json))
            .catch(err => console.error('error:' + err));
      - lang: Python
        source: |-
          import requests

          url = "https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment/1"

          headers = {"Authorization": "Bearer <API_KEY>"}

          response = requests.request("GET", url, headers=headers)

          print(response.text)
      - lang: Shell
        source: |-
          curl --request GET \
            --url https://api.coralogix.com/mgmt/openapi/v1/custom_enrichment/1 \
            --header 'Authorization: Bearer <API_KEY>'
components:
  schemas:
    CreateCustomEnrichmentResponse:
      description: This response data structure is obtained when a custom enrichment
        is created
      example:
        message: Custom enrichment created successfully
        customEnrichment:
          fileName: fileName
          isQueryOnly: true
          fileSize: 0
          name: name
          description: description
          id: 6
          version: 1
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      properties:
        customEnrichment:
          $ref: "#/components/schemas/CustomEnrichment"
        message:
          example: Custom enrichment created successfully
          type: string
      required:
      - customEnrichment
      title: Create Custom Enrichment Response
      type: object
    CustomEnrichment:
      example:
        fileName: fileName
        isQueryOnly: true
        fileSize: 0
        name: name
        description: description
        id: 6
        version: 1
      properties:
        description:
          type: string
        fileName:
          type: string
        fileSize:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        isQueryOnly:
          type: boolean
        name:
          type: string
        version:
          format: int64
          type: integer
      type: object
    CustomEnrichmentData:
      oneOf:
      - $ref: "#/components/schemas/CustomEnrichmentData_oneOf"
      - $ref: "#/components/schemas/CustomEnrichmentData_oneOf_1"
    DeleteCustomEnrichmentResponse:
      example:
        customEnrichmentId: 1
        message: Custom enrichment deleted successfully
      properties:
        customEnrichmentId:
          example: 1
          format: int64
          type: integer
        message:
          example: Custom enrichment deleted successfully
          type: string
      type: object
    FieldGroup:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    File:
      oneOf:
      - $ref: "#/components/schemas/File_1"
      - $ref: "#/components/schemas/File_2"
    FilterPathAndValues:
      oneOf:
      - $ref: "#/components/schemas/FilterPathAndValues_1"
      - $ref: "#/components/schemas/FilterPathAndValues_2"
    Filters:
      description: This data structure represents a filter
      externalDocs:
        url: ""
      properties:
        operator:
          $ref: "#/components/schemas/v3.FilterOperator"
        pathAndValues:
          items:
            $ref: "#/components/schemas/FilterPathAndValues"
          type: array
      required:
      - pathAndValues
      title: Filters
      type: object
    GetCustomEnrichmentResponse:
      description: This response data structure is obtained when a custom enrichment
        is retrieved
      example:
        customEnrichment:
          fileName: fileName
          isQueryOnly: true
          fileSize: 0
          name: name
          description: description
          id: 6
          version: 1
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      properties:
        customEnrichment:
          $ref: "#/components/schemas/CustomEnrichment"
      required:
      - customEnrichment
      title: Get Custom Enrichment Response
      type: object
    GetCustomEnrichmentsResponse:
      description: This response data structure is obtained when all custom enrichments
        are retrieved
      example:
        customEnrichments:
        - fileName: fileName
          isQueryOnly: true
          fileSize: 0
          name: name
          description: description
          id: 6
          version: 1
        - fileName: fileName
          isQueryOnly: true
          fileSize: 0
          name: name
          description: description
          id: 6
          version: 1
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      properties:
        customEnrichments:
          items:
            $ref: "#/components/schemas/CustomEnrichment"
          type: array
      required:
      - customEnrichments
      title: Get Custom Enrichments Response
      type: object
    MultipleValues:
      properties:
        matcher:
          $ref: "#/components/schemas/events.v3.FilterMatcher"
        values:
          items:
            type: string
          type: array
      type: object
    SearchCustomEnrichmentDataResponse:
      example:
        customEnrichmentsData:
        - definition:
            fileName: fileName
            isQueryOnly: true
            fileSize: 0
            name: name
            description: description
            id: 6
            version: 1
          textual: textual
        - definition:
            fileName: fileName
            isQueryOnly: true
            fileSize: 0
            name: name
            description: description
            id: 6
            version: 1
          textual: textual
      properties:
        customEnrichmentsData:
          items:
            $ref: "#/components/schemas/CustomEnrichmentData"
          type: array
      type: object
    UpdateCustomEnrichmentResponse:
      description: This response data structure is obtained when a custom enrichment
        is updated
      example:
        message: Custom enrichment updated successfully
        customEnrichment:
          fileName: fileName
          isQueryOnly: true
          fileSize: 0
          name: name
          description: description
          id: 6
          version: 1
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      properties:
        customEnrichment:
          $ref: "#/components/schemas/CustomEnrichment"
        message:
          example: Custom enrichment updated successfully
          type: string
      required:
      - customEnrichment
      title: Update Custom Enrichment Response
      type: object
    common.Group:
      properties:
        field:
          $ref: "#/components/schemas/FieldGroup"
        groups:
          items:
            $ref: "#/components/schemas/common.Group"
          type: array
        value:
          format: double
          type: number
      type: object
    events.v3.FilterMatcher:
      enum:
      - FILTER_MATCHER_TEXT_OR_UNSPECIFIED
      - FILTER_MATCHER_REGEXP
      type: string
    v3.FilterOperator:
      enum:
      - FILTER_OPERATOR_AND_OR_UNSPECIFIED
      - FILTER_OPERATOR_OR
      type: string
    Update_Custom_Enrichment_Request:
      additionalProperties: false
      description: This request data structure is used to update a custom enrichment
      properties:
        customEnrichmentId:
          example: 1
          format: int64
          type: integer
        description:
          example: custom_enrichment_description
          type: string
        file:
          $ref: "#/components/schemas/File"
        name:
          example: custom_enrichment_name
          type: string
      required:
      - customEnrichmentId
      - description
      - file
      - name
      title: Update Custom Enrichment Request
      type: object
    Create_Custom_Enrichment_Request:
      additionalProperties: false
      description: This request data structure is used to create a custom enrichment
      properties:
        description:
          example: custom_enrichment_description
          type: string
        file:
          $ref: "#/components/schemas/File"
        name:
          example: custom_enrichment_name
          type: string
      required:
      - description
      - file
      - name
      title: Create Custom Enrichment Request
      type: object
    Search_Clause:
      additionalProperties: false
      description: This data structure represents a search clause
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      properties:
        id:
          example: 1
          format: int64
          type: integer
      required:
      - searchBy
      title: Search Clause
      type: object
    Search_Clause_1:
      additionalProperties: false
      description: This data structure represents a search clause
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      properties:
        name:
          example: custom_enrichment_name
          type: string
      required:
      - searchBy
      title: Search Clause
      type: object
    CustomEnrichmentService_SearchCustomEnrichmentData_search_clauses_parameter_inner:
      oneOf:
      - $ref: "#/components/schemas/Search_Clause"
      - $ref: "#/components/schemas/Search_Clause_1"
    CustomEnrichmentData_oneOf:
      additionalProperties: false
      example:
        definition:
          fileName: fileName
          isQueryOnly: true
          fileSize: 0
          name: name
          description: description
          id: 6
          version: 1
        textual: textual
      properties:
        definition:
          $ref: "#/components/schemas/CustomEnrichment"
        textual:
          type: string
      type: object
    CustomEnrichmentData_oneOf_1:
      additionalProperties: false
      properties:
        binary:
          format: byte
          type: string
        definition:
          $ref: "#/components/schemas/CustomEnrichment"
      type: object
    File_1:
      additionalProperties: false
      description: This data structure represents a file
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      properties:
        extension:
          example: csv
          type: string
        name:
          example: file_name
          type: string
        size:
          example: 100
          format: int64
          type: integer
        textual:
          example: "row1,row2 value1,value2"
          type: string
      title: File
      type: object
    File_2:
      additionalProperties: false
      description: This data structure represents a file
      externalDocs:
        description: Find out more about enrichments
        url: https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/
      properties:
        binary:
          example: !!binary |-
            MHhGQUJCMzI=
          format: byte
          type: string
        extension:
          example: csv
          type: string
        name:
          example: file_name
          type: string
        size:
          example: 100
          format: int64
          type: integer
      title: File
      type: object
    FilterPathAndValues_1:
      additionalProperties: false
      description: This data structure represents a filter path and values
      externalDocs:
        url: ""
      properties:
        multipleValues:
          $ref: "#/components/schemas/MultipleValues"
        path:
          example: test
          type: string
      required:
      - path
      - values
      title: FilterPathAndValues
      type: object
    FilterPathAndValues_2:
      additionalProperties: false
      description: This data structure represents a filter path and values
      externalDocs:
        url: ""
      properties:
        filters:
          $ref: "#/components/schemas/Filters"
        path:
          example: test
          type: string
      required:
      - path
      - values
      title: FilterPathAndValues
      type: object
  securitySchemes:
    apiKeyAuth:
      description: API key authentication
      in: header
      name: Authorization
      type: apiKey
