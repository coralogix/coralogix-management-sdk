/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package custom_enrichments_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetCustomEnrichmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCustomEnrichmentResponse{}

// GetCustomEnrichmentResponse This response data structure is obtained when a custom enrichment is retrieved
type GetCustomEnrichmentResponse struct {
	CustomEnrichment CustomEnrichment `json:"customEnrichment"`
}

type _GetCustomEnrichmentResponse GetCustomEnrichmentResponse

// NewGetCustomEnrichmentResponse instantiates a new GetCustomEnrichmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCustomEnrichmentResponse(customEnrichment CustomEnrichment) *GetCustomEnrichmentResponse {
	this := GetCustomEnrichmentResponse{}
	this.CustomEnrichment = customEnrichment
	return &this
}

// NewGetCustomEnrichmentResponseWithDefaults instantiates a new GetCustomEnrichmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCustomEnrichmentResponseWithDefaults() *GetCustomEnrichmentResponse {
	this := GetCustomEnrichmentResponse{}
	return &this
}

// GetCustomEnrichment returns the CustomEnrichment field value
func (o *GetCustomEnrichmentResponse) GetCustomEnrichment() CustomEnrichment {
	if o == nil {
		var ret CustomEnrichment
		return ret
	}

	return o.CustomEnrichment
}

// GetCustomEnrichmentOk returns a tuple with the CustomEnrichment field value
// and a boolean to check if the value has been set.
func (o *GetCustomEnrichmentResponse) GetCustomEnrichmentOk() (*CustomEnrichment, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomEnrichment, true
}

// SetCustomEnrichment sets field value
func (o *GetCustomEnrichmentResponse) SetCustomEnrichment(v CustomEnrichment) {
	o.CustomEnrichment = v
}

func (o GetCustomEnrichmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCustomEnrichmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customEnrichment"] = o.CustomEnrichment
	return toSerialize, nil
}

func (o *GetCustomEnrichmentResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customEnrichment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetCustomEnrichmentResponse := _GetCustomEnrichmentResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetCustomEnrichmentResponse)

	if err != nil {
		return err
	}

	*o = GetCustomEnrichmentResponse(varGetCustomEnrichmentResponse)

	return err
}

type NullableGetCustomEnrichmentResponse struct {
	value *GetCustomEnrichmentResponse
	isSet bool
}

func (v NullableGetCustomEnrichmentResponse) Get() *GetCustomEnrichmentResponse {
	return v.value
}

func (v *NullableGetCustomEnrichmentResponse) Set(val *GetCustomEnrichmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCustomEnrichmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCustomEnrichmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCustomEnrichmentResponse(val *GetCustomEnrichmentResponse) *NullableGetCustomEnrichmentResponse {
	return &NullableGetCustomEnrichmentResponse{value: val, isSet: true}
}

func (v NullableGetCustomEnrichmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCustomEnrichmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


