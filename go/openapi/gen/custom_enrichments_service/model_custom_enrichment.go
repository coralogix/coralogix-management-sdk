/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package custom_enrichments_service

import (
	"encoding/json"
)

// checks if the CustomEnrichment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomEnrichment{}

// CustomEnrichment struct for CustomEnrichment
type CustomEnrichment struct {
	Description *string `json:"description,omitempty"`
	FileName *string `json:"fileName,omitempty"`
	FileSize *int64 `json:"fileSize,omitempty"`
	Id *int64 `json:"id,omitempty"`
	IsQueryOnly *bool `json:"isQueryOnly,omitempty"`
	Name *string `json:"name,omitempty"`
	Version *int64 `json:"version,omitempty"`
}

// NewCustomEnrichment instantiates a new CustomEnrichment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomEnrichment() *CustomEnrichment {
	this := CustomEnrichment{}
	return &this
}

// NewCustomEnrichmentWithDefaults instantiates a new CustomEnrichment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomEnrichmentWithDefaults() *CustomEnrichment {
	this := CustomEnrichment{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CustomEnrichment) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEnrichment) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CustomEnrichment) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CustomEnrichment) SetDescription(v string) {
	o.Description = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *CustomEnrichment) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEnrichment) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *CustomEnrichment) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *CustomEnrichment) SetFileName(v string) {
	o.FileName = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *CustomEnrichment) GetFileSize() int64 {
	if o == nil || IsNil(o.FileSize) {
		var ret int64
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEnrichment) GetFileSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *CustomEnrichment) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int64 and assigns it to the FileSize field.
func (o *CustomEnrichment) SetFileSize(v int64) {
	o.FileSize = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomEnrichment) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEnrichment) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomEnrichment) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *CustomEnrichment) SetId(v int64) {
	o.Id = &v
}

// GetIsQueryOnly returns the IsQueryOnly field value if set, zero value otherwise.
func (o *CustomEnrichment) GetIsQueryOnly() bool {
	if o == nil || IsNil(o.IsQueryOnly) {
		var ret bool
		return ret
	}
	return *o.IsQueryOnly
}

// GetIsQueryOnlyOk returns a tuple with the IsQueryOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEnrichment) GetIsQueryOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsQueryOnly) {
		return nil, false
	}
	return o.IsQueryOnly, true
}

// HasIsQueryOnly returns a boolean if a field has been set.
func (o *CustomEnrichment) HasIsQueryOnly() bool {
	if o != nil && !IsNil(o.IsQueryOnly) {
		return true
	}

	return false
}

// SetIsQueryOnly gets a reference to the given bool and assigns it to the IsQueryOnly field.
func (o *CustomEnrichment) SetIsQueryOnly(v bool) {
	o.IsQueryOnly = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CustomEnrichment) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEnrichment) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CustomEnrichment) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CustomEnrichment) SetName(v string) {
	o.Name = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CustomEnrichment) GetVersion() int64 {
	if o == nil || IsNil(o.Version) {
		var ret int64
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEnrichment) GetVersionOk() (*int64, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CustomEnrichment) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int64 and assigns it to the Version field.
func (o *CustomEnrichment) SetVersion(v int64) {
	o.Version = &v
}

func (o CustomEnrichment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomEnrichment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !IsNil(o.FileSize) {
		toSerialize["fileSize"] = o.FileSize
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsQueryOnly) {
		toSerialize["isQueryOnly"] = o.IsQueryOnly
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableCustomEnrichment struct {
	value *CustomEnrichment
	isSet bool
}

func (v NullableCustomEnrichment) Get() *CustomEnrichment {
	return v.value
}

func (v *NullableCustomEnrichment) Set(val *CustomEnrichment) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomEnrichment) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomEnrichment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomEnrichment(val *CustomEnrichment) *NullableCustomEnrichment {
	return &NullableCustomEnrichment{value: val, isSet: true}
}

func (v NullableCustomEnrichment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomEnrichment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


