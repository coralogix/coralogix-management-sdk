/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package custom_enrichments_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateCustomEnrichmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCustomEnrichmentRequest{}

// CreateCustomEnrichmentRequest This request data structure is used to create a custom enrichment
type CreateCustomEnrichmentRequest struct {
	Description string `json:"description"`
	File File `json:"file"`
	Name string `json:"name"`
}

type _CreateCustomEnrichmentRequest CreateCustomEnrichmentRequest

// NewCreateCustomEnrichmentRequest instantiates a new CreateCustomEnrichmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCustomEnrichmentRequest(description string, file File, name string) *CreateCustomEnrichmentRequest {
	this := CreateCustomEnrichmentRequest{}
	this.Description = description
	this.File = file
	this.Name = name
	return &this
}

// NewCreateCustomEnrichmentRequestWithDefaults instantiates a new CreateCustomEnrichmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCustomEnrichmentRequestWithDefaults() *CreateCustomEnrichmentRequest {
	this := CreateCustomEnrichmentRequest{}
	return &this
}

// GetDescription returns the Description field value
func (o *CreateCustomEnrichmentRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateCustomEnrichmentRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateCustomEnrichmentRequest) SetDescription(v string) {
	o.Description = v
}

// GetFile returns the File field value
func (o *CreateCustomEnrichmentRequest) GetFile() File {
	if o == nil {
		var ret File
		return ret
	}

	return o.File
}

// GetFileOk returns a tuple with the File field value
// and a boolean to check if the value has been set.
func (o *CreateCustomEnrichmentRequest) GetFileOk() (*File, bool) {
	if o == nil {
		return nil, false
	}
	return &o.File, true
}

// SetFile sets field value
func (o *CreateCustomEnrichmentRequest) SetFile(v File) {
	o.File = v
}

// GetName returns the Name field value
func (o *CreateCustomEnrichmentRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateCustomEnrichmentRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateCustomEnrichmentRequest) SetName(v string) {
	o.Name = v
}

func (o CreateCustomEnrichmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCustomEnrichmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["file"] = o.File
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *CreateCustomEnrichmentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"file",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCustomEnrichmentRequest := _CreateCustomEnrichmentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateCustomEnrichmentRequest)

	if err != nil {
		return err
	}

	*o = CreateCustomEnrichmentRequest(varCreateCustomEnrichmentRequest)

	return err
}

type NullableCreateCustomEnrichmentRequest struct {
	value *CreateCustomEnrichmentRequest
	isSet bool
}

func (v NullableCreateCustomEnrichmentRequest) Get() *CreateCustomEnrichmentRequest {
	return v.value
}

func (v *NullableCreateCustomEnrichmentRequest) Set(val *CreateCustomEnrichmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCustomEnrichmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCustomEnrichmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCustomEnrichmentRequest(val *CreateCustomEnrichmentRequest) *NullableCreateCustomEnrichmentRequest {
	return &NullableCreateCustomEnrichmentRequest{value: val, isSet: true}
}

func (v NullableCreateCustomEnrichmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCustomEnrichmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


