/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_keys_service

import (
	"encoding/json"
)

// checks if the OwnerOneOf2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OwnerOneOf2{}

// OwnerOneOf2 struct for OwnerOneOf2
type OwnerOneOf2 struct {
	OrganisationId *string `json:"organisationId,omitempty"`
}

// NewOwnerOneOf2 instantiates a new OwnerOneOf2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOwnerOneOf2() *OwnerOneOf2 {
	this := OwnerOneOf2{}
	return &this
}

// NewOwnerOneOf2WithDefaults instantiates a new OwnerOneOf2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOwnerOneOf2WithDefaults() *OwnerOneOf2 {
	this := OwnerOneOf2{}
	return &this
}

// GetOrganisationId returns the OrganisationId field value if set, zero value otherwise.
func (o *OwnerOneOf2) GetOrganisationId() string {
	if o == nil || IsNil(o.OrganisationId) {
		var ret string
		return ret
	}
	return *o.OrganisationId
}

// GetOrganisationIdOk returns a tuple with the OrganisationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OwnerOneOf2) GetOrganisationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganisationId) {
		return nil, false
	}
	return o.OrganisationId, true
}

// HasOrganisationId returns a boolean if a field has been set.
func (o *OwnerOneOf2) HasOrganisationId() bool {
	if o != nil && !IsNil(o.OrganisationId) {
		return true
	}

	return false
}

// SetOrganisationId gets a reference to the given string and assigns it to the OrganisationId field.
func (o *OwnerOneOf2) SetOrganisationId(v string) {
	o.OrganisationId = &v
}

func (o OwnerOneOf2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OwnerOneOf2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganisationId) {
		toSerialize["organisationId"] = o.OrganisationId
	}
	return toSerialize, nil
}

type NullableOwnerOneOf2 struct {
	value *OwnerOneOf2
	isSet bool
}

func (v NullableOwnerOneOf2) Get() *OwnerOneOf2 {
	return v.value
}

func (v *NullableOwnerOneOf2) Set(val *OwnerOneOf2) {
	v.value = val
	v.isSet = true
}

func (v NullableOwnerOneOf2) IsSet() bool {
	return v.isSet
}

func (v *NullableOwnerOneOf2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOwnerOneOf2(val *OwnerOneOf2) *NullableOwnerOneOf2 {
	return &NullableOwnerOneOf2{value: val, isSet: true}
}

func (v NullableOwnerOneOf2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOwnerOneOf2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


