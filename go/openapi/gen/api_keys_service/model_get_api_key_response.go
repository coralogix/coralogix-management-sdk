/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_keys_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetApiKeyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApiKeyResponse{}

// GetApiKeyResponse This data structure is the response obtained when retrieving an API key.
type GetApiKeyResponse struct {
	KeyInfo KeyInfo `json:"keyInfo"`
}

type _GetApiKeyResponse GetApiKeyResponse

// NewGetApiKeyResponse instantiates a new GetApiKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApiKeyResponse(keyInfo KeyInfo) *GetApiKeyResponse {
	this := GetApiKeyResponse{}
	this.KeyInfo = keyInfo
	return &this
}

// NewGetApiKeyResponseWithDefaults instantiates a new GetApiKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApiKeyResponseWithDefaults() *GetApiKeyResponse {
	this := GetApiKeyResponse{}
	return &this
}

// GetKeyInfo returns the KeyInfo field value
func (o *GetApiKeyResponse) GetKeyInfo() KeyInfo {
	if o == nil {
		var ret KeyInfo
		return ret
	}

	return o.KeyInfo
}

// GetKeyInfoOk returns a tuple with the KeyInfo field value
// and a boolean to check if the value has been set.
func (o *GetApiKeyResponse) GetKeyInfoOk() (*KeyInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyInfo, true
}

// SetKeyInfo sets field value
func (o *GetApiKeyResponse) SetKeyInfo(v KeyInfo) {
	o.KeyInfo = v
}

func (o GetApiKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApiKeyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["keyInfo"] = o.KeyInfo
	return toSerialize, nil
}

func (o *GetApiKeyResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"keyInfo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetApiKeyResponse := _GetApiKeyResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetApiKeyResponse)

	if err != nil {
		return err
	}

	*o = GetApiKeyResponse(varGetApiKeyResponse)

	return err
}

type NullableGetApiKeyResponse struct {
	value *GetApiKeyResponse
	isSet bool
}

func (v NullableGetApiKeyResponse) Get() *GetApiKeyResponse {
	return v.value
}

func (v *NullableGetApiKeyResponse) Set(val *GetApiKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApiKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApiKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApiKeyResponse(val *GetApiKeyResponse) *NullableGetApiKeyResponse {
	return &NullableGetApiKeyResponse{value: val, isSet: true}
}

func (v NullableGetApiKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApiKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


