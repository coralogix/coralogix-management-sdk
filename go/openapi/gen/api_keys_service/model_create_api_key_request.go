/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_keys_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateApiKeyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApiKeyRequest{}

// CreateApiKeyRequest This data structure is used to create an API key.
type CreateApiKeyRequest struct {
	Hashed bool `json:"hashed"`
	KeyPermissions CreateApiKeyRequestKeyPermissions `json:"keyPermissions"`
	Name string `json:"name"`
	Owner Owner `json:"owner"`
}

type _CreateApiKeyRequest CreateApiKeyRequest

// NewCreateApiKeyRequest instantiates a new CreateApiKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApiKeyRequest(hashed bool, keyPermissions CreateApiKeyRequestKeyPermissions, name string, owner Owner) *CreateApiKeyRequest {
	this := CreateApiKeyRequest{}
	this.Hashed = hashed
	this.KeyPermissions = keyPermissions
	this.Name = name
	this.Owner = owner
	return &this
}

// NewCreateApiKeyRequestWithDefaults instantiates a new CreateApiKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApiKeyRequestWithDefaults() *CreateApiKeyRequest {
	this := CreateApiKeyRequest{}
	return &this
}

// GetHashed returns the Hashed field value
func (o *CreateApiKeyRequest) GetHashed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hashed
}

// GetHashedOk returns a tuple with the Hashed field value
// and a boolean to check if the value has been set.
func (o *CreateApiKeyRequest) GetHashedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hashed, true
}

// SetHashed sets field value
func (o *CreateApiKeyRequest) SetHashed(v bool) {
	o.Hashed = v
}

// GetKeyPermissions returns the KeyPermissions field value
func (o *CreateApiKeyRequest) GetKeyPermissions() CreateApiKeyRequestKeyPermissions {
	if o == nil {
		var ret CreateApiKeyRequestKeyPermissions
		return ret
	}

	return o.KeyPermissions
}

// GetKeyPermissionsOk returns a tuple with the KeyPermissions field value
// and a boolean to check if the value has been set.
func (o *CreateApiKeyRequest) GetKeyPermissionsOk() (*CreateApiKeyRequestKeyPermissions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyPermissions, true
}

// SetKeyPermissions sets field value
func (o *CreateApiKeyRequest) SetKeyPermissions(v CreateApiKeyRequestKeyPermissions) {
	o.KeyPermissions = v
}

// GetName returns the Name field value
func (o *CreateApiKeyRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateApiKeyRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateApiKeyRequest) SetName(v string) {
	o.Name = v
}

// GetOwner returns the Owner field value
func (o *CreateApiKeyRequest) GetOwner() Owner {
	if o == nil {
		var ret Owner
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *CreateApiKeyRequest) GetOwnerOk() (*Owner, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *CreateApiKeyRequest) SetOwner(v Owner) {
	o.Owner = v
}

func (o CreateApiKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApiKeyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hashed"] = o.Hashed
	toSerialize["keyPermissions"] = o.KeyPermissions
	toSerialize["name"] = o.Name
	toSerialize["owner"] = o.Owner
	return toSerialize, nil
}

func (o *CreateApiKeyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hashed",
		"keyPermissions",
		"name",
		"owner",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateApiKeyRequest := _CreateApiKeyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateApiKeyRequest)

	if err != nil {
		return err
	}

	*o = CreateApiKeyRequest(varCreateApiKeyRequest)

	return err
}

type NullableCreateApiKeyRequest struct {
	value *CreateApiKeyRequest
	isSet bool
}

func (v NullableCreateApiKeyRequest) Get() *CreateApiKeyRequest {
	return v.value
}

func (v *NullableCreateApiKeyRequest) Set(val *CreateApiKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApiKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApiKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApiKeyRequest(val *CreateApiKeyRequest) *NullableCreateApiKeyRequest {
	return &NullableCreateApiKeyRequest{value: val, isSet: true}
}

func (v NullableCreateApiKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApiKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


