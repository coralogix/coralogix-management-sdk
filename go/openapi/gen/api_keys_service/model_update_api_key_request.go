/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_keys_service

import (
	"encoding/json"
)

// checks if the UpdateApiKeyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateApiKeyRequest{}

// UpdateApiKeyRequest This data structure is used to update an API key.
type UpdateApiKeyRequest struct {
	IsActive *bool `json:"isActive,omitempty"`
	NewName *string `json:"newName,omitempty"`
	Permissions *UpdateApiKeyRequestPermissions `json:"permissions,omitempty"`
	Presets *Presets `json:"presets,omitempty"`
}

// NewUpdateApiKeyRequest instantiates a new UpdateApiKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateApiKeyRequest() *UpdateApiKeyRequest {
	this := UpdateApiKeyRequest{}
	return &this
}

// NewUpdateApiKeyRequestWithDefaults instantiates a new UpdateApiKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateApiKeyRequestWithDefaults() *UpdateApiKeyRequest {
	this := UpdateApiKeyRequest{}
	return &this
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *UpdateApiKeyRequest) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApiKeyRequest) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *UpdateApiKeyRequest) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *UpdateApiKeyRequest) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetNewName returns the NewName field value if set, zero value otherwise.
func (o *UpdateApiKeyRequest) GetNewName() string {
	if o == nil || IsNil(o.NewName) {
		var ret string
		return ret
	}
	return *o.NewName
}

// GetNewNameOk returns a tuple with the NewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApiKeyRequest) GetNewNameOk() (*string, bool) {
	if o == nil || IsNil(o.NewName) {
		return nil, false
	}
	return o.NewName, true
}

// HasNewName returns a boolean if a field has been set.
func (o *UpdateApiKeyRequest) HasNewName() bool {
	if o != nil && !IsNil(o.NewName) {
		return true
	}

	return false
}

// SetNewName gets a reference to the given string and assigns it to the NewName field.
func (o *UpdateApiKeyRequest) SetNewName(v string) {
	o.NewName = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *UpdateApiKeyRequest) GetPermissions() UpdateApiKeyRequestPermissions {
	if o == nil || IsNil(o.Permissions) {
		var ret UpdateApiKeyRequestPermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApiKeyRequest) GetPermissionsOk() (*UpdateApiKeyRequestPermissions, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *UpdateApiKeyRequest) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given UpdateApiKeyRequestPermissions and assigns it to the Permissions field.
func (o *UpdateApiKeyRequest) SetPermissions(v UpdateApiKeyRequestPermissions) {
	o.Permissions = &v
}

// GetPresets returns the Presets field value if set, zero value otherwise.
func (o *UpdateApiKeyRequest) GetPresets() Presets {
	if o == nil || IsNil(o.Presets) {
		var ret Presets
		return ret
	}
	return *o.Presets
}

// GetPresetsOk returns a tuple with the Presets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApiKeyRequest) GetPresetsOk() (*Presets, bool) {
	if o == nil || IsNil(o.Presets) {
		return nil, false
	}
	return o.Presets, true
}

// HasPresets returns a boolean if a field has been set.
func (o *UpdateApiKeyRequest) HasPresets() bool {
	if o != nil && !IsNil(o.Presets) {
		return true
	}

	return false
}

// SetPresets gets a reference to the given Presets and assigns it to the Presets field.
func (o *UpdateApiKeyRequest) SetPresets(v Presets) {
	o.Presets = &v
}

func (o UpdateApiKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateApiKeyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	if !IsNil(o.NewName) {
		toSerialize["newName"] = o.NewName
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.Presets) {
		toSerialize["presets"] = o.Presets
	}
	return toSerialize, nil
}

type NullableUpdateApiKeyRequest struct {
	value *UpdateApiKeyRequest
	isSet bool
}

func (v NullableUpdateApiKeyRequest) Get() *UpdateApiKeyRequest {
	return v.value
}

func (v *NullableUpdateApiKeyRequest) Set(val *UpdateApiKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateApiKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateApiKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateApiKeyRequest(val *UpdateApiKeyRequest) *NullableUpdateApiKeyRequest {
	return &NullableUpdateApiKeyRequest{value: val, isSet: true}
}

func (v NullableUpdateApiKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateApiKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


