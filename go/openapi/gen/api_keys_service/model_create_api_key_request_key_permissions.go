/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_keys_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateApiKeyRequestKeyPermissions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApiKeyRequestKeyPermissions{}

// CreateApiKeyRequestKeyPermissions This data structure allows to specify loose permissions and permission presets for an API key.
type CreateApiKeyRequestKeyPermissions struct {
	Permissions []string `json:"permissions"`
	Presets []string `json:"presets"`
}

type _CreateApiKeyRequestKeyPermissions CreateApiKeyRequestKeyPermissions

// NewCreateApiKeyRequestKeyPermissions instantiates a new CreateApiKeyRequestKeyPermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApiKeyRequestKeyPermissions(permissions []string, presets []string) *CreateApiKeyRequestKeyPermissions {
	this := CreateApiKeyRequestKeyPermissions{}
	this.Permissions = permissions
	this.Presets = presets
	return &this
}

// NewCreateApiKeyRequestKeyPermissionsWithDefaults instantiates a new CreateApiKeyRequestKeyPermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApiKeyRequestKeyPermissionsWithDefaults() *CreateApiKeyRequestKeyPermissions {
	this := CreateApiKeyRequestKeyPermissions{}
	return &this
}

// GetPermissions returns the Permissions field value
func (o *CreateApiKeyRequestKeyPermissions) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *CreateApiKeyRequestKeyPermissions) GetPermissionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *CreateApiKeyRequestKeyPermissions) SetPermissions(v []string) {
	o.Permissions = v
}

// GetPresets returns the Presets field value
func (o *CreateApiKeyRequestKeyPermissions) GetPresets() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Presets
}

// GetPresetsOk returns a tuple with the Presets field value
// and a boolean to check if the value has been set.
func (o *CreateApiKeyRequestKeyPermissions) GetPresetsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Presets, true
}

// SetPresets sets field value
func (o *CreateApiKeyRequestKeyPermissions) SetPresets(v []string) {
	o.Presets = v
}

func (o CreateApiKeyRequestKeyPermissions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApiKeyRequestKeyPermissions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["permissions"] = o.Permissions
	toSerialize["presets"] = o.Presets
	return toSerialize, nil
}

func (o *CreateApiKeyRequestKeyPermissions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"permissions",
		"presets",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateApiKeyRequestKeyPermissions := _CreateApiKeyRequestKeyPermissions{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateApiKeyRequestKeyPermissions)

	if err != nil {
		return err
	}

	*o = CreateApiKeyRequestKeyPermissions(varCreateApiKeyRequestKeyPermissions)

	return err
}

type NullableCreateApiKeyRequestKeyPermissions struct {
	value *CreateApiKeyRequestKeyPermissions
	isSet bool
}

func (v NullableCreateApiKeyRequestKeyPermissions) Get() *CreateApiKeyRequestKeyPermissions {
	return v.value
}

func (v *NullableCreateApiKeyRequestKeyPermissions) Set(val *CreateApiKeyRequestKeyPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApiKeyRequestKeyPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApiKeyRequestKeyPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApiKeyRequestKeyPermissions(val *CreateApiKeyRequestKeyPermissions) *NullableCreateApiKeyRequestKeyPermissions {
	return &NullableCreateApiKeyRequestKeyPermissions{value: val, isSet: true}
}

func (v NullableCreateApiKeyRequestKeyPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApiKeyRequestKeyPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


