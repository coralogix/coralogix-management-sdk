/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_keys_service

import (
	"encoding/json"
)

// checks if the GetSendDataApiKeysResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSendDataApiKeysResponse{}

// GetSendDataApiKeysResponse This data structure is the response obtained when retrieving an API key.
type GetSendDataApiKeysResponse struct {
	Keys []KeyInfo `json:"keys,omitempty"`
}

// NewGetSendDataApiKeysResponse instantiates a new GetSendDataApiKeysResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSendDataApiKeysResponse() *GetSendDataApiKeysResponse {
	this := GetSendDataApiKeysResponse{}
	return &this
}

// NewGetSendDataApiKeysResponseWithDefaults instantiates a new GetSendDataApiKeysResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSendDataApiKeysResponseWithDefaults() *GetSendDataApiKeysResponse {
	this := GetSendDataApiKeysResponse{}
	return &this
}

// GetKeys returns the Keys field value if set, zero value otherwise.
func (o *GetSendDataApiKeysResponse) GetKeys() []KeyInfo {
	if o == nil || IsNil(o.Keys) {
		var ret []KeyInfo
		return ret
	}
	return o.Keys
}

// GetKeysOk returns a tuple with the Keys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSendDataApiKeysResponse) GetKeysOk() ([]KeyInfo, bool) {
	if o == nil || IsNil(o.Keys) {
		return nil, false
	}
	return o.Keys, true
}

// HasKeys returns a boolean if a field has been set.
func (o *GetSendDataApiKeysResponse) HasKeys() bool {
	if o != nil && !IsNil(o.Keys) {
		return true
	}

	return false
}

// SetKeys gets a reference to the given []KeyInfo and assigns it to the Keys field.
func (o *GetSendDataApiKeysResponse) SetKeys(v []KeyInfo) {
	o.Keys = v
}

func (o GetSendDataApiKeysResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSendDataApiKeysResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Keys) {
		toSerialize["keys"] = o.Keys
	}
	return toSerialize, nil
}

type NullableGetSendDataApiKeysResponse struct {
	value *GetSendDataApiKeysResponse
	isSet bool
}

func (v NullableGetSendDataApiKeysResponse) Get() *GetSendDataApiKeysResponse {
	return v.value
}

func (v *NullableGetSendDataApiKeysResponse) Set(val *GetSendDataApiKeysResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSendDataApiKeysResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSendDataApiKeysResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSendDataApiKeysResponse(val *GetSendDataApiKeysResponse) *NullableGetSendDataApiKeysResponse {
	return &NullableGetSendDataApiKeysResponse{value: val, isSet: true}
}

func (v NullableGetSendDataApiKeysResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSendDataApiKeysResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


