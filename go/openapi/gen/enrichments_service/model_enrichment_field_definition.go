/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enrichments_service

import (
	"encoding/json"
)

// checks if the EnrichmentFieldDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnrichmentFieldDefinition{}

// EnrichmentFieldDefinition struct for EnrichmentFieldDefinition
type EnrichmentFieldDefinition struct {
	EnrichedFieldName *string `json:"enrichedFieldName,omitempty"`
	FieldName *string `json:"fieldName,omitempty"`
	SelectedColumns []string `json:"selectedColumns,omitempty"`
}

// NewEnrichmentFieldDefinition instantiates a new EnrichmentFieldDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrichmentFieldDefinition() *EnrichmentFieldDefinition {
	this := EnrichmentFieldDefinition{}
	return &this
}

// NewEnrichmentFieldDefinitionWithDefaults instantiates a new EnrichmentFieldDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrichmentFieldDefinitionWithDefaults() *EnrichmentFieldDefinition {
	this := EnrichmentFieldDefinition{}
	return &this
}

// GetEnrichedFieldName returns the EnrichedFieldName field value if set, zero value otherwise.
func (o *EnrichmentFieldDefinition) GetEnrichedFieldName() string {
	if o == nil || IsNil(o.EnrichedFieldName) {
		var ret string
		return ret
	}
	return *o.EnrichedFieldName
}

// GetEnrichedFieldNameOk returns a tuple with the EnrichedFieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrichmentFieldDefinition) GetEnrichedFieldNameOk() (*string, bool) {
	if o == nil || IsNil(o.EnrichedFieldName) {
		return nil, false
	}
	return o.EnrichedFieldName, true
}

// HasEnrichedFieldName returns a boolean if a field has been set.
func (o *EnrichmentFieldDefinition) HasEnrichedFieldName() bool {
	if o != nil && !IsNil(o.EnrichedFieldName) {
		return true
	}

	return false
}

// SetEnrichedFieldName gets a reference to the given string and assigns it to the EnrichedFieldName field.
func (o *EnrichmentFieldDefinition) SetEnrichedFieldName(v string) {
	o.EnrichedFieldName = &v
}

// GetFieldName returns the FieldName field value if set, zero value otherwise.
func (o *EnrichmentFieldDefinition) GetFieldName() string {
	if o == nil || IsNil(o.FieldName) {
		var ret string
		return ret
	}
	return *o.FieldName
}

// GetFieldNameOk returns a tuple with the FieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrichmentFieldDefinition) GetFieldNameOk() (*string, bool) {
	if o == nil || IsNil(o.FieldName) {
		return nil, false
	}
	return o.FieldName, true
}

// HasFieldName returns a boolean if a field has been set.
func (o *EnrichmentFieldDefinition) HasFieldName() bool {
	if o != nil && !IsNil(o.FieldName) {
		return true
	}

	return false
}

// SetFieldName gets a reference to the given string and assigns it to the FieldName field.
func (o *EnrichmentFieldDefinition) SetFieldName(v string) {
	o.FieldName = &v
}

// GetSelectedColumns returns the SelectedColumns field value if set, zero value otherwise.
func (o *EnrichmentFieldDefinition) GetSelectedColumns() []string {
	if o == nil || IsNil(o.SelectedColumns) {
		var ret []string
		return ret
	}
	return o.SelectedColumns
}

// GetSelectedColumnsOk returns a tuple with the SelectedColumns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrichmentFieldDefinition) GetSelectedColumnsOk() ([]string, bool) {
	if o == nil || IsNil(o.SelectedColumns) {
		return nil, false
	}
	return o.SelectedColumns, true
}

// HasSelectedColumns returns a boolean if a field has been set.
func (o *EnrichmentFieldDefinition) HasSelectedColumns() bool {
	if o != nil && !IsNil(o.SelectedColumns) {
		return true
	}

	return false
}

// SetSelectedColumns gets a reference to the given []string and assigns it to the SelectedColumns field.
func (o *EnrichmentFieldDefinition) SetSelectedColumns(v []string) {
	o.SelectedColumns = v
}

func (o EnrichmentFieldDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnrichmentFieldDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnrichedFieldName) {
		toSerialize["enrichedFieldName"] = o.EnrichedFieldName
	}
	if !IsNil(o.FieldName) {
		toSerialize["fieldName"] = o.FieldName
	}
	if !IsNil(o.SelectedColumns) {
		toSerialize["selectedColumns"] = o.SelectedColumns
	}
	return toSerialize, nil
}

type NullableEnrichmentFieldDefinition struct {
	value *EnrichmentFieldDefinition
	isSet bool
}

func (v NullableEnrichmentFieldDefinition) Get() *EnrichmentFieldDefinition {
	return v.value
}

func (v *NullableEnrichmentFieldDefinition) Set(val *EnrichmentFieldDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrichmentFieldDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrichmentFieldDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrichmentFieldDefinition(val *EnrichmentFieldDefinition) *NullableEnrichmentFieldDefinition {
	return &NullableEnrichmentFieldDefinition{value: val, isSet: true}
}

func (v NullableEnrichmentFieldDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrichmentFieldDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


