/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enrichments_service

import (
	"encoding/json"
)

// checks if the EnrichmentServiceAtomicOverwriteEnrichmentsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnrichmentServiceAtomicOverwriteEnrichmentsRequest{}

// EnrichmentServiceAtomicOverwriteEnrichmentsRequest struct for EnrichmentServiceAtomicOverwriteEnrichmentsRequest
type EnrichmentServiceAtomicOverwriteEnrichmentsRequest struct {
	EnrichmentFields []EnrichmentFieldDefinition `json:"enrichmentFields,omitempty"`
	EnrichmentType *EnrichmentType `json:"enrichmentType,omitempty"`
	RequestEnrichments []EnrichmentRequestModel `json:"requestEnrichments,omitempty"`
}

// NewEnrichmentServiceAtomicOverwriteEnrichmentsRequest instantiates a new EnrichmentServiceAtomicOverwriteEnrichmentsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrichmentServiceAtomicOverwriteEnrichmentsRequest() *EnrichmentServiceAtomicOverwriteEnrichmentsRequest {
	this := EnrichmentServiceAtomicOverwriteEnrichmentsRequest{}
	return &this
}

// NewEnrichmentServiceAtomicOverwriteEnrichmentsRequestWithDefaults instantiates a new EnrichmentServiceAtomicOverwriteEnrichmentsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrichmentServiceAtomicOverwriteEnrichmentsRequestWithDefaults() *EnrichmentServiceAtomicOverwriteEnrichmentsRequest {
	this := EnrichmentServiceAtomicOverwriteEnrichmentsRequest{}
	return &this
}

// GetEnrichmentFields returns the EnrichmentFields field value if set, zero value otherwise.
func (o *EnrichmentServiceAtomicOverwriteEnrichmentsRequest) GetEnrichmentFields() []EnrichmentFieldDefinition {
	if o == nil || IsNil(o.EnrichmentFields) {
		var ret []EnrichmentFieldDefinition
		return ret
	}
	return o.EnrichmentFields
}

// GetEnrichmentFieldsOk returns a tuple with the EnrichmentFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrichmentServiceAtomicOverwriteEnrichmentsRequest) GetEnrichmentFieldsOk() ([]EnrichmentFieldDefinition, bool) {
	if o == nil || IsNil(o.EnrichmentFields) {
		return nil, false
	}
	return o.EnrichmentFields, true
}

// HasEnrichmentFields returns a boolean if a field has been set.
func (o *EnrichmentServiceAtomicOverwriteEnrichmentsRequest) HasEnrichmentFields() bool {
	if o != nil && !IsNil(o.EnrichmentFields) {
		return true
	}

	return false
}

// SetEnrichmentFields gets a reference to the given []EnrichmentFieldDefinition and assigns it to the EnrichmentFields field.
func (o *EnrichmentServiceAtomicOverwriteEnrichmentsRequest) SetEnrichmentFields(v []EnrichmentFieldDefinition) {
	o.EnrichmentFields = v
}

// GetEnrichmentType returns the EnrichmentType field value if set, zero value otherwise.
func (o *EnrichmentServiceAtomicOverwriteEnrichmentsRequest) GetEnrichmentType() EnrichmentType {
	if o == nil || IsNil(o.EnrichmentType) {
		var ret EnrichmentType
		return ret
	}
	return *o.EnrichmentType
}

// GetEnrichmentTypeOk returns a tuple with the EnrichmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrichmentServiceAtomicOverwriteEnrichmentsRequest) GetEnrichmentTypeOk() (*EnrichmentType, bool) {
	if o == nil || IsNil(o.EnrichmentType) {
		return nil, false
	}
	return o.EnrichmentType, true
}

// HasEnrichmentType returns a boolean if a field has been set.
func (o *EnrichmentServiceAtomicOverwriteEnrichmentsRequest) HasEnrichmentType() bool {
	if o != nil && !IsNil(o.EnrichmentType) {
		return true
	}

	return false
}

// SetEnrichmentType gets a reference to the given EnrichmentType and assigns it to the EnrichmentType field.
func (o *EnrichmentServiceAtomicOverwriteEnrichmentsRequest) SetEnrichmentType(v EnrichmentType) {
	o.EnrichmentType = &v
}

// GetRequestEnrichments returns the RequestEnrichments field value if set, zero value otherwise.
func (o *EnrichmentServiceAtomicOverwriteEnrichmentsRequest) GetRequestEnrichments() []EnrichmentRequestModel {
	if o == nil || IsNil(o.RequestEnrichments) {
		var ret []EnrichmentRequestModel
		return ret
	}
	return o.RequestEnrichments
}

// GetRequestEnrichmentsOk returns a tuple with the RequestEnrichments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrichmentServiceAtomicOverwriteEnrichmentsRequest) GetRequestEnrichmentsOk() ([]EnrichmentRequestModel, bool) {
	if o == nil || IsNil(o.RequestEnrichments) {
		return nil, false
	}
	return o.RequestEnrichments, true
}

// HasRequestEnrichments returns a boolean if a field has been set.
func (o *EnrichmentServiceAtomicOverwriteEnrichmentsRequest) HasRequestEnrichments() bool {
	if o != nil && !IsNil(o.RequestEnrichments) {
		return true
	}

	return false
}

// SetRequestEnrichments gets a reference to the given []EnrichmentRequestModel and assigns it to the RequestEnrichments field.
func (o *EnrichmentServiceAtomicOverwriteEnrichmentsRequest) SetRequestEnrichments(v []EnrichmentRequestModel) {
	o.RequestEnrichments = v
}

func (o EnrichmentServiceAtomicOverwriteEnrichmentsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnrichmentServiceAtomicOverwriteEnrichmentsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnrichmentFields) {
		toSerialize["enrichmentFields"] = o.EnrichmentFields
	}
	if !IsNil(o.EnrichmentType) {
		toSerialize["enrichmentType"] = o.EnrichmentType
	}
	if !IsNil(o.RequestEnrichments) {
		toSerialize["requestEnrichments"] = o.RequestEnrichments
	}
	return toSerialize, nil
}

type NullableEnrichmentServiceAtomicOverwriteEnrichmentsRequest struct {
	value *EnrichmentServiceAtomicOverwriteEnrichmentsRequest
	isSet bool
}

func (v NullableEnrichmentServiceAtomicOverwriteEnrichmentsRequest) Get() *EnrichmentServiceAtomicOverwriteEnrichmentsRequest {
	return v.value
}

func (v *NullableEnrichmentServiceAtomicOverwriteEnrichmentsRequest) Set(val *EnrichmentServiceAtomicOverwriteEnrichmentsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrichmentServiceAtomicOverwriteEnrichmentsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrichmentServiceAtomicOverwriteEnrichmentsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrichmentServiceAtomicOverwriteEnrichmentsRequest(val *EnrichmentServiceAtomicOverwriteEnrichmentsRequest) *NullableEnrichmentServiceAtomicOverwriteEnrichmentsRequest {
	return &NullableEnrichmentServiceAtomicOverwriteEnrichmentsRequest{value: val, isSet: true}
}

func (v NullableEnrichmentServiceAtomicOverwriteEnrichmentsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrichmentServiceAtomicOverwriteEnrichmentsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


