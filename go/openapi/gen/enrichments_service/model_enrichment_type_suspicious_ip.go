/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enrichments_service

import (
	"encoding/json"
)

// checks if the EnrichmentTypeSuspiciousIp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnrichmentTypeSuspiciousIp{}

// EnrichmentTypeSuspiciousIp struct for EnrichmentTypeSuspiciousIp
type EnrichmentTypeSuspiciousIp struct {
	SuspiciousIp map[string]interface{} `json:"suspiciousIp,omitempty"`
}

// NewEnrichmentTypeSuspiciousIp instantiates a new EnrichmentTypeSuspiciousIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrichmentTypeSuspiciousIp() *EnrichmentTypeSuspiciousIp {
	this := EnrichmentTypeSuspiciousIp{}
	return &this
}

// NewEnrichmentTypeSuspiciousIpWithDefaults instantiates a new EnrichmentTypeSuspiciousIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrichmentTypeSuspiciousIpWithDefaults() *EnrichmentTypeSuspiciousIp {
	this := EnrichmentTypeSuspiciousIp{}
	return &this
}

// GetSuspiciousIp returns the SuspiciousIp field value if set, zero value otherwise.
func (o *EnrichmentTypeSuspiciousIp) GetSuspiciousIp() map[string]interface{} {
	if o == nil || IsNil(o.SuspiciousIp) {
		var ret map[string]interface{}
		return ret
	}
	return o.SuspiciousIp
}

// GetSuspiciousIpOk returns a tuple with the SuspiciousIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrichmentTypeSuspiciousIp) GetSuspiciousIpOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.SuspiciousIp) {
		return map[string]interface{}{}, false
	}
	return o.SuspiciousIp, true
}

// HasSuspiciousIp returns a boolean if a field has been set.
func (o *EnrichmentTypeSuspiciousIp) HasSuspiciousIp() bool {
	if o != nil && !IsNil(o.SuspiciousIp) {
		return true
	}

	return false
}

// SetSuspiciousIp gets a reference to the given map[string]interface{} and assigns it to the SuspiciousIp field.
func (o *EnrichmentTypeSuspiciousIp) SetSuspiciousIp(v map[string]interface{}) {
	o.SuspiciousIp = v
}

func (o EnrichmentTypeSuspiciousIp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnrichmentTypeSuspiciousIp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SuspiciousIp) {
		toSerialize["suspiciousIp"] = o.SuspiciousIp
	}
	return toSerialize, nil
}

type NullableEnrichmentTypeSuspiciousIp struct {
	value *EnrichmentTypeSuspiciousIp
	isSet bool
}

func (v NullableEnrichmentTypeSuspiciousIp) Get() *EnrichmentTypeSuspiciousIp {
	return v.value
}

func (v *NullableEnrichmentTypeSuspiciousIp) Set(val *EnrichmentTypeSuspiciousIp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrichmentTypeSuspiciousIp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrichmentTypeSuspiciousIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrichmentTypeSuspiciousIp(val *EnrichmentTypeSuspiciousIp) *NullableEnrichmentTypeSuspiciousIp {
	return &NullableEnrichmentTypeSuspiciousIp{value: val, isSet: true}
}

func (v NullableEnrichmentTypeSuspiciousIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrichmentTypeSuspiciousIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


