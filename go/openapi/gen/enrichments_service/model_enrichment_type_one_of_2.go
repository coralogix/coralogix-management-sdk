/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enrichments_service

import (
	"encoding/json"
)

// checks if the EnrichmentTypeOneOf2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnrichmentTypeOneOf2{}

// EnrichmentTypeOneOf2 struct for EnrichmentTypeOneOf2
type EnrichmentTypeOneOf2 struct {
	Aws *AwsType `json:"aws,omitempty"`
}

// NewEnrichmentTypeOneOf2 instantiates a new EnrichmentTypeOneOf2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrichmentTypeOneOf2() *EnrichmentTypeOneOf2 {
	this := EnrichmentTypeOneOf2{}
	return &this
}

// NewEnrichmentTypeOneOf2WithDefaults instantiates a new EnrichmentTypeOneOf2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrichmentTypeOneOf2WithDefaults() *EnrichmentTypeOneOf2 {
	this := EnrichmentTypeOneOf2{}
	return &this
}

// GetAws returns the Aws field value if set, zero value otherwise.
func (o *EnrichmentTypeOneOf2) GetAws() AwsType {
	if o == nil || IsNil(o.Aws) {
		var ret AwsType
		return ret
	}
	return *o.Aws
}

// GetAwsOk returns a tuple with the Aws field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrichmentTypeOneOf2) GetAwsOk() (*AwsType, bool) {
	if o == nil || IsNil(o.Aws) {
		return nil, false
	}
	return o.Aws, true
}

// HasAws returns a boolean if a field has been set.
func (o *EnrichmentTypeOneOf2) HasAws() bool {
	if o != nil && !IsNil(o.Aws) {
		return true
	}

	return false
}

// SetAws gets a reference to the given AwsType and assigns it to the Aws field.
func (o *EnrichmentTypeOneOf2) SetAws(v AwsType) {
	o.Aws = &v
}

func (o EnrichmentTypeOneOf2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnrichmentTypeOneOf2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aws) {
		toSerialize["aws"] = o.Aws
	}
	return toSerialize, nil
}

type NullableEnrichmentTypeOneOf2 struct {
	value *EnrichmentTypeOneOf2
	isSet bool
}

func (v NullableEnrichmentTypeOneOf2) Get() *EnrichmentTypeOneOf2 {
	return v.value
}

func (v *NullableEnrichmentTypeOneOf2) Set(val *EnrichmentTypeOneOf2) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrichmentTypeOneOf2) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrichmentTypeOneOf2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrichmentTypeOneOf2(val *EnrichmentTypeOneOf2) *NullableEnrichmentTypeOneOf2 {
	return &NullableEnrichmentTypeOneOf2{value: val, isSet: true}
}

func (v NullableEnrichmentTypeOneOf2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrichmentTypeOneOf2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


