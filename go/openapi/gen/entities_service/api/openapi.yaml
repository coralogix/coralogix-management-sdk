openapi: 3.0.0
info:
  title: ""
  version: 1.0.0
servers:
- url: /
paths:
  /notifications/notification-center/v1/entity-types:
    get:
      description: No description available
      externalDocs:
        url: ""
      operationId: EntitiesService_ListEntityTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEntityTypesResponse"
          description: ""
      summary: List Entity Types
      tags:
      - Entities service
      x-codeSamples:
      - lang: Node
        source: |-
          const fetch = require('node-fetch');

          let url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/entity-types';

          let options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};

          fetch(url, options)
            .then(res => res.json())
            .then(json => console.log(json))
            .catch(err => console.error('error:' + err));
      - lang: Python
        source: |-
          import requests

          url = "https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/entity-types"

          headers = {"Authorization": "Bearer <API_KEY>"}

          response = requests.request("GET", url, headers=headers)

          print(response.text)
      - lang: Shell
        source: |-
          curl --request GET \
            --url https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/entity-types \
            --header 'Authorization: Bearer <API_KEY>'
  /notifications/notification-center/v1/entity-types/{entity_type}/entity-subtypes:
    get:
      description: No description available
      externalDocs:
        url: ""
      operationId: EntitiesService_ListEntitySubTypes
      parameters:
      - explode: false
        in: path
        name: entity_type
        required: true
        schema:
          enum:
          - ENTITY_TYPE_UNSPECIFIED
          - ALERTS
          - TEST_NOTIFICATIONS
          - CASES
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEntitySubTypesResponse"
          description: ""
      summary: List Entity Subtypes
      tags:
      - Entities service
      x-codeSamples:
      - lang: Node
        source: |-
          const fetch = require('node-fetch');

          let url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/entity-types/%7Bentity_type%7D/entity-subtypes';

          let options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};

          fetch(url, options)
            .then(res => res.json())
            .then(json => console.log(json))
            .catch(err => console.error('error:' + err));
      - lang: Python
        source: |-
          import requests

          url = "https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/entity-types/%7Bentity_type%7D/entity-subtypes"

          headers = {"Authorization": "Bearer <API_KEY>"}

          response = requests.request("GET", url, headers=headers)

          print(response.text)
      - lang: Shell
        source: |-
          curl --request GET \
            --url https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/entity-types/%7Bentity_type%7D/entity-subtypes \
            --header 'Authorization: Bearer <API_KEY>'
components:
  schemas:
    FieldGroup:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    FilterPathAndValues:
      oneOf:
      - $ref: "#/components/schemas/FilterPathAndValues_1"
      - $ref: "#/components/schemas/FilterPathAndValues_2"
    Filters:
      description: This data structure represents a filter
      externalDocs:
        url: ""
      properties:
        operator:
          $ref: "#/components/schemas/v3.FilterOperator"
        pathAndValues:
          items:
            $ref: "#/components/schemas/FilterPathAndValues"
          type: array
      required:
      - pathAndValues
      title: Filters
      type: object
    ListEntitySubTypesResponse:
      example:
        entitySubTypes:
        - entitySubTypes
        - entitySubTypes
      properties:
        entitySubTypes:
          items:
            type: string
          type: array
      type: object
    ListEntityTypesResponse:
      example:
        entityTypes:
        - ENTITY_TYPE_UNSPECIFIED
        - ENTITY_TYPE_UNSPECIFIED
      properties:
        entityTypes:
          items:
            $ref: "#/components/schemas/notification_center.EntityType"
          type: array
      type: object
    MultipleValues:
      properties:
        matcher:
          $ref: "#/components/schemas/events.v3.FilterMatcher"
        values:
          items:
            type: string
          type: array
      type: object
    common.Group:
      properties:
        field:
          $ref: "#/components/schemas/FieldGroup"
        groups:
          items:
            $ref: "#/components/schemas/common.Group"
          type: array
        value:
          format: double
          type: number
      type: object
    events.v3.FilterMatcher:
      enum:
      - FILTER_MATCHER_TEXT_OR_UNSPECIFIED
      - FILTER_MATCHER_REGEXP
      type: string
    notification_center.EntityType:
      enum:
      - ENTITY_TYPE_UNSPECIFIED
      - ALERTS
      - TEST_NOTIFICATIONS
      - CASES
      type: string
    v3.FilterOperator:
      enum:
      - FILTER_OPERATOR_AND_OR_UNSPECIFIED
      - FILTER_OPERATOR_OR
      type: string
    FilterPathAndValues_1:
      additionalProperties: false
      description: This data structure represents a filter path and values
      externalDocs:
        url: ""
      properties:
        multipleValues:
          $ref: "#/components/schemas/MultipleValues"
        path:
          example: test
          type: string
      required:
      - path
      - values
      title: FilterPathAndValues
      type: object
    FilterPathAndValues_2:
      additionalProperties: false
      description: This data structure represents a filter path and values
      externalDocs:
        url: ""
      properties:
        filters:
          $ref: "#/components/schemas/Filters"
        path:
          example: test
          type: string
      required:
      - path
      - values
      title: FilterPathAndValues
      type: object
  securitySchemes:
    apiKeyAuth:
      description: API key authentication
      in: header
      name: Authorization
      type: apiKey
