/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package events_service

import (
	"encoding/json"
)

// checks if the FieldStatistics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FieldStatistics{}

// FieldStatistics struct for FieldStatistics
type FieldStatistics struct {
	FieldStatistics *map[string]string `json:"fieldStatistics,omitempty"`
}

// NewFieldStatistics instantiates a new FieldStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFieldStatistics() *FieldStatistics {
	this := FieldStatistics{}
	return &this
}

// NewFieldStatisticsWithDefaults instantiates a new FieldStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFieldStatisticsWithDefaults() *FieldStatistics {
	this := FieldStatistics{}
	return &this
}

// GetFieldStatistics returns the FieldStatistics field value if set, zero value otherwise.
func (o *FieldStatistics) GetFieldStatistics() map[string]string {
	if o == nil || IsNil(o.FieldStatistics) {
		var ret map[string]string
		return ret
	}
	return *o.FieldStatistics
}

// GetFieldStatisticsOk returns a tuple with the FieldStatistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FieldStatistics) GetFieldStatisticsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.FieldStatistics) {
		return nil, false
	}
	return o.FieldStatistics, true
}

// HasFieldStatistics returns a boolean if a field has been set.
func (o *FieldStatistics) HasFieldStatistics() bool {
	if o != nil && !IsNil(o.FieldStatistics) {
		return true
	}

	return false
}

// SetFieldStatistics gets a reference to the given map[string]string and assigns it to the FieldStatistics field.
func (o *FieldStatistics) SetFieldStatistics(v map[string]string) {
	o.FieldStatistics = &v
}

func (o FieldStatistics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FieldStatistics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FieldStatistics) {
		toSerialize["fieldStatistics"] = o.FieldStatistics
	}
	return toSerialize, nil
}

type NullableFieldStatistics struct {
	value *FieldStatistics
	isSet bool
}

func (v NullableFieldStatistics) Get() *FieldStatistics {
	return v.value
}

func (v *NullableFieldStatistics) Set(val *FieldStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableFieldStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableFieldStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFieldStatistics(val *FieldStatistics) *NullableFieldStatistics {
	return &NullableFieldStatistics{value: val, isSet: true}
}

func (v NullableFieldStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFieldStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


