/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package contextual_data_integration_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetContextualDataIntegrationsResponseIntegrationWithCounts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetContextualDataIntegrationsResponseIntegrationWithCounts{}

// GetContextualDataIntegrationsResponseIntegrationWithCounts struct for GetContextualDataIntegrationsResponseIntegrationWithCounts
type GetContextualDataIntegrationsResponseIntegrationWithCounts struct {
	AmountIntegrations int64 `json:"amountIntegrations"`
	Errors []string `json:"errors,omitempty"`
	Integration Integration `json:"integration"`
	IsNew *bool `json:"isNew,omitempty"`
	UpgradeAvailable *bool `json:"upgradeAvailable,omitempty"`
}

type _GetContextualDataIntegrationsResponseIntegrationWithCounts GetContextualDataIntegrationsResponseIntegrationWithCounts

// NewGetContextualDataIntegrationsResponseIntegrationWithCounts instantiates a new GetContextualDataIntegrationsResponseIntegrationWithCounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetContextualDataIntegrationsResponseIntegrationWithCounts(amountIntegrations int64, integration Integration) *GetContextualDataIntegrationsResponseIntegrationWithCounts {
	this := GetContextualDataIntegrationsResponseIntegrationWithCounts{}
	this.AmountIntegrations = amountIntegrations
	this.Integration = integration
	return &this
}

// NewGetContextualDataIntegrationsResponseIntegrationWithCountsWithDefaults instantiates a new GetContextualDataIntegrationsResponseIntegrationWithCounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetContextualDataIntegrationsResponseIntegrationWithCountsWithDefaults() *GetContextualDataIntegrationsResponseIntegrationWithCounts {
	this := GetContextualDataIntegrationsResponseIntegrationWithCounts{}
	return &this
}

// GetAmountIntegrations returns the AmountIntegrations field value
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) GetAmountIntegrations() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AmountIntegrations
}

// GetAmountIntegrationsOk returns a tuple with the AmountIntegrations field value
// and a boolean to check if the value has been set.
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) GetAmountIntegrationsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountIntegrations, true
}

// SetAmountIntegrations sets field value
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) SetAmountIntegrations(v int64) {
	o.AmountIntegrations = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) GetErrors() []string {
	if o == nil || IsNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) GetErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) SetErrors(v []string) {
	o.Errors = v
}

// GetIntegration returns the Integration field value
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) GetIntegration() Integration {
	if o == nil {
		var ret Integration
		return ret
	}

	return o.Integration
}

// GetIntegrationOk returns a tuple with the Integration field value
// and a boolean to check if the value has been set.
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) GetIntegrationOk() (*Integration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Integration, true
}

// SetIntegration sets field value
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) SetIntegration(v Integration) {
	o.Integration = v
}

// GetIsNew returns the IsNew field value if set, zero value otherwise.
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) GetIsNew() bool {
	if o == nil || IsNil(o.IsNew) {
		var ret bool
		return ret
	}
	return *o.IsNew
}

// GetIsNewOk returns a tuple with the IsNew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) GetIsNewOk() (*bool, bool) {
	if o == nil || IsNil(o.IsNew) {
		return nil, false
	}
	return o.IsNew, true
}

// HasIsNew returns a boolean if a field has been set.
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) HasIsNew() bool {
	if o != nil && !IsNil(o.IsNew) {
		return true
	}

	return false
}

// SetIsNew gets a reference to the given bool and assigns it to the IsNew field.
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) SetIsNew(v bool) {
	o.IsNew = &v
}

// GetUpgradeAvailable returns the UpgradeAvailable field value if set, zero value otherwise.
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) GetUpgradeAvailable() bool {
	if o == nil || IsNil(o.UpgradeAvailable) {
		var ret bool
		return ret
	}
	return *o.UpgradeAvailable
}

// GetUpgradeAvailableOk returns a tuple with the UpgradeAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) GetUpgradeAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.UpgradeAvailable) {
		return nil, false
	}
	return o.UpgradeAvailable, true
}

// HasUpgradeAvailable returns a boolean if a field has been set.
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) HasUpgradeAvailable() bool {
	if o != nil && !IsNil(o.UpgradeAvailable) {
		return true
	}

	return false
}

// SetUpgradeAvailable gets a reference to the given bool and assigns it to the UpgradeAvailable field.
func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) SetUpgradeAvailable(v bool) {
	o.UpgradeAvailable = &v
}

func (o GetContextualDataIntegrationsResponseIntegrationWithCounts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetContextualDataIntegrationsResponseIntegrationWithCounts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amountIntegrations"] = o.AmountIntegrations
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	toSerialize["integration"] = o.Integration
	if !IsNil(o.IsNew) {
		toSerialize["isNew"] = o.IsNew
	}
	if !IsNil(o.UpgradeAvailable) {
		toSerialize["upgradeAvailable"] = o.UpgradeAvailable
	}
	return toSerialize, nil
}

func (o *GetContextualDataIntegrationsResponseIntegrationWithCounts) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amountIntegrations",
		"integration",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetContextualDataIntegrationsResponseIntegrationWithCounts := _GetContextualDataIntegrationsResponseIntegrationWithCounts{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetContextualDataIntegrationsResponseIntegrationWithCounts)

	if err != nil {
		return err
	}

	*o = GetContextualDataIntegrationsResponseIntegrationWithCounts(varGetContextualDataIntegrationsResponseIntegrationWithCounts)

	return err
}

type NullableGetContextualDataIntegrationsResponseIntegrationWithCounts struct {
	value *GetContextualDataIntegrationsResponseIntegrationWithCounts
	isSet bool
}

func (v NullableGetContextualDataIntegrationsResponseIntegrationWithCounts) Get() *GetContextualDataIntegrationsResponseIntegrationWithCounts {
	return v.value
}

func (v *NullableGetContextualDataIntegrationsResponseIntegrationWithCounts) Set(val *GetContextualDataIntegrationsResponseIntegrationWithCounts) {
	v.value = val
	v.isSet = true
}

func (v NullableGetContextualDataIntegrationsResponseIntegrationWithCounts) IsSet() bool {
	return v.isSet
}

func (v *NullableGetContextualDataIntegrationsResponseIntegrationWithCounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetContextualDataIntegrationsResponseIntegrationWithCounts(val *GetContextualDataIntegrationsResponseIntegrationWithCounts) *NullableGetContextualDataIntegrationsResponseIntegrationWithCounts {
	return &NullableGetContextualDataIntegrationsResponseIntegrationWithCounts{value: val, isSet: true}
}

func (v NullableGetContextualDataIntegrationsResponseIntegrationWithCounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetContextualDataIntegrationsResponseIntegrationWithCounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


