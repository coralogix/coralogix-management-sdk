/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package contextual_data_integration_service

import (
	"encoding/json"
)

// checks if the ParameterStringList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParameterStringList{}

// ParameterStringList struct for ParameterStringList
type ParameterStringList struct {
	Key *string `json:"key,omitempty"`
	StringList *StringList `json:"stringList,omitempty"`
}

// NewParameterStringList instantiates a new ParameterStringList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameterStringList() *ParameterStringList {
	this := ParameterStringList{}
	return &this
}

// NewParameterStringListWithDefaults instantiates a new ParameterStringList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParameterStringListWithDefaults() *ParameterStringList {
	this := ParameterStringList{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ParameterStringList) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterStringList) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ParameterStringList) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ParameterStringList) SetKey(v string) {
	o.Key = &v
}

// GetStringList returns the StringList field value if set, zero value otherwise.
func (o *ParameterStringList) GetStringList() StringList {
	if o == nil || IsNil(o.StringList) {
		var ret StringList
		return ret
	}
	return *o.StringList
}

// GetStringListOk returns a tuple with the StringList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterStringList) GetStringListOk() (*StringList, bool) {
	if o == nil || IsNil(o.StringList) {
		return nil, false
	}
	return o.StringList, true
}

// HasStringList returns a boolean if a field has been set.
func (o *ParameterStringList) HasStringList() bool {
	if o != nil && !IsNil(o.StringList) {
		return true
	}

	return false
}

// SetStringList gets a reference to the given StringList and assigns it to the StringList field.
func (o *ParameterStringList) SetStringList(v StringList) {
	o.StringList = &v
}

func (o ParameterStringList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParameterStringList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.StringList) {
		toSerialize["stringList"] = o.StringList
	}
	return toSerialize, nil
}

type NullableParameterStringList struct {
	value *ParameterStringList
	isSet bool
}

func (v NullableParameterStringList) Get() *ParameterStringList {
	return v.value
}

func (v *NullableParameterStringList) Set(val *ParameterStringList) {
	v.value = val
	v.isSet = true
}

func (v NullableParameterStringList) IsSet() bool {
	return v.isSet
}

func (v *NullableParameterStringList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameterStringList(val *ParameterStringList) *NullableParameterStringList {
	return &NullableParameterStringList{value: val, isSet: true}
}

func (v NullableParameterStringList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameterStringList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


