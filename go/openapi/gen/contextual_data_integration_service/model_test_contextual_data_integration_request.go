/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package contextual_data_integration_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TestContextualDataIntegrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestContextualDataIntegrationRequest{}

// TestContextualDataIntegrationRequest struct for TestContextualDataIntegrationRequest
type TestContextualDataIntegrationRequest struct {
	IntegrationData IntegrationMetadata `json:"integrationData"`
	IntegrationId *string `json:"integrationId,omitempty"`
}

type _TestContextualDataIntegrationRequest TestContextualDataIntegrationRequest

// NewTestContextualDataIntegrationRequest instantiates a new TestContextualDataIntegrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestContextualDataIntegrationRequest(integrationData IntegrationMetadata) *TestContextualDataIntegrationRequest {
	this := TestContextualDataIntegrationRequest{}
	this.IntegrationData = integrationData
	return &this
}

// NewTestContextualDataIntegrationRequestWithDefaults instantiates a new TestContextualDataIntegrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestContextualDataIntegrationRequestWithDefaults() *TestContextualDataIntegrationRequest {
	this := TestContextualDataIntegrationRequest{}
	return &this
}

// GetIntegrationData returns the IntegrationData field value
func (o *TestContextualDataIntegrationRequest) GetIntegrationData() IntegrationMetadata {
	if o == nil {
		var ret IntegrationMetadata
		return ret
	}

	return o.IntegrationData
}

// GetIntegrationDataOk returns a tuple with the IntegrationData field value
// and a boolean to check if the value has been set.
func (o *TestContextualDataIntegrationRequest) GetIntegrationDataOk() (*IntegrationMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationData, true
}

// SetIntegrationData sets field value
func (o *TestContextualDataIntegrationRequest) SetIntegrationData(v IntegrationMetadata) {
	o.IntegrationData = v
}

// GetIntegrationId returns the IntegrationId field value if set, zero value otherwise.
func (o *TestContextualDataIntegrationRequest) GetIntegrationId() string {
	if o == nil || IsNil(o.IntegrationId) {
		var ret string
		return ret
	}
	return *o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestContextualDataIntegrationRequest) GetIntegrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.IntegrationId) {
		return nil, false
	}
	return o.IntegrationId, true
}

// HasIntegrationId returns a boolean if a field has been set.
func (o *TestContextualDataIntegrationRequest) HasIntegrationId() bool {
	if o != nil && !IsNil(o.IntegrationId) {
		return true
	}

	return false
}

// SetIntegrationId gets a reference to the given string and assigns it to the IntegrationId field.
func (o *TestContextualDataIntegrationRequest) SetIntegrationId(v string) {
	o.IntegrationId = &v
}

func (o TestContextualDataIntegrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestContextualDataIntegrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["integrationData"] = o.IntegrationData
	if !IsNil(o.IntegrationId) {
		toSerialize["integrationId"] = o.IntegrationId
	}
	return toSerialize, nil
}

func (o *TestContextualDataIntegrationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"integrationData",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestContextualDataIntegrationRequest := _TestContextualDataIntegrationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestContextualDataIntegrationRequest)

	if err != nil {
		return err
	}

	*o = TestContextualDataIntegrationRequest(varTestContextualDataIntegrationRequest)

	return err
}

type NullableTestContextualDataIntegrationRequest struct {
	value *TestContextualDataIntegrationRequest
	isSet bool
}

func (v NullableTestContextualDataIntegrationRequest) Get() *TestContextualDataIntegrationRequest {
	return v.value
}

func (v *NullableTestContextualDataIntegrationRequest) Set(val *TestContextualDataIntegrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTestContextualDataIntegrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTestContextualDataIntegrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestContextualDataIntegrationRequest(val *TestContextualDataIntegrationRequest) *NullableTestContextualDataIntegrationRequest {
	return &NullableTestContextualDataIntegrationRequest{value: val, isSet: true}
}

func (v NullableTestContextualDataIntegrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestContextualDataIntegrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


