/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package contextual_data_integration_service

import (
	"encoding/json"
)

// checks if the CloudFormationStack type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudFormationStack{}

// CloudFormationStack This data structure represents a CloudFormation stack.
type CloudFormationStack struct {
	Arn *string `json:"arn,omitempty"`
	Region *string `json:"region,omitempty"`
}

// NewCloudFormationStack instantiates a new CloudFormationStack object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudFormationStack() *CloudFormationStack {
	this := CloudFormationStack{}
	return &this
}

// NewCloudFormationStackWithDefaults instantiates a new CloudFormationStack object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudFormationStackWithDefaults() *CloudFormationStack {
	this := CloudFormationStack{}
	return &this
}

// GetArn returns the Arn field value if set, zero value otherwise.
func (o *CloudFormationStack) GetArn() string {
	if o == nil || IsNil(o.Arn) {
		var ret string
		return ret
	}
	return *o.Arn
}

// GetArnOk returns a tuple with the Arn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFormationStack) GetArnOk() (*string, bool) {
	if o == nil || IsNil(o.Arn) {
		return nil, false
	}
	return o.Arn, true
}

// HasArn returns a boolean if a field has been set.
func (o *CloudFormationStack) HasArn() bool {
	if o != nil && !IsNil(o.Arn) {
		return true
	}

	return false
}

// SetArn gets a reference to the given string and assigns it to the Arn field.
func (o *CloudFormationStack) SetArn(v string) {
	o.Arn = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *CloudFormationStack) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFormationStack) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *CloudFormationStack) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *CloudFormationStack) SetRegion(v string) {
	o.Region = &v
}

func (o CloudFormationStack) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudFormationStack) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Arn) {
		toSerialize["arn"] = o.Arn
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

type NullableCloudFormationStack struct {
	value *CloudFormationStack
	isSet bool
}

func (v NullableCloudFormationStack) Get() *CloudFormationStack {
	return v.value
}

func (v *NullableCloudFormationStack) Set(val *CloudFormationStack) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudFormationStack) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudFormationStack) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudFormationStack(val *CloudFormationStack) *NullableCloudFormationStack {
	return &NullableCloudFormationStack{value: val, isSet: true}
}

func (v NullableCloudFormationStack) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudFormationStack) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


