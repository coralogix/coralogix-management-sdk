/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package target_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the IBMCosTargetSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IBMCosTargetSpec{}

// IBMCosTargetSpec This data structure represents an IBM COS target.
type IBMCosTargetSpec struct {
	BucketCrn string `json:"bucketCrn"`
	BucketType *IbmBucketType `json:"bucketType,omitempty"`
	Endpoint string `json:"endpoint"`
	ServiceCrn *string `json:"serviceCrn,omitempty"`
}

type _IBMCosTargetSpec IBMCosTargetSpec

// NewIBMCosTargetSpec instantiates a new IBMCosTargetSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIBMCosTargetSpec(bucketCrn string, endpoint string) *IBMCosTargetSpec {
	this := IBMCosTargetSpec{}
	this.BucketCrn = bucketCrn
	this.Endpoint = endpoint
	return &this
}

// NewIBMCosTargetSpecWithDefaults instantiates a new IBMCosTargetSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIBMCosTargetSpecWithDefaults() *IBMCosTargetSpec {
	this := IBMCosTargetSpec{}
	return &this
}

// GetBucketCrn returns the BucketCrn field value
func (o *IBMCosTargetSpec) GetBucketCrn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BucketCrn
}

// GetBucketCrnOk returns a tuple with the BucketCrn field value
// and a boolean to check if the value has been set.
func (o *IBMCosTargetSpec) GetBucketCrnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BucketCrn, true
}

// SetBucketCrn sets field value
func (o *IBMCosTargetSpec) SetBucketCrn(v string) {
	o.BucketCrn = v
}

// GetBucketType returns the BucketType field value if set, zero value otherwise.
func (o *IBMCosTargetSpec) GetBucketType() IbmBucketType {
	if o == nil || IsNil(o.BucketType) {
		var ret IbmBucketType
		return ret
	}
	return *o.BucketType
}

// GetBucketTypeOk returns a tuple with the BucketType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IBMCosTargetSpec) GetBucketTypeOk() (*IbmBucketType, bool) {
	if o == nil || IsNil(o.BucketType) {
		return nil, false
	}
	return o.BucketType, true
}

// HasBucketType returns a boolean if a field has been set.
func (o *IBMCosTargetSpec) HasBucketType() bool {
	if o != nil && !IsNil(o.BucketType) {
		return true
	}

	return false
}

// SetBucketType gets a reference to the given IbmBucketType and assigns it to the BucketType field.
func (o *IBMCosTargetSpec) SetBucketType(v IbmBucketType) {
	o.BucketType = &v
}

// GetEndpoint returns the Endpoint field value
func (o *IBMCosTargetSpec) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *IBMCosTargetSpec) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *IBMCosTargetSpec) SetEndpoint(v string) {
	o.Endpoint = v
}

// GetServiceCrn returns the ServiceCrn field value if set, zero value otherwise.
func (o *IBMCosTargetSpec) GetServiceCrn() string {
	if o == nil || IsNil(o.ServiceCrn) {
		var ret string
		return ret
	}
	return *o.ServiceCrn
}

// GetServiceCrnOk returns a tuple with the ServiceCrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IBMCosTargetSpec) GetServiceCrnOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceCrn) {
		return nil, false
	}
	return o.ServiceCrn, true
}

// HasServiceCrn returns a boolean if a field has been set.
func (o *IBMCosTargetSpec) HasServiceCrn() bool {
	if o != nil && !IsNil(o.ServiceCrn) {
		return true
	}

	return false
}

// SetServiceCrn gets a reference to the given string and assigns it to the ServiceCrn field.
func (o *IBMCosTargetSpec) SetServiceCrn(v string) {
	o.ServiceCrn = &v
}

func (o IBMCosTargetSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IBMCosTargetSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bucketCrn"] = o.BucketCrn
	if !IsNil(o.BucketType) {
		toSerialize["bucketType"] = o.BucketType
	}
	toSerialize["endpoint"] = o.Endpoint
	if !IsNil(o.ServiceCrn) {
		toSerialize["serviceCrn"] = o.ServiceCrn
	}
	return toSerialize, nil
}

func (o *IBMCosTargetSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bucketCrn",
		"endpoint",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIBMCosTargetSpec := _IBMCosTargetSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIBMCosTargetSpec)

	if err != nil {
		return err
	}

	*o = IBMCosTargetSpec(varIBMCosTargetSpec)

	return err
}

type NullableIBMCosTargetSpec struct {
	value *IBMCosTargetSpec
	isSet bool
}

func (v NullableIBMCosTargetSpec) Get() *IBMCosTargetSpec {
	return v.value
}

func (v *NullableIBMCosTargetSpec) Set(val *IBMCosTargetSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableIBMCosTargetSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableIBMCosTargetSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIBMCosTargetSpec(val *IBMCosTargetSpec) *NullableIBMCosTargetSpec {
	return &NullableIBMCosTargetSpec{value: val, isSet: true}
}

func (v NullableIBMCosTargetSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIBMCosTargetSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


