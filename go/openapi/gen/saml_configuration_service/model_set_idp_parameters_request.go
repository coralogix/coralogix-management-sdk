/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package saml_configuration_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SetIDPParametersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetIDPParametersRequest{}

// SetIDPParametersRequest This data structure is used to set the parameters of a SAML identity provider
type SetIDPParametersRequest struct {
	Params IDPParameters `json:"params"`
	TeamId int64 `json:"teamId"`
}

type _SetIDPParametersRequest SetIDPParametersRequest

// NewSetIDPParametersRequest instantiates a new SetIDPParametersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetIDPParametersRequest(params IDPParameters, teamId int64) *SetIDPParametersRequest {
	this := SetIDPParametersRequest{}
	this.Params = params
	this.TeamId = teamId
	return &this
}

// NewSetIDPParametersRequestWithDefaults instantiates a new SetIDPParametersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetIDPParametersRequestWithDefaults() *SetIDPParametersRequest {
	this := SetIDPParametersRequest{}
	return &this
}

// GetParams returns the Params field value
func (o *SetIDPParametersRequest) GetParams() IDPParameters {
	if o == nil {
		var ret IDPParameters
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *SetIDPParametersRequest) GetParamsOk() (*IDPParameters, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Params, true
}

// SetParams sets field value
func (o *SetIDPParametersRequest) SetParams(v IDPParameters) {
	o.Params = v
}

// GetTeamId returns the TeamId field value
func (o *SetIDPParametersRequest) GetTeamId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value
// and a boolean to check if the value has been set.
func (o *SetIDPParametersRequest) GetTeamIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamId, true
}

// SetTeamId sets field value
func (o *SetIDPParametersRequest) SetTeamId(v int64) {
	o.TeamId = v
}

func (o SetIDPParametersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetIDPParametersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["params"] = o.Params
	toSerialize["teamId"] = o.TeamId
	return toSerialize, nil
}

func (o *SetIDPParametersRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"params",
		"teamId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetIDPParametersRequest := _SetIDPParametersRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSetIDPParametersRequest)

	if err != nil {
		return err
	}

	*o = SetIDPParametersRequest(varSetIDPParametersRequest)

	return err
}

type NullableSetIDPParametersRequest struct {
	value *SetIDPParametersRequest
	isSet bool
}

func (v NullableSetIDPParametersRequest) Get() *SetIDPParametersRequest {
	return v.value
}

func (v *NullableSetIDPParametersRequest) Set(val *SetIDPParametersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetIDPParametersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetIDPParametersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetIDPParametersRequest(val *SetIDPParametersRequest) *NullableSetIDPParametersRequest {
	return &NullableSetIDPParametersRequest{value: val, isSet: true}
}

func (v NullableSetIDPParametersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetIDPParametersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


