/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package saml_configuration_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetConfigurationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetConfigurationResponse{}

// GetConfigurationResponse This data structure is obtained as a response to a request to retrieve the configuration of a SAML service provider and identity provider
type GetConfigurationResponse struct {
	IdpDetails *IDPDetails `json:"idpDetails,omitempty"`
	IdpParameters IDPParameters `json:"idpParameters"`
	SpParameters SPParameters `json:"spParameters"`
	TeamId int64 `json:"teamId"`
}

type _GetConfigurationResponse GetConfigurationResponse

// NewGetConfigurationResponse instantiates a new GetConfigurationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConfigurationResponse(idpParameters IDPParameters, spParameters SPParameters, teamId int64) *GetConfigurationResponse {
	this := GetConfigurationResponse{}
	this.IdpParameters = idpParameters
	this.SpParameters = spParameters
	this.TeamId = teamId
	return &this
}

// NewGetConfigurationResponseWithDefaults instantiates a new GetConfigurationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConfigurationResponseWithDefaults() *GetConfigurationResponse {
	this := GetConfigurationResponse{}
	return &this
}

// GetIdpDetails returns the IdpDetails field value if set, zero value otherwise.
func (o *GetConfigurationResponse) GetIdpDetails() IDPDetails {
	if o == nil || IsNil(o.IdpDetails) {
		var ret IDPDetails
		return ret
	}
	return *o.IdpDetails
}

// GetIdpDetailsOk returns a tuple with the IdpDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConfigurationResponse) GetIdpDetailsOk() (*IDPDetails, bool) {
	if o == nil || IsNil(o.IdpDetails) {
		return nil, false
	}
	return o.IdpDetails, true
}

// HasIdpDetails returns a boolean if a field has been set.
func (o *GetConfigurationResponse) HasIdpDetails() bool {
	if o != nil && !IsNil(o.IdpDetails) {
		return true
	}

	return false
}

// SetIdpDetails gets a reference to the given IDPDetails and assigns it to the IdpDetails field.
func (o *GetConfigurationResponse) SetIdpDetails(v IDPDetails) {
	o.IdpDetails = &v
}

// GetIdpParameters returns the IdpParameters field value
func (o *GetConfigurationResponse) GetIdpParameters() IDPParameters {
	if o == nil {
		var ret IDPParameters
		return ret
	}

	return o.IdpParameters
}

// GetIdpParametersOk returns a tuple with the IdpParameters field value
// and a boolean to check if the value has been set.
func (o *GetConfigurationResponse) GetIdpParametersOk() (*IDPParameters, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdpParameters, true
}

// SetIdpParameters sets field value
func (o *GetConfigurationResponse) SetIdpParameters(v IDPParameters) {
	o.IdpParameters = v
}

// GetSpParameters returns the SpParameters field value
func (o *GetConfigurationResponse) GetSpParameters() SPParameters {
	if o == nil {
		var ret SPParameters
		return ret
	}

	return o.SpParameters
}

// GetSpParametersOk returns a tuple with the SpParameters field value
// and a boolean to check if the value has been set.
func (o *GetConfigurationResponse) GetSpParametersOk() (*SPParameters, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpParameters, true
}

// SetSpParameters sets field value
func (o *GetConfigurationResponse) SetSpParameters(v SPParameters) {
	o.SpParameters = v
}

// GetTeamId returns the TeamId field value
func (o *GetConfigurationResponse) GetTeamId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value
// and a boolean to check if the value has been set.
func (o *GetConfigurationResponse) GetTeamIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamId, true
}

// SetTeamId sets field value
func (o *GetConfigurationResponse) SetTeamId(v int64) {
	o.TeamId = v
}

func (o GetConfigurationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetConfigurationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdpDetails) {
		toSerialize["idpDetails"] = o.IdpDetails
	}
	toSerialize["idpParameters"] = o.IdpParameters
	toSerialize["spParameters"] = o.SpParameters
	toSerialize["teamId"] = o.TeamId
	return toSerialize, nil
}

func (o *GetConfigurationResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"idpParameters",
		"spParameters",
		"teamId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetConfigurationResponse := _GetConfigurationResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetConfigurationResponse)

	if err != nil {
		return err
	}

	*o = GetConfigurationResponse(varGetConfigurationResponse)

	return err
}

type NullableGetConfigurationResponse struct {
	value *GetConfigurationResponse
	isSet bool
}

func (v NullableGetConfigurationResponse) Get() *GetConfigurationResponse {
	return v.value
}

func (v *NullableGetConfigurationResponse) Set(val *GetConfigurationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConfigurationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConfigurationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConfigurationResponse(val *GetConfigurationResponse) *NullableGetConfigurationResponse {
	return &NullableGetConfigurationResponse{value: val, isSet: true}
}

func (v NullableGetConfigurationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConfigurationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


