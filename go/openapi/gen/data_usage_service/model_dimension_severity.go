/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data_usage_service

import (
	"encoding/json"
)

// checks if the DimensionSeverity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DimensionSeverity{}

// DimensionSeverity struct for DimensionSeverity
type DimensionSeverity struct {
	Severity *DatausageV2Severity `json:"severity,omitempty"`
}

// NewDimensionSeverity instantiates a new DimensionSeverity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDimensionSeverity() *DimensionSeverity {
	this := DimensionSeverity{}
	return &this
}

// NewDimensionSeverityWithDefaults instantiates a new DimensionSeverity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDimensionSeverityWithDefaults() *DimensionSeverity {
	this := DimensionSeverity{}
	return &this
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *DimensionSeverity) GetSeverity() DatausageV2Severity {
	if o == nil || IsNil(o.Severity) {
		var ret DatausageV2Severity
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionSeverity) GetSeverityOk() (*DatausageV2Severity, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *DimensionSeverity) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given DatausageV2Severity and assigns it to the Severity field.
func (o *DimensionSeverity) SetSeverity(v DatausageV2Severity) {
	o.Severity = &v
}

func (o DimensionSeverity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DimensionSeverity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	return toSerialize, nil
}

type NullableDimensionSeverity struct {
	value *DimensionSeverity
	isSet bool
}

func (v NullableDimensionSeverity) Get() *DimensionSeverity {
	return v.value
}

func (v *NullableDimensionSeverity) Set(val *DimensionSeverity) {
	v.value = val
	v.isSet = true
}

func (v NullableDimensionSeverity) IsSet() bool {
	return v.isSet
}

func (v *NullableDimensionSeverity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDimensionSeverity(val *DimensionSeverity) *NullableDimensionSeverity {
	return &NullableDimensionSeverity{value: val, isSet: true}
}

func (v NullableDimensionSeverity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDimensionSeverity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


