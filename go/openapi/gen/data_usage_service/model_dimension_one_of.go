/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data_usage_service

import (
	"encoding/json"
)

// checks if the DimensionOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DimensionOneOf{}

// DimensionOneOf struct for DimensionOneOf
type DimensionOneOf struct {
	Pillar *V2Pillar `json:"pillar,omitempty"`
}

// NewDimensionOneOf instantiates a new DimensionOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDimensionOneOf() *DimensionOneOf {
	this := DimensionOneOf{}
	return &this
}

// NewDimensionOneOfWithDefaults instantiates a new DimensionOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDimensionOneOfWithDefaults() *DimensionOneOf {
	this := DimensionOneOf{}
	return &this
}

// GetPillar returns the Pillar field value if set, zero value otherwise.
func (o *DimensionOneOf) GetPillar() V2Pillar {
	if o == nil || IsNil(o.Pillar) {
		var ret V2Pillar
		return ret
	}
	return *o.Pillar
}

// GetPillarOk returns a tuple with the Pillar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionOneOf) GetPillarOk() (*V2Pillar, bool) {
	if o == nil || IsNil(o.Pillar) {
		return nil, false
	}
	return o.Pillar, true
}

// HasPillar returns a boolean if a field has been set.
func (o *DimensionOneOf) HasPillar() bool {
	if o != nil && !IsNil(o.Pillar) {
		return true
	}

	return false
}

// SetPillar gets a reference to the given V2Pillar and assigns it to the Pillar field.
func (o *DimensionOneOf) SetPillar(v V2Pillar) {
	o.Pillar = &v
}

func (o DimensionOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DimensionOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pillar) {
		toSerialize["pillar"] = o.Pillar
	}
	return toSerialize, nil
}

type NullableDimensionOneOf struct {
	value *DimensionOneOf
	isSet bool
}

func (v NullableDimensionOneOf) Get() *DimensionOneOf {
	return v.value
}

func (v *NullableDimensionOneOf) Set(val *DimensionOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDimensionOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDimensionOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDimensionOneOf(val *DimensionOneOf) *NullableDimensionOneOf {
	return &NullableDimensionOneOf{value: val, isSet: true}
}

func (v NullableDimensionOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDimensionOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


