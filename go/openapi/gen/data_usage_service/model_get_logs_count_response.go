/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data_usage_service

import (
	"encoding/json"
)

// checks if the GetLogsCountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLogsCountResponse{}

// GetLogsCountResponse This data structure is used to return logs count.
type GetLogsCountResponse struct {
	LogsCount []LogsCount `json:"logsCount,omitempty"`
}

// NewGetLogsCountResponse instantiates a new GetLogsCountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLogsCountResponse() *GetLogsCountResponse {
	this := GetLogsCountResponse{}
	return &this
}

// NewGetLogsCountResponseWithDefaults instantiates a new GetLogsCountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLogsCountResponseWithDefaults() *GetLogsCountResponse {
	this := GetLogsCountResponse{}
	return &this
}

// GetLogsCount returns the LogsCount field value if set, zero value otherwise.
func (o *GetLogsCountResponse) GetLogsCount() []LogsCount {
	if o == nil || IsNil(o.LogsCount) {
		var ret []LogsCount
		return ret
	}
	return o.LogsCount
}

// GetLogsCountOk returns a tuple with the LogsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLogsCountResponse) GetLogsCountOk() ([]LogsCount, bool) {
	if o == nil || IsNil(o.LogsCount) {
		return nil, false
	}
	return o.LogsCount, true
}

// HasLogsCount returns a boolean if a field has been set.
func (o *GetLogsCountResponse) HasLogsCount() bool {
	if o != nil && !IsNil(o.LogsCount) {
		return true
	}

	return false
}

// SetLogsCount gets a reference to the given []LogsCount and assigns it to the LogsCount field.
func (o *GetLogsCountResponse) SetLogsCount(v []LogsCount) {
	o.LogsCount = v
}

func (o GetLogsCountResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLogsCountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LogsCount) {
		toSerialize["logsCount"] = o.LogsCount
	}
	return toSerialize, nil
}

type NullableGetLogsCountResponse struct {
	value *GetLogsCountResponse
	isSet bool
}

func (v NullableGetLogsCountResponse) Get() *GetLogsCountResponse {
	return v.value
}

func (v *NullableGetLogsCountResponse) Set(val *GetLogsCountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLogsCountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLogsCountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLogsCountResponse(val *GetLogsCountResponse) *NullableGetLogsCountResponse {
	return &NullableGetLogsCountResponse{value: val, isSet: true}
}

func (v NullableGetLogsCountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLogsCountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


