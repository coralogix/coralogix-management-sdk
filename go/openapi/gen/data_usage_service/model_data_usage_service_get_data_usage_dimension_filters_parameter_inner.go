/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data_usage_service

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// DataUsageServiceGetDataUsageDimensionFiltersParameterInner - struct for DataUsageServiceGetDataUsageDimensionFiltersParameterInner
type DataUsageServiceGetDataUsageDimensionFiltersParameterInner struct {
	DimensionGenericDimension *DimensionGenericDimension
	DimensionPillar *DimensionPillar
	DimensionPriority *DimensionPriority
	DimensionSeverity *DimensionSeverity
	DimensionTier *DimensionTier
}

// DimensionGenericDimensionAsDataUsageServiceGetDataUsageDimensionFiltersParameterInner is a convenience function that returns DimensionGenericDimension wrapped in DataUsageServiceGetDataUsageDimensionFiltersParameterInner
func DimensionGenericDimensionAsDataUsageServiceGetDataUsageDimensionFiltersParameterInner(v *DimensionGenericDimension) DataUsageServiceGetDataUsageDimensionFiltersParameterInner {
	return DataUsageServiceGetDataUsageDimensionFiltersParameterInner{
		DimensionGenericDimension: v,
	}
}

// DimensionPillarAsDataUsageServiceGetDataUsageDimensionFiltersParameterInner is a convenience function that returns DimensionPillar wrapped in DataUsageServiceGetDataUsageDimensionFiltersParameterInner
func DimensionPillarAsDataUsageServiceGetDataUsageDimensionFiltersParameterInner(v *DimensionPillar) DataUsageServiceGetDataUsageDimensionFiltersParameterInner {
	return DataUsageServiceGetDataUsageDimensionFiltersParameterInner{
		DimensionPillar: v,
	}
}

// DimensionPriorityAsDataUsageServiceGetDataUsageDimensionFiltersParameterInner is a convenience function that returns DimensionPriority wrapped in DataUsageServiceGetDataUsageDimensionFiltersParameterInner
func DimensionPriorityAsDataUsageServiceGetDataUsageDimensionFiltersParameterInner(v *DimensionPriority) DataUsageServiceGetDataUsageDimensionFiltersParameterInner {
	return DataUsageServiceGetDataUsageDimensionFiltersParameterInner{
		DimensionPriority: v,
	}
}

// DimensionSeverityAsDataUsageServiceGetDataUsageDimensionFiltersParameterInner is a convenience function that returns DimensionSeverity wrapped in DataUsageServiceGetDataUsageDimensionFiltersParameterInner
func DimensionSeverityAsDataUsageServiceGetDataUsageDimensionFiltersParameterInner(v *DimensionSeverity) DataUsageServiceGetDataUsageDimensionFiltersParameterInner {
	return DataUsageServiceGetDataUsageDimensionFiltersParameterInner{
		DimensionSeverity: v,
	}
}

// DimensionTierAsDataUsageServiceGetDataUsageDimensionFiltersParameterInner is a convenience function that returns DimensionTier wrapped in DataUsageServiceGetDataUsageDimensionFiltersParameterInner
func DimensionTierAsDataUsageServiceGetDataUsageDimensionFiltersParameterInner(v *DimensionTier) DataUsageServiceGetDataUsageDimensionFiltersParameterInner {
	return DataUsageServiceGetDataUsageDimensionFiltersParameterInner{
		DimensionTier: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *DataUsageServiceGetDataUsageDimensionFiltersParameterInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into DimensionGenericDimension
	err = newStrictDecoder(data).Decode(&dst.DimensionGenericDimension)
	if err == nil {
		jsonDimensionGenericDimension, _ := json.Marshal(dst.DimensionGenericDimension)
		if string(jsonDimensionGenericDimension) == "{}" { // empty struct
			dst.DimensionGenericDimension = nil
		} else {
			if err = validator.Validate(dst.DimensionGenericDimension); err != nil {
				dst.DimensionGenericDimension = nil
			} else {
				match++
			}
		}
	} else {
		dst.DimensionGenericDimension = nil
	}

	// try to unmarshal data into DimensionPillar
	err = newStrictDecoder(data).Decode(&dst.DimensionPillar)
	if err == nil {
		jsonDimensionPillar, _ := json.Marshal(dst.DimensionPillar)
		if string(jsonDimensionPillar) == "{}" { // empty struct
			dst.DimensionPillar = nil
		} else {
			if err = validator.Validate(dst.DimensionPillar); err != nil {
				dst.DimensionPillar = nil
			} else {
				match++
			}
		}
	} else {
		dst.DimensionPillar = nil
	}

	// try to unmarshal data into DimensionPriority
	err = newStrictDecoder(data).Decode(&dst.DimensionPriority)
	if err == nil {
		jsonDimensionPriority, _ := json.Marshal(dst.DimensionPriority)
		if string(jsonDimensionPriority) == "{}" { // empty struct
			dst.DimensionPriority = nil
		} else {
			if err = validator.Validate(dst.DimensionPriority); err != nil {
				dst.DimensionPriority = nil
			} else {
				match++
			}
		}
	} else {
		dst.DimensionPriority = nil
	}

	// try to unmarshal data into DimensionSeverity
	err = newStrictDecoder(data).Decode(&dst.DimensionSeverity)
	if err == nil {
		jsonDimensionSeverity, _ := json.Marshal(dst.DimensionSeverity)
		if string(jsonDimensionSeverity) == "{}" { // empty struct
			dst.DimensionSeverity = nil
		} else {
			if err = validator.Validate(dst.DimensionSeverity); err != nil {
				dst.DimensionSeverity = nil
			} else {
				match++
			}
		}
	} else {
		dst.DimensionSeverity = nil
	}

	// try to unmarshal data into DimensionTier
	err = newStrictDecoder(data).Decode(&dst.DimensionTier)
	if err == nil {
		jsonDimensionTier, _ := json.Marshal(dst.DimensionTier)
		if string(jsonDimensionTier) == "{}" { // empty struct
			dst.DimensionTier = nil
		} else {
			if err = validator.Validate(dst.DimensionTier); err != nil {
				dst.DimensionTier = nil
			} else {
				match++
			}
		}
	} else {
		dst.DimensionTier = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.DimensionGenericDimension = nil
		dst.DimensionPillar = nil
		dst.DimensionPriority = nil
		dst.DimensionSeverity = nil
		dst.DimensionTier = nil

		return fmt.Errorf("data matches more than one schema in oneOf(DataUsageServiceGetDataUsageDimensionFiltersParameterInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(DataUsageServiceGetDataUsageDimensionFiltersParameterInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src DataUsageServiceGetDataUsageDimensionFiltersParameterInner) MarshalJSON() ([]byte, error) {
	if src.DimensionGenericDimension != nil {
		return json.Marshal(&src.DimensionGenericDimension)
	}

	if src.DimensionPillar != nil {
		return json.Marshal(&src.DimensionPillar)
	}

	if src.DimensionPriority != nil {
		return json.Marshal(&src.DimensionPriority)
	}

	if src.DimensionSeverity != nil {
		return json.Marshal(&src.DimensionSeverity)
	}

	if src.DimensionTier != nil {
		return json.Marshal(&src.DimensionTier)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *DataUsageServiceGetDataUsageDimensionFiltersParameterInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.DimensionGenericDimension != nil {
		return obj.DimensionGenericDimension
	}

	if obj.DimensionPillar != nil {
		return obj.DimensionPillar
	}

	if obj.DimensionPriority != nil {
		return obj.DimensionPriority
	}

	if obj.DimensionSeverity != nil {
		return obj.DimensionSeverity
	}

	if obj.DimensionTier != nil {
		return obj.DimensionTier
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj DataUsageServiceGetDataUsageDimensionFiltersParameterInner) GetActualInstanceValue() (interface{}) {
	if obj.DimensionGenericDimension != nil {
		return *obj.DimensionGenericDimension
	}

	if obj.DimensionPillar != nil {
		return *obj.DimensionPillar
	}

	if obj.DimensionPriority != nil {
		return *obj.DimensionPriority
	}

	if obj.DimensionSeverity != nil {
		return *obj.DimensionSeverity
	}

	if obj.DimensionTier != nil {
		return *obj.DimensionTier
	}

	// all schemas are nil
	return nil
}

type NullableDataUsageServiceGetDataUsageDimensionFiltersParameterInner struct {
	value *DataUsageServiceGetDataUsageDimensionFiltersParameterInner
	isSet bool
}

func (v NullableDataUsageServiceGetDataUsageDimensionFiltersParameterInner) Get() *DataUsageServiceGetDataUsageDimensionFiltersParameterInner {
	return v.value
}

func (v *NullableDataUsageServiceGetDataUsageDimensionFiltersParameterInner) Set(val *DataUsageServiceGetDataUsageDimensionFiltersParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDataUsageServiceGetDataUsageDimensionFiltersParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDataUsageServiceGetDataUsageDimensionFiltersParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataUsageServiceGetDataUsageDimensionFiltersParameterInner(val *DataUsageServiceGetDataUsageDimensionFiltersParameterInner) *NullableDataUsageServiceGetDataUsageDimensionFiltersParameterInner {
	return &NullableDataUsageServiceGetDataUsageDimensionFiltersParameterInner{value: val, isSet: true}
}

func (v NullableDataUsageServiceGetDataUsageDimensionFiltersParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataUsageServiceGetDataUsageDimensionFiltersParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


