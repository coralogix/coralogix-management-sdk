/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data_usage_service

import (
	"encoding/json"
	"time"
)

// checks if the DetailedDailyEvaluationTokens type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DetailedDailyEvaluationTokens{}

// DetailedDailyEvaluationTokens struct for DetailedDailyEvaluationTokens
type DetailedDailyEvaluationTokens struct {
	Evaluations []Evaluation `json:"evaluations,omitempty"`
	StatsDate *time.Time `json:"statsDate,omitempty"`
	TotalTokens *Token `json:"totalTokens,omitempty"`
}

// NewDetailedDailyEvaluationTokens instantiates a new DetailedDailyEvaluationTokens object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetailedDailyEvaluationTokens() *DetailedDailyEvaluationTokens {
	this := DetailedDailyEvaluationTokens{}
	return &this
}

// NewDetailedDailyEvaluationTokensWithDefaults instantiates a new DetailedDailyEvaluationTokens object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetailedDailyEvaluationTokensWithDefaults() *DetailedDailyEvaluationTokens {
	this := DetailedDailyEvaluationTokens{}
	return &this
}

// GetEvaluations returns the Evaluations field value if set, zero value otherwise.
func (o *DetailedDailyEvaluationTokens) GetEvaluations() []Evaluation {
	if o == nil || IsNil(o.Evaluations) {
		var ret []Evaluation
		return ret
	}
	return o.Evaluations
}

// GetEvaluationsOk returns a tuple with the Evaluations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyEvaluationTokens) GetEvaluationsOk() ([]Evaluation, bool) {
	if o == nil || IsNil(o.Evaluations) {
		return nil, false
	}
	return o.Evaluations, true
}

// HasEvaluations returns a boolean if a field has been set.
func (o *DetailedDailyEvaluationTokens) HasEvaluations() bool {
	if o != nil && !IsNil(o.Evaluations) {
		return true
	}

	return false
}

// SetEvaluations gets a reference to the given []Evaluation and assigns it to the Evaluations field.
func (o *DetailedDailyEvaluationTokens) SetEvaluations(v []Evaluation) {
	o.Evaluations = v
}

// GetStatsDate returns the StatsDate field value if set, zero value otherwise.
func (o *DetailedDailyEvaluationTokens) GetStatsDate() time.Time {
	if o == nil || IsNil(o.StatsDate) {
		var ret time.Time
		return ret
	}
	return *o.StatsDate
}

// GetStatsDateOk returns a tuple with the StatsDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyEvaluationTokens) GetStatsDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StatsDate) {
		return nil, false
	}
	return o.StatsDate, true
}

// HasStatsDate returns a boolean if a field has been set.
func (o *DetailedDailyEvaluationTokens) HasStatsDate() bool {
	if o != nil && !IsNil(o.StatsDate) {
		return true
	}

	return false
}

// SetStatsDate gets a reference to the given time.Time and assigns it to the StatsDate field.
func (o *DetailedDailyEvaluationTokens) SetStatsDate(v time.Time) {
	o.StatsDate = &v
}

// GetTotalTokens returns the TotalTokens field value if set, zero value otherwise.
func (o *DetailedDailyEvaluationTokens) GetTotalTokens() Token {
	if o == nil || IsNil(o.TotalTokens) {
		var ret Token
		return ret
	}
	return *o.TotalTokens
}

// GetTotalTokensOk returns a tuple with the TotalTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyEvaluationTokens) GetTotalTokensOk() (*Token, bool) {
	if o == nil || IsNil(o.TotalTokens) {
		return nil, false
	}
	return o.TotalTokens, true
}

// HasTotalTokens returns a boolean if a field has been set.
func (o *DetailedDailyEvaluationTokens) HasTotalTokens() bool {
	if o != nil && !IsNil(o.TotalTokens) {
		return true
	}

	return false
}

// SetTotalTokens gets a reference to the given Token and assigns it to the TotalTokens field.
func (o *DetailedDailyEvaluationTokens) SetTotalTokens(v Token) {
	o.TotalTokens = &v
}

func (o DetailedDailyEvaluationTokens) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DetailedDailyEvaluationTokens) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Evaluations) {
		toSerialize["evaluations"] = o.Evaluations
	}
	if !IsNil(o.StatsDate) {
		toSerialize["statsDate"] = o.StatsDate
	}
	if !IsNil(o.TotalTokens) {
		toSerialize["totalTokens"] = o.TotalTokens
	}
	return toSerialize, nil
}

type NullableDetailedDailyEvaluationTokens struct {
	value *DetailedDailyEvaluationTokens
	isSet bool
}

func (v NullableDetailedDailyEvaluationTokens) Get() *DetailedDailyEvaluationTokens {
	return v.value
}

func (v *NullableDetailedDailyEvaluationTokens) Set(val *DetailedDailyEvaluationTokens) {
	v.value = val
	v.isSet = true
}

func (v NullableDetailedDailyEvaluationTokens) IsSet() bool {
	return v.isSet
}

func (v *NullableDetailedDailyEvaluationTokens) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetailedDailyEvaluationTokens(val *DetailedDailyEvaluationTokens) *NullableDetailedDailyEvaluationTokens {
	return &NullableDetailedDailyEvaluationTokens{value: val, isSet: true}
}

func (v NullableDetailedDailyEvaluationTokens) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetailedDailyEvaluationTokens) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


