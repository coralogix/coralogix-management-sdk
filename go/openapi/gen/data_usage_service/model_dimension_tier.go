/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data_usage_service

import (
	"encoding/json"
)

// checks if the DimensionTier type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DimensionTier{}

// DimensionTier struct for DimensionTier
type DimensionTier struct {
	Tier *V2TcoTier `json:"tier,omitempty"`
}

// NewDimensionTier instantiates a new DimensionTier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDimensionTier() *DimensionTier {
	this := DimensionTier{}
	return &this
}

// NewDimensionTierWithDefaults instantiates a new DimensionTier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDimensionTierWithDefaults() *DimensionTier {
	this := DimensionTier{}
	return &this
}

// GetTier returns the Tier field value if set, zero value otherwise.
func (o *DimensionTier) GetTier() V2TcoTier {
	if o == nil || IsNil(o.Tier) {
		var ret V2TcoTier
		return ret
	}
	return *o.Tier
}

// GetTierOk returns a tuple with the Tier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionTier) GetTierOk() (*V2TcoTier, bool) {
	if o == nil || IsNil(o.Tier) {
		return nil, false
	}
	return o.Tier, true
}

// HasTier returns a boolean if a field has been set.
func (o *DimensionTier) HasTier() bool {
	if o != nil && !IsNil(o.Tier) {
		return true
	}

	return false
}

// SetTier gets a reference to the given V2TcoTier and assigns it to the Tier field.
func (o *DimensionTier) SetTier(v V2TcoTier) {
	o.Tier = &v
}

func (o DimensionTier) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DimensionTier) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tier) {
		toSerialize["tier"] = o.Tier
	}
	return toSerialize, nil
}

type NullableDimensionTier struct {
	value *DimensionTier
	isSet bool
}

func (v NullableDimensionTier) Get() *DimensionTier {
	return v.value
}

func (v *NullableDimensionTier) Set(val *DimensionTier) {
	v.value = val
	v.isSet = true
}

func (v NullableDimensionTier) IsSet() bool {
	return v.isSet
}

func (v *NullableDimensionTier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDimensionTier(val *DimensionTier) *NullableDimensionTier {
	return &NullableDimensionTier{value: val, isSet: true}
}

func (v NullableDimensionTier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDimensionTier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


