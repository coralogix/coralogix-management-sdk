/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data_usage_service

import (
	"encoding/json"
	"time"
)

// checks if the SpansCount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpansCount{}

// SpansCount This data structure represents a spans count.
type SpansCount struct {
	ErrorSpanCount *string `json:"errorSpanCount,omitempty"`
	LowErrorSpanCount *string `json:"lowErrorSpanCount,omitempty"`
	LowSuccessSpanCount *string `json:"lowSuccessSpanCount,omitempty"`
	MediumErrorSpanCount *string `json:"mediumErrorSpanCount,omitempty"`
	MediumSuccessSpanCount *string `json:"mediumSuccessSpanCount,omitempty"`
	SuccessSpanCount *string `json:"successSpanCount,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
}

// NewSpansCount instantiates a new SpansCount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpansCount() *SpansCount {
	this := SpansCount{}
	return &this
}

// NewSpansCountWithDefaults instantiates a new SpansCount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpansCountWithDefaults() *SpansCount {
	this := SpansCount{}
	return &this
}

// GetErrorSpanCount returns the ErrorSpanCount field value if set, zero value otherwise.
func (o *SpansCount) GetErrorSpanCount() string {
	if o == nil || IsNil(o.ErrorSpanCount) {
		var ret string
		return ret
	}
	return *o.ErrorSpanCount
}

// GetErrorSpanCountOk returns a tuple with the ErrorSpanCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpansCount) GetErrorSpanCountOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorSpanCount) {
		return nil, false
	}
	return o.ErrorSpanCount, true
}

// HasErrorSpanCount returns a boolean if a field has been set.
func (o *SpansCount) HasErrorSpanCount() bool {
	if o != nil && !IsNil(o.ErrorSpanCount) {
		return true
	}

	return false
}

// SetErrorSpanCount gets a reference to the given string and assigns it to the ErrorSpanCount field.
func (o *SpansCount) SetErrorSpanCount(v string) {
	o.ErrorSpanCount = &v
}

// GetLowErrorSpanCount returns the LowErrorSpanCount field value if set, zero value otherwise.
func (o *SpansCount) GetLowErrorSpanCount() string {
	if o == nil || IsNil(o.LowErrorSpanCount) {
		var ret string
		return ret
	}
	return *o.LowErrorSpanCount
}

// GetLowErrorSpanCountOk returns a tuple with the LowErrorSpanCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpansCount) GetLowErrorSpanCountOk() (*string, bool) {
	if o == nil || IsNil(o.LowErrorSpanCount) {
		return nil, false
	}
	return o.LowErrorSpanCount, true
}

// HasLowErrorSpanCount returns a boolean if a field has been set.
func (o *SpansCount) HasLowErrorSpanCount() bool {
	if o != nil && !IsNil(o.LowErrorSpanCount) {
		return true
	}

	return false
}

// SetLowErrorSpanCount gets a reference to the given string and assigns it to the LowErrorSpanCount field.
func (o *SpansCount) SetLowErrorSpanCount(v string) {
	o.LowErrorSpanCount = &v
}

// GetLowSuccessSpanCount returns the LowSuccessSpanCount field value if set, zero value otherwise.
func (o *SpansCount) GetLowSuccessSpanCount() string {
	if o == nil || IsNil(o.LowSuccessSpanCount) {
		var ret string
		return ret
	}
	return *o.LowSuccessSpanCount
}

// GetLowSuccessSpanCountOk returns a tuple with the LowSuccessSpanCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpansCount) GetLowSuccessSpanCountOk() (*string, bool) {
	if o == nil || IsNil(o.LowSuccessSpanCount) {
		return nil, false
	}
	return o.LowSuccessSpanCount, true
}

// HasLowSuccessSpanCount returns a boolean if a field has been set.
func (o *SpansCount) HasLowSuccessSpanCount() bool {
	if o != nil && !IsNil(o.LowSuccessSpanCount) {
		return true
	}

	return false
}

// SetLowSuccessSpanCount gets a reference to the given string and assigns it to the LowSuccessSpanCount field.
func (o *SpansCount) SetLowSuccessSpanCount(v string) {
	o.LowSuccessSpanCount = &v
}

// GetMediumErrorSpanCount returns the MediumErrorSpanCount field value if set, zero value otherwise.
func (o *SpansCount) GetMediumErrorSpanCount() string {
	if o == nil || IsNil(o.MediumErrorSpanCount) {
		var ret string
		return ret
	}
	return *o.MediumErrorSpanCount
}

// GetMediumErrorSpanCountOk returns a tuple with the MediumErrorSpanCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpansCount) GetMediumErrorSpanCountOk() (*string, bool) {
	if o == nil || IsNil(o.MediumErrorSpanCount) {
		return nil, false
	}
	return o.MediumErrorSpanCount, true
}

// HasMediumErrorSpanCount returns a boolean if a field has been set.
func (o *SpansCount) HasMediumErrorSpanCount() bool {
	if o != nil && !IsNil(o.MediumErrorSpanCount) {
		return true
	}

	return false
}

// SetMediumErrorSpanCount gets a reference to the given string and assigns it to the MediumErrorSpanCount field.
func (o *SpansCount) SetMediumErrorSpanCount(v string) {
	o.MediumErrorSpanCount = &v
}

// GetMediumSuccessSpanCount returns the MediumSuccessSpanCount field value if set, zero value otherwise.
func (o *SpansCount) GetMediumSuccessSpanCount() string {
	if o == nil || IsNil(o.MediumSuccessSpanCount) {
		var ret string
		return ret
	}
	return *o.MediumSuccessSpanCount
}

// GetMediumSuccessSpanCountOk returns a tuple with the MediumSuccessSpanCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpansCount) GetMediumSuccessSpanCountOk() (*string, bool) {
	if o == nil || IsNil(o.MediumSuccessSpanCount) {
		return nil, false
	}
	return o.MediumSuccessSpanCount, true
}

// HasMediumSuccessSpanCount returns a boolean if a field has been set.
func (o *SpansCount) HasMediumSuccessSpanCount() bool {
	if o != nil && !IsNil(o.MediumSuccessSpanCount) {
		return true
	}

	return false
}

// SetMediumSuccessSpanCount gets a reference to the given string and assigns it to the MediumSuccessSpanCount field.
func (o *SpansCount) SetMediumSuccessSpanCount(v string) {
	o.MediumSuccessSpanCount = &v
}

// GetSuccessSpanCount returns the SuccessSpanCount field value if set, zero value otherwise.
func (o *SpansCount) GetSuccessSpanCount() string {
	if o == nil || IsNil(o.SuccessSpanCount) {
		var ret string
		return ret
	}
	return *o.SuccessSpanCount
}

// GetSuccessSpanCountOk returns a tuple with the SuccessSpanCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpansCount) GetSuccessSpanCountOk() (*string, bool) {
	if o == nil || IsNil(o.SuccessSpanCount) {
		return nil, false
	}
	return o.SuccessSpanCount, true
}

// HasSuccessSpanCount returns a boolean if a field has been set.
func (o *SpansCount) HasSuccessSpanCount() bool {
	if o != nil && !IsNil(o.SuccessSpanCount) {
		return true
	}

	return false
}

// SetSuccessSpanCount gets a reference to the given string and assigns it to the SuccessSpanCount field.
func (o *SpansCount) SetSuccessSpanCount(v string) {
	o.SuccessSpanCount = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *SpansCount) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpansCount) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SpansCount) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *SpansCount) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

func (o SpansCount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpansCount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorSpanCount) {
		toSerialize["errorSpanCount"] = o.ErrorSpanCount
	}
	if !IsNil(o.LowErrorSpanCount) {
		toSerialize["lowErrorSpanCount"] = o.LowErrorSpanCount
	}
	if !IsNil(o.LowSuccessSpanCount) {
		toSerialize["lowSuccessSpanCount"] = o.LowSuccessSpanCount
	}
	if !IsNil(o.MediumErrorSpanCount) {
		toSerialize["mediumErrorSpanCount"] = o.MediumErrorSpanCount
	}
	if !IsNil(o.MediumSuccessSpanCount) {
		toSerialize["mediumSuccessSpanCount"] = o.MediumSuccessSpanCount
	}
	if !IsNil(o.SuccessSpanCount) {
		toSerialize["successSpanCount"] = o.SuccessSpanCount
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableSpansCount struct {
	value *SpansCount
	isSet bool
}

func (v NullableSpansCount) Get() *SpansCount {
	return v.value
}

func (v *NullableSpansCount) Set(val *SpansCount) {
	v.value = val
	v.isSet = true
}

func (v NullableSpansCount) IsSet() bool {
	return v.isSet
}

func (v *NullableSpansCount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpansCount(val *SpansCount) *NullableSpansCount {
	return &NullableSpansCount{value: val, isSet: true}
}

func (v NullableSpansCount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpansCount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


