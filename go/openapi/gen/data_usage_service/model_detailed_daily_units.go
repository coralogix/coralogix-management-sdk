/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data_usage_service

import (
	"encoding/json"
	"time"
)

// checks if the DetailedDailyUnits type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DetailedDailyUnits{}

// DetailedDailyUnits struct for DetailedDailyUnits
type DetailedDailyUnits struct {
	BlockedMetricsUnits *V2Unit `json:"blockedMetricsUnits,omitempty"`
	BlockedUnits *V2Unit `json:"blockedUnits,omitempty"`
	CpuProfilesUnits *V2Unit `json:"cpuProfilesUnits,omitempty"`
	EvaluationUnits *V2Unit `json:"evaluationUnits,omitempty"`
	HighLogsUnits *V2Unit `json:"highLogsUnits,omitempty"`
	HighMetricsUnits *V2Unit `json:"highMetricsUnits,omitempty"`
	HighTracingUnits *V2Unit `json:"highTracingUnits,omitempty"`
	LowLogsUnits *V2Unit `json:"lowLogsUnits,omitempty"`
	LowSessionRecordingUnits *V2Unit `json:"lowSessionRecordingUnits,omitempty"`
	LowTracingUnits *V2Unit `json:"lowTracingUnits,omitempty"`
	MediumLogsUnits *V2Unit `json:"mediumLogsUnits,omitempty"`
	MediumTracingUnits *V2Unit `json:"mediumTracingUnits,omitempty"`
	StatsDate *time.Time `json:"statsDate,omitempty"`
	TotalUnits *V2Unit `json:"totalUnits,omitempty"`
}

// NewDetailedDailyUnits instantiates a new DetailedDailyUnits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetailedDailyUnits() *DetailedDailyUnits {
	this := DetailedDailyUnits{}
	return &this
}

// NewDetailedDailyUnitsWithDefaults instantiates a new DetailedDailyUnits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetailedDailyUnitsWithDefaults() *DetailedDailyUnits {
	this := DetailedDailyUnits{}
	return &this
}

// GetBlockedMetricsUnits returns the BlockedMetricsUnits field value if set, zero value otherwise.
func (o *DetailedDailyUnits) GetBlockedMetricsUnits() V2Unit {
	if o == nil || IsNil(o.BlockedMetricsUnits) {
		var ret V2Unit
		return ret
	}
	return *o.BlockedMetricsUnits
}

// GetBlockedMetricsUnitsOk returns a tuple with the BlockedMetricsUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyUnits) GetBlockedMetricsUnitsOk() (*V2Unit, bool) {
	if o == nil || IsNil(o.BlockedMetricsUnits) {
		return nil, false
	}
	return o.BlockedMetricsUnits, true
}

// HasBlockedMetricsUnits returns a boolean if a field has been set.
func (o *DetailedDailyUnits) HasBlockedMetricsUnits() bool {
	if o != nil && !IsNil(o.BlockedMetricsUnits) {
		return true
	}

	return false
}

// SetBlockedMetricsUnits gets a reference to the given V2Unit and assigns it to the BlockedMetricsUnits field.
func (o *DetailedDailyUnits) SetBlockedMetricsUnits(v V2Unit) {
	o.BlockedMetricsUnits = &v
}

// GetBlockedUnits returns the BlockedUnits field value if set, zero value otherwise.
func (o *DetailedDailyUnits) GetBlockedUnits() V2Unit {
	if o == nil || IsNil(o.BlockedUnits) {
		var ret V2Unit
		return ret
	}
	return *o.BlockedUnits
}

// GetBlockedUnitsOk returns a tuple with the BlockedUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyUnits) GetBlockedUnitsOk() (*V2Unit, bool) {
	if o == nil || IsNil(o.BlockedUnits) {
		return nil, false
	}
	return o.BlockedUnits, true
}

// HasBlockedUnits returns a boolean if a field has been set.
func (o *DetailedDailyUnits) HasBlockedUnits() bool {
	if o != nil && !IsNil(o.BlockedUnits) {
		return true
	}

	return false
}

// SetBlockedUnits gets a reference to the given V2Unit and assigns it to the BlockedUnits field.
func (o *DetailedDailyUnits) SetBlockedUnits(v V2Unit) {
	o.BlockedUnits = &v
}

// GetCpuProfilesUnits returns the CpuProfilesUnits field value if set, zero value otherwise.
func (o *DetailedDailyUnits) GetCpuProfilesUnits() V2Unit {
	if o == nil || IsNil(o.CpuProfilesUnits) {
		var ret V2Unit
		return ret
	}
	return *o.CpuProfilesUnits
}

// GetCpuProfilesUnitsOk returns a tuple with the CpuProfilesUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyUnits) GetCpuProfilesUnitsOk() (*V2Unit, bool) {
	if o == nil || IsNil(o.CpuProfilesUnits) {
		return nil, false
	}
	return o.CpuProfilesUnits, true
}

// HasCpuProfilesUnits returns a boolean if a field has been set.
func (o *DetailedDailyUnits) HasCpuProfilesUnits() bool {
	if o != nil && !IsNil(o.CpuProfilesUnits) {
		return true
	}

	return false
}

// SetCpuProfilesUnits gets a reference to the given V2Unit and assigns it to the CpuProfilesUnits field.
func (o *DetailedDailyUnits) SetCpuProfilesUnits(v V2Unit) {
	o.CpuProfilesUnits = &v
}

// GetEvaluationUnits returns the EvaluationUnits field value if set, zero value otherwise.
func (o *DetailedDailyUnits) GetEvaluationUnits() V2Unit {
	if o == nil || IsNil(o.EvaluationUnits) {
		var ret V2Unit
		return ret
	}
	return *o.EvaluationUnits
}

// GetEvaluationUnitsOk returns a tuple with the EvaluationUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyUnits) GetEvaluationUnitsOk() (*V2Unit, bool) {
	if o == nil || IsNil(o.EvaluationUnits) {
		return nil, false
	}
	return o.EvaluationUnits, true
}

// HasEvaluationUnits returns a boolean if a field has been set.
func (o *DetailedDailyUnits) HasEvaluationUnits() bool {
	if o != nil && !IsNil(o.EvaluationUnits) {
		return true
	}

	return false
}

// SetEvaluationUnits gets a reference to the given V2Unit and assigns it to the EvaluationUnits field.
func (o *DetailedDailyUnits) SetEvaluationUnits(v V2Unit) {
	o.EvaluationUnits = &v
}

// GetHighLogsUnits returns the HighLogsUnits field value if set, zero value otherwise.
func (o *DetailedDailyUnits) GetHighLogsUnits() V2Unit {
	if o == nil || IsNil(o.HighLogsUnits) {
		var ret V2Unit
		return ret
	}
	return *o.HighLogsUnits
}

// GetHighLogsUnitsOk returns a tuple with the HighLogsUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyUnits) GetHighLogsUnitsOk() (*V2Unit, bool) {
	if o == nil || IsNil(o.HighLogsUnits) {
		return nil, false
	}
	return o.HighLogsUnits, true
}

// HasHighLogsUnits returns a boolean if a field has been set.
func (o *DetailedDailyUnits) HasHighLogsUnits() bool {
	if o != nil && !IsNil(o.HighLogsUnits) {
		return true
	}

	return false
}

// SetHighLogsUnits gets a reference to the given V2Unit and assigns it to the HighLogsUnits field.
func (o *DetailedDailyUnits) SetHighLogsUnits(v V2Unit) {
	o.HighLogsUnits = &v
}

// GetHighMetricsUnits returns the HighMetricsUnits field value if set, zero value otherwise.
func (o *DetailedDailyUnits) GetHighMetricsUnits() V2Unit {
	if o == nil || IsNil(o.HighMetricsUnits) {
		var ret V2Unit
		return ret
	}
	return *o.HighMetricsUnits
}

// GetHighMetricsUnitsOk returns a tuple with the HighMetricsUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyUnits) GetHighMetricsUnitsOk() (*V2Unit, bool) {
	if o == nil || IsNil(o.HighMetricsUnits) {
		return nil, false
	}
	return o.HighMetricsUnits, true
}

// HasHighMetricsUnits returns a boolean if a field has been set.
func (o *DetailedDailyUnits) HasHighMetricsUnits() bool {
	if o != nil && !IsNil(o.HighMetricsUnits) {
		return true
	}

	return false
}

// SetHighMetricsUnits gets a reference to the given V2Unit and assigns it to the HighMetricsUnits field.
func (o *DetailedDailyUnits) SetHighMetricsUnits(v V2Unit) {
	o.HighMetricsUnits = &v
}

// GetHighTracingUnits returns the HighTracingUnits field value if set, zero value otherwise.
func (o *DetailedDailyUnits) GetHighTracingUnits() V2Unit {
	if o == nil || IsNil(o.HighTracingUnits) {
		var ret V2Unit
		return ret
	}
	return *o.HighTracingUnits
}

// GetHighTracingUnitsOk returns a tuple with the HighTracingUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyUnits) GetHighTracingUnitsOk() (*V2Unit, bool) {
	if o == nil || IsNil(o.HighTracingUnits) {
		return nil, false
	}
	return o.HighTracingUnits, true
}

// HasHighTracingUnits returns a boolean if a field has been set.
func (o *DetailedDailyUnits) HasHighTracingUnits() bool {
	if o != nil && !IsNil(o.HighTracingUnits) {
		return true
	}

	return false
}

// SetHighTracingUnits gets a reference to the given V2Unit and assigns it to the HighTracingUnits field.
func (o *DetailedDailyUnits) SetHighTracingUnits(v V2Unit) {
	o.HighTracingUnits = &v
}

// GetLowLogsUnits returns the LowLogsUnits field value if set, zero value otherwise.
func (o *DetailedDailyUnits) GetLowLogsUnits() V2Unit {
	if o == nil || IsNil(o.LowLogsUnits) {
		var ret V2Unit
		return ret
	}
	return *o.LowLogsUnits
}

// GetLowLogsUnitsOk returns a tuple with the LowLogsUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyUnits) GetLowLogsUnitsOk() (*V2Unit, bool) {
	if o == nil || IsNil(o.LowLogsUnits) {
		return nil, false
	}
	return o.LowLogsUnits, true
}

// HasLowLogsUnits returns a boolean if a field has been set.
func (o *DetailedDailyUnits) HasLowLogsUnits() bool {
	if o != nil && !IsNil(o.LowLogsUnits) {
		return true
	}

	return false
}

// SetLowLogsUnits gets a reference to the given V2Unit and assigns it to the LowLogsUnits field.
func (o *DetailedDailyUnits) SetLowLogsUnits(v V2Unit) {
	o.LowLogsUnits = &v
}

// GetLowSessionRecordingUnits returns the LowSessionRecordingUnits field value if set, zero value otherwise.
func (o *DetailedDailyUnits) GetLowSessionRecordingUnits() V2Unit {
	if o == nil || IsNil(o.LowSessionRecordingUnits) {
		var ret V2Unit
		return ret
	}
	return *o.LowSessionRecordingUnits
}

// GetLowSessionRecordingUnitsOk returns a tuple with the LowSessionRecordingUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyUnits) GetLowSessionRecordingUnitsOk() (*V2Unit, bool) {
	if o == nil || IsNil(o.LowSessionRecordingUnits) {
		return nil, false
	}
	return o.LowSessionRecordingUnits, true
}

// HasLowSessionRecordingUnits returns a boolean if a field has been set.
func (o *DetailedDailyUnits) HasLowSessionRecordingUnits() bool {
	if o != nil && !IsNil(o.LowSessionRecordingUnits) {
		return true
	}

	return false
}

// SetLowSessionRecordingUnits gets a reference to the given V2Unit and assigns it to the LowSessionRecordingUnits field.
func (o *DetailedDailyUnits) SetLowSessionRecordingUnits(v V2Unit) {
	o.LowSessionRecordingUnits = &v
}

// GetLowTracingUnits returns the LowTracingUnits field value if set, zero value otherwise.
func (o *DetailedDailyUnits) GetLowTracingUnits() V2Unit {
	if o == nil || IsNil(o.LowTracingUnits) {
		var ret V2Unit
		return ret
	}
	return *o.LowTracingUnits
}

// GetLowTracingUnitsOk returns a tuple with the LowTracingUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyUnits) GetLowTracingUnitsOk() (*V2Unit, bool) {
	if o == nil || IsNil(o.LowTracingUnits) {
		return nil, false
	}
	return o.LowTracingUnits, true
}

// HasLowTracingUnits returns a boolean if a field has been set.
func (o *DetailedDailyUnits) HasLowTracingUnits() bool {
	if o != nil && !IsNil(o.LowTracingUnits) {
		return true
	}

	return false
}

// SetLowTracingUnits gets a reference to the given V2Unit and assigns it to the LowTracingUnits field.
func (o *DetailedDailyUnits) SetLowTracingUnits(v V2Unit) {
	o.LowTracingUnits = &v
}

// GetMediumLogsUnits returns the MediumLogsUnits field value if set, zero value otherwise.
func (o *DetailedDailyUnits) GetMediumLogsUnits() V2Unit {
	if o == nil || IsNil(o.MediumLogsUnits) {
		var ret V2Unit
		return ret
	}
	return *o.MediumLogsUnits
}

// GetMediumLogsUnitsOk returns a tuple with the MediumLogsUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyUnits) GetMediumLogsUnitsOk() (*V2Unit, bool) {
	if o == nil || IsNil(o.MediumLogsUnits) {
		return nil, false
	}
	return o.MediumLogsUnits, true
}

// HasMediumLogsUnits returns a boolean if a field has been set.
func (o *DetailedDailyUnits) HasMediumLogsUnits() bool {
	if o != nil && !IsNil(o.MediumLogsUnits) {
		return true
	}

	return false
}

// SetMediumLogsUnits gets a reference to the given V2Unit and assigns it to the MediumLogsUnits field.
func (o *DetailedDailyUnits) SetMediumLogsUnits(v V2Unit) {
	o.MediumLogsUnits = &v
}

// GetMediumTracingUnits returns the MediumTracingUnits field value if set, zero value otherwise.
func (o *DetailedDailyUnits) GetMediumTracingUnits() V2Unit {
	if o == nil || IsNil(o.MediumTracingUnits) {
		var ret V2Unit
		return ret
	}
	return *o.MediumTracingUnits
}

// GetMediumTracingUnitsOk returns a tuple with the MediumTracingUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyUnits) GetMediumTracingUnitsOk() (*V2Unit, bool) {
	if o == nil || IsNil(o.MediumTracingUnits) {
		return nil, false
	}
	return o.MediumTracingUnits, true
}

// HasMediumTracingUnits returns a boolean if a field has been set.
func (o *DetailedDailyUnits) HasMediumTracingUnits() bool {
	if o != nil && !IsNil(o.MediumTracingUnits) {
		return true
	}

	return false
}

// SetMediumTracingUnits gets a reference to the given V2Unit and assigns it to the MediumTracingUnits field.
func (o *DetailedDailyUnits) SetMediumTracingUnits(v V2Unit) {
	o.MediumTracingUnits = &v
}

// GetStatsDate returns the StatsDate field value if set, zero value otherwise.
func (o *DetailedDailyUnits) GetStatsDate() time.Time {
	if o == nil || IsNil(o.StatsDate) {
		var ret time.Time
		return ret
	}
	return *o.StatsDate
}

// GetStatsDateOk returns a tuple with the StatsDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyUnits) GetStatsDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StatsDate) {
		return nil, false
	}
	return o.StatsDate, true
}

// HasStatsDate returns a boolean if a field has been set.
func (o *DetailedDailyUnits) HasStatsDate() bool {
	if o != nil && !IsNil(o.StatsDate) {
		return true
	}

	return false
}

// SetStatsDate gets a reference to the given time.Time and assigns it to the StatsDate field.
func (o *DetailedDailyUnits) SetStatsDate(v time.Time) {
	o.StatsDate = &v
}

// GetTotalUnits returns the TotalUnits field value if set, zero value otherwise.
func (o *DetailedDailyUnits) GetTotalUnits() V2Unit {
	if o == nil || IsNil(o.TotalUnits) {
		var ret V2Unit
		return ret
	}
	return *o.TotalUnits
}

// GetTotalUnitsOk returns a tuple with the TotalUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedDailyUnits) GetTotalUnitsOk() (*V2Unit, bool) {
	if o == nil || IsNil(o.TotalUnits) {
		return nil, false
	}
	return o.TotalUnits, true
}

// HasTotalUnits returns a boolean if a field has been set.
func (o *DetailedDailyUnits) HasTotalUnits() bool {
	if o != nil && !IsNil(o.TotalUnits) {
		return true
	}

	return false
}

// SetTotalUnits gets a reference to the given V2Unit and assigns it to the TotalUnits field.
func (o *DetailedDailyUnits) SetTotalUnits(v V2Unit) {
	o.TotalUnits = &v
}

func (o DetailedDailyUnits) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DetailedDailyUnits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockedMetricsUnits) {
		toSerialize["blockedMetricsUnits"] = o.BlockedMetricsUnits
	}
	if !IsNil(o.BlockedUnits) {
		toSerialize["blockedUnits"] = o.BlockedUnits
	}
	if !IsNil(o.CpuProfilesUnits) {
		toSerialize["cpuProfilesUnits"] = o.CpuProfilesUnits
	}
	if !IsNil(o.EvaluationUnits) {
		toSerialize["evaluationUnits"] = o.EvaluationUnits
	}
	if !IsNil(o.HighLogsUnits) {
		toSerialize["highLogsUnits"] = o.HighLogsUnits
	}
	if !IsNil(o.HighMetricsUnits) {
		toSerialize["highMetricsUnits"] = o.HighMetricsUnits
	}
	if !IsNil(o.HighTracingUnits) {
		toSerialize["highTracingUnits"] = o.HighTracingUnits
	}
	if !IsNil(o.LowLogsUnits) {
		toSerialize["lowLogsUnits"] = o.LowLogsUnits
	}
	if !IsNil(o.LowSessionRecordingUnits) {
		toSerialize["lowSessionRecordingUnits"] = o.LowSessionRecordingUnits
	}
	if !IsNil(o.LowTracingUnits) {
		toSerialize["lowTracingUnits"] = o.LowTracingUnits
	}
	if !IsNil(o.MediumLogsUnits) {
		toSerialize["mediumLogsUnits"] = o.MediumLogsUnits
	}
	if !IsNil(o.MediumTracingUnits) {
		toSerialize["mediumTracingUnits"] = o.MediumTracingUnits
	}
	if !IsNil(o.StatsDate) {
		toSerialize["statsDate"] = o.StatsDate
	}
	if !IsNil(o.TotalUnits) {
		toSerialize["totalUnits"] = o.TotalUnits
	}
	return toSerialize, nil
}

type NullableDetailedDailyUnits struct {
	value *DetailedDailyUnits
	isSet bool
}

func (v NullableDetailedDailyUnits) Get() *DetailedDailyUnits {
	return v.value
}

func (v *NullableDetailedDailyUnits) Set(val *DetailedDailyUnits) {
	v.value = val
	v.isSet = true
}

func (v NullableDetailedDailyUnits) IsSet() bool {
	return v.isSet
}

func (v *NullableDetailedDailyUnits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetailedDailyUnits(val *DetailedDailyUnits) *NullableDetailedDailyUnits {
	return &NullableDetailedDailyUnits{value: val, isSet: true}
}

func (v NullableDetailedDailyUnits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetailedDailyUnits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


