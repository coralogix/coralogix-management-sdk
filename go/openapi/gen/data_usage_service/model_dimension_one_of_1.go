/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data_usage_service

import (
	"encoding/json"
)

// checks if the DimensionOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DimensionOneOf1{}

// DimensionOneOf1 struct for DimensionOneOf1
type DimensionOneOf1 struct {
	GenericDimension *GenericDimension `json:"genericDimension,omitempty"`
}

// NewDimensionOneOf1 instantiates a new DimensionOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDimensionOneOf1() *DimensionOneOf1 {
	this := DimensionOneOf1{}
	return &this
}

// NewDimensionOneOf1WithDefaults instantiates a new DimensionOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDimensionOneOf1WithDefaults() *DimensionOneOf1 {
	this := DimensionOneOf1{}
	return &this
}

// GetGenericDimension returns the GenericDimension field value if set, zero value otherwise.
func (o *DimensionOneOf1) GetGenericDimension() GenericDimension {
	if o == nil || IsNil(o.GenericDimension) {
		var ret GenericDimension
		return ret
	}
	return *o.GenericDimension
}

// GetGenericDimensionOk returns a tuple with the GenericDimension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionOneOf1) GetGenericDimensionOk() (*GenericDimension, bool) {
	if o == nil || IsNil(o.GenericDimension) {
		return nil, false
	}
	return o.GenericDimension, true
}

// HasGenericDimension returns a boolean if a field has been set.
func (o *DimensionOneOf1) HasGenericDimension() bool {
	if o != nil && !IsNil(o.GenericDimension) {
		return true
	}

	return false
}

// SetGenericDimension gets a reference to the given GenericDimension and assigns it to the GenericDimension field.
func (o *DimensionOneOf1) SetGenericDimension(v GenericDimension) {
	o.GenericDimension = &v
}

func (o DimensionOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DimensionOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GenericDimension) {
		toSerialize["genericDimension"] = o.GenericDimension
	}
	return toSerialize, nil
}

type NullableDimensionOneOf1 struct {
	value *DimensionOneOf1
	isSet bool
}

func (v NullableDimensionOneOf1) Get() *DimensionOneOf1 {
	return v.value
}

func (v *NullableDimensionOneOf1) Set(val *DimensionOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableDimensionOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableDimensionOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDimensionOneOf1(val *DimensionOneOf1) *NullableDimensionOneOf1 {
	return &NullableDimensionOneOf1{value: val, isSet: true}
}

func (v NullableDimensionOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDimensionOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


