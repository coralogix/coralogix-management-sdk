/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data_usage_service

import (
	"encoding/json"
)

// checks if the GetSpansCountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSpansCountResponse{}

// GetSpansCountResponse This data structure is used to return spans count.
type GetSpansCountResponse struct {
	SpansCount []SpansCount `json:"spansCount,omitempty"`
}

// NewGetSpansCountResponse instantiates a new GetSpansCountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSpansCountResponse() *GetSpansCountResponse {
	this := GetSpansCountResponse{}
	return &this
}

// NewGetSpansCountResponseWithDefaults instantiates a new GetSpansCountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSpansCountResponseWithDefaults() *GetSpansCountResponse {
	this := GetSpansCountResponse{}
	return &this
}

// GetSpansCount returns the SpansCount field value if set, zero value otherwise.
func (o *GetSpansCountResponse) GetSpansCount() []SpansCount {
	if o == nil || IsNil(o.SpansCount) {
		var ret []SpansCount
		return ret
	}
	return o.SpansCount
}

// GetSpansCountOk returns a tuple with the SpansCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSpansCountResponse) GetSpansCountOk() ([]SpansCount, bool) {
	if o == nil || IsNil(o.SpansCount) {
		return nil, false
	}
	return o.SpansCount, true
}

// HasSpansCount returns a boolean if a field has been set.
func (o *GetSpansCountResponse) HasSpansCount() bool {
	if o != nil && !IsNil(o.SpansCount) {
		return true
	}

	return false
}

// SetSpansCount gets a reference to the given []SpansCount and assigns it to the SpansCount field.
func (o *GetSpansCountResponse) SetSpansCount(v []SpansCount) {
	o.SpansCount = v
}

func (o GetSpansCountResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSpansCountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpansCount) {
		toSerialize["spansCount"] = o.SpansCount
	}
	return toSerialize, nil
}

type NullableGetSpansCountResponse struct {
	value *GetSpansCountResponse
	isSet bool
}

func (v NullableGetSpansCountResponse) Get() *GetSpansCountResponse {
	return v.value
}

func (v *NullableGetSpansCountResponse) Set(val *GetSpansCountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSpansCountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSpansCountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSpansCountResponse(val *GetSpansCountResponse) *NullableGetSpansCountResponse {
	return &NullableGetSpansCountResponse{value: val, isSet: true}
}

func (v NullableGetSpansCountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSpansCountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


