/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data_usage_service

import (
	"encoding/json"
)

// checks if the GetDailyUsageUnitsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDailyUsageUnitsResponse{}

// GetDailyUsageUnitsResponse struct for GetDailyUsageUnitsResponse
type GetDailyUsageUnitsResponse struct {
	Units []DetailedDailyUnits `json:"units,omitempty"`
}

// NewGetDailyUsageUnitsResponse instantiates a new GetDailyUsageUnitsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDailyUsageUnitsResponse() *GetDailyUsageUnitsResponse {
	this := GetDailyUsageUnitsResponse{}
	return &this
}

// NewGetDailyUsageUnitsResponseWithDefaults instantiates a new GetDailyUsageUnitsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDailyUsageUnitsResponseWithDefaults() *GetDailyUsageUnitsResponse {
	this := GetDailyUsageUnitsResponse{}
	return &this
}

// GetUnits returns the Units field value if set, zero value otherwise.
func (o *GetDailyUsageUnitsResponse) GetUnits() []DetailedDailyUnits {
	if o == nil || IsNil(o.Units) {
		var ret []DetailedDailyUnits
		return ret
	}
	return o.Units
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDailyUsageUnitsResponse) GetUnitsOk() ([]DetailedDailyUnits, bool) {
	if o == nil || IsNil(o.Units) {
		return nil, false
	}
	return o.Units, true
}

// HasUnits returns a boolean if a field has been set.
func (o *GetDailyUsageUnitsResponse) HasUnits() bool {
	if o != nil && !IsNil(o.Units) {
		return true
	}

	return false
}

// SetUnits gets a reference to the given []DetailedDailyUnits and assigns it to the Units field.
func (o *GetDailyUsageUnitsResponse) SetUnits(v []DetailedDailyUnits) {
	o.Units = v
}

func (o GetDailyUsageUnitsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDailyUsageUnitsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Units) {
		toSerialize["units"] = o.Units
	}
	return toSerialize, nil
}

type NullableGetDailyUsageUnitsResponse struct {
	value *GetDailyUsageUnitsResponse
	isSet bool
}

func (v NullableGetDailyUsageUnitsResponse) Get() *GetDailyUsageUnitsResponse {
	return v.value
}

func (v *NullableGetDailyUsageUnitsResponse) Set(val *GetDailyUsageUnitsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDailyUsageUnitsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDailyUsageUnitsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDailyUsageUnitsResponse(val *GetDailyUsageUnitsResponse) *NullableGetDailyUsageUnitsResponse {
	return &NullableGetDailyUsageUnitsResponse{value: val, isSet: true}
}

func (v NullableGetDailyUsageUnitsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDailyUsageUnitsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


