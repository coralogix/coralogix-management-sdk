/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actions_service

import (
	"encoding/json"
)

// checks if the ActionExecutionResponseReplace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionExecutionResponseReplace{}

// ActionExecutionResponseReplace struct for ActionExecutionResponseReplace
type ActionExecutionResponseReplace struct {
	Replace *ReplaceActionResponse `json:"replace,omitempty"`
}

// NewActionExecutionResponseReplace instantiates a new ActionExecutionResponseReplace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionExecutionResponseReplace() *ActionExecutionResponseReplace {
	this := ActionExecutionResponseReplace{}
	return &this
}

// NewActionExecutionResponseReplaceWithDefaults instantiates a new ActionExecutionResponseReplace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionExecutionResponseReplaceWithDefaults() *ActionExecutionResponseReplace {
	this := ActionExecutionResponseReplace{}
	return &this
}

// GetReplace returns the Replace field value if set, zero value otherwise.
func (o *ActionExecutionResponseReplace) GetReplace() ReplaceActionResponse {
	if o == nil || IsNil(o.Replace) {
		var ret ReplaceActionResponse
		return ret
	}
	return *o.Replace
}

// GetReplaceOk returns a tuple with the Replace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionExecutionResponseReplace) GetReplaceOk() (*ReplaceActionResponse, bool) {
	if o == nil || IsNil(o.Replace) {
		return nil, false
	}
	return o.Replace, true
}

// HasReplace returns a boolean if a field has been set.
func (o *ActionExecutionResponseReplace) HasReplace() bool {
	if o != nil && !IsNil(o.Replace) {
		return true
	}

	return false
}

// SetReplace gets a reference to the given ReplaceActionResponse and assigns it to the Replace field.
func (o *ActionExecutionResponseReplace) SetReplace(v ReplaceActionResponse) {
	o.Replace = &v
}

func (o ActionExecutionResponseReplace) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionExecutionResponseReplace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Replace) {
		toSerialize["replace"] = o.Replace
	}
	return toSerialize, nil
}

type NullableActionExecutionResponseReplace struct {
	value *ActionExecutionResponseReplace
	isSet bool
}

func (v NullableActionExecutionResponseReplace) Get() *ActionExecutionResponseReplace {
	return v.value
}

func (v *NullableActionExecutionResponseReplace) Set(val *ActionExecutionResponseReplace) {
	v.value = val
	v.isSet = true
}

func (v NullableActionExecutionResponseReplace) IsSet() bool {
	return v.isSet
}

func (v *NullableActionExecutionResponseReplace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionExecutionResponseReplace(val *ActionExecutionResponseReplace) *NullableActionExecutionResponseReplace {
	return &NullableActionExecutionResponseReplace{value: val, isSet: true}
}

func (v NullableActionExecutionResponseReplace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionExecutionResponseReplace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


