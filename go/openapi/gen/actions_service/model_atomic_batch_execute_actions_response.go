/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actions_service

import (
	"encoding/json"
)

// checks if the AtomicBatchExecuteActionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AtomicBatchExecuteActionsResponse{}

// AtomicBatchExecuteActionsResponse struct for AtomicBatchExecuteActionsResponse
type AtomicBatchExecuteActionsResponse struct {
	MatchingResponses []ActionExecutionResponse `json:"matchingResponses,omitempty"`
}

// NewAtomicBatchExecuteActionsResponse instantiates a new AtomicBatchExecuteActionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAtomicBatchExecuteActionsResponse() *AtomicBatchExecuteActionsResponse {
	this := AtomicBatchExecuteActionsResponse{}
	return &this
}

// NewAtomicBatchExecuteActionsResponseWithDefaults instantiates a new AtomicBatchExecuteActionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAtomicBatchExecuteActionsResponseWithDefaults() *AtomicBatchExecuteActionsResponse {
	this := AtomicBatchExecuteActionsResponse{}
	return &this
}

// GetMatchingResponses returns the MatchingResponses field value if set, zero value otherwise.
func (o *AtomicBatchExecuteActionsResponse) GetMatchingResponses() []ActionExecutionResponse {
	if o == nil || IsNil(o.MatchingResponses) {
		var ret []ActionExecutionResponse
		return ret
	}
	return o.MatchingResponses
}

// GetMatchingResponsesOk returns a tuple with the MatchingResponses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtomicBatchExecuteActionsResponse) GetMatchingResponsesOk() ([]ActionExecutionResponse, bool) {
	if o == nil || IsNil(o.MatchingResponses) {
		return nil, false
	}
	return o.MatchingResponses, true
}

// HasMatchingResponses returns a boolean if a field has been set.
func (o *AtomicBatchExecuteActionsResponse) HasMatchingResponses() bool {
	if o != nil && !IsNil(o.MatchingResponses) {
		return true
	}

	return false
}

// SetMatchingResponses gets a reference to the given []ActionExecutionResponse and assigns it to the MatchingResponses field.
func (o *AtomicBatchExecuteActionsResponse) SetMatchingResponses(v []ActionExecutionResponse) {
	o.MatchingResponses = v
}

func (o AtomicBatchExecuteActionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AtomicBatchExecuteActionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MatchingResponses) {
		toSerialize["matchingResponses"] = o.MatchingResponses
	}
	return toSerialize, nil
}

type NullableAtomicBatchExecuteActionsResponse struct {
	value *AtomicBatchExecuteActionsResponse
	isSet bool
}

func (v NullableAtomicBatchExecuteActionsResponse) Get() *AtomicBatchExecuteActionsResponse {
	return v.value
}

func (v *NullableAtomicBatchExecuteActionsResponse) Set(val *AtomicBatchExecuteActionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAtomicBatchExecuteActionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAtomicBatchExecuteActionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAtomicBatchExecuteActionsResponse(val *AtomicBatchExecuteActionsResponse) *NullableAtomicBatchExecuteActionsResponse {
	return &NullableAtomicBatchExecuteActionsResponse{value: val, isSet: true}
}

func (v NullableAtomicBatchExecuteActionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAtomicBatchExecuteActionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


