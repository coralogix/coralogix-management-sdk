/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actions_service

import (
	"encoding/json"
)

// checks if the ActionsServiceAtomicBatchExecuteActionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionsServiceAtomicBatchExecuteActionsRequest{}

// ActionsServiceAtomicBatchExecuteActionsRequest struct for ActionsServiceAtomicBatchExecuteActionsRequest
type ActionsServiceAtomicBatchExecuteActionsRequest struct {
	Requests []ActionExecutionRequest `json:"requests,omitempty"`
}

// NewActionsServiceAtomicBatchExecuteActionsRequest instantiates a new ActionsServiceAtomicBatchExecuteActionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionsServiceAtomicBatchExecuteActionsRequest() *ActionsServiceAtomicBatchExecuteActionsRequest {
	this := ActionsServiceAtomicBatchExecuteActionsRequest{}
	return &this
}

// NewActionsServiceAtomicBatchExecuteActionsRequestWithDefaults instantiates a new ActionsServiceAtomicBatchExecuteActionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionsServiceAtomicBatchExecuteActionsRequestWithDefaults() *ActionsServiceAtomicBatchExecuteActionsRequest {
	this := ActionsServiceAtomicBatchExecuteActionsRequest{}
	return &this
}

// GetRequests returns the Requests field value if set, zero value otherwise.
func (o *ActionsServiceAtomicBatchExecuteActionsRequest) GetRequests() []ActionExecutionRequest {
	if o == nil || IsNil(o.Requests) {
		var ret []ActionExecutionRequest
		return ret
	}
	return o.Requests
}

// GetRequestsOk returns a tuple with the Requests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsServiceAtomicBatchExecuteActionsRequest) GetRequestsOk() ([]ActionExecutionRequest, bool) {
	if o == nil || IsNil(o.Requests) {
		return nil, false
	}
	return o.Requests, true
}

// HasRequests returns a boolean if a field has been set.
func (o *ActionsServiceAtomicBatchExecuteActionsRequest) HasRequests() bool {
	if o != nil && !IsNil(o.Requests) {
		return true
	}

	return false
}

// SetRequests gets a reference to the given []ActionExecutionRequest and assigns it to the Requests field.
func (o *ActionsServiceAtomicBatchExecuteActionsRequest) SetRequests(v []ActionExecutionRequest) {
	o.Requests = v
}

func (o ActionsServiceAtomicBatchExecuteActionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionsServiceAtomicBatchExecuteActionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Requests) {
		toSerialize["requests"] = o.Requests
	}
	return toSerialize, nil
}

type NullableActionsServiceAtomicBatchExecuteActionsRequest struct {
	value *ActionsServiceAtomicBatchExecuteActionsRequest
	isSet bool
}

func (v NullableActionsServiceAtomicBatchExecuteActionsRequest) Get() *ActionsServiceAtomicBatchExecuteActionsRequest {
	return v.value
}

func (v *NullableActionsServiceAtomicBatchExecuteActionsRequest) Set(val *ActionsServiceAtomicBatchExecuteActionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableActionsServiceAtomicBatchExecuteActionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableActionsServiceAtomicBatchExecuteActionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionsServiceAtomicBatchExecuteActionsRequest(val *ActionsServiceAtomicBatchExecuteActionsRequest) *NullableActionsServiceAtomicBatchExecuteActionsRequest {
	return &NullableActionsServiceAtomicBatchExecuteActionsRequest{value: val, isSet: true}
}

func (v NullableActionsServiceAtomicBatchExecuteActionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionsServiceAtomicBatchExecuteActionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


