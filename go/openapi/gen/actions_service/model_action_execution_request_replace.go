/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actions_service

import (
	"encoding/json"
)

// checks if the ActionExecutionRequestReplace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionExecutionRequestReplace{}

// ActionExecutionRequestReplace struct for ActionExecutionRequestReplace
type ActionExecutionRequestReplace struct {
	Replace *ReplaceActionRequest `json:"replace,omitempty"`
}

// NewActionExecutionRequestReplace instantiates a new ActionExecutionRequestReplace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionExecutionRequestReplace() *ActionExecutionRequestReplace {
	this := ActionExecutionRequestReplace{}
	return &this
}

// NewActionExecutionRequestReplaceWithDefaults instantiates a new ActionExecutionRequestReplace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionExecutionRequestReplaceWithDefaults() *ActionExecutionRequestReplace {
	this := ActionExecutionRequestReplace{}
	return &this
}

// GetReplace returns the Replace field value if set, zero value otherwise.
func (o *ActionExecutionRequestReplace) GetReplace() ReplaceActionRequest {
	if o == nil || IsNil(o.Replace) {
		var ret ReplaceActionRequest
		return ret
	}
	return *o.Replace
}

// GetReplaceOk returns a tuple with the Replace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionExecutionRequestReplace) GetReplaceOk() (*ReplaceActionRequest, bool) {
	if o == nil || IsNil(o.Replace) {
		return nil, false
	}
	return o.Replace, true
}

// HasReplace returns a boolean if a field has been set.
func (o *ActionExecutionRequestReplace) HasReplace() bool {
	if o != nil && !IsNil(o.Replace) {
		return true
	}

	return false
}

// SetReplace gets a reference to the given ReplaceActionRequest and assigns it to the Replace field.
func (o *ActionExecutionRequestReplace) SetReplace(v ReplaceActionRequest) {
	o.Replace = &v
}

func (o ActionExecutionRequestReplace) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionExecutionRequestReplace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Replace) {
		toSerialize["replace"] = o.Replace
	}
	return toSerialize, nil
}

type NullableActionExecutionRequestReplace struct {
	value *ActionExecutionRequestReplace
	isSet bool
}

func (v NullableActionExecutionRequestReplace) Get() *ActionExecutionRequestReplace {
	return v.value
}

func (v *NullableActionExecutionRequestReplace) Set(val *ActionExecutionRequestReplace) {
	v.value = val
	v.isSet = true
}

func (v NullableActionExecutionRequestReplace) IsSet() bool {
	return v.isSet
}

func (v *NullableActionExecutionRequestReplace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionExecutionRequestReplace(val *ActionExecutionRequestReplace) *NullableActionExecutionRequestReplace {
	return &NullableActionExecutionRequestReplace{value: val, isSet: true}
}

func (v NullableActionExecutionRequestReplace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionExecutionRequestReplace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


