/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actions_service

import (
	"encoding/json"
)

// checks if the V2Action type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2Action{}

// V2Action struct for V2Action
type V2Action struct {
	ApplicationNames []string `json:"applicationNames,omitempty"`
	CreatedBy *string `json:"createdBy,omitempty"`
	Id *string `json:"id,omitempty"`
	IsHidden *bool `json:"isHidden,omitempty"`
	IsPrivate *bool `json:"isPrivate,omitempty"`
	Name *string `json:"name,omitempty"`
	SourceType *V2SourceType `json:"sourceType,omitempty"`
	SubsystemNames []string `json:"subsystemNames,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewV2Action instantiates a new V2Action object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2Action() *V2Action {
	this := V2Action{}
	return &this
}

// NewV2ActionWithDefaults instantiates a new V2Action object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2ActionWithDefaults() *V2Action {
	this := V2Action{}
	return &this
}

// GetApplicationNames returns the ApplicationNames field value if set, zero value otherwise.
func (o *V2Action) GetApplicationNames() []string {
	if o == nil || IsNil(o.ApplicationNames) {
		var ret []string
		return ret
	}
	return o.ApplicationNames
}

// GetApplicationNamesOk returns a tuple with the ApplicationNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Action) GetApplicationNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.ApplicationNames) {
		return nil, false
	}
	return o.ApplicationNames, true
}

// HasApplicationNames returns a boolean if a field has been set.
func (o *V2Action) HasApplicationNames() bool {
	if o != nil && !IsNil(o.ApplicationNames) {
		return true
	}

	return false
}

// SetApplicationNames gets a reference to the given []string and assigns it to the ApplicationNames field.
func (o *V2Action) SetApplicationNames(v []string) {
	o.ApplicationNames = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *V2Action) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Action) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *V2Action) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *V2Action) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V2Action) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Action) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V2Action) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V2Action) SetId(v string) {
	o.Id = &v
}

// GetIsHidden returns the IsHidden field value if set, zero value otherwise.
func (o *V2Action) GetIsHidden() bool {
	if o == nil || IsNil(o.IsHidden) {
		var ret bool
		return ret
	}
	return *o.IsHidden
}

// GetIsHiddenOk returns a tuple with the IsHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Action) GetIsHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.IsHidden) {
		return nil, false
	}
	return o.IsHidden, true
}

// HasIsHidden returns a boolean if a field has been set.
func (o *V2Action) HasIsHidden() bool {
	if o != nil && !IsNil(o.IsHidden) {
		return true
	}

	return false
}

// SetIsHidden gets a reference to the given bool and assigns it to the IsHidden field.
func (o *V2Action) SetIsHidden(v bool) {
	o.IsHidden = &v
}

// GetIsPrivate returns the IsPrivate field value if set, zero value otherwise.
func (o *V2Action) GetIsPrivate() bool {
	if o == nil || IsNil(o.IsPrivate) {
		var ret bool
		return ret
	}
	return *o.IsPrivate
}

// GetIsPrivateOk returns a tuple with the IsPrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Action) GetIsPrivateOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrivate) {
		return nil, false
	}
	return o.IsPrivate, true
}

// HasIsPrivate returns a boolean if a field has been set.
func (o *V2Action) HasIsPrivate() bool {
	if o != nil && !IsNil(o.IsPrivate) {
		return true
	}

	return false
}

// SetIsPrivate gets a reference to the given bool and assigns it to the IsPrivate field.
func (o *V2Action) SetIsPrivate(v bool) {
	o.IsPrivate = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V2Action) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Action) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V2Action) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V2Action) SetName(v string) {
	o.Name = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *V2Action) GetSourceType() V2SourceType {
	if o == nil || IsNil(o.SourceType) {
		var ret V2SourceType
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Action) GetSourceTypeOk() (*V2SourceType, bool) {
	if o == nil || IsNil(o.SourceType) {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *V2Action) HasSourceType() bool {
	if o != nil && !IsNil(o.SourceType) {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given V2SourceType and assigns it to the SourceType field.
func (o *V2Action) SetSourceType(v V2SourceType) {
	o.SourceType = &v
}

// GetSubsystemNames returns the SubsystemNames field value if set, zero value otherwise.
func (o *V2Action) GetSubsystemNames() []string {
	if o == nil || IsNil(o.SubsystemNames) {
		var ret []string
		return ret
	}
	return o.SubsystemNames
}

// GetSubsystemNamesOk returns a tuple with the SubsystemNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Action) GetSubsystemNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.SubsystemNames) {
		return nil, false
	}
	return o.SubsystemNames, true
}

// HasSubsystemNames returns a boolean if a field has been set.
func (o *V2Action) HasSubsystemNames() bool {
	if o != nil && !IsNil(o.SubsystemNames) {
		return true
	}

	return false
}

// SetSubsystemNames gets a reference to the given []string and assigns it to the SubsystemNames field.
func (o *V2Action) SetSubsystemNames(v []string) {
	o.SubsystemNames = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *V2Action) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2Action) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *V2Action) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *V2Action) SetUrl(v string) {
	o.Url = &v
}

func (o V2Action) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2Action) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationNames) {
		toSerialize["applicationNames"] = o.ApplicationNames
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsHidden) {
		toSerialize["isHidden"] = o.IsHidden
	}
	if !IsNil(o.IsPrivate) {
		toSerialize["isPrivate"] = o.IsPrivate
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SourceType) {
		toSerialize["sourceType"] = o.SourceType
	}
	if !IsNil(o.SubsystemNames) {
		toSerialize["subsystemNames"] = o.SubsystemNames
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableV2Action struct {
	value *V2Action
	isSet bool
}

func (v NullableV2Action) Get() *V2Action {
	return v.value
}

func (v *NullableV2Action) Set(val *V2Action) {
	v.value = val
	v.isSet = true
}

func (v NullableV2Action) IsSet() bool {
	return v.isSet
}

func (v *NullableV2Action) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2Action(val *V2Action) *NullableV2Action {
	return &NullableV2Action{value: val, isSet: true}
}

func (v NullableV2Action) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2Action) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


