/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slos_service

import (
	"encoding/json"
	"time"
)

// checks if the Revision type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Revision{}

// Revision The revision of the slo, used to differentiate between different versions of the same SLO
type Revision struct {
	Revision *int32 `json:"revision,omitempty"`
	UpdateTime *time.Time `json:"updateTime,omitempty"`
}

// NewRevision instantiates a new Revision object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevision() *Revision {
	this := Revision{}
	return &this
}

// NewRevisionWithDefaults instantiates a new Revision object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevisionWithDefaults() *Revision {
	this := Revision{}
	return &this
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *Revision) GetRevision() int32 {
	if o == nil || IsNil(o.Revision) {
		var ret int32
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Revision) GetRevisionOk() (*int32, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *Revision) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given int32 and assigns it to the Revision field.
func (o *Revision) SetRevision(v int32) {
	o.Revision = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *Revision) GetUpdateTime() time.Time {
	if o == nil || IsNil(o.UpdateTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Revision) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *Revision) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *Revision) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

func (o Revision) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Revision) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return toSerialize, nil
}

type NullableRevision struct {
	value *Revision
	isSet bool
}

func (v NullableRevision) Get() *Revision {
	return v.value
}

func (v *NullableRevision) Set(val *Revision) {
	v.value = val
	v.isSet = true
}

func (v NullableRevision) IsSet() bool {
	return v.isSet
}

func (v *NullableRevision) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevision(val *Revision) *NullableRevision {
	return &NullableRevision{value: val, isSet: true}
}

func (v NullableRevision) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevision) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


