/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slos_service

import (
	"encoding/json"
)

// checks if the SloAlertValidityResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloAlertValidityResult{}

// SloAlertValidityResult struct for SloAlertValidityResult
type SloAlertValidityResult struct {
	AlertVersionId *string `json:"alertVersionId,omitempty"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewSloAlertValidityResult instantiates a new SloAlertValidityResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloAlertValidityResult() *SloAlertValidityResult {
	this := SloAlertValidityResult{}
	return &this
}

// NewSloAlertValidityResultWithDefaults instantiates a new SloAlertValidityResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloAlertValidityResultWithDefaults() *SloAlertValidityResult {
	this := SloAlertValidityResult{}
	return &this
}

// GetAlertVersionId returns the AlertVersionId field value if set, zero value otherwise.
func (o *SloAlertValidityResult) GetAlertVersionId() string {
	if o == nil || IsNil(o.AlertVersionId) {
		var ret string
		return ret
	}
	return *o.AlertVersionId
}

// GetAlertVersionIdOk returns a tuple with the AlertVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloAlertValidityResult) GetAlertVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.AlertVersionId) {
		return nil, false
	}
	return o.AlertVersionId, true
}

// HasAlertVersionId returns a boolean if a field has been set.
func (o *SloAlertValidityResult) HasAlertVersionId() bool {
	if o != nil && !IsNil(o.AlertVersionId) {
		return true
	}

	return false
}

// SetAlertVersionId gets a reference to the given string and assigns it to the AlertVersionId field.
func (o *SloAlertValidityResult) SetAlertVersionId(v string) {
	o.AlertVersionId = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *SloAlertValidityResult) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloAlertValidityResult) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *SloAlertValidityResult) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *SloAlertValidityResult) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SloAlertValidityResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloAlertValidityResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SloAlertValidityResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SloAlertValidityResult) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SloAlertValidityResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloAlertValidityResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SloAlertValidityResult) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SloAlertValidityResult) SetName(v string) {
	o.Name = &v
}

func (o SloAlertValidityResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloAlertValidityResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertVersionId) {
		toSerialize["alertVersionId"] = o.AlertVersionId
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableSloAlertValidityResult struct {
	value *SloAlertValidityResult
	isSet bool
}

func (v NullableSloAlertValidityResult) Get() *SloAlertValidityResult {
	return v.value
}

func (v *NullableSloAlertValidityResult) Set(val *SloAlertValidityResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSloAlertValidityResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSloAlertValidityResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloAlertValidityResult(val *SloAlertValidityResult) *NullableSloAlertValidityResult {
	return &NullableSloAlertValidityResult{value: val, isSet: true}
}

func (v NullableSloAlertValidityResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloAlertValidityResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


