/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slos_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BatchGetSlosResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchGetSlosResponse{}

// BatchGetSlosResponse Response containing a batch of SLOs and any IDs not found.
type BatchGetSlosResponse struct {
	NotFoundIds []string `json:"notFoundIds,omitempty"`
	Slos []Slo `json:"slos"`
}

type _BatchGetSlosResponse BatchGetSlosResponse

// NewBatchGetSlosResponse instantiates a new BatchGetSlosResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchGetSlosResponse(slos []Slo) *BatchGetSlosResponse {
	this := BatchGetSlosResponse{}
	this.Slos = slos
	return &this
}

// NewBatchGetSlosResponseWithDefaults instantiates a new BatchGetSlosResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchGetSlosResponseWithDefaults() *BatchGetSlosResponse {
	this := BatchGetSlosResponse{}
	return &this
}

// GetNotFoundIds returns the NotFoundIds field value if set, zero value otherwise.
func (o *BatchGetSlosResponse) GetNotFoundIds() []string {
	if o == nil || IsNil(o.NotFoundIds) {
		var ret []string
		return ret
	}
	return o.NotFoundIds
}

// GetNotFoundIdsOk returns a tuple with the NotFoundIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetSlosResponse) GetNotFoundIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.NotFoundIds) {
		return nil, false
	}
	return o.NotFoundIds, true
}

// HasNotFoundIds returns a boolean if a field has been set.
func (o *BatchGetSlosResponse) HasNotFoundIds() bool {
	if o != nil && !IsNil(o.NotFoundIds) {
		return true
	}

	return false
}

// SetNotFoundIds gets a reference to the given []string and assigns it to the NotFoundIds field.
func (o *BatchGetSlosResponse) SetNotFoundIds(v []string) {
	o.NotFoundIds = v
}

// GetSlos returns the Slos field value
func (o *BatchGetSlosResponse) GetSlos() []Slo {
	if o == nil {
		var ret []Slo
		return ret
	}

	return o.Slos
}

// GetSlosOk returns a tuple with the Slos field value
// and a boolean to check if the value has been set.
func (o *BatchGetSlosResponse) GetSlosOk() ([]Slo, bool) {
	if o == nil {
		return nil, false
	}
	return o.Slos, true
}

// SetSlos sets field value
func (o *BatchGetSlosResponse) SetSlos(v []Slo) {
	o.Slos = v
}

func (o BatchGetSlosResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchGetSlosResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NotFoundIds) {
		toSerialize["notFoundIds"] = o.NotFoundIds
	}
	toSerialize["slos"] = o.Slos
	return toSerialize, nil
}

func (o *BatchGetSlosResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"slos",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBatchGetSlosResponse := _BatchGetSlosResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBatchGetSlosResponse)

	if err != nil {
		return err
	}

	*o = BatchGetSlosResponse(varBatchGetSlosResponse)

	return err
}

type NullableBatchGetSlosResponse struct {
	value *BatchGetSlosResponse
	isSet bool
}

func (v NullableBatchGetSlosResponse) Get() *BatchGetSlosResponse {
	return v.value
}

func (v *NullableBatchGetSlosResponse) Set(val *BatchGetSlosResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchGetSlosResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchGetSlosResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchGetSlosResponse(val *BatchGetSlosResponse) *NullableBatchGetSlosResponse {
	return &NullableBatchGetSlosResponse{value: val, isSet: true}
}

func (v NullableBatchGetSlosResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchGetSlosResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


