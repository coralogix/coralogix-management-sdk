/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slos_service

import (
	"encoding/json"
)

// checks if the SloExecutionRequestDeleteSloRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloExecutionRequestDeleteSloRequest{}

// SloExecutionRequestDeleteSloRequest Request for executing an SLO operation.
type SloExecutionRequestDeleteSloRequest struct {
	DeleteSloRequest *DeleteSloRequest `json:"deleteSloRequest,omitempty"`
}

// NewSloExecutionRequestDeleteSloRequest instantiates a new SloExecutionRequestDeleteSloRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloExecutionRequestDeleteSloRequest() *SloExecutionRequestDeleteSloRequest {
	this := SloExecutionRequestDeleteSloRequest{}
	return &this
}

// NewSloExecutionRequestDeleteSloRequestWithDefaults instantiates a new SloExecutionRequestDeleteSloRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloExecutionRequestDeleteSloRequestWithDefaults() *SloExecutionRequestDeleteSloRequest {
	this := SloExecutionRequestDeleteSloRequest{}
	return &this
}

// GetDeleteSloRequest returns the DeleteSloRequest field value if set, zero value otherwise.
func (o *SloExecutionRequestDeleteSloRequest) GetDeleteSloRequest() DeleteSloRequest {
	if o == nil || IsNil(o.DeleteSloRequest) {
		var ret DeleteSloRequest
		return ret
	}
	return *o.DeleteSloRequest
}

// GetDeleteSloRequestOk returns a tuple with the DeleteSloRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloExecutionRequestDeleteSloRequest) GetDeleteSloRequestOk() (*DeleteSloRequest, bool) {
	if o == nil || IsNil(o.DeleteSloRequest) {
		return nil, false
	}
	return o.DeleteSloRequest, true
}

// HasDeleteSloRequest returns a boolean if a field has been set.
func (o *SloExecutionRequestDeleteSloRequest) HasDeleteSloRequest() bool {
	if o != nil && !IsNil(o.DeleteSloRequest) {
		return true
	}

	return false
}

// SetDeleteSloRequest gets a reference to the given DeleteSloRequest and assigns it to the DeleteSloRequest field.
func (o *SloExecutionRequestDeleteSloRequest) SetDeleteSloRequest(v DeleteSloRequest) {
	o.DeleteSloRequest = &v
}

func (o SloExecutionRequestDeleteSloRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloExecutionRequestDeleteSloRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeleteSloRequest) {
		toSerialize["deleteSloRequest"] = o.DeleteSloRequest
	}
	return toSerialize, nil
}

type NullableSloExecutionRequestDeleteSloRequest struct {
	value *SloExecutionRequestDeleteSloRequest
	isSet bool
}

func (v NullableSloExecutionRequestDeleteSloRequest) Get() *SloExecutionRequestDeleteSloRequest {
	return v.value
}

func (v *NullableSloExecutionRequestDeleteSloRequest) Set(val *SloExecutionRequestDeleteSloRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSloExecutionRequestDeleteSloRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSloExecutionRequestDeleteSloRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloExecutionRequestDeleteSloRequest(val *SloExecutionRequestDeleteSloRequest) *NullableSloExecutionRequestDeleteSloRequest {
	return &NullableSloExecutionRequestDeleteSloRequest{value: val, isSet: true}
}

func (v NullableSloExecutionRequestDeleteSloRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloExecutionRequestDeleteSloRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


