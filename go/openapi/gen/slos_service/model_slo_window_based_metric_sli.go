/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slos_service

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the SloWindowBasedMetricSli type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloWindowBasedMetricSli{}

// SloWindowBasedMetricSli Definition of an SLO
type SloWindowBasedMetricSli struct {
	CreateTime *time.Time `json:"createTime,omitempty"`
	Creator *string `json:"creator,omitempty"`
	Description *string `json:"description,omitempty"`
	Grouping *V1Grouping `json:"grouping,omitempty"`
	Id *string `json:"id,omitempty"`
	Labels *map[string]string `json:"labels,omitempty"`
	Name string `json:"name"`
	Revision *V1Revision `json:"revision,omitempty"`
	SloTimeFrame *SloTimeFrame `json:"sloTimeFrame,omitempty"`
	TargetThresholdPercentage float32 `json:"targetThresholdPercentage"`
	Type *string `json:"type,omitempty"`
	UpdateTime *time.Time `json:"updateTime,omitempty"`
	WindowBasedMetricSli *WindowBasedMetricSli `json:"windowBasedMetricSli,omitempty"`
}

type _SloWindowBasedMetricSli SloWindowBasedMetricSli

// NewSloWindowBasedMetricSli instantiates a new SloWindowBasedMetricSli object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloWindowBasedMetricSli(name string, targetThresholdPercentage float32) *SloWindowBasedMetricSli {
	this := SloWindowBasedMetricSli{}
	this.Name = name
	this.TargetThresholdPercentage = targetThresholdPercentage
	return &this
}

// NewSloWindowBasedMetricSliWithDefaults instantiates a new SloWindowBasedMetricSli object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloWindowBasedMetricSliWithDefaults() *SloWindowBasedMetricSli {
	this := SloWindowBasedMetricSli{}
	return &this
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *SloWindowBasedMetricSli) GetCreateTime() time.Time {
	if o == nil || IsNil(o.CreateTime) {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloWindowBasedMetricSli) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *SloWindowBasedMetricSli) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *SloWindowBasedMetricSli) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *SloWindowBasedMetricSli) GetCreator() string {
	if o == nil || IsNil(o.Creator) {
		var ret string
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloWindowBasedMetricSli) GetCreatorOk() (*string, bool) {
	if o == nil || IsNil(o.Creator) {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *SloWindowBasedMetricSli) HasCreator() bool {
	if o != nil && !IsNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given string and assigns it to the Creator field.
func (o *SloWindowBasedMetricSli) SetCreator(v string) {
	o.Creator = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SloWindowBasedMetricSli) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloWindowBasedMetricSli) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SloWindowBasedMetricSli) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SloWindowBasedMetricSli) SetDescription(v string) {
	o.Description = &v
}

// GetGrouping returns the Grouping field value if set, zero value otherwise.
func (o *SloWindowBasedMetricSli) GetGrouping() V1Grouping {
	if o == nil || IsNil(o.Grouping) {
		var ret V1Grouping
		return ret
	}
	return *o.Grouping
}

// GetGroupingOk returns a tuple with the Grouping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloWindowBasedMetricSli) GetGroupingOk() (*V1Grouping, bool) {
	if o == nil || IsNil(o.Grouping) {
		return nil, false
	}
	return o.Grouping, true
}

// HasGrouping returns a boolean if a field has been set.
func (o *SloWindowBasedMetricSli) HasGrouping() bool {
	if o != nil && !IsNil(o.Grouping) {
		return true
	}

	return false
}

// SetGrouping gets a reference to the given V1Grouping and assigns it to the Grouping field.
func (o *SloWindowBasedMetricSli) SetGrouping(v V1Grouping) {
	o.Grouping = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SloWindowBasedMetricSli) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloWindowBasedMetricSli) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SloWindowBasedMetricSli) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SloWindowBasedMetricSli) SetId(v string) {
	o.Id = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *SloWindowBasedMetricSli) GetLabels() map[string]string {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloWindowBasedMetricSli) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *SloWindowBasedMetricSli) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *SloWindowBasedMetricSli) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetName returns the Name field value
func (o *SloWindowBasedMetricSli) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SloWindowBasedMetricSli) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SloWindowBasedMetricSli) SetName(v string) {
	o.Name = v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *SloWindowBasedMetricSli) GetRevision() V1Revision {
	if o == nil || IsNil(o.Revision) {
		var ret V1Revision
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloWindowBasedMetricSli) GetRevisionOk() (*V1Revision, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *SloWindowBasedMetricSli) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given V1Revision and assigns it to the Revision field.
func (o *SloWindowBasedMetricSli) SetRevision(v V1Revision) {
	o.Revision = &v
}

// GetSloTimeFrame returns the SloTimeFrame field value if set, zero value otherwise.
func (o *SloWindowBasedMetricSli) GetSloTimeFrame() SloTimeFrame {
	if o == nil || IsNil(o.SloTimeFrame) {
		var ret SloTimeFrame
		return ret
	}
	return *o.SloTimeFrame
}

// GetSloTimeFrameOk returns a tuple with the SloTimeFrame field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloWindowBasedMetricSli) GetSloTimeFrameOk() (*SloTimeFrame, bool) {
	if o == nil || IsNil(o.SloTimeFrame) {
		return nil, false
	}
	return o.SloTimeFrame, true
}

// HasSloTimeFrame returns a boolean if a field has been set.
func (o *SloWindowBasedMetricSli) HasSloTimeFrame() bool {
	if o != nil && !IsNil(o.SloTimeFrame) {
		return true
	}

	return false
}

// SetSloTimeFrame gets a reference to the given SloTimeFrame and assigns it to the SloTimeFrame field.
func (o *SloWindowBasedMetricSli) SetSloTimeFrame(v SloTimeFrame) {
	o.SloTimeFrame = &v
}

// GetTargetThresholdPercentage returns the TargetThresholdPercentage field value
func (o *SloWindowBasedMetricSli) GetTargetThresholdPercentage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TargetThresholdPercentage
}

// GetTargetThresholdPercentageOk returns a tuple with the TargetThresholdPercentage field value
// and a boolean to check if the value has been set.
func (o *SloWindowBasedMetricSli) GetTargetThresholdPercentageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetThresholdPercentage, true
}

// SetTargetThresholdPercentage sets field value
func (o *SloWindowBasedMetricSli) SetTargetThresholdPercentage(v float32) {
	o.TargetThresholdPercentage = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SloWindowBasedMetricSli) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloWindowBasedMetricSli) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SloWindowBasedMetricSli) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SloWindowBasedMetricSli) SetType(v string) {
	o.Type = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *SloWindowBasedMetricSli) GetUpdateTime() time.Time {
	if o == nil || IsNil(o.UpdateTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloWindowBasedMetricSli) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *SloWindowBasedMetricSli) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *SloWindowBasedMetricSli) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

// GetWindowBasedMetricSli returns the WindowBasedMetricSli field value if set, zero value otherwise.
func (o *SloWindowBasedMetricSli) GetWindowBasedMetricSli() WindowBasedMetricSli {
	if o == nil || IsNil(o.WindowBasedMetricSli) {
		var ret WindowBasedMetricSli
		return ret
	}
	return *o.WindowBasedMetricSli
}

// GetWindowBasedMetricSliOk returns a tuple with the WindowBasedMetricSli field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloWindowBasedMetricSli) GetWindowBasedMetricSliOk() (*WindowBasedMetricSli, bool) {
	if o == nil || IsNil(o.WindowBasedMetricSli) {
		return nil, false
	}
	return o.WindowBasedMetricSli, true
}

// HasWindowBasedMetricSli returns a boolean if a field has been set.
func (o *SloWindowBasedMetricSli) HasWindowBasedMetricSli() bool {
	if o != nil && !IsNil(o.WindowBasedMetricSli) {
		return true
	}

	return false
}

// SetWindowBasedMetricSli gets a reference to the given WindowBasedMetricSli and assigns it to the WindowBasedMetricSli field.
func (o *SloWindowBasedMetricSli) SetWindowBasedMetricSli(v WindowBasedMetricSli) {
	o.WindowBasedMetricSli = &v
}

func (o SloWindowBasedMetricSli) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloWindowBasedMetricSli) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.Creator) {
		toSerialize["creator"] = o.Creator
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Grouping) {
		toSerialize["grouping"] = o.Grouping
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.SloTimeFrame) {
		toSerialize["sloTimeFrame"] = o.SloTimeFrame
	}
	toSerialize["targetThresholdPercentage"] = o.TargetThresholdPercentage
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	if !IsNil(o.WindowBasedMetricSli) {
		toSerialize["windowBasedMetricSli"] = o.WindowBasedMetricSli
	}
	return toSerialize, nil
}

func (o *SloWindowBasedMetricSli) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"targetThresholdPercentage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSloWindowBasedMetricSli := _SloWindowBasedMetricSli{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSloWindowBasedMetricSli)

	if err != nil {
		return err
	}

	*o = SloWindowBasedMetricSli(varSloWindowBasedMetricSli)

	return err
}

type NullableSloWindowBasedMetricSli struct {
	value *SloWindowBasedMetricSli
	isSet bool
}

func (v NullableSloWindowBasedMetricSli) Get() *SloWindowBasedMetricSli {
	return v.value
}

func (v *NullableSloWindowBasedMetricSli) Set(val *SloWindowBasedMetricSli) {
	v.value = val
	v.isSet = true
}

func (v NullableSloWindowBasedMetricSli) IsSet() bool {
	return v.isSet
}

func (v *NullableSloWindowBasedMetricSli) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloWindowBasedMetricSli(val *SloWindowBasedMetricSli) *NullableSloWindowBasedMetricSli {
	return &NullableSloWindowBasedMetricSli{value: val, isSet: true}
}

func (v NullableSloWindowBasedMetricSli) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloWindowBasedMetricSli) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


