/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slos_service

import (
	"encoding/json"
)

// checks if the SloFilterFieldConstFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloFilterFieldConstFilter{}

// SloFilterFieldConstFilter Field used for filtering SLOs
type SloFilterFieldConstFilter struct {
	ConstFilter *SloConstantFilterField `json:"constFilter,omitempty"`
}

// NewSloFilterFieldConstFilter instantiates a new SloFilterFieldConstFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloFilterFieldConstFilter() *SloFilterFieldConstFilter {
	this := SloFilterFieldConstFilter{}
	return &this
}

// NewSloFilterFieldConstFilterWithDefaults instantiates a new SloFilterFieldConstFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloFilterFieldConstFilterWithDefaults() *SloFilterFieldConstFilter {
	this := SloFilterFieldConstFilter{}
	return &this
}

// GetConstFilter returns the ConstFilter field value if set, zero value otherwise.
func (o *SloFilterFieldConstFilter) GetConstFilter() SloConstantFilterField {
	if o == nil || IsNil(o.ConstFilter) {
		var ret SloConstantFilterField
		return ret
	}
	return *o.ConstFilter
}

// GetConstFilterOk returns a tuple with the ConstFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloFilterFieldConstFilter) GetConstFilterOk() (*SloConstantFilterField, bool) {
	if o == nil || IsNil(o.ConstFilter) {
		return nil, false
	}
	return o.ConstFilter, true
}

// HasConstFilter returns a boolean if a field has been set.
func (o *SloFilterFieldConstFilter) HasConstFilter() bool {
	if o != nil && !IsNil(o.ConstFilter) {
		return true
	}

	return false
}

// SetConstFilter gets a reference to the given SloConstantFilterField and assigns it to the ConstFilter field.
func (o *SloFilterFieldConstFilter) SetConstFilter(v SloConstantFilterField) {
	o.ConstFilter = &v
}

func (o SloFilterFieldConstFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloFilterFieldConstFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConstFilter) {
		toSerialize["constFilter"] = o.ConstFilter
	}
	return toSerialize, nil
}

type NullableSloFilterFieldConstFilter struct {
	value *SloFilterFieldConstFilter
	isSet bool
}

func (v NullableSloFilterFieldConstFilter) Get() *SloFilterFieldConstFilter {
	return v.value
}

func (v *NullableSloFilterFieldConstFilter) Set(val *SloFilterFieldConstFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableSloFilterFieldConstFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableSloFilterFieldConstFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloFilterFieldConstFilter(val *SloFilterFieldConstFilter) *NullableSloFilterFieldConstFilter {
	return &NullableSloFilterFieldConstFilter{value: val, isSet: true}
}

func (v NullableSloFilterFieldConstFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloFilterFieldConstFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


