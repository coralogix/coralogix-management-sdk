/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slos_service

import (
	"encoding/json"
)

// checks if the SloFilters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloFilters{}

// SloFilters A collection of filters for SLOs
type SloFilters struct {
	Filters []SloFilter `json:"filters,omitempty"`
}

// NewSloFilters instantiates a new SloFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloFilters() *SloFilters {
	this := SloFilters{}
	return &this
}

// NewSloFiltersWithDefaults instantiates a new SloFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloFiltersWithDefaults() *SloFilters {
	this := SloFilters{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *SloFilters) GetFilters() []SloFilter {
	if o == nil || IsNil(o.Filters) {
		var ret []SloFilter
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloFilters) GetFiltersOk() ([]SloFilter, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *SloFilters) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []SloFilter and assigns it to the Filters field.
func (o *SloFilters) SetFilters(v []SloFilter) {
	o.Filters = v
}

func (o SloFilters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloFilters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	return toSerialize, nil
}

type NullableSloFilters struct {
	value *SloFilters
	isSet bool
}

func (v NullableSloFilters) Get() *SloFilters {
	return v.value
}

func (v *NullableSloFilters) Set(val *SloFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableSloFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableSloFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloFilters(val *SloFilters) *NullableSloFilters {
	return &NullableSloFilters{value: val, isSet: true}
}

func (v NullableSloFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


