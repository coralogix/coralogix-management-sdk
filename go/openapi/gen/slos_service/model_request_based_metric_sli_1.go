/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slos_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RequestBasedMetricSli1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestBasedMetricSli1{}

// RequestBasedMetricSli1 Definition of a request-based SLI based on metrics
type RequestBasedMetricSli1 struct {
	GoodEvents Metric1 `json:"goodEvents"`
	TotalEvents Metric1 `json:"totalEvents"`
}

type _RequestBasedMetricSli1 RequestBasedMetricSli1

// NewRequestBasedMetricSli1 instantiates a new RequestBasedMetricSli1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestBasedMetricSli1(goodEvents Metric1, totalEvents Metric1) *RequestBasedMetricSli1 {
	this := RequestBasedMetricSli1{}
	this.GoodEvents = goodEvents
	this.TotalEvents = totalEvents
	return &this
}

// NewRequestBasedMetricSli1WithDefaults instantiates a new RequestBasedMetricSli1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestBasedMetricSli1WithDefaults() *RequestBasedMetricSli1 {
	this := RequestBasedMetricSli1{}
	return &this
}

// GetGoodEvents returns the GoodEvents field value
func (o *RequestBasedMetricSli1) GetGoodEvents() Metric1 {
	if o == nil {
		var ret Metric1
		return ret
	}

	return o.GoodEvents
}

// GetGoodEventsOk returns a tuple with the GoodEvents field value
// and a boolean to check if the value has been set.
func (o *RequestBasedMetricSli1) GetGoodEventsOk() (*Metric1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GoodEvents, true
}

// SetGoodEvents sets field value
func (o *RequestBasedMetricSli1) SetGoodEvents(v Metric1) {
	o.GoodEvents = v
}

// GetTotalEvents returns the TotalEvents field value
func (o *RequestBasedMetricSli1) GetTotalEvents() Metric1 {
	if o == nil {
		var ret Metric1
		return ret
	}

	return o.TotalEvents
}

// GetTotalEventsOk returns a tuple with the TotalEvents field value
// and a boolean to check if the value has been set.
func (o *RequestBasedMetricSli1) GetTotalEventsOk() (*Metric1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalEvents, true
}

// SetTotalEvents sets field value
func (o *RequestBasedMetricSli1) SetTotalEvents(v Metric1) {
	o.TotalEvents = v
}

func (o RequestBasedMetricSli1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestBasedMetricSli1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["goodEvents"] = o.GoodEvents
	toSerialize["totalEvents"] = o.TotalEvents
	return toSerialize, nil
}

func (o *RequestBasedMetricSli1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"goodEvents",
		"totalEvents",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRequestBasedMetricSli1 := _RequestBasedMetricSli1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRequestBasedMetricSli1)

	if err != nil {
		return err
	}

	*o = RequestBasedMetricSli1(varRequestBasedMetricSli1)

	return err
}

type NullableRequestBasedMetricSli1 struct {
	value *RequestBasedMetricSli1
	isSet bool
}

func (v NullableRequestBasedMetricSli1) Get() *RequestBasedMetricSli1 {
	return v.value
}

func (v *NullableRequestBasedMetricSli1) Set(val *RequestBasedMetricSli1) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestBasedMetricSli1) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestBasedMetricSli1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestBasedMetricSli1(val *RequestBasedMetricSli1) *NullableRequestBasedMetricSli1 {
	return &NullableRequestBasedMetricSli1{value: val, isSet: true}
}

func (v NullableRequestBasedMetricSli1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestBasedMetricSli1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


