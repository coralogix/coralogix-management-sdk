/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slos_service

import (
	"encoding/json"
)

// checks if the SloExecutionResponseReplaceSloResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloExecutionResponseReplaceSloResponse{}

// SloExecutionResponseReplaceSloResponse Response for an executed SLO operation.
type SloExecutionResponseReplaceSloResponse struct {
	ReplaceSloResponse *ReplaceSloResponse `json:"replaceSloResponse,omitempty"`
}

// NewSloExecutionResponseReplaceSloResponse instantiates a new SloExecutionResponseReplaceSloResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloExecutionResponseReplaceSloResponse() *SloExecutionResponseReplaceSloResponse {
	this := SloExecutionResponseReplaceSloResponse{}
	return &this
}

// NewSloExecutionResponseReplaceSloResponseWithDefaults instantiates a new SloExecutionResponseReplaceSloResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloExecutionResponseReplaceSloResponseWithDefaults() *SloExecutionResponseReplaceSloResponse {
	this := SloExecutionResponseReplaceSloResponse{}
	return &this
}

// GetReplaceSloResponse returns the ReplaceSloResponse field value if set, zero value otherwise.
func (o *SloExecutionResponseReplaceSloResponse) GetReplaceSloResponse() ReplaceSloResponse {
	if o == nil || IsNil(o.ReplaceSloResponse) {
		var ret ReplaceSloResponse
		return ret
	}
	return *o.ReplaceSloResponse
}

// GetReplaceSloResponseOk returns a tuple with the ReplaceSloResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloExecutionResponseReplaceSloResponse) GetReplaceSloResponseOk() (*ReplaceSloResponse, bool) {
	if o == nil || IsNil(o.ReplaceSloResponse) {
		return nil, false
	}
	return o.ReplaceSloResponse, true
}

// HasReplaceSloResponse returns a boolean if a field has been set.
func (o *SloExecutionResponseReplaceSloResponse) HasReplaceSloResponse() bool {
	if o != nil && !IsNil(o.ReplaceSloResponse) {
		return true
	}

	return false
}

// SetReplaceSloResponse gets a reference to the given ReplaceSloResponse and assigns it to the ReplaceSloResponse field.
func (o *SloExecutionResponseReplaceSloResponse) SetReplaceSloResponse(v ReplaceSloResponse) {
	o.ReplaceSloResponse = &v
}

func (o SloExecutionResponseReplaceSloResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloExecutionResponseReplaceSloResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReplaceSloResponse) {
		toSerialize["replaceSloResponse"] = o.ReplaceSloResponse
	}
	return toSerialize, nil
}

type NullableSloExecutionResponseReplaceSloResponse struct {
	value *SloExecutionResponseReplaceSloResponse
	isSet bool
}

func (v NullableSloExecutionResponseReplaceSloResponse) Get() *SloExecutionResponseReplaceSloResponse {
	return v.value
}

func (v *NullableSloExecutionResponseReplaceSloResponse) Set(val *SloExecutionResponseReplaceSloResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSloExecutionResponseReplaceSloResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSloExecutionResponseReplaceSloResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloExecutionResponseReplaceSloResponse(val *SloExecutionResponseReplaceSloResponse) *NullableSloExecutionResponseReplaceSloResponse {
	return &NullableSloExecutionResponseReplaceSloResponse{value: val, isSet: true}
}

func (v NullableSloExecutionResponseReplaceSloResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloExecutionResponseReplaceSloResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


