/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slos_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListSlosResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListSlosResponse{}

// ListSlosResponse Response containing a list of SLOs.
type ListSlosResponse struct {
	Slos []Slo `json:"slos"`
}

type _ListSlosResponse ListSlosResponse

// NewListSlosResponse instantiates a new ListSlosResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSlosResponse(slos []Slo) *ListSlosResponse {
	this := ListSlosResponse{}
	this.Slos = slos
	return &this
}

// NewListSlosResponseWithDefaults instantiates a new ListSlosResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSlosResponseWithDefaults() *ListSlosResponse {
	this := ListSlosResponse{}
	return &this
}

// GetSlos returns the Slos field value
func (o *ListSlosResponse) GetSlos() []Slo {
	if o == nil {
		var ret []Slo
		return ret
	}

	return o.Slos
}

// GetSlosOk returns a tuple with the Slos field value
// and a boolean to check if the value has been set.
func (o *ListSlosResponse) GetSlosOk() ([]Slo, bool) {
	if o == nil {
		return nil, false
	}
	return o.Slos, true
}

// SetSlos sets field value
func (o *ListSlosResponse) SetSlos(v []Slo) {
	o.Slos = v
}

func (o ListSlosResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListSlosResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["slos"] = o.Slos
	return toSerialize, nil
}

func (o *ListSlosResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"slos",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListSlosResponse := _ListSlosResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListSlosResponse)

	if err != nil {
		return err
	}

	*o = ListSlosResponse(varListSlosResponse)

	return err
}

type NullableListSlosResponse struct {
	value *ListSlosResponse
	isSet bool
}

func (v NullableListSlosResponse) Get() *ListSlosResponse {
	return v.value
}

func (v *NullableListSlosResponse) Set(val *ListSlosResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListSlosResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListSlosResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSlosResponse(val *ListSlosResponse) *NullableListSlosResponse {
	return &NullableListSlosResponse{value: val, isSet: true}
}

func (v NullableListSlosResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSlosResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


