/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slos_service

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// SlosServiceBatchExecuteSloRequestsParameterInner - struct for SlosServiceBatchExecuteSloRequestsParameterInner
type SlosServiceBatchExecuteSloRequestsParameterInner struct {
	SloExecutionRequestCreateSloRequest *SloExecutionRequestCreateSloRequest
	SloExecutionRequestDeleteSloRequest *SloExecutionRequestDeleteSloRequest
	SloExecutionRequestReplaceSloRequest *SloExecutionRequestReplaceSloRequest
}

// SloExecutionRequestCreateSloRequestAsSlosServiceBatchExecuteSloRequestsParameterInner is a convenience function that returns SloExecutionRequestCreateSloRequest wrapped in SlosServiceBatchExecuteSloRequestsParameterInner
func SloExecutionRequestCreateSloRequestAsSlosServiceBatchExecuteSloRequestsParameterInner(v *SloExecutionRequestCreateSloRequest) SlosServiceBatchExecuteSloRequestsParameterInner {
	return SlosServiceBatchExecuteSloRequestsParameterInner{
		SloExecutionRequestCreateSloRequest: v,
	}
}

// SloExecutionRequestDeleteSloRequestAsSlosServiceBatchExecuteSloRequestsParameterInner is a convenience function that returns SloExecutionRequestDeleteSloRequest wrapped in SlosServiceBatchExecuteSloRequestsParameterInner
func SloExecutionRequestDeleteSloRequestAsSlosServiceBatchExecuteSloRequestsParameterInner(v *SloExecutionRequestDeleteSloRequest) SlosServiceBatchExecuteSloRequestsParameterInner {
	return SlosServiceBatchExecuteSloRequestsParameterInner{
		SloExecutionRequestDeleteSloRequest: v,
	}
}

// SloExecutionRequestReplaceSloRequestAsSlosServiceBatchExecuteSloRequestsParameterInner is a convenience function that returns SloExecutionRequestReplaceSloRequest wrapped in SlosServiceBatchExecuteSloRequestsParameterInner
func SloExecutionRequestReplaceSloRequestAsSlosServiceBatchExecuteSloRequestsParameterInner(v *SloExecutionRequestReplaceSloRequest) SlosServiceBatchExecuteSloRequestsParameterInner {
	return SlosServiceBatchExecuteSloRequestsParameterInner{
		SloExecutionRequestReplaceSloRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *SlosServiceBatchExecuteSloRequestsParameterInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into SloExecutionRequestCreateSloRequest
	err = newStrictDecoder(data).Decode(&dst.SloExecutionRequestCreateSloRequest)
	if err == nil {
		jsonSloExecutionRequestCreateSloRequest, _ := json.Marshal(dst.SloExecutionRequestCreateSloRequest)
		if string(jsonSloExecutionRequestCreateSloRequest) == "{}" { // empty struct
			dst.SloExecutionRequestCreateSloRequest = nil
		} else {
			if err = validator.Validate(dst.SloExecutionRequestCreateSloRequest); err != nil {
				dst.SloExecutionRequestCreateSloRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.SloExecutionRequestCreateSloRequest = nil
	}

	// try to unmarshal data into SloExecutionRequestDeleteSloRequest
	err = newStrictDecoder(data).Decode(&dst.SloExecutionRequestDeleteSloRequest)
	if err == nil {
		jsonSloExecutionRequestDeleteSloRequest, _ := json.Marshal(dst.SloExecutionRequestDeleteSloRequest)
		if string(jsonSloExecutionRequestDeleteSloRequest) == "{}" { // empty struct
			dst.SloExecutionRequestDeleteSloRequest = nil
		} else {
			if err = validator.Validate(dst.SloExecutionRequestDeleteSloRequest); err != nil {
				dst.SloExecutionRequestDeleteSloRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.SloExecutionRequestDeleteSloRequest = nil
	}

	// try to unmarshal data into SloExecutionRequestReplaceSloRequest
	err = newStrictDecoder(data).Decode(&dst.SloExecutionRequestReplaceSloRequest)
	if err == nil {
		jsonSloExecutionRequestReplaceSloRequest, _ := json.Marshal(dst.SloExecutionRequestReplaceSloRequest)
		if string(jsonSloExecutionRequestReplaceSloRequest) == "{}" { // empty struct
			dst.SloExecutionRequestReplaceSloRequest = nil
		} else {
			if err = validator.Validate(dst.SloExecutionRequestReplaceSloRequest); err != nil {
				dst.SloExecutionRequestReplaceSloRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.SloExecutionRequestReplaceSloRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.SloExecutionRequestCreateSloRequest = nil
		dst.SloExecutionRequestDeleteSloRequest = nil
		dst.SloExecutionRequestReplaceSloRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(SlosServiceBatchExecuteSloRequestsParameterInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(SlosServiceBatchExecuteSloRequestsParameterInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src SlosServiceBatchExecuteSloRequestsParameterInner) MarshalJSON() ([]byte, error) {
	if src.SloExecutionRequestCreateSloRequest != nil {
		return json.Marshal(&src.SloExecutionRequestCreateSloRequest)
	}

	if src.SloExecutionRequestDeleteSloRequest != nil {
		return json.Marshal(&src.SloExecutionRequestDeleteSloRequest)
	}

	if src.SloExecutionRequestReplaceSloRequest != nil {
		return json.Marshal(&src.SloExecutionRequestReplaceSloRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *SlosServiceBatchExecuteSloRequestsParameterInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.SloExecutionRequestCreateSloRequest != nil {
		return obj.SloExecutionRequestCreateSloRequest
	}

	if obj.SloExecutionRequestDeleteSloRequest != nil {
		return obj.SloExecutionRequestDeleteSloRequest
	}

	if obj.SloExecutionRequestReplaceSloRequest != nil {
		return obj.SloExecutionRequestReplaceSloRequest
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj SlosServiceBatchExecuteSloRequestsParameterInner) GetActualInstanceValue() (interface{}) {
	if obj.SloExecutionRequestCreateSloRequest != nil {
		return *obj.SloExecutionRequestCreateSloRequest
	}

	if obj.SloExecutionRequestDeleteSloRequest != nil {
		return *obj.SloExecutionRequestDeleteSloRequest
	}

	if obj.SloExecutionRequestReplaceSloRequest != nil {
		return *obj.SloExecutionRequestReplaceSloRequest
	}

	// all schemas are nil
	return nil
}

type NullableSlosServiceBatchExecuteSloRequestsParameterInner struct {
	value *SlosServiceBatchExecuteSloRequestsParameterInner
	isSet bool
}

func (v NullableSlosServiceBatchExecuteSloRequestsParameterInner) Get() *SlosServiceBatchExecuteSloRequestsParameterInner {
	return v.value
}

func (v *NullableSlosServiceBatchExecuteSloRequestsParameterInner) Set(val *SlosServiceBatchExecuteSloRequestsParameterInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSlosServiceBatchExecuteSloRequestsParameterInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSlosServiceBatchExecuteSloRequestsParameterInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlosServiceBatchExecuteSloRequestsParameterInner(val *SlosServiceBatchExecuteSloRequestsParameterInner) *NullableSlosServiceBatchExecuteSloRequestsParameterInner {
	return &NullableSlosServiceBatchExecuteSloRequestsParameterInner{value: val, isSet: true}
}

func (v NullableSlosServiceBatchExecuteSloRequestsParameterInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlosServiceBatchExecuteSloRequestsParameterInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


