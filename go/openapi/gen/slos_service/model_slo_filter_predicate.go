/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slos_service

import (
	"encoding/json"
)

// checks if the SloFilterPredicate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloFilterPredicate{}

// SloFilterPredicate Predicate used for filtering SLOs
type SloFilterPredicate struct {
	Is *IsFilterPredicate `json:"is,omitempty"`
}

// NewSloFilterPredicate instantiates a new SloFilterPredicate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloFilterPredicate() *SloFilterPredicate {
	this := SloFilterPredicate{}
	return &this
}

// NewSloFilterPredicateWithDefaults instantiates a new SloFilterPredicate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloFilterPredicateWithDefaults() *SloFilterPredicate {
	this := SloFilterPredicate{}
	return &this
}

// GetIs returns the Is field value if set, zero value otherwise.
func (o *SloFilterPredicate) GetIs() IsFilterPredicate {
	if o == nil || IsNil(o.Is) {
		var ret IsFilterPredicate
		return ret
	}
	return *o.Is
}

// GetIsOk returns a tuple with the Is field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloFilterPredicate) GetIsOk() (*IsFilterPredicate, bool) {
	if o == nil || IsNil(o.Is) {
		return nil, false
	}
	return o.Is, true
}

// HasIs returns a boolean if a field has been set.
func (o *SloFilterPredicate) HasIs() bool {
	if o != nil && !IsNil(o.Is) {
		return true
	}

	return false
}

// SetIs gets a reference to the given IsFilterPredicate and assigns it to the Is field.
func (o *SloFilterPredicate) SetIs(v IsFilterPredicate) {
	o.Is = &v
}

func (o SloFilterPredicate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloFilterPredicate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Is) {
		toSerialize["is"] = o.Is
	}
	return toSerialize, nil
}

type NullableSloFilterPredicate struct {
	value *SloFilterPredicate
	isSet bool
}

func (v NullableSloFilterPredicate) Get() *SloFilterPredicate {
	return v.value
}

func (v *NullableSloFilterPredicate) Set(val *SloFilterPredicate) {
	v.value = val
	v.isSet = true
}

func (v NullableSloFilterPredicate) IsSet() bool {
	return v.isSet
}

func (v *NullableSloFilterPredicate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloFilterPredicate(val *SloFilterPredicate) *NullableSloFilterPredicate {
	return &NullableSloFilterPredicate{value: val, isSet: true}
}

func (v NullableSloFilterPredicate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloFilterPredicate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


