/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slos_service

import (
	"encoding/json"
)

// checks if the SloExecutionRequestReplaceSloRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloExecutionRequestReplaceSloRequest{}

// SloExecutionRequestReplaceSloRequest Request for executing an SLO operation.
type SloExecutionRequestReplaceSloRequest struct {
	ReplaceSloRequest *ReplaceSloRequest `json:"replaceSloRequest,omitempty"`
}

// NewSloExecutionRequestReplaceSloRequest instantiates a new SloExecutionRequestReplaceSloRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloExecutionRequestReplaceSloRequest() *SloExecutionRequestReplaceSloRequest {
	this := SloExecutionRequestReplaceSloRequest{}
	return &this
}

// NewSloExecutionRequestReplaceSloRequestWithDefaults instantiates a new SloExecutionRequestReplaceSloRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloExecutionRequestReplaceSloRequestWithDefaults() *SloExecutionRequestReplaceSloRequest {
	this := SloExecutionRequestReplaceSloRequest{}
	return &this
}

// GetReplaceSloRequest returns the ReplaceSloRequest field value if set, zero value otherwise.
func (o *SloExecutionRequestReplaceSloRequest) GetReplaceSloRequest() ReplaceSloRequest {
	if o == nil || IsNil(o.ReplaceSloRequest) {
		var ret ReplaceSloRequest
		return ret
	}
	return *o.ReplaceSloRequest
}

// GetReplaceSloRequestOk returns a tuple with the ReplaceSloRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloExecutionRequestReplaceSloRequest) GetReplaceSloRequestOk() (*ReplaceSloRequest, bool) {
	if o == nil || IsNil(o.ReplaceSloRequest) {
		return nil, false
	}
	return o.ReplaceSloRequest, true
}

// HasReplaceSloRequest returns a boolean if a field has been set.
func (o *SloExecutionRequestReplaceSloRequest) HasReplaceSloRequest() bool {
	if o != nil && !IsNil(o.ReplaceSloRequest) {
		return true
	}

	return false
}

// SetReplaceSloRequest gets a reference to the given ReplaceSloRequest and assigns it to the ReplaceSloRequest field.
func (o *SloExecutionRequestReplaceSloRequest) SetReplaceSloRequest(v ReplaceSloRequest) {
	o.ReplaceSloRequest = &v
}

func (o SloExecutionRequestReplaceSloRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloExecutionRequestReplaceSloRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReplaceSloRequest) {
		toSerialize["replaceSloRequest"] = o.ReplaceSloRequest
	}
	return toSerialize, nil
}

type NullableSloExecutionRequestReplaceSloRequest struct {
	value *SloExecutionRequestReplaceSloRequest
	isSet bool
}

func (v NullableSloExecutionRequestReplaceSloRequest) Get() *SloExecutionRequestReplaceSloRequest {
	return v.value
}

func (v *NullableSloExecutionRequestReplaceSloRequest) Set(val *SloExecutionRequestReplaceSloRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSloExecutionRequestReplaceSloRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSloExecutionRequestReplaceSloRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloExecutionRequestReplaceSloRequest(val *SloExecutionRequestReplaceSloRequest) *NullableSloExecutionRequestReplaceSloRequest {
	return &NullableSloExecutionRequestReplaceSloRequest{value: val, isSet: true}
}

func (v NullableSloExecutionRequestReplaceSloRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloExecutionRequestReplaceSloRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


