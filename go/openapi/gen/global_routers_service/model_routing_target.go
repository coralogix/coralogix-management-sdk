/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package global_routers_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RoutingTarget type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingTarget{}

// RoutingTarget Defines routing target for notifications
type RoutingTarget struct {
	ConnectorId string `json:"connectorId"`
	CustomDetails *map[string]string `json:"customDetails,omitempty"`
	PresetId *string `json:"presetId,omitempty"`
}

type _RoutingTarget RoutingTarget

// NewRoutingTarget instantiates a new RoutingTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingTarget(connectorId string) *RoutingTarget {
	this := RoutingTarget{}
	this.ConnectorId = connectorId
	return &this
}

// NewRoutingTargetWithDefaults instantiates a new RoutingTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingTargetWithDefaults() *RoutingTarget {
	this := RoutingTarget{}
	return &this
}

// GetConnectorId returns the ConnectorId field value
func (o *RoutingTarget) GetConnectorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectorId
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value
// and a boolean to check if the value has been set.
func (o *RoutingTarget) GetConnectorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorId, true
}

// SetConnectorId sets field value
func (o *RoutingTarget) SetConnectorId(v string) {
	o.ConnectorId = v
}

// GetCustomDetails returns the CustomDetails field value if set, zero value otherwise.
func (o *RoutingTarget) GetCustomDetails() map[string]string {
	if o == nil || IsNil(o.CustomDetails) {
		var ret map[string]string
		return ret
	}
	return *o.CustomDetails
}

// GetCustomDetailsOk returns a tuple with the CustomDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingTarget) GetCustomDetailsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CustomDetails) {
		return nil, false
	}
	return o.CustomDetails, true
}

// HasCustomDetails returns a boolean if a field has been set.
func (o *RoutingTarget) HasCustomDetails() bool {
	if o != nil && !IsNil(o.CustomDetails) {
		return true
	}

	return false
}

// SetCustomDetails gets a reference to the given map[string]string and assigns it to the CustomDetails field.
func (o *RoutingTarget) SetCustomDetails(v map[string]string) {
	o.CustomDetails = &v
}

// GetPresetId returns the PresetId field value if set, zero value otherwise.
func (o *RoutingTarget) GetPresetId() string {
	if o == nil || IsNil(o.PresetId) {
		var ret string
		return ret
	}
	return *o.PresetId
}

// GetPresetIdOk returns a tuple with the PresetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingTarget) GetPresetIdOk() (*string, bool) {
	if o == nil || IsNil(o.PresetId) {
		return nil, false
	}
	return o.PresetId, true
}

// HasPresetId returns a boolean if a field has been set.
func (o *RoutingTarget) HasPresetId() bool {
	if o != nil && !IsNil(o.PresetId) {
		return true
	}

	return false
}

// SetPresetId gets a reference to the given string and assigns it to the PresetId field.
func (o *RoutingTarget) SetPresetId(v string) {
	o.PresetId = &v
}

func (o RoutingTarget) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingTarget) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["connectorId"] = o.ConnectorId
	if !IsNil(o.CustomDetails) {
		toSerialize["customDetails"] = o.CustomDetails
	}
	if !IsNil(o.PresetId) {
		toSerialize["presetId"] = o.PresetId
	}
	return toSerialize, nil
}

func (o *RoutingTarget) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"connectorId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoutingTarget := _RoutingTarget{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoutingTarget)

	if err != nil {
		return err
	}

	*o = RoutingTarget(varRoutingTarget)

	return err
}

type NullableRoutingTarget struct {
	value *RoutingTarget
	isSet bool
}

func (v NullableRoutingTarget) Get() *RoutingTarget {
	return v.value
}

func (v *NullableRoutingTarget) Set(val *RoutingTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingTarget(val *RoutingTarget) *NullableRoutingTarget {
	return &NullableRoutingTarget{value: val, isSet: true}
}

func (v NullableRoutingTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


