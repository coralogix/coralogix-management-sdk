/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package team_permissions_management_service

import (
	"encoding/json"
)

// checks if the GetGroupUsersResponse2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetGroupUsersResponse2{}

// GetGroupUsersResponse2 Response containing the list of all users currently assigned to the requested team group.
type GetGroupUsersResponse2 struct {
	Token *NextPageToken `json:"token,omitempty"`
	Users []V1User `json:"users,omitempty"`
}

// NewGetGroupUsersResponse2 instantiates a new GetGroupUsersResponse2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetGroupUsersResponse2() *GetGroupUsersResponse2 {
	this := GetGroupUsersResponse2{}
	return &this
}

// NewGetGroupUsersResponse2WithDefaults instantiates a new GetGroupUsersResponse2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetGroupUsersResponse2WithDefaults() *GetGroupUsersResponse2 {
	this := GetGroupUsersResponse2{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *GetGroupUsersResponse2) GetToken() NextPageToken {
	if o == nil || IsNil(o.Token) {
		var ret NextPageToken
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGroupUsersResponse2) GetTokenOk() (*NextPageToken, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *GetGroupUsersResponse2) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given NextPageToken and assigns it to the Token field.
func (o *GetGroupUsersResponse2) SetToken(v NextPageToken) {
	o.Token = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *GetGroupUsersResponse2) GetUsers() []V1User {
	if o == nil || IsNil(o.Users) {
		var ret []V1User
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGroupUsersResponse2) GetUsersOk() ([]V1User, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *GetGroupUsersResponse2) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []V1User and assigns it to the Users field.
func (o *GetGroupUsersResponse2) SetUsers(v []V1User) {
	o.Users = v
}

func (o GetGroupUsersResponse2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetGroupUsersResponse2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullableGetGroupUsersResponse2 struct {
	value *GetGroupUsersResponse2
	isSet bool
}

func (v NullableGetGroupUsersResponse2) Get() *GetGroupUsersResponse2 {
	return v.value
}

func (v *NullableGetGroupUsersResponse2) Set(val *GetGroupUsersResponse2) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGroupUsersResponse2) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGroupUsersResponse2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGroupUsersResponse2(val *GetGroupUsersResponse2) *NullableGetGroupUsersResponse2 {
	return &NullableGetGroupUsersResponse2{value: val, isSet: true}
}

func (v NullableGetGroupUsersResponse2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGroupUsersResponse2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


