/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package team_permissions_management_service

import (
	"encoding/json"
)

// checks if the SetTeamGroupScopeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetTeamGroupScopeRequest{}

// SetTeamGroupScopeRequest Request message for setting scope filters (subsystems and applications) for a team group to control access permissions
type SetTeamGroupScopeRequest struct {
	ScopeFilters *ScopeFilters `json:"scopeFilters,omitempty"`
}

// NewSetTeamGroupScopeRequest instantiates a new SetTeamGroupScopeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetTeamGroupScopeRequest() *SetTeamGroupScopeRequest {
	this := SetTeamGroupScopeRequest{}
	return &this
}

// NewSetTeamGroupScopeRequestWithDefaults instantiates a new SetTeamGroupScopeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetTeamGroupScopeRequestWithDefaults() *SetTeamGroupScopeRequest {
	this := SetTeamGroupScopeRequest{}
	return &this
}

// GetScopeFilters returns the ScopeFilters field value if set, zero value otherwise.
func (o *SetTeamGroupScopeRequest) GetScopeFilters() ScopeFilters {
	if o == nil || IsNil(o.ScopeFilters) {
		var ret ScopeFilters
		return ret
	}
	return *o.ScopeFilters
}

// GetScopeFiltersOk returns a tuple with the ScopeFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetTeamGroupScopeRequest) GetScopeFiltersOk() (*ScopeFilters, bool) {
	if o == nil || IsNil(o.ScopeFilters) {
		return nil, false
	}
	return o.ScopeFilters, true
}

// HasScopeFilters returns a boolean if a field has been set.
func (o *SetTeamGroupScopeRequest) HasScopeFilters() bool {
	if o != nil && !IsNil(o.ScopeFilters) {
		return true
	}

	return false
}

// SetScopeFilters gets a reference to the given ScopeFilters and assigns it to the ScopeFilters field.
func (o *SetTeamGroupScopeRequest) SetScopeFilters(v ScopeFilters) {
	o.ScopeFilters = &v
}

func (o SetTeamGroupScopeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetTeamGroupScopeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScopeFilters) {
		toSerialize["scopeFilters"] = o.ScopeFilters
	}
	return toSerialize, nil
}

type NullableSetTeamGroupScopeRequest struct {
	value *SetTeamGroupScopeRequest
	isSet bool
}

func (v NullableSetTeamGroupScopeRequest) Get() *SetTeamGroupScopeRequest {
	return v.value
}

func (v *NullableSetTeamGroupScopeRequest) Set(val *SetTeamGroupScopeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetTeamGroupScopeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetTeamGroupScopeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetTeamGroupScopeRequest(val *SetTeamGroupScopeRequest) *NullableSetTeamGroupScopeRequest {
	return &NullableSetTeamGroupScopeRequest{value: val, isSet: true}
}

func (v NullableSetTeamGroupScopeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetTeamGroupScopeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


