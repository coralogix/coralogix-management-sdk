/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package team_permissions_management_service

import (
	"encoding/json"
)

// checks if the SetTeamGroupScopeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetTeamGroupScopeResponse{}

// SetTeamGroupScopeResponse Response message containing the ID of the newly created or updated scope for a team group
type SetTeamGroupScopeResponse struct {
	ScopeId *ScopeId `json:"scopeId,omitempty"`
}

// NewSetTeamGroupScopeResponse instantiates a new SetTeamGroupScopeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetTeamGroupScopeResponse() *SetTeamGroupScopeResponse {
	this := SetTeamGroupScopeResponse{}
	return &this
}

// NewSetTeamGroupScopeResponseWithDefaults instantiates a new SetTeamGroupScopeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetTeamGroupScopeResponseWithDefaults() *SetTeamGroupScopeResponse {
	this := SetTeamGroupScopeResponse{}
	return &this
}

// GetScopeId returns the ScopeId field value if set, zero value otherwise.
func (o *SetTeamGroupScopeResponse) GetScopeId() ScopeId {
	if o == nil || IsNil(o.ScopeId) {
		var ret ScopeId
		return ret
	}
	return *o.ScopeId
}

// GetScopeIdOk returns a tuple with the ScopeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetTeamGroupScopeResponse) GetScopeIdOk() (*ScopeId, bool) {
	if o == nil || IsNil(o.ScopeId) {
		return nil, false
	}
	return o.ScopeId, true
}

// HasScopeId returns a boolean if a field has been set.
func (o *SetTeamGroupScopeResponse) HasScopeId() bool {
	if o != nil && !IsNil(o.ScopeId) {
		return true
	}

	return false
}

// SetScopeId gets a reference to the given ScopeId and assigns it to the ScopeId field.
func (o *SetTeamGroupScopeResponse) SetScopeId(v ScopeId) {
	o.ScopeId = &v
}

func (o SetTeamGroupScopeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetTeamGroupScopeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScopeId) {
		toSerialize["scopeId"] = o.ScopeId
	}
	return toSerialize, nil
}

type NullableSetTeamGroupScopeResponse struct {
	value *SetTeamGroupScopeResponse
	isSet bool
}

func (v NullableSetTeamGroupScopeResponse) Get() *SetTeamGroupScopeResponse {
	return v.value
}

func (v *NullableSetTeamGroupScopeResponse) Set(val *SetTeamGroupScopeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSetTeamGroupScopeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSetTeamGroupScopeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetTeamGroupScopeResponse(val *SetTeamGroupScopeResponse) *NullableSetTeamGroupScopeResponse {
	return &NullableSetTeamGroupScopeResponse{value: val, isSet: true}
}

func (v NullableSetTeamGroupScopeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetTeamGroupScopeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


