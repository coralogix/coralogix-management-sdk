/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package team_permissions_management_service

import (
	"encoding/json"
)

// checks if the GetTeamGroupScopeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTeamGroupScopeResponse{}

// GetTeamGroupScopeResponse Response message containing the optional scope configuration (filters for subsystems and applications) for a team group
type GetTeamGroupScopeResponse struct {
	Scope *PermissionsV1Scope `json:"scope,omitempty"`
}

// NewGetTeamGroupScopeResponse instantiates a new GetTeamGroupScopeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTeamGroupScopeResponse() *GetTeamGroupScopeResponse {
	this := GetTeamGroupScopeResponse{}
	return &this
}

// NewGetTeamGroupScopeResponseWithDefaults instantiates a new GetTeamGroupScopeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTeamGroupScopeResponseWithDefaults() *GetTeamGroupScopeResponse {
	this := GetTeamGroupScopeResponse{}
	return &this
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *GetTeamGroupScopeResponse) GetScope() PermissionsV1Scope {
	if o == nil || IsNil(o.Scope) {
		var ret PermissionsV1Scope
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTeamGroupScopeResponse) GetScopeOk() (*PermissionsV1Scope, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *GetTeamGroupScopeResponse) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given PermissionsV1Scope and assigns it to the Scope field.
func (o *GetTeamGroupScopeResponse) SetScope(v PermissionsV1Scope) {
	o.Scope = &v
}

func (o GetTeamGroupScopeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTeamGroupScopeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	return toSerialize, nil
}

type NullableGetTeamGroupScopeResponse struct {
	value *GetTeamGroupScopeResponse
	isSet bool
}

func (v NullableGetTeamGroupScopeResponse) Get() *GetTeamGroupScopeResponse {
	return v.value
}

func (v *NullableGetTeamGroupScopeResponse) Set(val *GetTeamGroupScopeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTeamGroupScopeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTeamGroupScopeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTeamGroupScopeResponse(val *GetTeamGroupScopeResponse) *NullableGetTeamGroupScopeResponse {
	return &NullableGetTeamGroupScopeResponse{value: val, isSet: true}
}

func (v NullableGetTeamGroupScopeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTeamGroupScopeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


