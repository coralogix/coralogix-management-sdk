/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package team_permissions_management_service

import (
	"encoding/json"
)

// checks if the AddUsersToTeamGroupsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddUsersToTeamGroupsRequest{}

// AddUsersToTeamGroupsRequest Bulk request to assign users to multiple team groups simultaneously, efficiently managing group memberships at scale.
type AddUsersToTeamGroupsRequest struct {
	AddUsersToGroup []AddUsersToTeamGroup `json:"addUsersToGroup,omitempty"`
	TeamId *PermissionsV1TeamId `json:"teamId,omitempty"`
}

// NewAddUsersToTeamGroupsRequest instantiates a new AddUsersToTeamGroupsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddUsersToTeamGroupsRequest() *AddUsersToTeamGroupsRequest {
	this := AddUsersToTeamGroupsRequest{}
	return &this
}

// NewAddUsersToTeamGroupsRequestWithDefaults instantiates a new AddUsersToTeamGroupsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddUsersToTeamGroupsRequestWithDefaults() *AddUsersToTeamGroupsRequest {
	this := AddUsersToTeamGroupsRequest{}
	return &this
}

// GetAddUsersToGroup returns the AddUsersToGroup field value if set, zero value otherwise.
func (o *AddUsersToTeamGroupsRequest) GetAddUsersToGroup() []AddUsersToTeamGroup {
	if o == nil || IsNil(o.AddUsersToGroup) {
		var ret []AddUsersToTeamGroup
		return ret
	}
	return o.AddUsersToGroup
}

// GetAddUsersToGroupOk returns a tuple with the AddUsersToGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUsersToTeamGroupsRequest) GetAddUsersToGroupOk() ([]AddUsersToTeamGroup, bool) {
	if o == nil || IsNil(o.AddUsersToGroup) {
		return nil, false
	}
	return o.AddUsersToGroup, true
}

// HasAddUsersToGroup returns a boolean if a field has been set.
func (o *AddUsersToTeamGroupsRequest) HasAddUsersToGroup() bool {
	if o != nil && !IsNil(o.AddUsersToGroup) {
		return true
	}

	return false
}

// SetAddUsersToGroup gets a reference to the given []AddUsersToTeamGroup and assigns it to the AddUsersToGroup field.
func (o *AddUsersToTeamGroupsRequest) SetAddUsersToGroup(v []AddUsersToTeamGroup) {
	o.AddUsersToGroup = v
}

// GetTeamId returns the TeamId field value if set, zero value otherwise.
func (o *AddUsersToTeamGroupsRequest) GetTeamId() PermissionsV1TeamId {
	if o == nil || IsNil(o.TeamId) {
		var ret PermissionsV1TeamId
		return ret
	}
	return *o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUsersToTeamGroupsRequest) GetTeamIdOk() (*PermissionsV1TeamId, bool) {
	if o == nil || IsNil(o.TeamId) {
		return nil, false
	}
	return o.TeamId, true
}

// HasTeamId returns a boolean if a field has been set.
func (o *AddUsersToTeamGroupsRequest) HasTeamId() bool {
	if o != nil && !IsNil(o.TeamId) {
		return true
	}

	return false
}

// SetTeamId gets a reference to the given PermissionsV1TeamId and assigns it to the TeamId field.
func (o *AddUsersToTeamGroupsRequest) SetTeamId(v PermissionsV1TeamId) {
	o.TeamId = &v
}

func (o AddUsersToTeamGroupsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddUsersToTeamGroupsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddUsersToGroup) {
		toSerialize["addUsersToGroup"] = o.AddUsersToGroup
	}
	if !IsNil(o.TeamId) {
		toSerialize["teamId"] = o.TeamId
	}
	return toSerialize, nil
}

type NullableAddUsersToTeamGroupsRequest struct {
	value *AddUsersToTeamGroupsRequest
	isSet bool
}

func (v NullableAddUsersToTeamGroupsRequest) Get() *AddUsersToTeamGroupsRequest {
	return v.value
}

func (v *NullableAddUsersToTeamGroupsRequest) Set(val *AddUsersToTeamGroupsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddUsersToTeamGroupsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddUsersToTeamGroupsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddUsersToTeamGroupsRequest(val *AddUsersToTeamGroupsRequest) *NullableAddUsersToTeamGroupsRequest {
	return &NullableAddUsersToTeamGroupsRequest{value: val, isSet: true}
}

func (v NullableAddUsersToTeamGroupsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddUsersToTeamGroupsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


