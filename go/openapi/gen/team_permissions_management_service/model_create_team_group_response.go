/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package team_permissions_management_service

import (
	"encoding/json"
)

// checks if the CreateTeamGroupResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTeamGroupResponse{}

// CreateTeamGroupResponse Response containing the unique identifier of the newly created team group.
type CreateTeamGroupResponse struct {
	GroupId *TeamGroupId `json:"groupId,omitempty"`
}

// NewCreateTeamGroupResponse instantiates a new CreateTeamGroupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTeamGroupResponse() *CreateTeamGroupResponse {
	this := CreateTeamGroupResponse{}
	return &this
}

// NewCreateTeamGroupResponseWithDefaults instantiates a new CreateTeamGroupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTeamGroupResponseWithDefaults() *CreateTeamGroupResponse {
	this := CreateTeamGroupResponse{}
	return &this
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *CreateTeamGroupResponse) GetGroupId() TeamGroupId {
	if o == nil || IsNil(o.GroupId) {
		var ret TeamGroupId
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTeamGroupResponse) GetGroupIdOk() (*TeamGroupId, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *CreateTeamGroupResponse) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given TeamGroupId and assigns it to the GroupId field.
func (o *CreateTeamGroupResponse) SetGroupId(v TeamGroupId) {
	o.GroupId = &v
}

func (o CreateTeamGroupResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTeamGroupResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	return toSerialize, nil
}

type NullableCreateTeamGroupResponse struct {
	value *CreateTeamGroupResponse
	isSet bool
}

func (v NullableCreateTeamGroupResponse) Get() *CreateTeamGroupResponse {
	return v.value
}

func (v *NullableCreateTeamGroupResponse) Set(val *CreateTeamGroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTeamGroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTeamGroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTeamGroupResponse(val *CreateTeamGroupResponse) *NullableCreateTeamGroupResponse {
	return &NullableCreateTeamGroupResponse{value: val, isSet: true}
}

func (v NullableCreateTeamGroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTeamGroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


