/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BatchGetServiceSlosResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchGetServiceSlosResponse{}

// BatchGetServiceSlosResponse This data structure represents a response to batch get Service SLOs.
type BatchGetServiceSlosResponse struct {
	NotFoundIds []string `json:"notFoundIds,omitempty"`
	Slos map[string]ServiceSlo `json:"slos"`
}

type _BatchGetServiceSlosResponse BatchGetServiceSlosResponse

// NewBatchGetServiceSlosResponse instantiates a new BatchGetServiceSlosResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchGetServiceSlosResponse(slos map[string]ServiceSlo) *BatchGetServiceSlosResponse {
	this := BatchGetServiceSlosResponse{}
	this.Slos = slos
	return &this
}

// NewBatchGetServiceSlosResponseWithDefaults instantiates a new BatchGetServiceSlosResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchGetServiceSlosResponseWithDefaults() *BatchGetServiceSlosResponse {
	this := BatchGetServiceSlosResponse{}
	return &this
}

// GetNotFoundIds returns the NotFoundIds field value if set, zero value otherwise.
func (o *BatchGetServiceSlosResponse) GetNotFoundIds() []string {
	if o == nil || IsNil(o.NotFoundIds) {
		var ret []string
		return ret
	}
	return o.NotFoundIds
}

// GetNotFoundIdsOk returns a tuple with the NotFoundIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetServiceSlosResponse) GetNotFoundIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.NotFoundIds) {
		return nil, false
	}
	return o.NotFoundIds, true
}

// HasNotFoundIds returns a boolean if a field has been set.
func (o *BatchGetServiceSlosResponse) HasNotFoundIds() bool {
	if o != nil && !IsNil(o.NotFoundIds) {
		return true
	}

	return false
}

// SetNotFoundIds gets a reference to the given []string and assigns it to the NotFoundIds field.
func (o *BatchGetServiceSlosResponse) SetNotFoundIds(v []string) {
	o.NotFoundIds = v
}

// GetSlos returns the Slos field value
func (o *BatchGetServiceSlosResponse) GetSlos() map[string]ServiceSlo {
	if o == nil {
		var ret map[string]ServiceSlo
		return ret
	}

	return o.Slos
}

// GetSlosOk returns a tuple with the Slos field value
// and a boolean to check if the value has been set.
func (o *BatchGetServiceSlosResponse) GetSlosOk() (map[string]ServiceSlo, bool) {
	if o == nil {
		return map[string]ServiceSlo{}, false
	}
	return o.Slos, true
}

// SetSlos sets field value
func (o *BatchGetServiceSlosResponse) SetSlos(v map[string]ServiceSlo) {
	o.Slos = v
}

func (o BatchGetServiceSlosResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchGetServiceSlosResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NotFoundIds) {
		toSerialize["notFoundIds"] = o.NotFoundIds
	}
	toSerialize["slos"] = o.Slos
	return toSerialize, nil
}

func (o *BatchGetServiceSlosResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"slos",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBatchGetServiceSlosResponse := _BatchGetServiceSlosResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBatchGetServiceSlosResponse)

	if err != nil {
		return err
	}

	*o = BatchGetServiceSlosResponse(varBatchGetServiceSlosResponse)

	return err
}

type NullableBatchGetServiceSlosResponse struct {
	value *BatchGetServiceSlosResponse
	isSet bool
}

func (v NullableBatchGetServiceSlosResponse) Get() *BatchGetServiceSlosResponse {
	return v.value
}

func (v *NullableBatchGetServiceSlosResponse) Set(val *BatchGetServiceSlosResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchGetServiceSlosResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchGetServiceSlosResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchGetServiceSlosResponse(val *BatchGetServiceSlosResponse) *NullableBatchGetServiceSlosResponse {
	return &NullableBatchGetServiceSlosResponse{value: val, isSet: true}
}

func (v NullableBatchGetServiceSlosResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchGetServiceSlosResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


