/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo_service

import (
	"encoding/json"
	"fmt"
)

// V2OrderByDirection the model 'V2OrderByDirection'
type V2OrderByDirection string

// List of v2.OrderByDirection
const (
	V2ORDERBYDIRECTION_ORDER_BY_DIRECTION_UNSPECIFIED V2OrderByDirection = "ORDER_BY_DIRECTION_UNSPECIFIED"
	V2ORDERBYDIRECTION_ORDER_BY_DIRECTION_ASC V2OrderByDirection = "ORDER_BY_DIRECTION_ASC"
	V2ORDERBYDIRECTION_ORDER_BY_DIRECTION_DESC V2OrderByDirection = "ORDER_BY_DIRECTION_DESC"
)

// All allowed values of V2OrderByDirection enum
var AllowedV2OrderByDirectionEnumValues = []V2OrderByDirection{
	"ORDER_BY_DIRECTION_UNSPECIFIED",
	"ORDER_BY_DIRECTION_ASC",
	"ORDER_BY_DIRECTION_DESC",
}

func (v *V2OrderByDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := V2OrderByDirection(value)
	for _, existing := range AllowedV2OrderByDirectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid V2OrderByDirection", value)
}

// NewV2OrderByDirectionFromValue returns a pointer to a valid V2OrderByDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewV2OrderByDirectionFromValue(v string) (*V2OrderByDirection, error) {
	ev := V2OrderByDirection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for V2OrderByDirection: valid values are %v", v, AllowedV2OrderByDirectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v V2OrderByDirection) IsValid() bool {
	for _, existing := range AllowedV2OrderByDirectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to v2.OrderByDirection value
func (v V2OrderByDirection) Ptr() *V2OrderByDirection {
	return &v
}

type NullableV2OrderByDirection struct {
	value *V2OrderByDirection
	isSet bool
}

func (v NullableV2OrderByDirection) Get() *V2OrderByDirection {
	return v.value
}

func (v *NullableV2OrderByDirection) Set(val *V2OrderByDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableV2OrderByDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableV2OrderByDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2OrderByDirection(val *V2OrderByDirection) *NullableV2OrderByDirection {
	return &NullableV2OrderByDirection{value: val, isSet: true}
}

func (v NullableV2OrderByDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2OrderByDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

