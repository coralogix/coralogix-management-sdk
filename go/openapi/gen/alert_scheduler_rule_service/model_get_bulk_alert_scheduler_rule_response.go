/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_scheduler_rule_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetBulkAlertSchedulerRuleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBulkAlertSchedulerRuleResponse{}

// GetBulkAlertSchedulerRuleResponse This is a response sent after getting multiple alert scheduler rules
type GetBulkAlertSchedulerRuleResponse struct {
	AlertSchedulerRules []AlertSchedulerRuleWithActiveTimeframe `json:"alertSchedulerRules"`
	NextPageToken *string `json:"nextPageToken,omitempty"`
}

type _GetBulkAlertSchedulerRuleResponse GetBulkAlertSchedulerRuleResponse

// NewGetBulkAlertSchedulerRuleResponse instantiates a new GetBulkAlertSchedulerRuleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBulkAlertSchedulerRuleResponse(alertSchedulerRules []AlertSchedulerRuleWithActiveTimeframe) *GetBulkAlertSchedulerRuleResponse {
	this := GetBulkAlertSchedulerRuleResponse{}
	this.AlertSchedulerRules = alertSchedulerRules
	return &this
}

// NewGetBulkAlertSchedulerRuleResponseWithDefaults instantiates a new GetBulkAlertSchedulerRuleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBulkAlertSchedulerRuleResponseWithDefaults() *GetBulkAlertSchedulerRuleResponse {
	this := GetBulkAlertSchedulerRuleResponse{}
	return &this
}

// GetAlertSchedulerRules returns the AlertSchedulerRules field value
func (o *GetBulkAlertSchedulerRuleResponse) GetAlertSchedulerRules() []AlertSchedulerRuleWithActiveTimeframe {
	if o == nil {
		var ret []AlertSchedulerRuleWithActiveTimeframe
		return ret
	}

	return o.AlertSchedulerRules
}

// GetAlertSchedulerRulesOk returns a tuple with the AlertSchedulerRules field value
// and a boolean to check if the value has been set.
func (o *GetBulkAlertSchedulerRuleResponse) GetAlertSchedulerRulesOk() ([]AlertSchedulerRuleWithActiveTimeframe, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertSchedulerRules, true
}

// SetAlertSchedulerRules sets field value
func (o *GetBulkAlertSchedulerRuleResponse) SetAlertSchedulerRules(v []AlertSchedulerRuleWithActiveTimeframe) {
	o.AlertSchedulerRules = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *GetBulkAlertSchedulerRuleResponse) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBulkAlertSchedulerRuleResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *GetBulkAlertSchedulerRuleResponse) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *GetBulkAlertSchedulerRuleResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o GetBulkAlertSchedulerRuleResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBulkAlertSchedulerRuleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alertSchedulerRules"] = o.AlertSchedulerRules
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	return toSerialize, nil
}

func (o *GetBulkAlertSchedulerRuleResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alertSchedulerRules",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetBulkAlertSchedulerRuleResponse := _GetBulkAlertSchedulerRuleResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetBulkAlertSchedulerRuleResponse)

	if err != nil {
		return err
	}

	*o = GetBulkAlertSchedulerRuleResponse(varGetBulkAlertSchedulerRuleResponse)

	return err
}

type NullableGetBulkAlertSchedulerRuleResponse struct {
	value *GetBulkAlertSchedulerRuleResponse
	isSet bool
}

func (v NullableGetBulkAlertSchedulerRuleResponse) Get() *GetBulkAlertSchedulerRuleResponse {
	return v.value
}

func (v *NullableGetBulkAlertSchedulerRuleResponse) Set(val *GetBulkAlertSchedulerRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBulkAlertSchedulerRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBulkAlertSchedulerRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBulkAlertSchedulerRuleResponse(val *GetBulkAlertSchedulerRuleResponse) *NullableGetBulkAlertSchedulerRuleResponse {
	return &NullableGetBulkAlertSchedulerRuleResponse{value: val, isSet: true}
}

func (v NullableGetBulkAlertSchedulerRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBulkAlertSchedulerRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


