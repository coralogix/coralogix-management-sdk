openapi: 3.0.0
info:
  title: ""
  version: 1.0.0
servers:
- url: /
paths:
  /v1/alert-scheduler-rules:
    post:
      description: No description available
      externalDocs:
        url: ""
      operationId: AlertSchedulerRuleService_CreateAlertSchedulerRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Create_alert_scheduler_rule_request_data_structure"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAlertSchedulerRuleResponse"
          description: ""
        "400":
          content:
            application/json: {}
          description: Bad Request
        "401":
          content:
            application/json: {}
          description: Unauthorized request
        "500":
          content:
            application/json: {}
          description: Internal server error
      summary: Create an alert scheduler rule
      tags:
      - Alert Scheduler Rule service
      x-codeSamples:
      - lang: Node
        source: |-
          const fetch = require('node-fetch');

          let url = 'https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules';

          let options = {
            method: 'POST',
            headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},
            body: '{"alertSchedulerRule":{"createdAt":"string","description":"string","enabled":true,"filter":{"alertMetaLabels":{"value":[{"id":"string","key":"string","value":"string"}]},"whatExpression":"string"},"id":"string","metaLabels":[{"id":"string","key":"string","value":"string"}],"name":"string","schedule":{"recurring":{"always":{}},"scheduleOperation":"SCHEDULE_OPERATION_UNSPECIFIED"},"uniqueIdentifier":"string","updatedAt":"string"}}'
          };

          fetch(url, options)
            .then(res => res.json())
            .then(json => console.log(json))
            .catch(err => console.error('error:' + err));
      - lang: Python
        source: |-
          import requests

          url = "https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules"

          payload = {"alertSchedulerRule": {
                  "createdAt": "string",
                  "description": "string",
                  "enabled": True,
                  "filter": {
                      "alertMetaLabels": {"value": [
                              {
                                  "id": "string",
                                  "key": "string",
                                  "value": "string"
                              }
                          ]},
                      "whatExpression": "string"
                  },
                  "id": "string",
                  "metaLabels": [
                      {
                          "id": "string",
                          "key": "string",
                          "value": "string"
                      }
                  ],
                  "name": "string",
                  "schedule": {
                      "recurring": {"always": {}},
                      "scheduleOperation": "SCHEDULE_OPERATION_UNSPECIFIED"
                  },
                  "uniqueIdentifier": "string",
                  "updatedAt": "string"
              }}
          headers = {
              "Authorization": "Bearer <API_KEY>",
              "content-type": "application/json"
          }

          response = requests.request("POST", url, json=payload, headers=headers)

          print(response.text)
      - lang: Shell
        source: |-
          curl --request POST \
            --url https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules \
            --header 'Authorization: Bearer <API_KEY>' \
            --header 'content-type: application/json' \
            --data '{"alertSchedulerRule":{"createdAt":"string","description":"string","enabled":true,"filter":{"alertMetaLabels":{"value":[{"id":"string","key":"string","value":"string"}]},"whatExpression":"string"},"id":"string","metaLabels":[{"id":"string","key":"string","value":"string"}],"name":"string","schedule":{"recurring":{"always":{}},"scheduleOperation":"SCHEDULE_OPERATION_UNSPECIFIED"},"uniqueIdentifier":"string","updatedAt":"string"}}'
    put:
      description: No description available
      externalDocs:
        url: ""
      operationId: AlertSchedulerRuleService_UpdateAlertSchedulerRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Update_alert_scheduler_rule_request_data_structure"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAlertSchedulerRuleResponse"
          description: ""
        "400":
          content:
            application/json: {}
          description: Bad Request
        "401":
          content:
            application/json: {}
          description: Unauthorized request
        "500":
          content:
            application/json: {}
          description: Internal server error
      summary: Update an alert scheduler rule
      tags:
      - Alert Scheduler Rule service
      x-codeSamples:
      - lang: Node
        source: |-
          const fetch = require('node-fetch');

          let url = 'https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules';

          let options = {
            method: 'PUT',
            headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},
            body: '{"alertSchedulerRule":{"createdAt":"string","description":"string","enabled":true,"filter":{"alertMetaLabels":{"value":[{"id":"string","key":"string","value":"string"}]},"whatExpression":"string"},"id":"string","metaLabels":[{"id":"string","key":"string","value":"string"}],"name":"string","schedule":{"recurring":{"always":{}},"scheduleOperation":"SCHEDULE_OPERATION_UNSPECIFIED"},"uniqueIdentifier":"string","updatedAt":"string"}}'
          };

          fetch(url, options)
            .then(res => res.json())
            .then(json => console.log(json))
            .catch(err => console.error('error:' + err));
      - lang: Python
        source: |-
          import requests

          url = "https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules"

          payload = {"alertSchedulerRule": {
                  "createdAt": "string",
                  "description": "string",
                  "enabled": True,
                  "filter": {
                      "alertMetaLabels": {"value": [
                              {
                                  "id": "string",
                                  "key": "string",
                                  "value": "string"
                              }
                          ]},
                      "whatExpression": "string"
                  },
                  "id": "string",
                  "metaLabels": [
                      {
                          "id": "string",
                          "key": "string",
                          "value": "string"
                      }
                  ],
                  "name": "string",
                  "schedule": {
                      "recurring": {"always": {}},
                      "scheduleOperation": "SCHEDULE_OPERATION_UNSPECIFIED"
                  },
                  "uniqueIdentifier": "string",
                  "updatedAt": "string"
              }}
          headers = {
              "Authorization": "Bearer <API_KEY>",
              "content-type": "application/json"
          }

          response = requests.request("PUT", url, json=payload, headers=headers)

          print(response.text)
      - lang: Shell
        source: |-
          curl --request PUT \
            --url https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules \
            --header 'Authorization: Bearer <API_KEY>' \
            --header 'content-type: application/json' \
            --data '{"alertSchedulerRule":{"createdAt":"string","description":"string","enabled":true,"filter":{"alertMetaLabels":{"value":[{"id":"string","key":"string","value":"string"}]},"whatExpression":"string"},"id":"string","metaLabels":[{"id":"string","key":"string","value":"string"}],"name":"string","schedule":{"recurring":{"always":{}},"scheduleOperation":"SCHEDULE_OPERATION_UNSPECIFIED"},"uniqueIdentifier":"string","updatedAt":"string"}}'
  /v1/alert-scheduler-rules/bulk:
    get:
      externalDocs:
        url: ""
      operationId: AlertSchedulerRuleService_GetBulkAlertSchedulerRule
      parameters:
      - explode: true
        in: query
        name: active_timeframe
        required: false
        schema:
          $ref: "#/components/schemas/AlertSchedulerRuleService_GetBulkAlertSchedulerRule_active_timeframe_parameter"
        style: form
      - explode: true
        in: query
        name: enabled
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: alert_scheduler_rules_ids
        required: false
        schema:
          $ref: "#/components/schemas/AlertSchedulerRuleService_GetBulkAlertSchedulerRule_alert_scheduler_rules_ids_parameter"
        style: form
      - explode: true
        in: query
        name: next_page_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetBulkAlertSchedulerRuleResponse"
          description: ""
        "400":
          content:
            application/json: {}
          description: Bad Request
        "401":
          content:
            application/json: {}
          description: Unauthorized request
        "500":
          content:
            application/json: {}
          description: Internal server error
      summary: Get multiple alert scheduler rules
      tags:
      - Alert Scheduler Rule service
    post:
      description: No description available
      externalDocs:
        url: ""
      operationId: AlertSchedulerRuleService_CreateBulkAlertSchedulerRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Create_bulk_alert_scheduler_rule_request_data_structure"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateBulkAlertSchedulerRuleResponse"
          description: ""
        "400":
          content:
            application/json: {}
          description: Bad Request
        "401":
          content:
            application/json: {}
          description: Unauthorized request
        "500":
          content:
            application/json: {}
          description: Internal server error
      summary: Create multiple alert scheduler rules
      tags:
      - Alert Scheduler Rule service
      x-codeSamples:
      - lang: Node
        source: |-
          const fetch = require('node-fetch');

          let url = 'https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules/bulk';

          let options = {
            method: 'POST',
            headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},
            body: '{"createAlertSchedulerRuleRequests":[{"alertSchedulerRule":{"createdAt":"string","description":"string","enabled":true,"filter":{"alertMetaLabels":{"value":[{"id":"string","key":"string","value":"string"}]},"whatExpression":"string"},"id":"string","metaLabels":[{"id":"string","key":"string","value":"string"}],"name":"string","schedule":{"recurring":{"always":{}},"scheduleOperation":"SCHEDULE_OPERATION_UNSPECIFIED"},"uniqueIdentifier":"string","updatedAt":"string"}}]}'
          };

          fetch(url, options)
            .then(res => res.json())
            .then(json => console.log(json))
            .catch(err => console.error('error:' + err));
      - lang: Python
        source: |-
          import requests

          url = "https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules/bulk"

          payload = {"createAlertSchedulerRuleRequests": [{"alertSchedulerRule": {
                          "createdAt": "string",
                          "description": "string",
                          "enabled": True,
                          "filter": {
                              "alertMetaLabels": {"value": [
                                      {
                                          "id": "string",
                                          "key": "string",
                                          "value": "string"
                                      }
                                  ]},
                              "whatExpression": "string"
                          },
                          "id": "string",
                          "metaLabels": [
                              {
                                  "id": "string",
                                  "key": "string",
                                  "value": "string"
                              }
                          ],
                          "name": "string",
                          "schedule": {
                              "recurring": {"always": {}},
                              "scheduleOperation": "SCHEDULE_OPERATION_UNSPECIFIED"
                          },
                          "uniqueIdentifier": "string",
                          "updatedAt": "string"
                      }}]}
          headers = {
              "Authorization": "Bearer <API_KEY>",
              "content-type": "application/json"
          }

          response = requests.request("POST", url, json=payload, headers=headers)

          print(response.text)
      - lang: Shell
        source: |-
          curl --request POST \
            --url https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules/bulk \
            --header 'Authorization: Bearer <API_KEY>' \
            --header 'content-type: application/json' \
            --data '{"createAlertSchedulerRuleRequests":[{"alertSchedulerRule":{"createdAt":"string","description":"string","enabled":true,"filter":{"alertMetaLabels":{"value":[{"id":"string","key":"string","value":"string"}]},"whatExpression":"string"},"id":"string","metaLabels":[{"id":"string","key":"string","value":"string"}],"name":"string","schedule":{"recurring":{"always":{}},"scheduleOperation":"SCHEDULE_OPERATION_UNSPECIFIED"},"uniqueIdentifier":"string","updatedAt":"string"}}]}'
    put:
      description: No description available
      externalDocs:
        url: ""
      operationId: AlertSchedulerRuleService_UpdateBulkAlertSchedulerRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Update_bulk_alert_scheduler_rule_request_data_structure"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateBulkAlertSchedulerRuleResponse"
          description: ""
        "400":
          content:
            application/json: {}
          description: Bad Request
        "401":
          content:
            application/json: {}
          description: Unauthorized request
        "500":
          content:
            application/json: {}
          description: Internal server error
      summary: Update multiple alert scheduler rules
      tags:
      - Alert Scheduler Rule service
      x-codeSamples:
      - lang: Node
        source: |-
          const fetch = require('node-fetch');

          let url = 'https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules/bulk';

          let options = {
            method: 'PUT',
            headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},
            body: '{"updateAlertSchedulerRuleRequests":[{"alertSchedulerRule":{"createdAt":"string","description":"string","enabled":true,"filter":{"alertMetaLabels":{"value":[{"id":"string","key":"string","value":"string"}]},"whatExpression":"string"},"id":"string","metaLabels":[{"id":"string","key":"string","value":"string"}],"name":"string","schedule":{"recurring":{"always":{}},"scheduleOperation":"SCHEDULE_OPERATION_UNSPECIFIED"},"uniqueIdentifier":"string","updatedAt":"string"}}]}'
          };

          fetch(url, options)
            .then(res => res.json())
            .then(json => console.log(json))
            .catch(err => console.error('error:' + err));
      - lang: Python
        source: |-
          import requests

          url = "https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules/bulk"

          payload = {"updateAlertSchedulerRuleRequests": [{"alertSchedulerRule": {
                          "createdAt": "string",
                          "description": "string",
                          "enabled": True,
                          "filter": {
                              "alertMetaLabels": {"value": [
                                      {
                                          "id": "string",
                                          "key": "string",
                                          "value": "string"
                                      }
                                  ]},
                              "whatExpression": "string"
                          },
                          "id": "string",
                          "metaLabels": [
                              {
                                  "id": "string",
                                  "key": "string",
                                  "value": "string"
                              }
                          ],
                          "name": "string",
                          "schedule": {
                              "recurring": {"always": {}},
                              "scheduleOperation": "SCHEDULE_OPERATION_UNSPECIFIED"
                          },
                          "uniqueIdentifier": "string",
                          "updatedAt": "string"
                      }}]}
          headers = {
              "Authorization": "Bearer <API_KEY>",
              "content-type": "application/json"
          }

          response = requests.request("PUT", url, json=payload, headers=headers)

          print(response.text)
      - lang: Shell
        source: |-
          curl --request PUT \
            --url https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules/bulk \
            --header 'Authorization: Bearer <API_KEY>' \
            --header 'content-type: application/json' \
            --data '{"updateAlertSchedulerRuleRequests":[{"alertSchedulerRule":{"createdAt":"string","description":"string","enabled":true,"filter":{"alertMetaLabels":{"value":[{"id":"string","key":"string","value":"string"}]},"whatExpression":"string"},"id":"string","metaLabels":[{"id":"string","key":"string","value":"string"}],"name":"string","schedule":{"recurring":{"always":{}},"scheduleOperation":"SCHEDULE_OPERATION_UNSPECIFIED"},"uniqueIdentifier":"string","updatedAt":"string"}}]}'
  /v1/alert-scheduler-rules/{alert_scheduler_rule_id}:
    delete:
      description: No description available
      externalDocs:
        url: ""
      operationId: AlertSchedulerRuleService_DeleteAlertSchedulerRule
      parameters:
      - explode: false
        in: path
        name: alert_scheduler_rule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAlertSchedulerRuleResponse"
          description: ""
        "400":
          content:
            application/json: {}
          description: Bad Request
        "401":
          content:
            application/json: {}
          description: Unauthorized request
        "500":
          content:
            application/json: {}
          description: Internal server error
      summary: Delete an alert scheduler rule
      tags:
      - Alert Scheduler Rule service
      x-codeSamples:
      - lang: Node
        source: |-
          const fetch = require('node-fetch');

          let url = 'https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules/%7Balert_scheduler_rule_id%7D';

          let options = {method: 'DELETE', headers: {Authorization: 'Bearer <API_KEY>'}};

          fetch(url, options)
            .then(res => res.json())
            .then(json => console.log(json))
            .catch(err => console.error('error:' + err));
      - lang: Python
        source: |-
          import requests

          url = "https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules/%7Balert_scheduler_rule_id%7D"

          headers = {"Authorization": "Bearer <API_KEY>"}

          response = requests.request("DELETE", url, headers=headers)

          print(response.text)
      - lang: Shell
        source: |-
          curl --request DELETE \
            --url https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules/%7Balert_scheduler_rule_id%7D \
            --header 'Authorization: Bearer <API_KEY>'
    get:
      description: No description available
      externalDocs:
        url: ""
      operationId: AlertSchedulerRuleService_GetAlertSchedulerRule
      parameters:
      - explode: false
        in: path
        name: alert_scheduler_rule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAlertSchedulerRuleResponse"
          description: ""
        "400":
          content:
            application/json: {}
          description: Bad Request
        "401":
          content:
            application/json: {}
          description: Unauthorized request
        "500":
          content:
            application/json: {}
          description: Internal server error
      summary: Get an alert scheduler rule
      tags:
      - Alert Scheduler Rule service
      x-codeSamples:
      - lang: Node
        source: |-
          const fetch = require('node-fetch');

          let url = 'https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules/%7Balert_scheduler_rule_id%7D';

          let options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};

          fetch(url, options)
            .then(res => res.json())
            .then(json => console.log(json))
            .catch(err => console.error('error:' + err));
      - lang: Python
        source: |-
          import requests

          url = "https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules/%7Balert_scheduler_rule_id%7D"

          headers = {"Authorization": "Bearer <API_KEY>"}

          response = requests.request("GET", url, headers=headers)

          print(response.text)
      - lang: Shell
        source: |-
          curl --request GET \
            --url https://api.coralogix.com/mgmt/openapi/v1/alert-scheduler-rules/%7Balert_scheduler_rule_id%7D \
            --header 'Authorization: Bearer <API_KEY>'
components:
  schemas:
    ActiveTimeframe:
      example:
        timezone: timezone
        startTime: startTime
        endTime: endTime
      properties:
        endTime:
          type: string
        startTime:
          type: string
        timezone:
          type: string
      type: object
    AlertSchedulerRule:
      example:
        filter:
          alertMetaLabels:
            value:
            - id: id
              value: value
              key: key
            - id: id
              value: value
              key: key
          whatExpression: whatExpression
        createdAt: createdAt
        schedule:
          recurring:
            always: "{}"
          scheduleOperation: SCHEDULE_OPERATION_UNSPECIFIED
        name: name
        description: description
        id: id
        metaLabels:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
        enabled: true
        uniqueIdentifier: uniqueIdentifier
        updatedAt: updatedAt
      properties:
        createdAt:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        filter:
          $ref: "#/components/schemas/alert_scheduler_rule_protobuf.v1.Filter"
        id:
          type: string
        metaLabels:
          items:
            $ref: "#/components/schemas/meta_labels_protobuf.v1.MetaLabel"
          type: array
        name:
          type: string
        schedule:
          $ref: "#/components/schemas/Schedule"
        uniqueIdentifier:
          type: string
        updatedAt:
          type: string
      type: object
    AlertSchedulerRuleIds:
      properties:
        alertSchedulerRuleIds:
          items:
            type: string
          type: array
      type: object
    AlertSchedulerRuleVersionIds:
      properties:
        alertSchedulerRuleVersionIds:
          items:
            type: string
          type: array
      type: object
    AlertSchedulerRuleWithActiveTimeframe:
      example:
        nextActiveTimeframes:
        - timezone: timezone
          startTime: startTime
          endTime: endTime
        - timezone: timezone
          startTime: startTime
          endTime: endTime
        alertSchedulerRule:
          filter:
            alertMetaLabels:
              value:
              - id: id
                value: value
                key: key
              - id: id
                value: value
                key: key
            whatExpression: whatExpression
          createdAt: createdAt
          schedule:
            recurring:
              always: "{}"
            scheduleOperation: SCHEDULE_OPERATION_UNSPECIFIED
          name: name
          description: description
          id: id
          metaLabels:
          - id: id
            value: value
            key: key
          - id: id
            value: value
            key: key
          enabled: true
          uniqueIdentifier: uniqueIdentifier
          updatedAt: updatedAt
      properties:
        alertSchedulerRule:
          $ref: "#/components/schemas/AlertSchedulerRule"
        nextActiveTimeframes:
          items:
            $ref: "#/components/schemas/ActiveTimeframe"
          type: array
      type: object
    AlertUniqueIds:
      properties:
        value:
          items:
            type: string
          type: array
      type: object
    Always:
      type: object
    ColorsByAggregation:
      additionalProperties: false
      properties:
        aggregation:
          $ref: "#/components/schemas/ColorsByAggregation"
      type: object
    ColorsByGroupBy:
      additionalProperties: false
      properties:
        groupBy:
          $ref: "#/components/schemas/ColorsByGroupBy"
      type: object
    ColorsByStack:
      additionalProperties: false
      properties:
        stack:
          $ref: "#/components/schemas/ColorsByStack"
      type: object
    CreateAlertSchedulerRuleRequest:
      description: This is a request sent to create an alert scheduler rule
      externalDocs:
        description: Find out more about alert scheduler rules in our documentation.
        url: https://coralogix.com/docs/developer-portal/apis/data-management/alert-suppression-rules-api/
      properties:
        alertSchedulerRule:
          $ref: "#/components/schemas/AlertSchedulerRule"
      required:
      - alertSchedulerRule
      title: Create alert scheduler rule request data structure
      type: object
    CreateAlertSchedulerRuleResponse:
      description: This is a response sent after creating an alert scheduler rule
      example:
        alertSchedulerRule:
          filter:
            alertMetaLabels:
              value:
              - id: id
                value: value
                key: key
              - id: id
                value: value
                key: key
            whatExpression: whatExpression
          createdAt: createdAt
          schedule:
            recurring:
              always: "{}"
            scheduleOperation: SCHEDULE_OPERATION_UNSPECIFIED
          name: name
          description: description
          id: id
          metaLabels:
          - id: id
            value: value
            key: key
          - id: id
            value: value
            key: key
          enabled: true
          uniqueIdentifier: uniqueIdentifier
          updatedAt: updatedAt
      externalDocs:
        description: Find out more about alert scheduler rules in our documentation.
        url: https://coralogix.com/docs/developer-portal/apis/data-management/alert-suppression-rules-api/
      properties:
        alertSchedulerRule:
          $ref: "#/components/schemas/AlertSchedulerRule"
      required:
      - alertSchedulerRule
      title: Create alert scheduler rule response data structure
      type: object
    CreateBulkAlertSchedulerRuleResponse:
      description: This is a response sent after creating multiple alert scheduler
        rules
      example:
        createSuppressionResponses:
        - alertSchedulerRule:
            filter:
              alertMetaLabels:
                value:
                - id: id
                  value: value
                  key: key
                - id: id
                  value: value
                  key: key
              whatExpression: whatExpression
            createdAt: createdAt
            schedule:
              recurring:
                always: "{}"
              scheduleOperation: SCHEDULE_OPERATION_UNSPECIFIED
            name: name
            description: description
            id: id
            metaLabels:
            - id: id
              value: value
              key: key
            - id: id
              value: value
              key: key
            enabled: true
            uniqueIdentifier: uniqueIdentifier
            updatedAt: updatedAt
        - alertSchedulerRule:
            filter:
              alertMetaLabels:
                value:
                - id: id
                  value: value
                  key: key
                - id: id
                  value: value
                  key: key
              whatExpression: whatExpression
            createdAt: createdAt
            schedule:
              recurring:
                always: "{}"
              scheduleOperation: SCHEDULE_OPERATION_UNSPECIFIED
            name: name
            description: description
            id: id
            metaLabels:
            - id: id
              value: value
              key: key
            - id: id
              value: value
              key: key
            enabled: true
            uniqueIdentifier: uniqueIdentifier
            updatedAt: updatedAt
      externalDocs:
        description: Find out more about alert scheduler rules in our documentation.
        url: https://coralogix.com/docs/developer-portal/apis/data-management/alert-suppression-rules-api/
      properties:
        createSuppressionResponses:
          items:
            $ref: "#/components/schemas/CreateAlertSchedulerRuleResponse"
          type: array
      required:
      - createSuppressionResponses
      title: Create bulk alert scheduler rule response data structure
      type: object
    Daily:
      type: object
    DeleteAlertSchedulerRuleResponse:
      type: object
    DurationFrequency:
      enum:
      - DURATION_FREQUENCY_UNSPECIFIED
      - DURATION_FREQUENCY_MINUTE
      - DURATION_FREQUENCY_HOUR
      - DURATION_FREQUENCY_DAY
      type: string
    DynamicDaily:
      additionalProperties: false
      properties:
        daily:
          type: object
        repeatEvery:
          format: int32
          type: integer
        terminationDate:
          type: string
        timeframe:
          $ref: "#/components/schemas/Timeframe"
      type: object
    DynamicMonthly:
      additionalProperties: false
      properties:
        monthly:
          $ref: "#/components/schemas/Monthly"
        repeatEvery:
          format: int32
          type: integer
        terminationDate:
          type: string
        timeframe:
          $ref: "#/components/schemas/Timeframe"
      type: object
    DynamicWeekly:
      additionalProperties: false
      properties:
        repeatEvery:
          format: int32
          type: integer
        terminationDate:
          type: string
        timeframe:
          $ref: "#/components/schemas/Timeframe"
        weekly:
          $ref: "#/components/schemas/Weekly"
      type: object
    FieldGroup:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    FilterAlertMetaLabels:
      additionalProperties: false
      example:
        alertMetaLabels:
          value:
          - id: id
            value: value
            key: key
          - id: id
            value: value
            key: key
        whatExpression: whatExpression
      properties:
        alertMetaLabels:
          $ref: "#/components/schemas/MetaLabels"
        whatExpression:
          type: string
      type: object
    FilterAlertUniqueIds:
      additionalProperties: false
      properties:
        alertUniqueIds:
          $ref: "#/components/schemas/AlertUniqueIds"
        whatExpression:
          type: string
      type: object
    FilterByAlertSchedulerRuleIdsAlertSchedulerIds:
      additionalProperties: false
      properties:
        alertSchedulerIds:
          $ref: "#/components/schemas/AlertSchedulerRuleIds"
      type: object
    FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds:
      additionalProperties: false
      properties:
        alertSchedulerVersionIds:
          $ref: "#/components/schemas/AlertSchedulerRuleVersionIds"
      type: object
    FilterPathAndValues:
      oneOf:
      - $ref: "#/components/schemas/FilterPathAndValuesMultipleValues"
      - $ref: "#/components/schemas/FilterPathAndValuesFilters"
    FilterPathAndValuesFilters:
      additionalProperties: false
      description: This data structure represents a filter path and values
      externalDocs:
        url: ""
      properties:
        filters:
          $ref: "#/components/schemas/Filters"
        path:
          example: test
          type: string
      required:
      - path
      - values
      title: FilterPathAndValues
      type: object
    FilterPathAndValuesMultipleValues:
      additionalProperties: false
      description: This data structure represents a filter path and values
      externalDocs:
        url: ""
      properties:
        multipleValues:
          $ref: "#/components/schemas/MultipleValues"
        path:
          example: test
          type: string
      required:
      - path
      - values
      title: FilterPathAndValues
      type: object
    Filters:
      description: This data structure represents a filter
      externalDocs:
        url: ""
      properties:
        operator:
          $ref: "#/components/schemas/v3.FilterOperator"
        pathAndValues:
          items:
            $ref: "#/components/schemas/FilterPathAndValues"
          type: array
      required:
      - pathAndValues
      title: Filters
      type: object
    GetAlertSchedulerRuleResponse:
      description: This is a response sent to get an alert scheduler rule
      example:
        alertSchedulerRule:
          filter:
            alertMetaLabels:
              value:
              - id: id
                value: value
                key: key
              - id: id
                value: value
                key: key
            whatExpression: whatExpression
          createdAt: createdAt
          schedule:
            recurring:
              always: "{}"
            scheduleOperation: SCHEDULE_OPERATION_UNSPECIFIED
          name: name
          description: description
          id: id
          metaLabels:
          - id: id
            value: value
            key: key
          - id: id
            value: value
            key: key
          enabled: true
          uniqueIdentifier: uniqueIdentifier
          updatedAt: updatedAt
      externalDocs:
        description: Find out more about alert scheduler rules in our documentation.
        url: https://coralogix.com/docs/developer-portal/apis/data-management/alert-suppression-rules-api/
      properties:
        alertSchedulerRule:
          $ref: "#/components/schemas/AlertSchedulerRule"
      required:
      - alertSchedulerRule
      title: Get alert scheduler rule response data structure
      type: object
    GetBulkAlertSchedulerRuleResponse:
      description: This is a response sent after getting multiple alert scheduler
        rules
      example:
        nextPageToken: nextPageToken
        alertSchedulerRules:
        - nextActiveTimeframes:
          - timezone: timezone
            startTime: startTime
            endTime: endTime
          - timezone: timezone
            startTime: startTime
            endTime: endTime
          alertSchedulerRule:
            filter:
              alertMetaLabels:
                value:
                - id: id
                  value: value
                  key: key
                - id: id
                  value: value
                  key: key
              whatExpression: whatExpression
            createdAt: createdAt
            schedule:
              recurring:
                always: "{}"
              scheduleOperation: SCHEDULE_OPERATION_UNSPECIFIED
            name: name
            description: description
            id: id
            metaLabels:
            - id: id
              value: value
              key: key
            - id: id
              value: value
              key: key
            enabled: true
            uniqueIdentifier: uniqueIdentifier
            updatedAt: updatedAt
        - nextActiveTimeframes:
          - timezone: timezone
            startTime: startTime
            endTime: endTime
          - timezone: timezone
            startTime: startTime
            endTime: endTime
          alertSchedulerRule:
            filter:
              alertMetaLabels:
                value:
                - id: id
                  value: value
                  key: key
                - id: id
                  value: value
                  key: key
              whatExpression: whatExpression
            createdAt: createdAt
            schedule:
              recurring:
                always: "{}"
              scheduleOperation: SCHEDULE_OPERATION_UNSPECIFIED
            name: name
            description: description
            id: id
            metaLabels:
            - id: id
              value: value
              key: key
            - id: id
              value: value
              key: key
            enabled: true
            uniqueIdentifier: uniqueIdentifier
            updatedAt: updatedAt
      externalDocs:
        description: Find out more about alert scheduler rules in our documentation.
        url: https://coralogix.com/docs/developer-portal/apis/data-management/alert-suppression-rules-api/
      properties:
        alertSchedulerRules:
          items:
            $ref: "#/components/schemas/AlertSchedulerRuleWithActiveTimeframe"
          type: array
        nextPageToken:
          type: string
      required:
      - alertSchedulerRules
      title: Get bulk alert scheduler rule response data structure
      type: object
    MetaLabels:
      example:
        value:
        - id: id
          value: value
          key: key
        - id: id
          value: value
          key: key
      properties:
        value:
          items:
            $ref: "#/components/schemas/meta_labels_protobuf.v1.MetaLabel"
          type: array
      type: object
    Monthly:
      properties:
        daysOfMonth:
          items:
            format: int32
            type: integer
          type: array
      type: object
    MultipleValues:
      properties:
        matcher:
          $ref: "#/components/schemas/events.v3.FilterMatcher"
        values:
          items:
            type: string
          type: array
      type: object
    OneTime:
      properties:
        timeframe:
          $ref: "#/components/schemas/Timeframe"
      type: object
    Recurring:
      oneOf:
      - $ref: "#/components/schemas/RecurringAlways"
      - $ref: "#/components/schemas/RecurringDynamic"
    Recurring.Dynamic:
      oneOf:
      - $ref: "#/components/schemas/DynamicDaily"
      - $ref: "#/components/schemas/DynamicWeekly"
      - $ref: "#/components/schemas/DynamicMonthly"
    RecurringAlways:
      additionalProperties: false
      example:
        always: "{}"
      properties:
        always:
          type: object
      type: object
    RecurringDynamic:
      additionalProperties: false
      properties:
        dynamic:
          $ref: "#/components/schemas/Recurring.Dynamic"
      type: object
    Schedule:
      oneOf:
      - $ref: "#/components/schemas/ScheduleRecurring"
      - $ref: "#/components/schemas/ScheduleOneTime"
    ScheduleOneTime:
      additionalProperties: false
      properties:
        oneTime:
          $ref: "#/components/schemas/OneTime"
        scheduleOperation:
          $ref: "#/components/schemas/ScheduleOperation"
      type: object
    ScheduleOperation:
      enum:
      - SCHEDULE_OPERATION_UNSPECIFIED
      - SCHEDULE_OPERATION_MUTE
      - SCHEDULE_OPERATION_ACTIVATE
      type: string
    ScheduleRecurring:
      additionalProperties: false
      example:
        recurring:
          always: "{}"
        scheduleOperation: SCHEDULE_OPERATION_UNSPECIFIED
      properties:
        recurring:
          $ref: "#/components/schemas/Recurring"
        scheduleOperation:
          $ref: "#/components/schemas/ScheduleOperation"
      type: object
    Timeframe:
      oneOf:
      - $ref: "#/components/schemas/TimeframeEndTime"
      - $ref: "#/components/schemas/TimeframeDuration"
    TimeframeDuration:
      additionalProperties: false
      properties:
        duration:
          $ref: "#/components/schemas/v1.Duration"
        startTime:
          type: string
        timezone:
          type: string
      type: object
    TimeframeEndTime:
      additionalProperties: false
      properties:
        endTime:
          type: string
        startTime:
          type: string
        timezone:
          type: string
      type: object
    UpdateAlertSchedulerRuleRequest:
      description: This is a request sent to update an alert scheduler rule
      externalDocs:
        description: Find out more about alert scheduler rules in our documentation.
        url: https://coralogix.com/docs/developer-portal/apis/data-management/alert-suppression-rules-api/
      properties:
        alertSchedulerRule:
          $ref: "#/components/schemas/AlertSchedulerRule"
      required:
      - alertSchedulerRule
      title: Update alert scheduler rule request data structure
      type: object
    UpdateAlertSchedulerRuleResponse:
      description: This is a response sent after creating an alert scheduler rule
      example:
        alertSchedulerRule:
          filter:
            alertMetaLabels:
              value:
              - id: id
                value: value
                key: key
              - id: id
                value: value
                key: key
            whatExpression: whatExpression
          createdAt: createdAt
          schedule:
            recurring:
              always: "{}"
            scheduleOperation: SCHEDULE_OPERATION_UNSPECIFIED
          name: name
          description: description
          id: id
          metaLabels:
          - id: id
            value: value
            key: key
          - id: id
            value: value
            key: key
          enabled: true
          uniqueIdentifier: uniqueIdentifier
          updatedAt: updatedAt
      externalDocs:
        description: Find out more about alert scheduler rules in our documentation.
        url: https://coralogix.com/docs/developer-portal/apis/data-management/alert-suppression-rules-api/
      properties:
        alertSchedulerRule:
          $ref: "#/components/schemas/AlertSchedulerRule"
      required:
      - alertSchedulerRule
      title: Create alert scheduler rule response data structure
      type: object
    UpdateBulkAlertSchedulerRuleResponse:
      description: This is a response sent after updating multiple alert scheduler
        rules
      example:
        updateSuppressionResponses:
        - alertSchedulerRule:
            filter:
              alertMetaLabels:
                value:
                - id: id
                  value: value
                  key: key
                - id: id
                  value: value
                  key: key
              whatExpression: whatExpression
            createdAt: createdAt
            schedule:
              recurring:
                always: "{}"
              scheduleOperation: SCHEDULE_OPERATION_UNSPECIFIED
            name: name
            description: description
            id: id
            metaLabels:
            - id: id
              value: value
              key: key
            - id: id
              value: value
              key: key
            enabled: true
            uniqueIdentifier: uniqueIdentifier
            updatedAt: updatedAt
        - alertSchedulerRule:
            filter:
              alertMetaLabels:
                value:
                - id: id
                  value: value
                  key: key
                - id: id
                  value: value
                  key: key
              whatExpression: whatExpression
            createdAt: createdAt
            schedule:
              recurring:
                always: "{}"
              scheduleOperation: SCHEDULE_OPERATION_UNSPECIFIED
            name: name
            description: description
            id: id
            metaLabels:
            - id: id
              value: value
              key: key
            - id: id
              value: value
              key: key
            enabled: true
            uniqueIdentifier: uniqueIdentifier
            updatedAt: updatedAt
      externalDocs:
        description: Find out more about alert scheduler rules in our documentation.
        url: https://coralogix.com/docs/developer-portal/apis/data-management/alert-suppression-rules-api/
      properties:
        updateSuppressionResponses:
          items:
            $ref: "#/components/schemas/UpdateAlertSchedulerRuleResponse"
          type: array
      required:
      - updateSuppressionResponses
      title: Update bulk alert scheduler rule response data structure
      type: object
    Weekly:
      properties:
        daysOfWeek:
          items:
            format: int32
            type: integer
          type: array
      type: object
    YAxisViewByCategory:
      additionalProperties: false
      properties:
        category:
          $ref: "#/components/schemas/YAxisViewByCategory"
      type: object
    YAxisViewByValue:
      additionalProperties: false
      properties:
        value:
          $ref: "#/components/schemas/YAxisViewByValue"
      type: object
    alert_scheduler_rule_protobuf.v1.Filter:
      oneOf:
      - $ref: "#/components/schemas/FilterAlertMetaLabels"
      - $ref: "#/components/schemas/FilterAlertUniqueIds"
    common.Group:
      properties:
        field:
          $ref: "#/components/schemas/FieldGroup"
        groups:
          items:
            $ref: "#/components/schemas/common.Group"
          type: array
        value:
          format: double
          type: number
      type: object
    events.v3.FilterMatcher:
      enum:
      - FILTER_MATCHER_TEXT_OR_UNSPECIFIED
      - FILTER_MATCHER_REGEXP
      type: string
    meta_labels_protobuf.v1.MetaLabel:
      example:
        id: id
        value: value
        key: key
      properties:
        id:
          type: string
        key:
          type: string
        value:
          type: string
      type: object
    v1.Duration:
      properties:
        forOver:
          format: int32
          type: integer
        frequency:
          $ref: "#/components/schemas/DurationFrequency"
      type: object
    v3.FilterOperator:
      enum:
      - FILTER_OPERATOR_AND_OR_UNSPECIFIED
      - FILTER_OPERATOR_OR
      type: string
    Update_alert_scheduler_rule_request_data_structure:
      additionalProperties: false
      description: This is a request sent to update an alert scheduler rule
      properties:
        alertSchedulerRule:
          $ref: "#/components/schemas/AlertSchedulerRule"
      required:
      - alertSchedulerRule
      title: Update alert scheduler rule request data structure
      type: object
    Create_alert_scheduler_rule_request_data_structure:
      additionalProperties: false
      description: This is a request sent to create an alert scheduler rule
      properties:
        alertSchedulerRule:
          $ref: "#/components/schemas/AlertSchedulerRule"
      required:
      - alertSchedulerRule
      title: Create alert scheduler rule request data structure
      type: object
    AlertSchedulerRuleService_GetBulkAlertSchedulerRule_active_timeframe_parameter:
      properties:
        endTime:
          type: string
        startTime:
          type: string
        timezone:
          type: string
      type: object
    AlertSchedulerRuleService_GetBulkAlertSchedulerRule_alert_scheduler_rules_ids_parameter:
      oneOf:
      - $ref: "#/components/schemas/FilterByAlertSchedulerRuleIdsAlertSchedulerIds"
      - $ref: "#/components/schemas/FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds"
    Update_bulk_alert_scheduler_rule_request_data_structure:
      additionalProperties: false
      description: This is a request sent to update multiple alert scheduler rules
      properties:
        updateAlertSchedulerRuleRequests:
          items:
            $ref: "#/components/schemas/UpdateAlertSchedulerRuleRequest"
          type: array
      required:
      - updateAlertSchedulerRuleRequests
      title: Update bulk alert scheduler rule request data structure
      type: object
    Create_bulk_alert_scheduler_rule_request_data_structure:
      additionalProperties: false
      description: This is a request sent to create multiple alert scheduler rules
      properties:
        createAlertSchedulerRuleRequests:
          items:
            $ref: "#/components/schemas/CreateAlertSchedulerRuleRequest"
          type: array
      required:
      - createAlertSchedulerRuleRequests
      title: Create bulk alert scheduler rule request data structure
      type: object
  securitySchemes:
    apiKeyAuth:
      description: API key authentication
      in: header
      name: Authorization
      type: apiKey
