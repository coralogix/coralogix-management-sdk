/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_scheduler_rule_service

import (
	"encoding/json"
)

// checks if the MetaLabelsProtobufV1MetaLabel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetaLabelsProtobufV1MetaLabel{}

// MetaLabelsProtobufV1MetaLabel struct for MetaLabelsProtobufV1MetaLabel
type MetaLabelsProtobufV1MetaLabel struct {
	Id *string `json:"id,omitempty"`
	Key *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewMetaLabelsProtobufV1MetaLabel instantiates a new MetaLabelsProtobufV1MetaLabel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetaLabelsProtobufV1MetaLabel() *MetaLabelsProtobufV1MetaLabel {
	this := MetaLabelsProtobufV1MetaLabel{}
	return &this
}

// NewMetaLabelsProtobufV1MetaLabelWithDefaults instantiates a new MetaLabelsProtobufV1MetaLabel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetaLabelsProtobufV1MetaLabelWithDefaults() *MetaLabelsProtobufV1MetaLabel {
	this := MetaLabelsProtobufV1MetaLabel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MetaLabelsProtobufV1MetaLabel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaLabelsProtobufV1MetaLabel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MetaLabelsProtobufV1MetaLabel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MetaLabelsProtobufV1MetaLabel) SetId(v string) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *MetaLabelsProtobufV1MetaLabel) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaLabelsProtobufV1MetaLabel) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *MetaLabelsProtobufV1MetaLabel) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *MetaLabelsProtobufV1MetaLabel) SetKey(v string) {
	o.Key = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *MetaLabelsProtobufV1MetaLabel) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaLabelsProtobufV1MetaLabel) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *MetaLabelsProtobufV1MetaLabel) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *MetaLabelsProtobufV1MetaLabel) SetValue(v string) {
	o.Value = &v
}

func (o MetaLabelsProtobufV1MetaLabel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetaLabelsProtobufV1MetaLabel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableMetaLabelsProtobufV1MetaLabel struct {
	value *MetaLabelsProtobufV1MetaLabel
	isSet bool
}

func (v NullableMetaLabelsProtobufV1MetaLabel) Get() *MetaLabelsProtobufV1MetaLabel {
	return v.value
}

func (v *NullableMetaLabelsProtobufV1MetaLabel) Set(val *MetaLabelsProtobufV1MetaLabel) {
	v.value = val
	v.isSet = true
}

func (v NullableMetaLabelsProtobufV1MetaLabel) IsSet() bool {
	return v.isSet
}

func (v *NullableMetaLabelsProtobufV1MetaLabel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetaLabelsProtobufV1MetaLabel(val *MetaLabelsProtobufV1MetaLabel) *NullableMetaLabelsProtobufV1MetaLabel {
	return &NullableMetaLabelsProtobufV1MetaLabel{value: val, isSet: true}
}

func (v NullableMetaLabelsProtobufV1MetaLabel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetaLabelsProtobufV1MetaLabel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


