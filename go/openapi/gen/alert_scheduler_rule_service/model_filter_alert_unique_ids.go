/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_scheduler_rule_service

import (
	"encoding/json"
)

// checks if the FilterAlertUniqueIds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilterAlertUniqueIds{}

// FilterAlertUniqueIds struct for FilterAlertUniqueIds
type FilterAlertUniqueIds struct {
	AlertUniqueIds *AlertUniqueIds `json:"alertUniqueIds,omitempty"`
	WhatExpression *string `json:"whatExpression,omitempty"`
}

// NewFilterAlertUniqueIds instantiates a new FilterAlertUniqueIds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilterAlertUniqueIds() *FilterAlertUniqueIds {
	this := FilterAlertUniqueIds{}
	return &this
}

// NewFilterAlertUniqueIdsWithDefaults instantiates a new FilterAlertUniqueIds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilterAlertUniqueIdsWithDefaults() *FilterAlertUniqueIds {
	this := FilterAlertUniqueIds{}
	return &this
}

// GetAlertUniqueIds returns the AlertUniqueIds field value if set, zero value otherwise.
func (o *FilterAlertUniqueIds) GetAlertUniqueIds() AlertUniqueIds {
	if o == nil || IsNil(o.AlertUniqueIds) {
		var ret AlertUniqueIds
		return ret
	}
	return *o.AlertUniqueIds
}

// GetAlertUniqueIdsOk returns a tuple with the AlertUniqueIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterAlertUniqueIds) GetAlertUniqueIdsOk() (*AlertUniqueIds, bool) {
	if o == nil || IsNil(o.AlertUniqueIds) {
		return nil, false
	}
	return o.AlertUniqueIds, true
}

// HasAlertUniqueIds returns a boolean if a field has been set.
func (o *FilterAlertUniqueIds) HasAlertUniqueIds() bool {
	if o != nil && !IsNil(o.AlertUniqueIds) {
		return true
	}

	return false
}

// SetAlertUniqueIds gets a reference to the given AlertUniqueIds and assigns it to the AlertUniqueIds field.
func (o *FilterAlertUniqueIds) SetAlertUniqueIds(v AlertUniqueIds) {
	o.AlertUniqueIds = &v
}

// GetWhatExpression returns the WhatExpression field value if set, zero value otherwise.
func (o *FilterAlertUniqueIds) GetWhatExpression() string {
	if o == nil || IsNil(o.WhatExpression) {
		var ret string
		return ret
	}
	return *o.WhatExpression
}

// GetWhatExpressionOk returns a tuple with the WhatExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterAlertUniqueIds) GetWhatExpressionOk() (*string, bool) {
	if o == nil || IsNil(o.WhatExpression) {
		return nil, false
	}
	return o.WhatExpression, true
}

// HasWhatExpression returns a boolean if a field has been set.
func (o *FilterAlertUniqueIds) HasWhatExpression() bool {
	if o != nil && !IsNil(o.WhatExpression) {
		return true
	}

	return false
}

// SetWhatExpression gets a reference to the given string and assigns it to the WhatExpression field.
func (o *FilterAlertUniqueIds) SetWhatExpression(v string) {
	o.WhatExpression = &v
}

func (o FilterAlertUniqueIds) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilterAlertUniqueIds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertUniqueIds) {
		toSerialize["alertUniqueIds"] = o.AlertUniqueIds
	}
	if !IsNil(o.WhatExpression) {
		toSerialize["whatExpression"] = o.WhatExpression
	}
	return toSerialize, nil
}

type NullableFilterAlertUniqueIds struct {
	value *FilterAlertUniqueIds
	isSet bool
}

func (v NullableFilterAlertUniqueIds) Get() *FilterAlertUniqueIds {
	return v.value
}

func (v *NullableFilterAlertUniqueIds) Set(val *FilterAlertUniqueIds) {
	v.value = val
	v.isSet = true
}

func (v NullableFilterAlertUniqueIds) IsSet() bool {
	return v.isSet
}

func (v *NullableFilterAlertUniqueIds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilterAlertUniqueIds(val *FilterAlertUniqueIds) *NullableFilterAlertUniqueIds {
	return &NullableFilterAlertUniqueIds{value: val, isSet: true}
}

func (v NullableFilterAlertUniqueIds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilterAlertUniqueIds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


