/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_scheduler_rule_service

import (
	"encoding/json"
)

// checks if the RecurringOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecurringOneOf1{}

// RecurringOneOf1 struct for RecurringOneOf1
type RecurringOneOf1 struct {
	Dynamic *RecurringDynamic `json:"dynamic,omitempty"`
}

// NewRecurringOneOf1 instantiates a new RecurringOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecurringOneOf1() *RecurringOneOf1 {
	this := RecurringOneOf1{}
	return &this
}

// NewRecurringOneOf1WithDefaults instantiates a new RecurringOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecurringOneOf1WithDefaults() *RecurringOneOf1 {
	this := RecurringOneOf1{}
	return &this
}

// GetDynamic returns the Dynamic field value if set, zero value otherwise.
func (o *RecurringOneOf1) GetDynamic() RecurringDynamic {
	if o == nil || IsNil(o.Dynamic) {
		var ret RecurringDynamic
		return ret
	}
	return *o.Dynamic
}

// GetDynamicOk returns a tuple with the Dynamic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecurringOneOf1) GetDynamicOk() (*RecurringDynamic, bool) {
	if o == nil || IsNil(o.Dynamic) {
		return nil, false
	}
	return o.Dynamic, true
}

// HasDynamic returns a boolean if a field has been set.
func (o *RecurringOneOf1) HasDynamic() bool {
	if o != nil && !IsNil(o.Dynamic) {
		return true
	}

	return false
}

// SetDynamic gets a reference to the given RecurringDynamic and assigns it to the Dynamic field.
func (o *RecurringOneOf1) SetDynamic(v RecurringDynamic) {
	o.Dynamic = &v
}

func (o RecurringOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecurringOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dynamic) {
		toSerialize["dynamic"] = o.Dynamic
	}
	return toSerialize, nil
}

type NullableRecurringOneOf1 struct {
	value *RecurringOneOf1
	isSet bool
}

func (v NullableRecurringOneOf1) Get() *RecurringOneOf1 {
	return v.value
}

func (v *NullableRecurringOneOf1) Set(val *RecurringOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableRecurringOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableRecurringOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecurringOneOf1(val *RecurringOneOf1) *NullableRecurringOneOf1 {
	return &NullableRecurringOneOf1{value: val, isSet: true}
}

func (v NullableRecurringOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecurringOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


