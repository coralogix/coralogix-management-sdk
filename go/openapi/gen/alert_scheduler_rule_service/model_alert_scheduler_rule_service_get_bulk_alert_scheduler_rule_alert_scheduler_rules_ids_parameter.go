/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_scheduler_rule_service

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter - struct for AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter
type AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter struct {
	FilterByAlertSchedulerRuleIdsAlertSchedulerIds *FilterByAlertSchedulerRuleIdsAlertSchedulerIds
	FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds *FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds
}

// FilterByAlertSchedulerRuleIdsAlertSchedulerIdsAsAlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter is a convenience function that returns FilterByAlertSchedulerRuleIdsAlertSchedulerIds wrapped in AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter
func FilterByAlertSchedulerRuleIdsAlertSchedulerIdsAsAlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter(v *FilterByAlertSchedulerRuleIdsAlertSchedulerIds) AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter {
	return AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter{
		FilterByAlertSchedulerRuleIdsAlertSchedulerIds: v,
	}
}

// FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIdsAsAlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter is a convenience function that returns FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds wrapped in AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter
func FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIdsAsAlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter(v *FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds) AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter {
	return AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter{
		FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into FilterByAlertSchedulerRuleIdsAlertSchedulerIds
	err = newStrictDecoder(data).Decode(&dst.FilterByAlertSchedulerRuleIdsAlertSchedulerIds)
	if err == nil {
		jsonFilterByAlertSchedulerRuleIdsAlertSchedulerIds, _ := json.Marshal(dst.FilterByAlertSchedulerRuleIdsAlertSchedulerIds)
		if string(jsonFilterByAlertSchedulerRuleIdsAlertSchedulerIds) == "{}" { // empty struct
			dst.FilterByAlertSchedulerRuleIdsAlertSchedulerIds = nil
		} else {
			if err = validator.Validate(dst.FilterByAlertSchedulerRuleIdsAlertSchedulerIds); err != nil {
				dst.FilterByAlertSchedulerRuleIdsAlertSchedulerIds = nil
			} else {
				match++
			}
		}
	} else {
		dst.FilterByAlertSchedulerRuleIdsAlertSchedulerIds = nil
	}

	// try to unmarshal data into FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds
	err = newStrictDecoder(data).Decode(&dst.FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds)
	if err == nil {
		jsonFilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds, _ := json.Marshal(dst.FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds)
		if string(jsonFilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds) == "{}" { // empty struct
			dst.FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds = nil
		} else {
			if err = validator.Validate(dst.FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds); err != nil {
				dst.FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds = nil
			} else {
				match++
			}
		}
	} else {
		dst.FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.FilterByAlertSchedulerRuleIdsAlertSchedulerIds = nil
		dst.FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter) MarshalJSON() ([]byte, error) {
	if src.FilterByAlertSchedulerRuleIdsAlertSchedulerIds != nil {
		return json.Marshal(&src.FilterByAlertSchedulerRuleIdsAlertSchedulerIds)
	}

	if src.FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds != nil {
		return json.Marshal(&src.FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.FilterByAlertSchedulerRuleIdsAlertSchedulerIds != nil {
		return obj.FilterByAlertSchedulerRuleIdsAlertSchedulerIds
	}

	if obj.FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds != nil {
		return obj.FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter) GetActualInstanceValue() (interface{}) {
	if obj.FilterByAlertSchedulerRuleIdsAlertSchedulerIds != nil {
		return *obj.FilterByAlertSchedulerRuleIdsAlertSchedulerIds
	}

	if obj.FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds != nil {
		return *obj.FilterByAlertSchedulerRuleIdsAlertSchedulerVersionIds
	}

	// all schemas are nil
	return nil
}

type NullableAlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter struct {
	value *AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter
	isSet bool
}

func (v NullableAlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter) Get() *AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter {
	return v.value
}

func (v *NullableAlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter) Set(val *AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter(val *AlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter) *NullableAlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter {
	return &NullableAlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter{value: val, isSet: true}
}

func (v NullableAlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertSchedulerRuleServiceGetBulkAlertSchedulerRuleAlertSchedulerRulesIdsParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


