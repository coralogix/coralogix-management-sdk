/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package extension_deployment_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DeployedExtensionSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployedExtensionSummary{}

// DeployedExtensionSummary struct for DeployedExtensionSummary
type DeployedExtensionSummary struct {
	DeployedItemCounts ItemCounts `json:"deployedItemCounts"`
}

type _DeployedExtensionSummary DeployedExtensionSummary

// NewDeployedExtensionSummary instantiates a new DeployedExtensionSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployedExtensionSummary(deployedItemCounts ItemCounts) *DeployedExtensionSummary {
	this := DeployedExtensionSummary{}
	this.DeployedItemCounts = deployedItemCounts
	return &this
}

// NewDeployedExtensionSummaryWithDefaults instantiates a new DeployedExtensionSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployedExtensionSummaryWithDefaults() *DeployedExtensionSummary {
	this := DeployedExtensionSummary{}
	return &this
}

// GetDeployedItemCounts returns the DeployedItemCounts field value
func (o *DeployedExtensionSummary) GetDeployedItemCounts() ItemCounts {
	if o == nil {
		var ret ItemCounts
		return ret
	}

	return o.DeployedItemCounts
}

// GetDeployedItemCountsOk returns a tuple with the DeployedItemCounts field value
// and a boolean to check if the value has been set.
func (o *DeployedExtensionSummary) GetDeployedItemCountsOk() (*ItemCounts, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployedItemCounts, true
}

// SetDeployedItemCounts sets field value
func (o *DeployedExtensionSummary) SetDeployedItemCounts(v ItemCounts) {
	o.DeployedItemCounts = v
}

func (o DeployedExtensionSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployedExtensionSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deployedItemCounts"] = o.DeployedItemCounts
	return toSerialize, nil
}

func (o *DeployedExtensionSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deployedItemCounts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeployedExtensionSummary := _DeployedExtensionSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeployedExtensionSummary)

	if err != nil {
		return err
	}

	*o = DeployedExtensionSummary(varDeployedExtensionSummary)

	return err
}

type NullableDeployedExtensionSummary struct {
	value *DeployedExtensionSummary
	isSet bool
}

func (v NullableDeployedExtensionSummary) Get() *DeployedExtensionSummary {
	return v.value
}

func (v *NullableDeployedExtensionSummary) Set(val *DeployedExtensionSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployedExtensionSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployedExtensionSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployedExtensionSummary(val *DeployedExtensionSummary) *NullableDeployedExtensionSummary {
	return &NullableDeployedExtensionSummary{value: val, isSet: true}
}

func (v NullableDeployedExtensionSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployedExtensionSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


