/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package extension_deployment_service

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateExtensionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateExtensionResponse{}

// UpdateExtensionResponse struct for UpdateExtensionResponse
type UpdateExtensionResponse struct {
	ExtensionDeployment ExtensionDeployment `json:"extensionDeployment"`
}

type _UpdateExtensionResponse UpdateExtensionResponse

// NewUpdateExtensionResponse instantiates a new UpdateExtensionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateExtensionResponse(extensionDeployment ExtensionDeployment) *UpdateExtensionResponse {
	this := UpdateExtensionResponse{}
	this.ExtensionDeployment = extensionDeployment
	return &this
}

// NewUpdateExtensionResponseWithDefaults instantiates a new UpdateExtensionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateExtensionResponseWithDefaults() *UpdateExtensionResponse {
	this := UpdateExtensionResponse{}
	return &this
}

// GetExtensionDeployment returns the ExtensionDeployment field value
func (o *UpdateExtensionResponse) GetExtensionDeployment() ExtensionDeployment {
	if o == nil {
		var ret ExtensionDeployment
		return ret
	}

	return o.ExtensionDeployment
}

// GetExtensionDeploymentOk returns a tuple with the ExtensionDeployment field value
// and a boolean to check if the value has been set.
func (o *UpdateExtensionResponse) GetExtensionDeploymentOk() (*ExtensionDeployment, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExtensionDeployment, true
}

// SetExtensionDeployment sets field value
func (o *UpdateExtensionResponse) SetExtensionDeployment(v ExtensionDeployment) {
	o.ExtensionDeployment = v
}

func (o UpdateExtensionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateExtensionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["extensionDeployment"] = o.ExtensionDeployment
	return toSerialize, nil
}

func (o *UpdateExtensionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"extensionDeployment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateExtensionResponse := _UpdateExtensionResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateExtensionResponse)

	if err != nil {
		return err
	}

	*o = UpdateExtensionResponse(varUpdateExtensionResponse)

	return err
}

type NullableUpdateExtensionResponse struct {
	value *UpdateExtensionResponse
	isSet bool
}

func (v NullableUpdateExtensionResponse) Get() *UpdateExtensionResponse {
	return v.value
}

func (v *NullableUpdateExtensionResponse) Set(val *UpdateExtensionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateExtensionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateExtensionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateExtensionResponse(val *UpdateExtensionResponse) *NullableUpdateExtensionResponse {
	return &NullableUpdateExtensionResponse{value: val, isSet: true}
}

func (v NullableUpdateExtensionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateExtensionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


