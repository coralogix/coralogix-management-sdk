/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package folders_for_views_service

import (
	"encoding/json"
)

// checks if the ListViewFoldersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListViewFoldersResponse{}

// ListViewFoldersResponse struct for ListViewFoldersResponse
type ListViewFoldersResponse struct {
	Folders []ViewFolder `json:"folders,omitempty"`
}

// NewListViewFoldersResponse instantiates a new ListViewFoldersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListViewFoldersResponse() *ListViewFoldersResponse {
	this := ListViewFoldersResponse{}
	return &this
}

// NewListViewFoldersResponseWithDefaults instantiates a new ListViewFoldersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListViewFoldersResponseWithDefaults() *ListViewFoldersResponse {
	this := ListViewFoldersResponse{}
	return &this
}

// GetFolders returns the Folders field value if set, zero value otherwise.
func (o *ListViewFoldersResponse) GetFolders() []ViewFolder {
	if o == nil || IsNil(o.Folders) {
		var ret []ViewFolder
		return ret
	}
	return o.Folders
}

// GetFoldersOk returns a tuple with the Folders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListViewFoldersResponse) GetFoldersOk() ([]ViewFolder, bool) {
	if o == nil || IsNil(o.Folders) {
		return nil, false
	}
	return o.Folders, true
}

// HasFolders returns a boolean if a field has been set.
func (o *ListViewFoldersResponse) HasFolders() bool {
	if o != nil && !IsNil(o.Folders) {
		return true
	}

	return false
}

// SetFolders gets a reference to the given []ViewFolder and assigns it to the Folders field.
func (o *ListViewFoldersResponse) SetFolders(v []ViewFolder) {
	o.Folders = v
}

func (o ListViewFoldersResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListViewFoldersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Folders) {
		toSerialize["folders"] = o.Folders
	}
	return toSerialize, nil
}

type NullableListViewFoldersResponse struct {
	value *ListViewFoldersResponse
	isSet bool
}

func (v NullableListViewFoldersResponse) Get() *ListViewFoldersResponse {
	return v.value
}

func (v *NullableListViewFoldersResponse) Set(val *ListViewFoldersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListViewFoldersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListViewFoldersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListViewFoldersResponse(val *ListViewFoldersResponse) *NullableListViewFoldersResponse {
	return &NullableListViewFoldersResponse{value: val, isSet: true}
}

func (v NullableListViewFoldersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListViewFoldersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


