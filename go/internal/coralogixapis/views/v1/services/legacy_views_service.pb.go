// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.3
// source: com/coralogixapis/views/v1/services/legacy_views_service.proto

package services

import (
	v1 "github.com/coralogix/coralogix-management-sdk/go/internal/coralogixapis/views/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateLegacyViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FolderId   *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	Name       *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Definition *structpb.Struct        `protobuf:"bytes,100,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *CreateLegacyViewRequest) Reset() {
	*x = CreateLegacyViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLegacyViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLegacyViewRequest) ProtoMessage() {}

func (x *CreateLegacyViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLegacyViewRequest.ProtoReflect.Descriptor instead.
func (*CreateLegacyViewRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateLegacyViewRequest) GetFolderId() *wrapperspb.StringValue {
	if x != nil {
		return x.FolderId
	}
	return nil
}

func (x *CreateLegacyViewRequest) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *CreateLegacyViewRequest) GetDefinition() *structpb.Struct {
	if x != nil {
		return x.Definition
	}
	return nil
}

type CreateLegacyViewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegacyView *LegacyView `protobuf:"bytes,1,opt,name=legacy_view,json=legacyView,proto3" json:"legacy_view,omitempty"`
}

func (x *CreateLegacyViewResponse) Reset() {
	*x = CreateLegacyViewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLegacyViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLegacyViewResponse) ProtoMessage() {}

func (x *CreateLegacyViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLegacyViewResponse.ProtoReflect.Descriptor instead.
func (*CreateLegacyViewResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLegacyViewResponse) GetLegacyView() *LegacyView {
	if x != nil {
		return x.LegacyView
	}
	return nil
}

type ReplaceLegacyViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *wrapperspb.Int32Value  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FolderId   *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	Definition *structpb.Struct        `protobuf:"bytes,100,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *ReplaceLegacyViewRequest) Reset() {
	*x = ReplaceLegacyViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceLegacyViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceLegacyViewRequest) ProtoMessage() {}

func (x *ReplaceLegacyViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceLegacyViewRequest.ProtoReflect.Descriptor instead.
func (*ReplaceLegacyViewRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescGZIP(), []int{2}
}

func (x *ReplaceLegacyViewRequest) GetId() *wrapperspb.Int32Value {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ReplaceLegacyViewRequest) GetFolderId() *wrapperspb.StringValue {
	if x != nil {
		return x.FolderId
	}
	return nil
}

func (x *ReplaceLegacyViewRequest) GetDefinition() *structpb.Struct {
	if x != nil {
		return x.Definition
	}
	return nil
}

type ReplaceLegacyViewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegacyView *LegacyView `protobuf:"bytes,1,opt,name=legacy_view,json=legacyView,proto3" json:"legacy_view,omitempty"`
}

func (x *ReplaceLegacyViewResponse) Reset() {
	*x = ReplaceLegacyViewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceLegacyViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceLegacyViewResponse) ProtoMessage() {}

func (x *ReplaceLegacyViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceLegacyViewResponse.ProtoReflect.Descriptor instead.
func (*ReplaceLegacyViewResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescGZIP(), []int{3}
}

func (x *ReplaceLegacyViewResponse) GetLegacyView() *LegacyView {
	if x != nil {
		return x.LegacyView
	}
	return nil
}

type DeleteLegacyViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteLegacyViewRequest) Reset() {
	*x = DeleteLegacyViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLegacyViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLegacyViewRequest) ProtoMessage() {}

func (x *DeleteLegacyViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLegacyViewRequest.ProtoReflect.Descriptor instead.
func (*DeleteLegacyViewRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteLegacyViewRequest) GetId() *wrapperspb.Int32Value {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteLegacyViewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLegacyViewResponse) Reset() {
	*x = DeleteLegacyViewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLegacyViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLegacyViewResponse) ProtoMessage() {}

func (x *DeleteLegacyViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLegacyViewResponse.ProtoReflect.Descriptor instead.
func (*DeleteLegacyViewResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescGZIP(), []int{5}
}

type ListTeamLegacyViewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTeamLegacyViewsRequest) Reset() {
	*x = ListTeamLegacyViewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamLegacyViewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamLegacyViewsRequest) ProtoMessage() {}

func (x *ListTeamLegacyViewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamLegacyViewsRequest.ProtoReflect.Descriptor instead.
func (*ListTeamLegacyViewsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescGZIP(), []int{6}
}

type ListTeamLegacyViewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegacyViews []*LegacyView `protobuf:"bytes,1,rep,name=legacy_views,json=legacyViews,proto3" json:"legacy_views,omitempty"`
}

func (x *ListTeamLegacyViewsResponse) Reset() {
	*x = ListTeamLegacyViewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamLegacyViewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamLegacyViewsResponse) ProtoMessage() {}

func (x *ListTeamLegacyViewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamLegacyViewsResponse.ProtoReflect.Descriptor instead.
func (*ListTeamLegacyViewsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListTeamLegacyViewsResponse) GetLegacyViews() []*LegacyView {
	if x != nil {
		return x.LegacyViews
	}
	return nil
}

type ListUserLegacyViewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUserLegacyViewsRequest) Reset() {
	*x = ListUserLegacyViewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserLegacyViewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserLegacyViewsRequest) ProtoMessage() {}

func (x *ListUserLegacyViewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserLegacyViewsRequest.ProtoReflect.Descriptor instead.
func (*ListUserLegacyViewsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescGZIP(), []int{8}
}

type ListUserLegacyViewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegacyViews []*LegacyView `protobuf:"bytes,1,rep,name=legacy_views,json=legacyViews,proto3" json:"legacy_views,omitempty"`
}

func (x *ListUserLegacyViewsResponse) Reset() {
	*x = ListUserLegacyViewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserLegacyViewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserLegacyViewsResponse) ProtoMessage() {}

func (x *ListUserLegacyViewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserLegacyViewsResponse.ProtoReflect.Descriptor instead.
func (*ListUserLegacyViewsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListUserLegacyViewsResponse) GetLegacyViews() []*LegacyView {
	if x != nil {
		return x.LegacyViews
	}
	return nil
}

type LegacyView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *wrapperspb.Int32Value  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SearchQuery   *v1.SearchQuery         `protobuf:"bytes,3,opt,name=search_query,json=searchQuery,proto3" json:"search_query,omitempty"`
	TimeSelection *v1.TimeSelection       `protobuf:"bytes,4,opt,name=time_selection,json=timeSelection,proto3" json:"time_selection,omitempty"`
	Filters       *v1.SelectedFilters     `protobuf:"bytes,5,opt,name=filters,proto3" json:"filters,omitempty"`
	IsPublic      *wrapperspb.BoolValue   `protobuf:"bytes,6,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	FolderId      *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	Definition    *structpb.Struct        `protobuf:"bytes,100,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *LegacyView) Reset() {
	*x = LegacyView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegacyView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyView) ProtoMessage() {}

func (x *LegacyView) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyView.ProtoReflect.Descriptor instead.
func (*LegacyView) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescGZIP(), []int{10}
}

func (x *LegacyView) GetId() *wrapperspb.Int32Value {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *LegacyView) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *LegacyView) GetSearchQuery() *v1.SearchQuery {
	if x != nil {
		return x.SearchQuery
	}
	return nil
}

func (x *LegacyView) GetTimeSelection() *v1.TimeSelection {
	if x != nil {
		return x.TimeSelection
	}
	return nil
}

func (x *LegacyView) GetFilters() *v1.SelectedFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *LegacyView) GetIsPublic() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsPublic
	}
	return nil
}

func (x *LegacyView) GetFolderId() *wrapperspb.StringValue {
	if x != nil {
		return x.FolderId
	}
	return nil
}

func (x *LegacyView) GetDefinition() *structpb.Struct {
	if x != nil {
		return x.Definition
	}
	return nil
}

var File_com_coralogixapis_views_v1_services_legacy_views_service_proto protoreflect.FileDescriptor

var file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x2a, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x28, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x01, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6c, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0a, 0x6c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x22, 0xbb, 0x01, 0x0a, 0x18, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37,
	0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x19, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0a, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x22, 0x46, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x71, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x61, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0b,
	0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65,
	0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x71, 0x0a, 0x1b, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x0b, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x73, 0x22, 0xfd, 0x03, 0x0a,
	0x0a, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2b, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x0c, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x50, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x37, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08,
	0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x39, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x8e, 0x07, 0x0a,
	0x12, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0xa9, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x12, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0xba, 0xb8, 0x02, 0x14, 0x0a, 0x12, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x20, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x76, 0x69, 0x65, 0x77, 0x12,
	0xad, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x56, 0x69, 0x65, 0x77, 0x12, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0xba, 0xb8, 0x02, 0x15, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x20, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x76, 0x69, 0x65, 0x77, 0x12,
	0xa9, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x18, 0xba, 0xb8, 0x02, 0x14, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20,
	0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x76, 0x69, 0x65, 0x77, 0x12, 0xb6, 0x01, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69,
	0x65, 0x77, 0x73, 0x12, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0xba, 0xb8, 0x02, 0x18, 0x0a, 0x16, 0x6c, 0x69,
	0x73, 0x74, 0x20, 0x74, 0x65, 0x61, 0x6d, 0x20, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x12, 0xb6, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x3f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1c, 0xba, 0xb8, 0x02, 0x18, 0x0a, 0x16, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72,
	0x20, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x20, 0x76, 0x69, 0x65, 0x77, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescOnce sync.Once
	file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescData = file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDesc
)

func file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescData)
	})
	return file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDescData
}

var file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_com_coralogixapis_views_v1_services_legacy_views_service_proto_goTypes = []interface{}{
	(*CreateLegacyViewRequest)(nil),     // 0: com.coralogixapis.views.v1.services.CreateLegacyViewRequest
	(*CreateLegacyViewResponse)(nil),    // 1: com.coralogixapis.views.v1.services.CreateLegacyViewResponse
	(*ReplaceLegacyViewRequest)(nil),    // 2: com.coralogixapis.views.v1.services.ReplaceLegacyViewRequest
	(*ReplaceLegacyViewResponse)(nil),   // 3: com.coralogixapis.views.v1.services.ReplaceLegacyViewResponse
	(*DeleteLegacyViewRequest)(nil),     // 4: com.coralogixapis.views.v1.services.DeleteLegacyViewRequest
	(*DeleteLegacyViewResponse)(nil),    // 5: com.coralogixapis.views.v1.services.DeleteLegacyViewResponse
	(*ListTeamLegacyViewsRequest)(nil),  // 6: com.coralogixapis.views.v1.services.ListTeamLegacyViewsRequest
	(*ListTeamLegacyViewsResponse)(nil), // 7: com.coralogixapis.views.v1.services.ListTeamLegacyViewsResponse
	(*ListUserLegacyViewsRequest)(nil),  // 8: com.coralogixapis.views.v1.services.ListUserLegacyViewsRequest
	(*ListUserLegacyViewsResponse)(nil), // 9: com.coralogixapis.views.v1.services.ListUserLegacyViewsResponse
	(*LegacyView)(nil),                  // 10: com.coralogixapis.views.v1.services.LegacyView
	(*wrapperspb.StringValue)(nil),      // 11: google.protobuf.StringValue
	(*structpb.Struct)(nil),             // 12: google.protobuf.Struct
	(*wrapperspb.Int32Value)(nil),       // 13: google.protobuf.Int32Value
	(*v1.SearchQuery)(nil),              // 14: com.coralogixapis.views.v1.SearchQuery
	(*v1.TimeSelection)(nil),            // 15: com.coralogixapis.views.v1.TimeSelection
	(*v1.SelectedFilters)(nil),          // 16: com.coralogixapis.views.v1.SelectedFilters
	(*wrapperspb.BoolValue)(nil),        // 17: google.protobuf.BoolValue
}
var file_com_coralogixapis_views_v1_services_legacy_views_service_proto_depIdxs = []int32{
	11, // 0: com.coralogixapis.views.v1.services.CreateLegacyViewRequest.folder_id:type_name -> google.protobuf.StringValue
	11, // 1: com.coralogixapis.views.v1.services.CreateLegacyViewRequest.name:type_name -> google.protobuf.StringValue
	12, // 2: com.coralogixapis.views.v1.services.CreateLegacyViewRequest.definition:type_name -> google.protobuf.Struct
	10, // 3: com.coralogixapis.views.v1.services.CreateLegacyViewResponse.legacy_view:type_name -> com.coralogixapis.views.v1.services.LegacyView
	13, // 4: com.coralogixapis.views.v1.services.ReplaceLegacyViewRequest.id:type_name -> google.protobuf.Int32Value
	11, // 5: com.coralogixapis.views.v1.services.ReplaceLegacyViewRequest.folder_id:type_name -> google.protobuf.StringValue
	12, // 6: com.coralogixapis.views.v1.services.ReplaceLegacyViewRequest.definition:type_name -> google.protobuf.Struct
	10, // 7: com.coralogixapis.views.v1.services.ReplaceLegacyViewResponse.legacy_view:type_name -> com.coralogixapis.views.v1.services.LegacyView
	13, // 8: com.coralogixapis.views.v1.services.DeleteLegacyViewRequest.id:type_name -> google.protobuf.Int32Value
	10, // 9: com.coralogixapis.views.v1.services.ListTeamLegacyViewsResponse.legacy_views:type_name -> com.coralogixapis.views.v1.services.LegacyView
	10, // 10: com.coralogixapis.views.v1.services.ListUserLegacyViewsResponse.legacy_views:type_name -> com.coralogixapis.views.v1.services.LegacyView
	13, // 11: com.coralogixapis.views.v1.services.LegacyView.id:type_name -> google.protobuf.Int32Value
	11, // 12: com.coralogixapis.views.v1.services.LegacyView.name:type_name -> google.protobuf.StringValue
	14, // 13: com.coralogixapis.views.v1.services.LegacyView.search_query:type_name -> com.coralogixapis.views.v1.SearchQuery
	15, // 14: com.coralogixapis.views.v1.services.LegacyView.time_selection:type_name -> com.coralogixapis.views.v1.TimeSelection
	16, // 15: com.coralogixapis.views.v1.services.LegacyView.filters:type_name -> com.coralogixapis.views.v1.SelectedFilters
	17, // 16: com.coralogixapis.views.v1.services.LegacyView.is_public:type_name -> google.protobuf.BoolValue
	11, // 17: com.coralogixapis.views.v1.services.LegacyView.folder_id:type_name -> google.protobuf.StringValue
	12, // 18: com.coralogixapis.views.v1.services.LegacyView.definition:type_name -> google.protobuf.Struct
	0,  // 19: com.coralogixapis.views.v1.services.LegacyViewsService.CreateLegacyView:input_type -> com.coralogixapis.views.v1.services.CreateLegacyViewRequest
	2,  // 20: com.coralogixapis.views.v1.services.LegacyViewsService.ReplaceLegacyView:input_type -> com.coralogixapis.views.v1.services.ReplaceLegacyViewRequest
	4,  // 21: com.coralogixapis.views.v1.services.LegacyViewsService.DeleteLegacyView:input_type -> com.coralogixapis.views.v1.services.DeleteLegacyViewRequest
	6,  // 22: com.coralogixapis.views.v1.services.LegacyViewsService.ListTeamLegacyViews:input_type -> com.coralogixapis.views.v1.services.ListTeamLegacyViewsRequest
	8,  // 23: com.coralogixapis.views.v1.services.LegacyViewsService.ListUserLegacyViews:input_type -> com.coralogixapis.views.v1.services.ListUserLegacyViewsRequest
	1,  // 24: com.coralogixapis.views.v1.services.LegacyViewsService.CreateLegacyView:output_type -> com.coralogixapis.views.v1.services.CreateLegacyViewResponse
	3,  // 25: com.coralogixapis.views.v1.services.LegacyViewsService.ReplaceLegacyView:output_type -> com.coralogixapis.views.v1.services.ReplaceLegacyViewResponse
	5,  // 26: com.coralogixapis.views.v1.services.LegacyViewsService.DeleteLegacyView:output_type -> com.coralogixapis.views.v1.services.DeleteLegacyViewResponse
	7,  // 27: com.coralogixapis.views.v1.services.LegacyViewsService.ListTeamLegacyViews:output_type -> com.coralogixapis.views.v1.services.ListTeamLegacyViewsResponse
	9,  // 28: com.coralogixapis.views.v1.services.LegacyViewsService.ListUserLegacyViews:output_type -> com.coralogixapis.views.v1.services.ListUserLegacyViewsResponse
	24, // [24:29] is the sub-list for method output_type
	19, // [19:24] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_views_v1_services_legacy_views_service_proto_init() }
func file_com_coralogixapis_views_v1_services_legacy_views_service_proto_init() {
	if File_com_coralogixapis_views_v1_services_legacy_views_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLegacyViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLegacyViewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceLegacyViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceLegacyViewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLegacyViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLegacyViewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeamLegacyViewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeamLegacyViewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserLegacyViewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserLegacyViewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegacyView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogixapis_views_v1_services_legacy_views_service_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_views_v1_services_legacy_views_service_proto_depIdxs,
		MessageInfos:      file_com_coralogixapis_views_v1_services_legacy_views_service_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_views_v1_services_legacy_views_service_proto = out.File
	file_com_coralogixapis_views_v1_services_legacy_views_service_proto_rawDesc = nil
	file_com_coralogixapis_views_v1_services_legacy_views_service_proto_goTypes = nil
	file_com_coralogixapis_views_v1_services_legacy_views_service_proto_depIdxs = nil
}
