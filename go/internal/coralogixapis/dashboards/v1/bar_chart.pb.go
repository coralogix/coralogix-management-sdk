// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: com/coralogixapis/dashboards/v1/ast/widgets/bar_chart.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BarValueDisplay int32

const (
	BarValueDisplay_BAR_VALUE_DISPLAY_UNSPECIFIED BarValueDisplay = 0
	BarValueDisplay_BAR_VALUE_DISPLAY_TOP         BarValueDisplay = 1
	BarValueDisplay_BAR_VALUE_DISPLAY_INSIDE      BarValueDisplay = 2
	BarValueDisplay_BAR_VALUE_DISPLAY_BOTH        BarValueDisplay = 3
)

// Enum value maps for BarValueDisplay.
var (
	BarValueDisplay_name = map[int32]string{
		0: "BAR_VALUE_DISPLAY_UNSPECIFIED",
		1: "BAR_VALUE_DISPLAY_TOP",
		2: "BAR_VALUE_DISPLAY_INSIDE",
		3: "BAR_VALUE_DISPLAY_BOTH",
	}
	BarValueDisplay_value = map[string]int32{
		"BAR_VALUE_DISPLAY_UNSPECIFIED": 0,
		"BAR_VALUE_DISPLAY_TOP":         1,
		"BAR_VALUE_DISPLAY_INSIDE":      2,
		"BAR_VALUE_DISPLAY_BOTH":        3,
	}
)

func (x BarValueDisplay) Enum() *BarValueDisplay {
	p := new(BarValueDisplay)
	*p = x
	return p
}

func (x BarValueDisplay) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BarValueDisplay) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_enumTypes[0].Descriptor()
}

func (BarValueDisplay) Type() protoreflect.EnumType {
	return &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_enumTypes[0]
}

func (x BarValueDisplay) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BarValueDisplay.Descriptor instead.
func (BarValueDisplay) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescGZIP(), []int{0}
}

type BarChart struct {
	state             protoimpl.MessageState    `protogen:"open.v1"`
	Query             *BarChart_Query           `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	MaxBarsPerChart   *wrapperspb.Int32Value    `protobuf:"bytes,2,opt,name=max_bars_per_chart,json=maxBarsPerChart,proto3" json:"max_bars_per_chart,omitempty"`
	GroupNameTemplate *wrapperspb.StringValue   `protobuf:"bytes,3,opt,name=group_name_template,json=groupNameTemplate,proto3" json:"group_name_template,omitempty"`
	StackDefinition   *BarChart_StackDefinition `protobuf:"bytes,4,opt,name=stack_definition,json=stackDefinition,proto3" json:"stack_definition,omitempty"`
	ScaleType         ScaleType                 `protobuf:"varint,5,opt,name=scale_type,json=scaleType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType" json:"scale_type,omitempty"`
	ColorsBy          *ColorsBy                 `protobuf:"bytes,6,opt,name=colors_by,json=colorsBy,proto3" json:"colors_by,omitempty"`
	XAxis             *BarChart_XAxis           `protobuf:"bytes,7,opt,name=x_axis,json=xAxis,proto3" json:"x_axis,omitempty"`
	Unit              Unit                      `protobuf:"varint,8,opt,name=unit,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.Unit" json:"unit,omitempty"`
	SortBy            SortByType                `protobuf:"varint,9,opt,name=sort_by,json=sortBy,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.SortByType" json:"sort_by,omitempty"`
	ColorScheme       *wrapperspb.StringValue   `protobuf:"bytes,10,opt,name=color_scheme,json=colorScheme,proto3" json:"color_scheme,omitempty"`
	DataModeType      DataModeType              `protobuf:"varint,11,opt,name=data_mode_type,json=dataModeType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType" json:"data_mode_type,omitempty"`
	BarValueDisplay   BarValueDisplay           `protobuf:"varint,12,opt,name=bar_value_display,json=barValueDisplay,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.BarValueDisplay" json:"bar_value_display,omitempty"`
	CustomUnit        *wrapperspb.StringValue   `protobuf:"bytes,13,opt,name=custom_unit,json=customUnit,proto3" json:"custom_unit,omitempty"`
	Decimal           *wrapperspb.Int32Value    `protobuf:"bytes,14,opt,name=decimal,proto3" json:"decimal,omitempty"`
	Legend            *Legend                   `protobuf:"bytes,15,opt,name=legend,proto3" json:"legend,omitempty"`
	CustomLinks       []*CustomLink             `protobuf:"bytes,16,rep,name=custom_links,json=customLinks,proto3" json:"custom_links,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BarChart) Reset() {
	*x = BarChart{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BarChart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarChart) ProtoMessage() {}

func (x *BarChart) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarChart.ProtoReflect.Descriptor instead.
func (*BarChart) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescGZIP(), []int{0}
}

func (x *BarChart) GetQuery() *BarChart_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *BarChart) GetMaxBarsPerChart() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxBarsPerChart
	}
	return nil
}

func (x *BarChart) GetGroupNameTemplate() *wrapperspb.StringValue {
	if x != nil {
		return x.GroupNameTemplate
	}
	return nil
}

func (x *BarChart) GetStackDefinition() *BarChart_StackDefinition {
	if x != nil {
		return x.StackDefinition
	}
	return nil
}

func (x *BarChart) GetScaleType() ScaleType {
	if x != nil {
		return x.ScaleType
	}
	return ScaleType_SCALE_TYPE_UNSPECIFIED
}

func (x *BarChart) GetColorsBy() *ColorsBy {
	if x != nil {
		return x.ColorsBy
	}
	return nil
}

func (x *BarChart) GetXAxis() *BarChart_XAxis {
	if x != nil {
		return x.XAxis
	}
	return nil
}

func (x *BarChart) GetUnit() Unit {
	if x != nil {
		return x.Unit
	}
	return Unit_UNIT_UNSPECIFIED
}

func (x *BarChart) GetSortBy() SortByType {
	if x != nil {
		return x.SortBy
	}
	return SortByType_SORT_BY_TYPE_UNSPECIFIED
}

func (x *BarChart) GetColorScheme() *wrapperspb.StringValue {
	if x != nil {
		return x.ColorScheme
	}
	return nil
}

func (x *BarChart) GetDataModeType() DataModeType {
	if x != nil {
		return x.DataModeType
	}
	return DataModeType_DATA_MODE_TYPE_HIGH_UNSPECIFIED
}

func (x *BarChart) GetBarValueDisplay() BarValueDisplay {
	if x != nil {
		return x.BarValueDisplay
	}
	return BarValueDisplay_BAR_VALUE_DISPLAY_UNSPECIFIED
}

func (x *BarChart) GetCustomUnit() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomUnit
	}
	return nil
}

func (x *BarChart) GetDecimal() *wrapperspb.Int32Value {
	if x != nil {
		return x.Decimal
	}
	return nil
}

func (x *BarChart) GetLegend() *Legend {
	if x != nil {
		return x.Legend
	}
	return nil
}

func (x *BarChart) GetCustomLinks() []*CustomLink {
	if x != nil {
		return x.CustomLinks
	}
	return nil
}

type BarChart_Query struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*BarChart_Query_Logs
	//	*BarChart_Query_Spans
	//	*BarChart_Query_Metrics
	//	*BarChart_Query_Dataprime
	Value         isBarChart_Query_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BarChart_Query) Reset() {
	*x = BarChart_Query{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BarChart_Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarChart_Query) ProtoMessage() {}

func (x *BarChart_Query) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarChart_Query.ProtoReflect.Descriptor instead.
func (*BarChart_Query) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BarChart_Query) GetValue() isBarChart_Query_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *BarChart_Query) GetLogs() *BarChart_LogsQuery {
	if x != nil {
		if x, ok := x.Value.(*BarChart_Query_Logs); ok {
			return x.Logs
		}
	}
	return nil
}

func (x *BarChart_Query) GetSpans() *BarChart_SpansQuery {
	if x != nil {
		if x, ok := x.Value.(*BarChart_Query_Spans); ok {
			return x.Spans
		}
	}
	return nil
}

func (x *BarChart_Query) GetMetrics() *BarChart_MetricsQuery {
	if x != nil {
		if x, ok := x.Value.(*BarChart_Query_Metrics); ok {
			return x.Metrics
		}
	}
	return nil
}

func (x *BarChart_Query) GetDataprime() *BarChart_DataprimeQuery {
	if x != nil {
		if x, ok := x.Value.(*BarChart_Query_Dataprime); ok {
			return x.Dataprime
		}
	}
	return nil
}

type isBarChart_Query_Value interface {
	isBarChart_Query_Value()
}

type BarChart_Query_Logs struct {
	Logs *BarChart_LogsQuery `protobuf:"bytes,1,opt,name=logs,proto3,oneof"`
}

type BarChart_Query_Spans struct {
	Spans *BarChart_SpansQuery `protobuf:"bytes,2,opt,name=spans,proto3,oneof"`
}

type BarChart_Query_Metrics struct {
	Metrics *BarChart_MetricsQuery `protobuf:"bytes,3,opt,name=metrics,proto3,oneof"`
}

type BarChart_Query_Dataprime struct {
	Dataprime *BarChart_DataprimeQuery `protobuf:"bytes,4,opt,name=dataprime,proto3,oneof"`
}

func (*BarChart_Query_Logs) isBarChart_Query_Value() {}

func (*BarChart_Query_Spans) isBarChart_Query_Value() {}

func (*BarChart_Query_Metrics) isBarChart_Query_Value() {}

func (*BarChart_Query_Dataprime) isBarChart_Query_Value() {}

type BarChart_StackDefinition struct {
	state             protoimpl.MessageState  `protogen:"open.v1"`
	MaxSlicesPerBar   *wrapperspb.Int32Value  `protobuf:"bytes,1,opt,name=max_slices_per_bar,json=maxSlicesPerBar,proto3" json:"max_slices_per_bar,omitempty"`
	StackNameTemplate *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=stack_name_template,json=stackNameTemplate,proto3" json:"stack_name_template,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BarChart_StackDefinition) Reset() {
	*x = BarChart_StackDefinition{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BarChart_StackDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarChart_StackDefinition) ProtoMessage() {}

func (x *BarChart_StackDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarChart_StackDefinition.ProtoReflect.Descriptor instead.
func (*BarChart_StackDefinition) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescGZIP(), []int{0, 1}
}

func (x *BarChart_StackDefinition) GetMaxSlicesPerBar() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxSlicesPerBar
	}
	return nil
}

func (x *BarChart_StackDefinition) GetStackNameTemplate() *wrapperspb.StringValue {
	if x != nil {
		return x.StackNameTemplate
	}
	return nil
}

type BarChart_XAxis struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*BarChart_XAxis_Value
	//	*BarChart_XAxis_Time
	Type          isBarChart_XAxis_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BarChart_XAxis) Reset() {
	*x = BarChart_XAxis{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BarChart_XAxis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarChart_XAxis) ProtoMessage() {}

func (x *BarChart_XAxis) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarChart_XAxis.ProtoReflect.Descriptor instead.
func (*BarChart_XAxis) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescGZIP(), []int{0, 2}
}

func (x *BarChart_XAxis) GetType() isBarChart_XAxis_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *BarChart_XAxis) GetValue() *BarChart_XAxis_XAxisByValue {
	if x != nil {
		if x, ok := x.Type.(*BarChart_XAxis_Value); ok {
			return x.Value
		}
	}
	return nil
}

func (x *BarChart_XAxis) GetTime() *BarChart_XAxis_XAxisByTime {
	if x != nil {
		if x, ok := x.Type.(*BarChart_XAxis_Time); ok {
			return x.Time
		}
	}
	return nil
}

type isBarChart_XAxis_Type interface {
	isBarChart_XAxis_Type()
}

type BarChart_XAxis_Value struct {
	Value *BarChart_XAxis_XAxisByValue `protobuf:"bytes,1,opt,name=value,proto3,oneof"`
}

type BarChart_XAxis_Time struct {
	Time *BarChart_XAxis_XAxisByTime `protobuf:"bytes,2,opt,name=time,proto3,oneof"`
}

func (*BarChart_XAxis_Value) isBarChart_XAxis_Type() {}

func (*BarChart_XAxis_Time) isBarChart_XAxis_Type() {}

type BarChart_LogsQuery struct {
	state                 protoimpl.MessageState    `protogen:"open.v1"`
	LuceneQuery           *LuceneQuery              `protobuf:"bytes,1,opt,name=lucene_query,json=luceneQuery,proto3" json:"lucene_query,omitempty"`
	Aggregation           *LogsAggregation          `protobuf:"bytes,2,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	Filters               []*Filter_LogsFilter      `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	GroupNames            []*wrapperspb.StringValue `protobuf:"bytes,4,rep,name=group_names,json=groupNames,proto3" json:"group_names,omitempty"`
	StackedGroupName      *wrapperspb.StringValue   `protobuf:"bytes,5,opt,name=stacked_group_name,json=stackedGroupName,proto3" json:"stacked_group_name,omitempty"`
	GroupNamesFields      []*ObservationField       `protobuf:"bytes,6,rep,name=group_names_fields,json=groupNamesFields,proto3" json:"group_names_fields,omitempty"`
	StackedGroupNameField *ObservationField         `protobuf:"bytes,7,opt,name=stacked_group_name_field,json=stackedGroupNameField,proto3" json:"stacked_group_name_field,omitempty"`
	TimeFrame             *TimeFrameSelect          `protobuf:"bytes,8,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *BarChart_LogsQuery) Reset() {
	*x = BarChart_LogsQuery{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BarChart_LogsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarChart_LogsQuery) ProtoMessage() {}

func (x *BarChart_LogsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarChart_LogsQuery.ProtoReflect.Descriptor instead.
func (*BarChart_LogsQuery) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescGZIP(), []int{0, 3}
}

func (x *BarChart_LogsQuery) GetLuceneQuery() *LuceneQuery {
	if x != nil {
		return x.LuceneQuery
	}
	return nil
}

func (x *BarChart_LogsQuery) GetAggregation() *LogsAggregation {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

func (x *BarChart_LogsQuery) GetFilters() []*Filter_LogsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *BarChart_LogsQuery) GetGroupNames() []*wrapperspb.StringValue {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

func (x *BarChart_LogsQuery) GetStackedGroupName() *wrapperspb.StringValue {
	if x != nil {
		return x.StackedGroupName
	}
	return nil
}

func (x *BarChart_LogsQuery) GetGroupNamesFields() []*ObservationField {
	if x != nil {
		return x.GroupNamesFields
	}
	return nil
}

func (x *BarChart_LogsQuery) GetStackedGroupNameField() *ObservationField {
	if x != nil {
		return x.StackedGroupNameField
	}
	return nil
}

func (x *BarChart_LogsQuery) GetTimeFrame() *TimeFrameSelect {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

type BarChart_SpansQuery struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	LuceneQuery           *LuceneQuery           `protobuf:"bytes,1,opt,name=lucene_query,json=luceneQuery,proto3" json:"lucene_query,omitempty"`
	Aggregation           *SpansAggregation      `protobuf:"bytes,2,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	Filters               []*Filter_SpansFilter  `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	GroupNames            []*SpanField           `protobuf:"bytes,4,rep,name=group_names,json=groupNames,proto3" json:"group_names,omitempty"`
	StackedGroupName      *SpanField             `protobuf:"bytes,5,opt,name=stacked_group_name,json=stackedGroupName,proto3" json:"stacked_group_name,omitempty"`
	TimeFrame             *TimeFrameSelect       `protobuf:"bytes,6,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	GroupNamesFields      []*ObservationField    `protobuf:"bytes,7,rep,name=group_names_fields,json=groupNamesFields,proto3" json:"group_names_fields,omitempty"`
	StackedGroupNameField *ObservationField      `protobuf:"bytes,8,opt,name=stacked_group_name_field,json=stackedGroupNameField,proto3" json:"stacked_group_name_field,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *BarChart_SpansQuery) Reset() {
	*x = BarChart_SpansQuery{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BarChart_SpansQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarChart_SpansQuery) ProtoMessage() {}

func (x *BarChart_SpansQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarChart_SpansQuery.ProtoReflect.Descriptor instead.
func (*BarChart_SpansQuery) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescGZIP(), []int{0, 4}
}

func (x *BarChart_SpansQuery) GetLuceneQuery() *LuceneQuery {
	if x != nil {
		return x.LuceneQuery
	}
	return nil
}

func (x *BarChart_SpansQuery) GetAggregation() *SpansAggregation {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

func (x *BarChart_SpansQuery) GetFilters() []*Filter_SpansFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *BarChart_SpansQuery) GetGroupNames() []*SpanField {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

func (x *BarChart_SpansQuery) GetStackedGroupName() *SpanField {
	if x != nil {
		return x.StackedGroupName
	}
	return nil
}

func (x *BarChart_SpansQuery) GetTimeFrame() *TimeFrameSelect {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

func (x *BarChart_SpansQuery) GetGroupNamesFields() []*ObservationField {
	if x != nil {
		return x.GroupNamesFields
	}
	return nil
}

func (x *BarChart_SpansQuery) GetStackedGroupNameField() *ObservationField {
	if x != nil {
		return x.StackedGroupNameField
	}
	return nil
}

type BarChart_MetricsQuery struct {
	state            protoimpl.MessageState    `protogen:"open.v1"`
	PromqlQuery      *PromQlQuery              `protobuf:"bytes,1,opt,name=promql_query,json=promqlQuery,proto3" json:"promql_query,omitempty"`
	Filters          []*Filter_MetricsFilter   `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	GroupNames       []*wrapperspb.StringValue `protobuf:"bytes,3,rep,name=group_names,json=groupNames,proto3" json:"group_names,omitempty"`
	StackedGroupName *wrapperspb.StringValue   `protobuf:"bytes,4,opt,name=stacked_group_name,json=stackedGroupName,proto3" json:"stacked_group_name,omitempty"`
	EditorMode       MetricsQueryEditorMode    `protobuf:"varint,5,opt,name=editor_mode,json=editorMode,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorMode" json:"editor_mode,omitempty"`
	TimeFrame        *TimeFrameSelect          `protobuf:"bytes,6,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	PromqlQueryType  PromQLQueryType           `protobuf:"varint,7,opt,name=promql_query_type,json=promqlQueryType,proto3,enum=com.coralogixapis.dashboards.v1.common.PromQLQueryType" json:"promql_query_type,omitempty"`
	Aggregation      Aggregation               `protobuf:"varint,8,opt,name=aggregation,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.Aggregation" json:"aggregation,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BarChart_MetricsQuery) Reset() {
	*x = BarChart_MetricsQuery{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BarChart_MetricsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarChart_MetricsQuery) ProtoMessage() {}

func (x *BarChart_MetricsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarChart_MetricsQuery.ProtoReflect.Descriptor instead.
func (*BarChart_MetricsQuery) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescGZIP(), []int{0, 5}
}

func (x *BarChart_MetricsQuery) GetPromqlQuery() *PromQlQuery {
	if x != nil {
		return x.PromqlQuery
	}
	return nil
}

func (x *BarChart_MetricsQuery) GetFilters() []*Filter_MetricsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *BarChart_MetricsQuery) GetGroupNames() []*wrapperspb.StringValue {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

func (x *BarChart_MetricsQuery) GetStackedGroupName() *wrapperspb.StringValue {
	if x != nil {
		return x.StackedGroupName
	}
	return nil
}

func (x *BarChart_MetricsQuery) GetEditorMode() MetricsQueryEditorMode {
	if x != nil {
		return x.EditorMode
	}
	return MetricsQueryEditorMode_METRICS_QUERY_EDITOR_MODE_UNSPECIFIED
}

func (x *BarChart_MetricsQuery) GetTimeFrame() *TimeFrameSelect {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

func (x *BarChart_MetricsQuery) GetPromqlQueryType() PromQLQueryType {
	if x != nil {
		return x.PromqlQueryType
	}
	return PromQLQueryType_PROM_QL_QUERY_TYPE_UNSPECIFIED
}

func (x *BarChart_MetricsQuery) GetAggregation() Aggregation {
	if x != nil {
		return x.Aggregation
	}
	return Aggregation_AGGREGATION_UNSPECIFIED
}

type BarChart_DataprimeQuery struct {
	state            protoimpl.MessageState    `protogen:"open.v1"`
	DataprimeQuery   *DataprimeQuery           `protobuf:"bytes,1,opt,name=dataprime_query,json=dataprimeQuery,proto3" json:"dataprime_query,omitempty"`
	Filters          []*Filter_Source          `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	GroupNames       []*wrapperspb.StringValue `protobuf:"bytes,3,rep,name=group_names,json=groupNames,proto3" json:"group_names,omitempty"`
	StackedGroupName *wrapperspb.StringValue   `protobuf:"bytes,4,opt,name=stacked_group_name,json=stackedGroupName,proto3" json:"stacked_group_name,omitempty"`
	TimeFrame        *TimeFrameSelect          `protobuf:"bytes,5,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BarChart_DataprimeQuery) Reset() {
	*x = BarChart_DataprimeQuery{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BarChart_DataprimeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarChart_DataprimeQuery) ProtoMessage() {}

func (x *BarChart_DataprimeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarChart_DataprimeQuery.ProtoReflect.Descriptor instead.
func (*BarChart_DataprimeQuery) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescGZIP(), []int{0, 6}
}

func (x *BarChart_DataprimeQuery) GetDataprimeQuery() *DataprimeQuery {
	if x != nil {
		return x.DataprimeQuery
	}
	return nil
}

func (x *BarChart_DataprimeQuery) GetFilters() []*Filter_Source {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *BarChart_DataprimeQuery) GetGroupNames() []*wrapperspb.StringValue {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

func (x *BarChart_DataprimeQuery) GetStackedGroupName() *wrapperspb.StringValue {
	if x != nil {
		return x.StackedGroupName
	}
	return nil
}

func (x *BarChart_DataprimeQuery) GetTimeFrame() *TimeFrameSelect {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

type BarChart_XAxis_XAxisByValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BarChart_XAxis_XAxisByValue) Reset() {
	*x = BarChart_XAxis_XAxisByValue{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BarChart_XAxis_XAxisByValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarChart_XAxis_XAxisByValue) ProtoMessage() {}

func (x *BarChart_XAxis_XAxisByValue) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarChart_XAxis_XAxisByValue.ProtoReflect.Descriptor instead.
func (*BarChart_XAxis_XAxisByValue) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescGZIP(), []int{0, 2, 0}
}

type BarChart_XAxis_XAxisByTime struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Interval         *durationpb.Duration   `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
	BucketsPresented *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=buckets_presented,json=bucketsPresented,proto3" json:"buckets_presented,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BarChart_XAxis_XAxisByTime) Reset() {
	*x = BarChart_XAxis_XAxisByTime{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BarChart_XAxis_XAxisByTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarChart_XAxis_XAxisByTime) ProtoMessage() {}

func (x *BarChart_XAxis_XAxisByTime) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarChart_XAxis_XAxisByTime.ProtoReflect.Descriptor instead.
func (*BarChart_XAxis_XAxisByTime) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescGZIP(), []int{0, 2, 1}
}

func (x *BarChart_XAxis_XAxisByTime) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *BarChart_XAxis_XAxisByTime) GetBucketsPresented() *wrapperspb.Int32Value {
	if x != nil {
		return x.BucketsPresented
	}
	return nil
}

var File_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto protoreflect.FileDescriptor

const file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDesc = "" +
	"\n" +
	";com/coralogixapis/dashboards/v1/ast/widgets/bar_chart.proto\x12+com.coralogixapis.dashboards.v1.ast.widgets\x1a0com/coralogixapis/dashboards/v1/ast/filter.proto\x1aBcom/coralogixapis/dashboards/v1/ast/widgets/common/colors_by.proto\x1aEcom/coralogixapis/dashboards/v1/ast/widgets/common/custom_links.proto\x1aGcom/coralogixapis/dashboards/v1/ast/widgets/common/data_mode_type.proto\x1a?com/coralogixapis/dashboards/v1/ast/widgets/common/legend.proto\x1aQcom/coralogixapis/dashboards/v1/ast/widgets/common/metrics_aggregation_type.proto\x1aRcom/coralogixapis/dashboards/v1/ast/widgets/common/metrics_query_editor_mode.proto\x1a@com/coralogixapis/dashboards/v1/ast/widgets/common/queries.proto\x1a>com/coralogixapis/dashboards/v1/ast/widgets/common/scale.proto\x1a@com/coralogixapis/dashboards/v1/ast/widgets/common/sort_by.proto\x1a>com/coralogixapis/dashboards/v1/ast/widgets/common/units.proto\x1a=com/coralogixapis/dashboards/v1/common/logs_aggregation.proto\x1a>com/coralogixapis/dashboards/v1/common/observation_field.proto\x1a2com/coralogixapis/dashboards/v1/common/query.proto\x1a7com/coralogixapis/dashboards/v1/common/span_field.proto\x1a>com/coralogixapis/dashboards/v1/common/spans_aggregation.proto\x1a7com/coralogixapis/dashboards/v1/common/time_frame.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xf3&\n" +
	"\bBarChart\x12Q\n" +
	"\x05query\x18\x01 \x01(\v2;.com.coralogixapis.dashboards.v1.ast.widgets.BarChart.QueryR\x05query\x12H\n" +
	"\x12max_bars_per_chart\x18\x02 \x01(\v2\x1b.google.protobuf.Int32ValueR\x0fmaxBarsPerChart\x12L\n" +
	"\x13group_name_template\x18\x03 \x01(\v2\x1c.google.protobuf.StringValueR\x11groupNameTemplate\x12p\n" +
	"\x10stack_definition\x18\x04 \x01(\v2E.com.coralogixapis.dashboards.v1.ast.widgets.BarChart.StackDefinitionR\x0fstackDefinition\x12\\\n" +
	"\n" +
	"scale_type\x18\x05 \x01(\x0e2=.com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleTypeR\tscaleType\x12Y\n" +
	"\tcolors_by\x18\x06 \x01(\v2<.com.coralogixapis.dashboards.v1.ast.widgets.common.ColorsByR\bcolorsBy\x12R\n" +
	"\x06x_axis\x18\a \x01(\v2;.com.coralogixapis.dashboards.v1.ast.widgets.BarChart.XAxisR\x05xAxis\x12L\n" +
	"\x04unit\x18\b \x01(\x0e28.com.coralogixapis.dashboards.v1.ast.widgets.common.UnitR\x04unit\x12W\n" +
	"\asort_by\x18\t \x01(\x0e2>.com.coralogixapis.dashboards.v1.ast.widgets.common.SortByTypeR\x06sortBy\x12?\n" +
	"\fcolor_scheme\x18\n" +
	" \x01(\v2\x1c.google.protobuf.StringValueR\vcolorScheme\x12f\n" +
	"\x0edata_mode_type\x18\v \x01(\x0e2@.com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeTypeR\fdataModeType\x12h\n" +
	"\x11bar_value_display\x18\f \x01(\x0e2<.com.coralogixapis.dashboards.v1.ast.widgets.BarValueDisplayR\x0fbarValueDisplay\x12=\n" +
	"\vcustom_unit\x18\r \x01(\v2\x1c.google.protobuf.StringValueR\n" +
	"customUnit\x125\n" +
	"\adecimal\x18\x0e \x01(\v2\x1b.google.protobuf.Int32ValueR\adecimal\x12R\n" +
	"\x06legend\x18\x0f \x01(\v2:.com.coralogixapis.dashboards.v1.ast.widgets.common.LegendR\x06legend\x12a\n" +
	"\fcustom_links\x18\x10 \x03(\v2>.com.coralogixapis.dashboards.v1.ast.widgets.common.CustomLinkR\vcustomLinks\x1a\x87\x03\n" +
	"\x05Query\x12U\n" +
	"\x04logs\x18\x01 \x01(\v2?.com.coralogixapis.dashboards.v1.ast.widgets.BarChart.LogsQueryH\x00R\x04logs\x12X\n" +
	"\x05spans\x18\x02 \x01(\v2@.com.coralogixapis.dashboards.v1.ast.widgets.BarChart.SpansQueryH\x00R\x05spans\x12^\n" +
	"\ametrics\x18\x03 \x01(\v2B.com.coralogixapis.dashboards.v1.ast.widgets.BarChart.MetricsQueryH\x00R\ametrics\x12d\n" +
	"\tdataprime\x18\x04 \x01(\v2D.com.coralogixapis.dashboards.v1.ast.widgets.BarChart.DataprimeQueryH\x00R\tdataprimeB\a\n" +
	"\x05value\x1a\xa9\x01\n" +
	"\x0fStackDefinition\x12H\n" +
	"\x12max_slices_per_bar\x18\x01 \x01(\v2\x1b.google.protobuf.Int32ValueR\x0fmaxSlicesPerBar\x12L\n" +
	"\x13stack_name_template\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\x11stackNameTemplate\x1a\xf1\x02\n" +
	"\x05XAxis\x12`\n" +
	"\x05value\x18\x01 \x01(\v2H.com.coralogixapis.dashboards.v1.ast.widgets.BarChart.XAxis.XAxisByValueH\x00R\x05value\x12]\n" +
	"\x04time\x18\x02 \x01(\v2G.com.coralogixapis.dashboards.v1.ast.widgets.BarChart.XAxis.XAxisByTimeH\x00R\x04time\x1a\x0e\n" +
	"\fXAxisByValue\x1a\x8e\x01\n" +
	"\vXAxisByTime\x125\n" +
	"\binterval\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\binterval\x12H\n" +
	"\x11buckets_presented\x18\x02 \x01(\v2\x1b.google.protobuf.Int32ValueR\x10bucketsPresentedB\x06\n" +
	"\x04type\x1a\xda\x05\n" +
	"\tLogsQuery\x12b\n" +
	"\flucene_query\x18\x01 \x01(\v2?.com.coralogixapis.dashboards.v1.ast.widgets.common.LuceneQueryR\vluceneQuery\x12Y\n" +
	"\vaggregation\x18\x02 \x01(\v27.com.coralogixapis.dashboards.v1.common.LogsAggregationR\vaggregation\x12P\n" +
	"\afilters\x18\x03 \x03(\v26.com.coralogixapis.dashboards.v1.ast.Filter.LogsFilterR\afilters\x12=\n" +
	"\vgroup_names\x18\x04 \x03(\v2\x1c.google.protobuf.StringValueR\n" +
	"groupNames\x12J\n" +
	"\x12stacked_group_name\x18\x05 \x01(\v2\x1c.google.protobuf.StringValueR\x10stackedGroupName\x12f\n" +
	"\x12group_names_fields\x18\x06 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x10groupNamesFields\x12q\n" +
	"\x18stacked_group_name_field\x18\a \x01(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x15stackedGroupNameField\x12V\n" +
	"\n" +
	"time_frame\x18\b \x01(\v27.com.coralogixapis.dashboards.v1.common.TimeFrameSelectR\ttimeFrame\x1a\x87\x06\n" +
	"\n" +
	"SpansQuery\x12b\n" +
	"\flucene_query\x18\x01 \x01(\v2?.com.coralogixapis.dashboards.v1.ast.widgets.common.LuceneQueryR\vluceneQuery\x12Z\n" +
	"\vaggregation\x18\x02 \x01(\v28.com.coralogixapis.dashboards.v1.common.SpansAggregationR\vaggregation\x12Q\n" +
	"\afilters\x18\x03 \x03(\v27.com.coralogixapis.dashboards.v1.ast.Filter.SpansFilterR\afilters\x12R\n" +
	"\vgroup_names\x18\x04 \x03(\v21.com.coralogixapis.dashboards.v1.common.SpanFieldR\n" +
	"groupNames\x12_\n" +
	"\x12stacked_group_name\x18\x05 \x01(\v21.com.coralogixapis.dashboards.v1.common.SpanFieldR\x10stackedGroupName\x12V\n" +
	"\n" +
	"time_frame\x18\x06 \x01(\v27.com.coralogixapis.dashboards.v1.common.TimeFrameSelectR\ttimeFrame\x12f\n" +
	"\x12group_names_fields\x18\a \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x10groupNamesFields\x12q\n" +
	"\x18stacked_group_name_field\x18\b \x01(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x15stackedGroupNameField\x1a\xdf\x05\n" +
	"\fMetricsQuery\x12b\n" +
	"\fpromql_query\x18\x01 \x01(\v2?.com.coralogixapis.dashboards.v1.ast.widgets.common.PromQlQueryR\vpromqlQuery\x12S\n" +
	"\afilters\x18\x02 \x03(\v29.com.coralogixapis.dashboards.v1.ast.Filter.MetricsFilterR\afilters\x12=\n" +
	"\vgroup_names\x18\x03 \x03(\v2\x1c.google.protobuf.StringValueR\n" +
	"groupNames\x12J\n" +
	"\x12stacked_group_name\x18\x04 \x01(\v2\x1c.google.protobuf.StringValueR\x10stackedGroupName\x12k\n" +
	"\veditor_mode\x18\x05 \x01(\x0e2J.com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorModeR\n" +
	"editorMode\x12V\n" +
	"\n" +
	"time_frame\x18\x06 \x01(\v27.com.coralogixapis.dashboards.v1.common.TimeFrameSelectR\ttimeFrame\x12c\n" +
	"\x11promql_query_type\x18\a \x01(\x0e27.com.coralogixapis.dashboards.v1.common.PromQLQueryTypeR\x0fpromqlQueryType\x12a\n" +
	"\vaggregation\x18\b \x01(\x0e2?.com.coralogixapis.dashboards.v1.ast.widgets.common.AggregationR\vaggregation\x1a\xa2\x03\n" +
	"\x0eDataprimeQuery\x12_\n" +
	"\x0fdataprime_query\x18\x01 \x01(\v26.com.coralogixapis.dashboards.v1.common.DataprimeQueryR\x0edataprimeQuery\x12L\n" +
	"\afilters\x18\x02 \x03(\v22.com.coralogixapis.dashboards.v1.ast.Filter.SourceR\afilters\x12=\n" +
	"\vgroup_names\x18\x03 \x03(\v2\x1c.google.protobuf.StringValueR\n" +
	"groupNames\x12J\n" +
	"\x12stacked_group_name\x18\x04 \x01(\v2\x1c.google.protobuf.StringValueR\x10stackedGroupName\x12V\n" +
	"\n" +
	"time_frame\x18\x05 \x01(\v27.com.coralogixapis.dashboards.v1.common.TimeFrameSelectR\ttimeFrame*\x89\x01\n" +
	"\x0fBarValueDisplay\x12!\n" +
	"\x1dBAR_VALUE_DISPLAY_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15BAR_VALUE_DISPLAY_TOP\x10\x01\x12\x1c\n" +
	"\x18BAR_VALUE_DISPLAY_INSIDE\x10\x02\x12\x1a\n" +
	"\x16BAR_VALUE_DISPLAY_BOTH\x10\x03b\x06proto3"

var (
	file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescOnce sync.Once
	file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescData []byte
)

func file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDesc), len(file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDesc)))
	})
	return file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDescData
}

var file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_goTypes = []any{
	(BarValueDisplay)(0),                // 0: com.coralogixapis.dashboards.v1.ast.widgets.BarValueDisplay
	(*BarChart)(nil),                    // 1: com.coralogixapis.dashboards.v1.ast.widgets.BarChart
	(*BarChart_Query)(nil),              // 2: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.Query
	(*BarChart_StackDefinition)(nil),    // 3: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.StackDefinition
	(*BarChart_XAxis)(nil),              // 4: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.XAxis
	(*BarChart_LogsQuery)(nil),          // 5: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.LogsQuery
	(*BarChart_SpansQuery)(nil),         // 6: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.SpansQuery
	(*BarChart_MetricsQuery)(nil),       // 7: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.MetricsQuery
	(*BarChart_DataprimeQuery)(nil),     // 8: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.DataprimeQuery
	(*BarChart_XAxis_XAxisByValue)(nil), // 9: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.XAxis.XAxisByValue
	(*BarChart_XAxis_XAxisByTime)(nil),  // 10: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.XAxis.XAxisByTime
	(*wrapperspb.Int32Value)(nil),       // 11: google.protobuf.Int32Value
	(*wrapperspb.StringValue)(nil),      // 12: google.protobuf.StringValue
	(ScaleType)(0),                      // 13: com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType
	(*ColorsBy)(nil),                    // 14: com.coralogixapis.dashboards.v1.ast.widgets.common.ColorsBy
	(Unit)(0),                           // 15: com.coralogixapis.dashboards.v1.ast.widgets.common.Unit
	(SortByType)(0),                     // 16: com.coralogixapis.dashboards.v1.ast.widgets.common.SortByType
	(DataModeType)(0),                   // 17: com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType
	(*Legend)(nil),                      // 18: com.coralogixapis.dashboards.v1.ast.widgets.common.Legend
	(*CustomLink)(nil),                  // 19: com.coralogixapis.dashboards.v1.ast.widgets.common.CustomLink
	(*LuceneQuery)(nil),                 // 20: com.coralogixapis.dashboards.v1.ast.widgets.common.LuceneQuery
	(*LogsAggregation)(nil),             // 21: com.coralogixapis.dashboards.v1.common.LogsAggregation
	(*Filter_LogsFilter)(nil),           // 22: com.coralogixapis.dashboards.v1.ast.Filter.LogsFilter
	(*ObservationField)(nil),            // 23: com.coralogixapis.dashboards.v1.common.ObservationField
	(*TimeFrameSelect)(nil),             // 24: com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	(*SpansAggregation)(nil),            // 25: com.coralogixapis.dashboards.v1.common.SpansAggregation
	(*Filter_SpansFilter)(nil),          // 26: com.coralogixapis.dashboards.v1.ast.Filter.SpansFilter
	(*SpanField)(nil),                   // 27: com.coralogixapis.dashboards.v1.common.SpanField
	(*PromQlQuery)(nil),                 // 28: com.coralogixapis.dashboards.v1.ast.widgets.common.PromQlQuery
	(*Filter_MetricsFilter)(nil),        // 29: com.coralogixapis.dashboards.v1.ast.Filter.MetricsFilter
	(MetricsQueryEditorMode)(0),         // 30: com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorMode
	(PromQLQueryType)(0),                // 31: com.coralogixapis.dashboards.v1.common.PromQLQueryType
	(Aggregation)(0),                    // 32: com.coralogixapis.dashboards.v1.ast.widgets.common.Aggregation
	(*DataprimeQuery)(nil),              // 33: com.coralogixapis.dashboards.v1.common.DataprimeQuery
	(*Filter_Source)(nil),               // 34: com.coralogixapis.dashboards.v1.ast.Filter.Source
	(*durationpb.Duration)(nil),         // 35: google.protobuf.Duration
}
var file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_depIdxs = []int32{
	2,  // 0: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.query:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.BarChart.Query
	11, // 1: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.max_bars_per_chart:type_name -> google.protobuf.Int32Value
	12, // 2: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.group_name_template:type_name -> google.protobuf.StringValue
	3,  // 3: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.stack_definition:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.BarChart.StackDefinition
	13, // 4: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.scale_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType
	14, // 5: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.colors_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ColorsBy
	4,  // 6: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.x_axis:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.BarChart.XAxis
	15, // 7: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.unit:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Unit
	16, // 8: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.sort_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.SortByType
	12, // 9: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.color_scheme:type_name -> google.protobuf.StringValue
	17, // 10: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.data_mode_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType
	0,  // 11: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.bar_value_display:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.BarValueDisplay
	12, // 12: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.custom_unit:type_name -> google.protobuf.StringValue
	11, // 13: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.decimal:type_name -> google.protobuf.Int32Value
	18, // 14: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.legend:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Legend
	19, // 15: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.custom_links:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.CustomLink
	5,  // 16: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.Query.logs:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.BarChart.LogsQuery
	6,  // 17: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.Query.spans:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.BarChart.SpansQuery
	7,  // 18: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.Query.metrics:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.BarChart.MetricsQuery
	8,  // 19: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.Query.dataprime:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.BarChart.DataprimeQuery
	11, // 20: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.StackDefinition.max_slices_per_bar:type_name -> google.protobuf.Int32Value
	12, // 21: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.StackDefinition.stack_name_template:type_name -> google.protobuf.StringValue
	9,  // 22: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.XAxis.value:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.BarChart.XAxis.XAxisByValue
	10, // 23: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.XAxis.time:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.BarChart.XAxis.XAxisByTime
	20, // 24: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.LogsQuery.lucene_query:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.LuceneQuery
	21, // 25: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.LogsQuery.aggregation:type_name -> com.coralogixapis.dashboards.v1.common.LogsAggregation
	22, // 26: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.LogsQuery.filters:type_name -> com.coralogixapis.dashboards.v1.ast.Filter.LogsFilter
	12, // 27: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.LogsQuery.group_names:type_name -> google.protobuf.StringValue
	12, // 28: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.LogsQuery.stacked_group_name:type_name -> google.protobuf.StringValue
	23, // 29: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.LogsQuery.group_names_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	23, // 30: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.LogsQuery.stacked_group_name_field:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	24, // 31: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.LogsQuery.time_frame:type_name -> com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	20, // 32: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.SpansQuery.lucene_query:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.LuceneQuery
	25, // 33: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.SpansQuery.aggregation:type_name -> com.coralogixapis.dashboards.v1.common.SpansAggregation
	26, // 34: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.SpansQuery.filters:type_name -> com.coralogixapis.dashboards.v1.ast.Filter.SpansFilter
	27, // 35: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.SpansQuery.group_names:type_name -> com.coralogixapis.dashboards.v1.common.SpanField
	27, // 36: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.SpansQuery.stacked_group_name:type_name -> com.coralogixapis.dashboards.v1.common.SpanField
	24, // 37: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.SpansQuery.time_frame:type_name -> com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	23, // 38: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.SpansQuery.group_names_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	23, // 39: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.SpansQuery.stacked_group_name_field:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	28, // 40: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.MetricsQuery.promql_query:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.PromQlQuery
	29, // 41: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.MetricsQuery.filters:type_name -> com.coralogixapis.dashboards.v1.ast.Filter.MetricsFilter
	12, // 42: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.MetricsQuery.group_names:type_name -> google.protobuf.StringValue
	12, // 43: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.MetricsQuery.stacked_group_name:type_name -> google.protobuf.StringValue
	30, // 44: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.MetricsQuery.editor_mode:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorMode
	24, // 45: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.MetricsQuery.time_frame:type_name -> com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	31, // 46: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.MetricsQuery.promql_query_type:type_name -> com.coralogixapis.dashboards.v1.common.PromQLQueryType
	32, // 47: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.MetricsQuery.aggregation:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Aggregation
	33, // 48: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.DataprimeQuery.dataprime_query:type_name -> com.coralogixapis.dashboards.v1.common.DataprimeQuery
	34, // 49: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.DataprimeQuery.filters:type_name -> com.coralogixapis.dashboards.v1.ast.Filter.Source
	12, // 50: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.DataprimeQuery.group_names:type_name -> google.protobuf.StringValue
	12, // 51: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.DataprimeQuery.stacked_group_name:type_name -> google.protobuf.StringValue
	24, // 52: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.DataprimeQuery.time_frame:type_name -> com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	35, // 53: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.XAxis.XAxisByTime.interval:type_name -> google.protobuf.Duration
	11, // 54: com.coralogixapis.dashboards.v1.ast.widgets.BarChart.XAxis.XAxisByTime.buckets_presented:type_name -> google.protobuf.Int32Value
	55, // [55:55] is the sub-list for method output_type
	55, // [55:55] is the sub-list for method input_type
	55, // [55:55] is the sub-list for extension type_name
	55, // [55:55] is the sub-list for extension extendee
	0,  // [0:55] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_init() }
func file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_init() {
	if File_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto != nil {
		return
	}
	file_com_coralogixapis_dashboards_v1_ast_filter_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_colors_by_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_custom_links_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_data_mode_type_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_legend_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_metrics_aggregation_type_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_metrics_query_editor_mode_proto_init()
	//file_com_coralogixapis_dashboards_v1_ast_widgets_common_queries_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_scale_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_sort_by_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_units_proto_init()
	file_com_coralogixapis_dashboards_v1_common_logs_aggregation_proto_init()
	file_com_coralogixapis_dashboards_v1_common_observation_field_proto_init()
	file_com_coralogixapis_dashboards_v1_common_query_proto_init()
	file_com_coralogixapis_dashboards_v1_common_span_field_proto_init()
	file_com_coralogixapis_dashboards_v1_common_spans_aggregation_proto_init()
	file_com_coralogixapis_dashboards_v1_common_time_frame_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[1].OneofWrappers = []any{
		(*BarChart_Query_Logs)(nil),
		(*BarChart_Query_Spans)(nil),
		(*BarChart_Query_Metrics)(nil),
		(*BarChart_Query_Dataprime)(nil),
	}
	file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes[3].OneofWrappers = []any{
		(*BarChart_XAxis_Value)(nil),
		(*BarChart_XAxis_Time)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDesc), len(file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_depIdxs,
		EnumInfos:         file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_enumTypes,
		MessageInfos:      file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto = out.File
	file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_goTypes = nil
	file_com_coralogixapis_dashboards_v1_ast_widgets_bar_chart_proto_depIdxs = nil
}
