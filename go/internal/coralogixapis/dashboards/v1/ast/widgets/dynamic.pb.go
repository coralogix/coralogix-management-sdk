// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: com/coralogixapis/dashboards/v1/ast/widgets/dynamic.proto

package widgets

import (
	v1 "github.com/coralogix/coralogix-management-sdk/go/internal/coralogixapis/dashboards/v1"
	filters "github.com/coralogix/coralogix-management-sdk/go/internal/coralogixapis/dashboards/v1/ast/filters"
	common1 "github.com/coralogix/coralogix-management-sdk/go/internal/coralogixapis/dashboards/v1/ast/widgets/common"
	common "github.com/coralogix/coralogix-management-sdk/go/internal/coralogixapis/dashboards/v1/common"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv3/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Dynamic_Interpretation int32

const (
	Dynamic_INTERPRETATION_UNSPECIFIED                          Dynamic_Interpretation = 0
	Dynamic_INTERPRETATION_RAW_DATA_TABLE                       Dynamic_Interpretation = 1
	Dynamic_INTERPRETATION_TREND_OVER_TIME_LINE                 Dynamic_Interpretation = 2
	Dynamic_INTERPRETATION_SINGLE_VALUE_KPI                     Dynamic_Interpretation = 3
	Dynamic_INTERPRETATION_MULTI_VALUE_KPI                      Dynamic_Interpretation = 4
	Dynamic_INTERPRETATION_CATEGORICAL_ANALYSIS_VERTICAL_BARS   Dynamic_Interpretation = 5
	Dynamic_INTERPRETATION_SINGLE_VALUE_KPI_STAT                Dynamic_Interpretation = 6
	Dynamic_INTERPRETATION_SINGLE_VALUE_KPI_GAUGE               Dynamic_Interpretation = 7
	Dynamic_INTERPRETATION_MULTI_VALUE_KPI_STAT                 Dynamic_Interpretation = 8
	Dynamic_INTERPRETATION_MULTI_VALUE_KPI_GAUGE                Dynamic_Interpretation = 9
	Dynamic_INTERPRETATION_MULTI_VALUE_KPI_HEXAGON_BINS         Dynamic_Interpretation = 10
	Dynamic_INTERPRETATION_CATEGORICAL_ANALYSIS_PIE_CHART       Dynamic_Interpretation = 11
	Dynamic_INTERPRETATION_CATEGORICAL_ANALYSIS_HORIZONTAL_BARS Dynamic_Interpretation = 12
)

// Enum value maps for Dynamic_Interpretation.
var (
	Dynamic_Interpretation_name = map[int32]string{
		0:  "INTERPRETATION_UNSPECIFIED",
		1:  "INTERPRETATION_RAW_DATA_TABLE",
		2:  "INTERPRETATION_TREND_OVER_TIME_LINE",
		3:  "INTERPRETATION_SINGLE_VALUE_KPI",
		4:  "INTERPRETATION_MULTI_VALUE_KPI",
		5:  "INTERPRETATION_CATEGORICAL_ANALYSIS_VERTICAL_BARS",
		6:  "INTERPRETATION_SINGLE_VALUE_KPI_STAT",
		7:  "INTERPRETATION_SINGLE_VALUE_KPI_GAUGE",
		8:  "INTERPRETATION_MULTI_VALUE_KPI_STAT",
		9:  "INTERPRETATION_MULTI_VALUE_KPI_GAUGE",
		10: "INTERPRETATION_MULTI_VALUE_KPI_HEXAGON_BINS",
		11: "INTERPRETATION_CATEGORICAL_ANALYSIS_PIE_CHART",
		12: "INTERPRETATION_CATEGORICAL_ANALYSIS_HORIZONTAL_BARS",
	}
	Dynamic_Interpretation_value = map[string]int32{
		"INTERPRETATION_UNSPECIFIED":                          0,
		"INTERPRETATION_RAW_DATA_TABLE":                       1,
		"INTERPRETATION_TREND_OVER_TIME_LINE":                 2,
		"INTERPRETATION_SINGLE_VALUE_KPI":                     3,
		"INTERPRETATION_MULTI_VALUE_KPI":                      4,
		"INTERPRETATION_CATEGORICAL_ANALYSIS_VERTICAL_BARS":   5,
		"INTERPRETATION_SINGLE_VALUE_KPI_STAT":                6,
		"INTERPRETATION_SINGLE_VALUE_KPI_GAUGE":               7,
		"INTERPRETATION_MULTI_VALUE_KPI_STAT":                 8,
		"INTERPRETATION_MULTI_VALUE_KPI_GAUGE":                9,
		"INTERPRETATION_MULTI_VALUE_KPI_HEXAGON_BINS":         10,
		"INTERPRETATION_CATEGORICAL_ANALYSIS_PIE_CHART":       11,
		"INTERPRETATION_CATEGORICAL_ANALYSIS_HORIZONTAL_BARS": 12,
	}
)

func (x Dynamic_Interpretation) Enum() *Dynamic_Interpretation {
	p := new(Dynamic_Interpretation)
	*p = x
	return p
}

func (x Dynamic_Interpretation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Dynamic_Interpretation) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes[0].Descriptor()
}

func (Dynamic_Interpretation) Type() protoreflect.EnumType {
	return &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes[0]
}

func (x Dynamic_Interpretation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Dynamic_Interpretation.Descriptor instead.
func (Dynamic_Interpretation) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 0}
}

type Dynamic_Visualization_HeatmapColorPreset int32

const (
	Dynamic_Visualization_HEATMAP_COLOR_PRESET_UNSPECIFIED        Dynamic_Visualization_HeatmapColorPreset = 0
	Dynamic_Visualization_HEATMAP_COLOR_PRESET_BLUE               Dynamic_Visualization_HeatmapColorPreset = 1
	Dynamic_Visualization_HEATMAP_COLOR_PRESET_GREEN              Dynamic_Visualization_HeatmapColorPreset = 2
	Dynamic_Visualization_HEATMAP_COLOR_PRESET_RED                Dynamic_Visualization_HeatmapColorPreset = 3
	Dynamic_Visualization_HEATMAP_COLOR_PRESET_THRESHOLD          Dynamic_Visualization_HeatmapColorPreset = 4
	Dynamic_Visualization_HEATMAP_COLOR_PRESET_BLUE_REVERSED      Dynamic_Visualization_HeatmapColorPreset = 5
	Dynamic_Visualization_HEATMAP_COLOR_PRESET_GREEN_REVERSED     Dynamic_Visualization_HeatmapColorPreset = 6
	Dynamic_Visualization_HEATMAP_COLOR_PRESET_RED_REVERSED       Dynamic_Visualization_HeatmapColorPreset = 7
	Dynamic_Visualization_HEATMAP_COLOR_PRESET_THRESHOLD_REVERSED Dynamic_Visualization_HeatmapColorPreset = 8
)

// Enum value maps for Dynamic_Visualization_HeatmapColorPreset.
var (
	Dynamic_Visualization_HeatmapColorPreset_name = map[int32]string{
		0: "HEATMAP_COLOR_PRESET_UNSPECIFIED",
		1: "HEATMAP_COLOR_PRESET_BLUE",
		2: "HEATMAP_COLOR_PRESET_GREEN",
		3: "HEATMAP_COLOR_PRESET_RED",
		4: "HEATMAP_COLOR_PRESET_THRESHOLD",
		5: "HEATMAP_COLOR_PRESET_BLUE_REVERSED",
		6: "HEATMAP_COLOR_PRESET_GREEN_REVERSED",
		7: "HEATMAP_COLOR_PRESET_RED_REVERSED",
		8: "HEATMAP_COLOR_PRESET_THRESHOLD_REVERSED",
	}
	Dynamic_Visualization_HeatmapColorPreset_value = map[string]int32{
		"HEATMAP_COLOR_PRESET_UNSPECIFIED":        0,
		"HEATMAP_COLOR_PRESET_BLUE":               1,
		"HEATMAP_COLOR_PRESET_GREEN":              2,
		"HEATMAP_COLOR_PRESET_RED":                3,
		"HEATMAP_COLOR_PRESET_THRESHOLD":          4,
		"HEATMAP_COLOR_PRESET_BLUE_REVERSED":      5,
		"HEATMAP_COLOR_PRESET_GREEN_REVERSED":     6,
		"HEATMAP_COLOR_PRESET_RED_REVERSED":       7,
		"HEATMAP_COLOR_PRESET_THRESHOLD_REVERSED": 8,
	}
)

func (x Dynamic_Visualization_HeatmapColorPreset) Enum() *Dynamic_Visualization_HeatmapColorPreset {
	p := new(Dynamic_Visualization_HeatmapColorPreset)
	*p = x
	return p
}

func (x Dynamic_Visualization_HeatmapColorPreset) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Dynamic_Visualization_HeatmapColorPreset) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes[1].Descriptor()
}

func (Dynamic_Visualization_HeatmapColorPreset) Type() protoreflect.EnumType {
	return &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes[1]
}

func (x Dynamic_Visualization_HeatmapColorPreset) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Dynamic_Visualization_HeatmapColorPreset.Descriptor instead.
func (Dynamic_Visualization_HeatmapColorPreset) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 0}
}

type Dynamic_Visualization_BarValueDisplay int32

const (
	Dynamic_Visualization_BAR_VALUE_DISPLAY_UNSPECIFIED Dynamic_Visualization_BarValueDisplay = 0
	Dynamic_Visualization_BAR_VALUE_DISPLAY_TOP         Dynamic_Visualization_BarValueDisplay = 1
	Dynamic_Visualization_BAR_VALUE_DISPLAY_INSIDE      Dynamic_Visualization_BarValueDisplay = 2
	Dynamic_Visualization_BAR_VALUE_DISPLAY_BOTH        Dynamic_Visualization_BarValueDisplay = 3
)

// Enum value maps for Dynamic_Visualization_BarValueDisplay.
var (
	Dynamic_Visualization_BarValueDisplay_name = map[int32]string{
		0: "BAR_VALUE_DISPLAY_UNSPECIFIED",
		1: "BAR_VALUE_DISPLAY_TOP",
		2: "BAR_VALUE_DISPLAY_INSIDE",
		3: "BAR_VALUE_DISPLAY_BOTH",
	}
	Dynamic_Visualization_BarValueDisplay_value = map[string]int32{
		"BAR_VALUE_DISPLAY_UNSPECIFIED": 0,
		"BAR_VALUE_DISPLAY_TOP":         1,
		"BAR_VALUE_DISPLAY_INSIDE":      2,
		"BAR_VALUE_DISPLAY_BOTH":        3,
	}
)

func (x Dynamic_Visualization_BarValueDisplay) Enum() *Dynamic_Visualization_BarValueDisplay {
	p := new(Dynamic_Visualization_BarValueDisplay)
	*p = x
	return p
}

func (x Dynamic_Visualization_BarValueDisplay) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Dynamic_Visualization_BarValueDisplay) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes[2].Descriptor()
}

func (Dynamic_Visualization_BarValueDisplay) Type() protoreflect.EnumType {
	return &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes[2]
}

func (x Dynamic_Visualization_BarValueDisplay) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Dynamic_Visualization_BarValueDisplay.Descriptor instead.
func (Dynamic_Visualization_BarValueDisplay) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 1}
}

type Dynamic_Visualization_Table_FieldDataType int32

const (
	Dynamic_Visualization_Table_FIELD_DATA_TYPE_UNSPECIFIED Dynamic_Visualization_Table_FieldDataType = 0
	Dynamic_Visualization_Table_FIELD_DATA_TYPE_NUMBER      Dynamic_Visualization_Table_FieldDataType = 1
	Dynamic_Visualization_Table_FIELD_DATA_TYPE_STRING      Dynamic_Visualization_Table_FieldDataType = 2
	Dynamic_Visualization_Table_FIELD_DATA_TYPE_BOOLEAN     Dynamic_Visualization_Table_FieldDataType = 3
	Dynamic_Visualization_Table_FIELD_DATA_TYPE_TIMESTAMP   Dynamic_Visualization_Table_FieldDataType = 4
	Dynamic_Visualization_Table_FIELD_DATA_TYPE_OBJECT      Dynamic_Visualization_Table_FieldDataType = 5
	Dynamic_Visualization_Table_FIELD_DATA_TYPE_ARRAY       Dynamic_Visualization_Table_FieldDataType = 6
	Dynamic_Visualization_Table_FIELD_DATA_TYPE_REGEX       Dynamic_Visualization_Table_FieldDataType = 7
	Dynamic_Visualization_Table_FIELD_DATA_TYPE_UNION       Dynamic_Visualization_Table_FieldDataType = 8
	Dynamic_Visualization_Table_FIELD_DATA_TYPE_ENUM        Dynamic_Visualization_Table_FieldDataType = 9
)

// Enum value maps for Dynamic_Visualization_Table_FieldDataType.
var (
	Dynamic_Visualization_Table_FieldDataType_name = map[int32]string{
		0: "FIELD_DATA_TYPE_UNSPECIFIED",
		1: "FIELD_DATA_TYPE_NUMBER",
		2: "FIELD_DATA_TYPE_STRING",
		3: "FIELD_DATA_TYPE_BOOLEAN",
		4: "FIELD_DATA_TYPE_TIMESTAMP",
		5: "FIELD_DATA_TYPE_OBJECT",
		6: "FIELD_DATA_TYPE_ARRAY",
		7: "FIELD_DATA_TYPE_REGEX",
		8: "FIELD_DATA_TYPE_UNION",
		9: "FIELD_DATA_TYPE_ENUM",
	}
	Dynamic_Visualization_Table_FieldDataType_value = map[string]int32{
		"FIELD_DATA_TYPE_UNSPECIFIED": 0,
		"FIELD_DATA_TYPE_NUMBER":      1,
		"FIELD_DATA_TYPE_STRING":      2,
		"FIELD_DATA_TYPE_BOOLEAN":     3,
		"FIELD_DATA_TYPE_TIMESTAMP":   4,
		"FIELD_DATA_TYPE_OBJECT":      5,
		"FIELD_DATA_TYPE_ARRAY":       6,
		"FIELD_DATA_TYPE_REGEX":       7,
		"FIELD_DATA_TYPE_UNION":       8,
		"FIELD_DATA_TYPE_ENUM":        9,
	}
)

func (x Dynamic_Visualization_Table_FieldDataType) Enum() *Dynamic_Visualization_Table_FieldDataType {
	p := new(Dynamic_Visualization_Table_FieldDataType)
	*p = x
	return p
}

func (x Dynamic_Visualization_Table_FieldDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Dynamic_Visualization_Table_FieldDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes[3].Descriptor()
}

func (Dynamic_Visualization_Table_FieldDataType) Type() protoreflect.EnumType {
	return &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes[3]
}

func (x Dynamic_Visualization_Table_FieldDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Dynamic_Visualization_Table_FieldDataType.Descriptor instead.
func (Dynamic_Visualization_Table_FieldDataType) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

type Dynamic_Visualization_TimeSeriesLines_StackedLine int32

const (
	Dynamic_Visualization_TimeSeriesLines_STACKED_LINE_UNSPECIFIED Dynamic_Visualization_TimeSeriesLines_StackedLine = 0
	Dynamic_Visualization_TimeSeriesLines_STACKED_LINE_ABSOLUTE    Dynamic_Visualization_TimeSeriesLines_StackedLine = 1
	Dynamic_Visualization_TimeSeriesLines_STACKED_LINE_RELATIVE    Dynamic_Visualization_TimeSeriesLines_StackedLine = 2
)

// Enum value maps for Dynamic_Visualization_TimeSeriesLines_StackedLine.
var (
	Dynamic_Visualization_TimeSeriesLines_StackedLine_name = map[int32]string{
		0: "STACKED_LINE_UNSPECIFIED",
		1: "STACKED_LINE_ABSOLUTE",
		2: "STACKED_LINE_RELATIVE",
	}
	Dynamic_Visualization_TimeSeriesLines_StackedLine_value = map[string]int32{
		"STACKED_LINE_UNSPECIFIED": 0,
		"STACKED_LINE_ABSOLUTE":    1,
		"STACKED_LINE_RELATIVE":    2,
	}
)

func (x Dynamic_Visualization_TimeSeriesLines_StackedLine) Enum() *Dynamic_Visualization_TimeSeriesLines_StackedLine {
	p := new(Dynamic_Visualization_TimeSeriesLines_StackedLine)
	*p = x
	return p
}

func (x Dynamic_Visualization_TimeSeriesLines_StackedLine) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Dynamic_Visualization_TimeSeriesLines_StackedLine) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes[4].Descriptor()
}

func (Dynamic_Visualization_TimeSeriesLines_StackedLine) Type() protoreflect.EnumType {
	return &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes[4]
}

func (x Dynamic_Visualization_TimeSeriesLines_StackedLine) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Dynamic_Visualization_TimeSeriesLines_StackedLine.Descriptor instead.
func (Dynamic_Visualization_TimeSeriesLines_StackedLine) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 1, 0}
}

type Dynamic_Visualization_PieChart_LabelSource int32

const (
	Dynamic_Visualization_PieChart_LABEL_SOURCE_UNSPECIFIED Dynamic_Visualization_PieChart_LabelSource = 0
	Dynamic_Visualization_PieChart_LABEL_SOURCE_INNER       Dynamic_Visualization_PieChart_LabelSource = 1
	Dynamic_Visualization_PieChart_LABEL_SOURCE_STACK       Dynamic_Visualization_PieChart_LabelSource = 2
)

// Enum value maps for Dynamic_Visualization_PieChart_LabelSource.
var (
	Dynamic_Visualization_PieChart_LabelSource_name = map[int32]string{
		0: "LABEL_SOURCE_UNSPECIFIED",
		1: "LABEL_SOURCE_INNER",
		2: "LABEL_SOURCE_STACK",
	}
	Dynamic_Visualization_PieChart_LabelSource_value = map[string]int32{
		"LABEL_SOURCE_UNSPECIFIED": 0,
		"LABEL_SOURCE_INNER":       1,
		"LABEL_SOURCE_STACK":       2,
	}
)

func (x Dynamic_Visualization_PieChart_LabelSource) Enum() *Dynamic_Visualization_PieChart_LabelSource {
	p := new(Dynamic_Visualization_PieChart_LabelSource)
	*p = x
	return p
}

func (x Dynamic_Visualization_PieChart_LabelSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Dynamic_Visualization_PieChart_LabelSource) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes[5].Descriptor()
}

func (Dynamic_Visualization_PieChart_LabelSource) Type() protoreflect.EnumType {
	return &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes[5]
}

func (x Dynamic_Visualization_PieChart_LabelSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Dynamic_Visualization_PieChart_LabelSource.Descriptor instead.
func (Dynamic_Visualization_PieChart_LabelSource) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 6, 0}
}

type Dynamic_Visualization_HorizontalBars_YAxisViewBy int32

const (
	Dynamic_Visualization_HorizontalBars_Y_AXIS_VIEW_BY_UNSPECIFIED Dynamic_Visualization_HorizontalBars_YAxisViewBy = 0
	Dynamic_Visualization_HorizontalBars_Y_AXIS_VIEW_BY_CATEGORY    Dynamic_Visualization_HorizontalBars_YAxisViewBy = 1
	Dynamic_Visualization_HorizontalBars_Y_AXIS_VIEW_BY_VALUE       Dynamic_Visualization_HorizontalBars_YAxisViewBy = 2
)

// Enum value maps for Dynamic_Visualization_HorizontalBars_YAxisViewBy.
var (
	Dynamic_Visualization_HorizontalBars_YAxisViewBy_name = map[int32]string{
		0: "Y_AXIS_VIEW_BY_UNSPECIFIED",
		1: "Y_AXIS_VIEW_BY_CATEGORY",
		2: "Y_AXIS_VIEW_BY_VALUE",
	}
	Dynamic_Visualization_HorizontalBars_YAxisViewBy_value = map[string]int32{
		"Y_AXIS_VIEW_BY_UNSPECIFIED": 0,
		"Y_AXIS_VIEW_BY_CATEGORY":    1,
		"Y_AXIS_VIEW_BY_VALUE":       2,
	}
)

func (x Dynamic_Visualization_HorizontalBars_YAxisViewBy) Enum() *Dynamic_Visualization_HorizontalBars_YAxisViewBy {
	p := new(Dynamic_Visualization_HorizontalBars_YAxisViewBy)
	*p = x
	return p
}

func (x Dynamic_Visualization_HorizontalBars_YAxisViewBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Dynamic_Visualization_HorizontalBars_YAxisViewBy) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes[6].Descriptor()
}

func (Dynamic_Visualization_HorizontalBars_YAxisViewBy) Type() protoreflect.EnumType {
	return &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes[6]
}

func (x Dynamic_Visualization_HorizontalBars_YAxisViewBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Dynamic_Visualization_HorizontalBars_YAxisViewBy.Descriptor instead.
func (Dynamic_Visualization_HorizontalBars_YAxisViewBy) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 7, 0}
}

type Dynamic struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	Query          *Dynamic_Query          `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	TimeFrame      *common.TimeFrameSelect `protobuf:"bytes,2,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	Interpretation Dynamic_Interpretation  `protobuf:"varint,3,opt,name=interpretation,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.Dynamic_Interpretation" json:"interpretation,omitempty"`
	Visualization  *Dynamic_Visualization  `protobuf:"bytes,4,opt,name=visualization,proto3" json:"visualization,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Dynamic) Reset() {
	*x = Dynamic{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic) ProtoMessage() {}

func (x *Dynamic) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic.ProtoReflect.Descriptor instead.
func (*Dynamic) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0}
}

func (x *Dynamic) GetQuery() *Dynamic_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *Dynamic) GetTimeFrame() *common.TimeFrameSelect {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

func (x *Dynamic) GetInterpretation() Dynamic_Interpretation {
	if x != nil {
		return x.Interpretation
	}
	return Dynamic_INTERPRETATION_UNSPECIFIED
}

func (x *Dynamic) GetVisualization() *Dynamic_Visualization {
	if x != nil {
		return x.Visualization
	}
	return nil
}

type Dynamic_Query struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*Dynamic_Query_Logs_
	//	*Dynamic_Query_Spans_
	//	*Dynamic_Query_Metrics_
	//	*Dynamic_Query_Dataprime_
	Value         isDynamic_Query_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dynamic_Query) Reset() {
	*x = Dynamic_Query{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Query) ProtoMessage() {}

func (x *Dynamic_Query) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Query.ProtoReflect.Descriptor instead.
func (*Dynamic_Query) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Dynamic_Query) GetValue() isDynamic_Query_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Dynamic_Query) GetLogs() *Dynamic_Query_Logs {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Query_Logs_); ok {
			return x.Logs
		}
	}
	return nil
}

func (x *Dynamic_Query) GetSpans() *Dynamic_Query_Spans {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Query_Spans_); ok {
			return x.Spans
		}
	}
	return nil
}

func (x *Dynamic_Query) GetMetrics() *Dynamic_Query_Metrics {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Query_Metrics_); ok {
			return x.Metrics
		}
	}
	return nil
}

func (x *Dynamic_Query) GetDataprime() *Dynamic_Query_Dataprime {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Query_Dataprime_); ok {
			return x.Dataprime
		}
	}
	return nil
}

type isDynamic_Query_Value interface {
	isDynamic_Query_Value()
}

type Dynamic_Query_Logs_ struct {
	Logs *Dynamic_Query_Logs `protobuf:"bytes,1,opt,name=logs,proto3,oneof"`
}

type Dynamic_Query_Spans_ struct {
	Spans *Dynamic_Query_Spans `protobuf:"bytes,2,opt,name=spans,proto3,oneof"`
}

type Dynamic_Query_Metrics_ struct {
	Metrics *Dynamic_Query_Metrics `protobuf:"bytes,3,opt,name=metrics,proto3,oneof"`
}

type Dynamic_Query_Dataprime_ struct {
	Dataprime *Dynamic_Query_Dataprime `protobuf:"bytes,4,opt,name=dataprime,proto3,oneof"`
}

func (*Dynamic_Query_Logs_) isDynamic_Query_Value() {}

func (*Dynamic_Query_Spans_) isDynamic_Query_Value() {}

func (*Dynamic_Query_Metrics_) isDynamic_Query_Value() {}

func (*Dynamic_Query_Dataprime_) isDynamic_Query_Value() {}

type Dynamic_Visualization struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*Dynamic_Visualization_Table_
	//	*Dynamic_Visualization_TimeSeriesLines_
	//	*Dynamic_Visualization_TimeSeriesBars_
	//	*Dynamic_Visualization_Stat_
	//	*Dynamic_Visualization_Gauge_
	//	*Dynamic_Visualization_HexagonBins_
	//	*Dynamic_Visualization_PieChart_
	//	*Dynamic_Visualization_HorizontalBars_
	//	*Dynamic_Visualization_VerticalBars_
	//	*Dynamic_Visualization_Heatmap_
	Value         isDynamic_Visualization_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dynamic_Visualization) Reset() {
	*x = Dynamic_Visualization{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization) ProtoMessage() {}

func (x *Dynamic_Visualization) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Dynamic_Visualization) GetValue() isDynamic_Visualization_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Dynamic_Visualization) GetTable() *Dynamic_Visualization_Table {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_Table_); ok {
			return x.Table
		}
	}
	return nil
}

func (x *Dynamic_Visualization) GetTimeSeriesLines() *Dynamic_Visualization_TimeSeriesLines {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_TimeSeriesLines_); ok {
			return x.TimeSeriesLines
		}
	}
	return nil
}

func (x *Dynamic_Visualization) GetTimeSeriesBars() *Dynamic_Visualization_TimeSeriesBars {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_TimeSeriesBars_); ok {
			return x.TimeSeriesBars
		}
	}
	return nil
}

func (x *Dynamic_Visualization) GetStat() *Dynamic_Visualization_Stat {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_Stat_); ok {
			return x.Stat
		}
	}
	return nil
}

func (x *Dynamic_Visualization) GetGauge() *Dynamic_Visualization_Gauge {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_Gauge_); ok {
			return x.Gauge
		}
	}
	return nil
}

func (x *Dynamic_Visualization) GetHexagonBins() *Dynamic_Visualization_HexagonBins {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_HexagonBins_); ok {
			return x.HexagonBins
		}
	}
	return nil
}

func (x *Dynamic_Visualization) GetPieChart() *Dynamic_Visualization_PieChart {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_PieChart_); ok {
			return x.PieChart
		}
	}
	return nil
}

func (x *Dynamic_Visualization) GetHorizontalBars() *Dynamic_Visualization_HorizontalBars {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_HorizontalBars_); ok {
			return x.HorizontalBars
		}
	}
	return nil
}

func (x *Dynamic_Visualization) GetVerticalBars() *Dynamic_Visualization_VerticalBars {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_VerticalBars_); ok {
			return x.VerticalBars
		}
	}
	return nil
}

func (x *Dynamic_Visualization) GetHeatmap() *Dynamic_Visualization_Heatmap {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_Heatmap_); ok {
			return x.Heatmap
		}
	}
	return nil
}

type isDynamic_Visualization_Value interface {
	isDynamic_Visualization_Value()
}

type Dynamic_Visualization_Table_ struct {
	Table *Dynamic_Visualization_Table `protobuf:"bytes,1,opt,name=table,proto3,oneof"`
}

type Dynamic_Visualization_TimeSeriesLines_ struct {
	TimeSeriesLines *Dynamic_Visualization_TimeSeriesLines `protobuf:"bytes,2,opt,name=time_series_lines,json=timeSeriesLines,proto3,oneof"`
}

type Dynamic_Visualization_TimeSeriesBars_ struct {
	TimeSeriesBars *Dynamic_Visualization_TimeSeriesBars `protobuf:"bytes,3,opt,name=time_series_bars,json=timeSeriesBars,proto3,oneof"`
}

type Dynamic_Visualization_Stat_ struct {
	Stat *Dynamic_Visualization_Stat `protobuf:"bytes,4,opt,name=stat,proto3,oneof"`
}

type Dynamic_Visualization_Gauge_ struct {
	Gauge *Dynamic_Visualization_Gauge `protobuf:"bytes,5,opt,name=gauge,proto3,oneof"`
}

type Dynamic_Visualization_HexagonBins_ struct {
	HexagonBins *Dynamic_Visualization_HexagonBins `protobuf:"bytes,6,opt,name=hexagon_bins,json=hexagonBins,proto3,oneof"`
}

type Dynamic_Visualization_PieChart_ struct {
	PieChart *Dynamic_Visualization_PieChart `protobuf:"bytes,7,opt,name=pie_chart,json=pieChart,proto3,oneof"`
}

type Dynamic_Visualization_HorizontalBars_ struct {
	HorizontalBars *Dynamic_Visualization_HorizontalBars `protobuf:"bytes,8,opt,name=horizontal_bars,json=horizontalBars,proto3,oneof"`
}

type Dynamic_Visualization_VerticalBars_ struct {
	VerticalBars *Dynamic_Visualization_VerticalBars `protobuf:"bytes,9,opt,name=vertical_bars,json=verticalBars,proto3,oneof"`
}

type Dynamic_Visualization_Heatmap_ struct {
	Heatmap *Dynamic_Visualization_Heatmap `protobuf:"bytes,10,opt,name=heatmap,proto3,oneof"`
}

func (*Dynamic_Visualization_Table_) isDynamic_Visualization_Value() {}

func (*Dynamic_Visualization_TimeSeriesLines_) isDynamic_Visualization_Value() {}

func (*Dynamic_Visualization_TimeSeriesBars_) isDynamic_Visualization_Value() {}

func (*Dynamic_Visualization_Stat_) isDynamic_Visualization_Value() {}

func (*Dynamic_Visualization_Gauge_) isDynamic_Visualization_Value() {}

func (*Dynamic_Visualization_HexagonBins_) isDynamic_Visualization_Value() {}

func (*Dynamic_Visualization_PieChart_) isDynamic_Visualization_Value() {}

func (*Dynamic_Visualization_HorizontalBars_) isDynamic_Visualization_Value() {}

func (*Dynamic_Visualization_VerticalBars_) isDynamic_Visualization_Value() {}

func (*Dynamic_Visualization_Heatmap_) isDynamic_Visualization_Value() {}

type Dynamic_Query_Logs struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	LuceneQuery   *common.LuceneQuery          `protobuf:"bytes,1,opt,name=lucene_query,json=luceneQuery,proto3" json:"lucene_query,omitempty"`
	DataModeType  common1.DataModeType         `protobuf:"varint,2,opt,name=data_mode_type,json=dataModeType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType" json:"data_mode_type,omitempty"`
	Filters       []*filters.Filter_LogsFilter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	GroupBy       []*common.ObservationField   `protobuf:"bytes,4,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	Aggregation   []*common.LogsAggregation    `protobuf:"bytes,5,rep,name=aggregation,proto3" json:"aggregation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dynamic_Query_Logs) Reset() {
	*x = Dynamic_Query_Logs{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Query_Logs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Query_Logs) ProtoMessage() {}

func (x *Dynamic_Query_Logs) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Query_Logs.ProtoReflect.Descriptor instead.
func (*Dynamic_Query_Logs) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Dynamic_Query_Logs) GetLuceneQuery() *common.LuceneQuery {
	if x != nil {
		return x.LuceneQuery
	}
	return nil
}

func (x *Dynamic_Query_Logs) GetDataModeType() common1.DataModeType {
	if x != nil {
		return x.DataModeType
	}
	return common1.DataModeType(0)
}

func (x *Dynamic_Query_Logs) GetFilters() []*filters.Filter_LogsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Dynamic_Query_Logs) GetGroupBy() []*common.ObservationField {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *Dynamic_Query_Logs) GetAggregation() []*common.LogsAggregation {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

type Dynamic_Query_Spans struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	LuceneQuery   *common.LuceneQuery            `protobuf:"bytes,1,opt,name=lucene_query,json=luceneQuery,proto3" json:"lucene_query,omitempty"`
	DataModeType  common1.DataModeType           `protobuf:"varint,2,opt,name=data_mode_type,json=dataModeType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType" json:"data_mode_type,omitempty"`
	Filters       []*filters.Filter_SpansFilter  `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	GroupBy       []*common.SpanObservationField `protobuf:"bytes,4,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	Aggregation   []*common.LogsAggregation      `protobuf:"bytes,5,rep,name=aggregation,proto3" json:"aggregation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dynamic_Query_Spans) Reset() {
	*x = Dynamic_Query_Spans{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Query_Spans) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Query_Spans) ProtoMessage() {}

func (x *Dynamic_Query_Spans) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Query_Spans.ProtoReflect.Descriptor instead.
func (*Dynamic_Query_Spans) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *Dynamic_Query_Spans) GetLuceneQuery() *common.LuceneQuery {
	if x != nil {
		return x.LuceneQuery
	}
	return nil
}

func (x *Dynamic_Query_Spans) GetDataModeType() common1.DataModeType {
	if x != nil {
		return x.DataModeType
	}
	return common1.DataModeType(0)
}

func (x *Dynamic_Query_Spans) GetFilters() []*filters.Filter_SpansFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Dynamic_Query_Spans) GetGroupBy() []*common.SpanObservationField {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *Dynamic_Query_Spans) GetAggregation() []*common.LogsAggregation {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

type Dynamic_Query_Metrics struct {
	state           protoimpl.MessageState         `protogen:"open.v1"`
	PromqlQuery     *common.PromQlQuery            `protobuf:"bytes,1,opt,name=promql_query,json=promqlQuery,proto3" json:"promql_query,omitempty"`
	PromqlQueryType common.PromQLQueryType         `protobuf:"varint,2,opt,name=promql_query_type,json=promqlQueryType,proto3,enum=com.coralogixapis.dashboards.v1.common.PromQLQueryType" json:"promql_query_type,omitempty"`
	EditorMode      common1.MetricsQueryEditorMode `protobuf:"varint,3,opt,name=editor_mode,json=editorMode,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorMode" json:"editor_mode,omitempty"`
	SeriesLimitType common.MetricsSeriesLimitType  `protobuf:"varint,4,opt,name=series_limit_type,json=seriesLimitType,proto3,enum=com.coralogixapis.dashboards.v1.common.MetricsSeriesLimitType" json:"series_limit_type,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Dynamic_Query_Metrics) Reset() {
	*x = Dynamic_Query_Metrics{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Query_Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Query_Metrics) ProtoMessage() {}

func (x *Dynamic_Query_Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Query_Metrics.ProtoReflect.Descriptor instead.
func (*Dynamic_Query_Metrics) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *Dynamic_Query_Metrics) GetPromqlQuery() *common.PromQlQuery {
	if x != nil {
		return x.PromqlQuery
	}
	return nil
}

func (x *Dynamic_Query_Metrics) GetPromqlQueryType() common.PromQLQueryType {
	if x != nil {
		return x.PromqlQueryType
	}
	return common.PromQLQueryType(0)
}

func (x *Dynamic_Query_Metrics) GetEditorMode() common1.MetricsQueryEditorMode {
	if x != nil {
		return x.EditorMode
	}
	return common1.MetricsQueryEditorMode(0)
}

func (x *Dynamic_Query_Metrics) GetSeriesLimitType() common.MetricsSeriesLimitType {
	if x != nil {
		return x.SeriesLimitType
	}
	return common.MetricsSeriesLimitType(0)
}

type Dynamic_Query_Dataprime struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DataprimeQuery *common.DataprimeQuery `protobuf:"bytes,1,opt,name=dataprime_query,json=dataprimeQuery,proto3" json:"dataprime_query,omitempty"`
	DataModeType   common1.DataModeType   `protobuf:"varint,2,opt,name=data_mode_type,json=dataModeType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType" json:"data_mode_type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Dynamic_Query_Dataprime) Reset() {
	*x = Dynamic_Query_Dataprime{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Query_Dataprime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Query_Dataprime) ProtoMessage() {}

func (x *Dynamic_Query_Dataprime) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Query_Dataprime.ProtoReflect.Descriptor instead.
func (*Dynamic_Query_Dataprime) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 0, 3}
}

func (x *Dynamic_Query_Dataprime) GetDataprimeQuery() *common.DataprimeQuery {
	if x != nil {
		return x.DataprimeQuery
	}
	return nil
}

func (x *Dynamic_Query_Dataprime) GetDataModeType() common1.DataModeType {
	if x != nil {
		return x.DataModeType
	}
	return common1.DataModeType(0)
}

type Dynamic_Visualization_Table struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Columns       []*Dynamic_Visualization_Table_Column `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	Rules         []*Dynamic_Visualization_Table_Rule   `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dynamic_Visualization_Table) Reset() {
	*x = Dynamic_Visualization_Table{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_Table) ProtoMessage() {}

func (x *Dynamic_Visualization_Table) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_Table.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_Table) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Dynamic_Visualization_Table) GetColumns() []*Dynamic_Visualization_Table_Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *Dynamic_Visualization_Table) GetRules() []*Dynamic_Visualization_Table_Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type Dynamic_Visualization_TimeSeriesLines struct {
	state              protoimpl.MessageState                            `protogen:"open.v1"`
	TemporalField      *common.ObservationField                          `protobuf:"bytes,1,opt,name=temporal_field,json=temporalField,proto3" json:"temporal_field,omitempty"`
	ValueFields        []*common.ObservationField                        `protobuf:"bytes,2,rep,name=value_fields,json=valueFields,proto3" json:"value_fields,omitempty"`
	CategoryFields     []*common.ObservationField                        `protobuf:"bytes,3,rep,name=category_fields,json=categoryFields,proto3" json:"category_fields,omitempty"`
	Legend             *common1.Legend                                   `protobuf:"bytes,4,opt,name=legend,proto3" json:"legend,omitempty"`
	Tooltip            *Dynamic_Visualization_TimeSeriesTooltip          `protobuf:"bytes,5,opt,name=tooltip,proto3" json:"tooltip,omitempty"`
	StackedLine        Dynamic_Visualization_TimeSeriesLines_StackedLine `protobuf:"varint,6,opt,name=stacked_line,json=stackedLine,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.Dynamic_Visualization_TimeSeriesLines_StackedLine" json:"stacked_line,omitempty"`
	ConnectNulls       *wrapperspb.BoolValue                             `protobuf:"bytes,7,opt,name=connect_nulls,json=connectNulls,proto3" json:"connect_nulls,omitempty"`
	SeriesNameTemplate *wrapperspb.StringValue                           `protobuf:"bytes,8,opt,name=series_name_template,json=seriesNameTemplate,proto3" json:"series_name_template,omitempty"`
	SeriesCountLimit   *wrapperspb.Int64Value                            `protobuf:"bytes,9,opt,name=series_count_limit,json=seriesCountLimit,proto3" json:"series_count_limit,omitempty"`
	Unit               common1.Unit                                      `protobuf:"varint,10,opt,name=unit,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.Unit" json:"unit,omitempty"`
	CustomUnit         *wrapperspb.StringValue                           `protobuf:"bytes,11,opt,name=custom_unit,json=customUnit,proto3" json:"custom_unit,omitempty"`
	ScaleType          common1.ScaleType                                 `protobuf:"varint,12,opt,name=scale_type,json=scaleType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType" json:"scale_type,omitempty"`
	ColorScheme        *wrapperspb.StringValue                           `protobuf:"bytes,13,opt,name=color_scheme,json=colorScheme,proto3" json:"color_scheme,omitempty"`
	HashColors         *wrapperspb.BoolValue                             `protobuf:"bytes,14,opt,name=hash_colors,json=hashColors,proto3" json:"hash_colors,omitempty"`
	DecimalPrecision   *wrapperspb.Int32Value                            `protobuf:"bytes,15,opt,name=decimal_precision,json=decimalPrecision,proto3" json:"decimal_precision,omitempty"`
	AllowAbbreviation  *wrapperspb.BoolValue                             `protobuf:"bytes,17,opt,name=allow_abbreviation,json=allowAbbreviation,proto3" json:"allow_abbreviation,omitempty"`
	YAxisMin           *wrapperspb.FloatValue                            `protobuf:"bytes,18,opt,name=y_axis_min,json=yAxisMin,proto3" json:"y_axis_min,omitempty"`
	YAxisMax           *wrapperspb.FloatValue                            `protobuf:"bytes,19,opt,name=y_axis_max,json=yAxisMax,proto3" json:"y_axis_max,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Dynamic_Visualization_TimeSeriesLines) Reset() {
	*x = Dynamic_Visualization_TimeSeriesLines{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_TimeSeriesLines) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_TimeSeriesLines) ProtoMessage() {}

func (x *Dynamic_Visualization_TimeSeriesLines) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_TimeSeriesLines.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_TimeSeriesLines) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetTemporalField() *common.ObservationField {
	if x != nil {
		return x.TemporalField
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetValueFields() []*common.ObservationField {
	if x != nil {
		return x.ValueFields
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetCategoryFields() []*common.ObservationField {
	if x != nil {
		return x.CategoryFields
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetLegend() *common1.Legend {
	if x != nil {
		return x.Legend
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetTooltip() *Dynamic_Visualization_TimeSeriesTooltip {
	if x != nil {
		return x.Tooltip
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetStackedLine() Dynamic_Visualization_TimeSeriesLines_StackedLine {
	if x != nil {
		return x.StackedLine
	}
	return Dynamic_Visualization_TimeSeriesLines_STACKED_LINE_UNSPECIFIED
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetConnectNulls() *wrapperspb.BoolValue {
	if x != nil {
		return x.ConnectNulls
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetSeriesNameTemplate() *wrapperspb.StringValue {
	if x != nil {
		return x.SeriesNameTemplate
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetSeriesCountLimit() *wrapperspb.Int64Value {
	if x != nil {
		return x.SeriesCountLimit
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetUnit() common1.Unit {
	if x != nil {
		return x.Unit
	}
	return common1.Unit(0)
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetCustomUnit() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomUnit
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetScaleType() common1.ScaleType {
	if x != nil {
		return x.ScaleType
	}
	return common1.ScaleType(0)
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetColorScheme() *wrapperspb.StringValue {
	if x != nil {
		return x.ColorScheme
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetHashColors() *wrapperspb.BoolValue {
	if x != nil {
		return x.HashColors
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetDecimalPrecision() *wrapperspb.Int32Value {
	if x != nil {
		return x.DecimalPrecision
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetAllowAbbreviation() *wrapperspb.BoolValue {
	if x != nil {
		return x.AllowAbbreviation
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetYAxisMin() *wrapperspb.FloatValue {
	if x != nil {
		return x.YAxisMin
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesLines) GetYAxisMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.YAxisMax
	}
	return nil
}

type Dynamic_Visualization_TimeSeriesBars struct {
	state              protoimpl.MessageState                   `protogen:"open.v1"`
	TemporalField      *common.ObservationField                 `protobuf:"bytes,1,opt,name=temporal_field,json=temporalField,proto3" json:"temporal_field,omitempty"`
	ValueFields        []*common.ObservationField               `protobuf:"bytes,2,rep,name=value_fields,json=valueFields,proto3" json:"value_fields,omitempty"`
	CategoryFields     []*common.ObservationField               `protobuf:"bytes,3,rep,name=category_fields,json=categoryFields,proto3" json:"category_fields,omitempty"`
	Legend             *common1.Legend                          `protobuf:"bytes,4,opt,name=legend,proto3" json:"legend,omitempty"`
	Tooltip            *Dynamic_Visualization_TimeSeriesTooltip `protobuf:"bytes,5,opt,name=tooltip,proto3" json:"tooltip,omitempty"`
	SeriesNameTemplate *wrapperspb.StringValue                  `protobuf:"bytes,6,opt,name=series_name_template,json=seriesNameTemplate,proto3" json:"series_name_template,omitempty"`
	MaxSlicesPerBar    *wrapperspb.Int32Value                   `protobuf:"bytes,7,opt,name=max_slices_per_bar,json=maxSlicesPerBar,proto3" json:"max_slices_per_bar,omitempty"`
	Unit               common1.Unit                             `protobuf:"varint,8,opt,name=unit,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.Unit" json:"unit,omitempty"`
	CustomUnit         *wrapperspb.StringValue                  `protobuf:"bytes,9,opt,name=custom_unit,json=customUnit,proto3" json:"custom_unit,omitempty"`
	ScaleType          common1.ScaleType                        `protobuf:"varint,10,opt,name=scale_type,json=scaleType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType" json:"scale_type,omitempty"`
	ColorScheme        *wrapperspb.StringValue                  `protobuf:"bytes,11,opt,name=color_scheme,json=colorScheme,proto3" json:"color_scheme,omitempty"`
	HashColors         *wrapperspb.BoolValue                    `protobuf:"bytes,12,opt,name=hash_colors,json=hashColors,proto3" json:"hash_colors,omitempty"`
	DecimalPrecision   *wrapperspb.Int32Value                   `protobuf:"bytes,13,opt,name=decimal_precision,json=decimalPrecision,proto3" json:"decimal_precision,omitempty"`
	AllowAbbreviation  *wrapperspb.BoolValue                    `protobuf:"bytes,14,opt,name=allow_abbreviation,json=allowAbbreviation,proto3" json:"allow_abbreviation,omitempty"`
	YAxisMin           *wrapperspb.FloatValue                   `protobuf:"bytes,15,opt,name=y_axis_min,json=yAxisMin,proto3" json:"y_axis_min,omitempty"`
	YAxisMax           *wrapperspb.FloatValue                   `protobuf:"bytes,16,opt,name=y_axis_max,json=yAxisMax,proto3" json:"y_axis_max,omitempty"`
	BarValueDisplay    Dynamic_Visualization_BarValueDisplay    `protobuf:"varint,17,opt,name=bar_value_display,json=barValueDisplay,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.Dynamic_Visualization_BarValueDisplay" json:"bar_value_display,omitempty"`
	SortBy             common1.SortByType                       `protobuf:"varint,18,opt,name=sort_by,json=sortBy,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.SortByType" json:"sort_by,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Dynamic_Visualization_TimeSeriesBars) Reset() {
	*x = Dynamic_Visualization_TimeSeriesBars{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_TimeSeriesBars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_TimeSeriesBars) ProtoMessage() {}

func (x *Dynamic_Visualization_TimeSeriesBars) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_TimeSeriesBars.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_TimeSeriesBars) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 2}
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetTemporalField() *common.ObservationField {
	if x != nil {
		return x.TemporalField
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetValueFields() []*common.ObservationField {
	if x != nil {
		return x.ValueFields
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetCategoryFields() []*common.ObservationField {
	if x != nil {
		return x.CategoryFields
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetLegend() *common1.Legend {
	if x != nil {
		return x.Legend
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetTooltip() *Dynamic_Visualization_TimeSeriesTooltip {
	if x != nil {
		return x.Tooltip
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetSeriesNameTemplate() *wrapperspb.StringValue {
	if x != nil {
		return x.SeriesNameTemplate
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetMaxSlicesPerBar() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxSlicesPerBar
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetUnit() common1.Unit {
	if x != nil {
		return x.Unit
	}
	return common1.Unit(0)
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetCustomUnit() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomUnit
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetScaleType() common1.ScaleType {
	if x != nil {
		return x.ScaleType
	}
	return common1.ScaleType(0)
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetColorScheme() *wrapperspb.StringValue {
	if x != nil {
		return x.ColorScheme
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetHashColors() *wrapperspb.BoolValue {
	if x != nil {
		return x.HashColors
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetDecimalPrecision() *wrapperspb.Int32Value {
	if x != nil {
		return x.DecimalPrecision
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetAllowAbbreviation() *wrapperspb.BoolValue {
	if x != nil {
		return x.AllowAbbreviation
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetYAxisMin() *wrapperspb.FloatValue {
	if x != nil {
		return x.YAxisMin
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetYAxisMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.YAxisMax
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetBarValueDisplay() Dynamic_Visualization_BarValueDisplay {
	if x != nil {
		return x.BarValueDisplay
	}
	return Dynamic_Visualization_BAR_VALUE_DISPLAY_UNSPECIFIED
}

func (x *Dynamic_Visualization_TimeSeriesBars) GetSortBy() common1.SortByType {
	if x != nil {
		return x.SortBy
	}
	return common1.SortByType(0)
}

type Dynamic_Visualization_Stat struct {
	state             protoimpl.MessageState     `protogen:"open.v1"`
	ValueField        *common.ObservationField   `protobuf:"bytes,1,opt,name=value_field,json=valueField,proto3" json:"value_field,omitempty"`
	CategoryFields    []*common.ObservationField `protobuf:"bytes,2,rep,name=category_fields,json=categoryFields,proto3" json:"category_fields,omitempty"`
	Min               *wrapperspb.DoubleValue    `protobuf:"bytes,3,opt,name=min,proto3" json:"min,omitempty"`
	Max               *wrapperspb.DoubleValue    `protobuf:"bytes,4,opt,name=max,proto3" json:"max,omitempty"`
	Unit              common1.Unit               `protobuf:"varint,5,opt,name=unit,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.Unit" json:"unit,omitempty"`
	CustomUnit        *wrapperspb.StringValue    `protobuf:"bytes,6,opt,name=custom_unit,json=customUnit,proto3" json:"custom_unit,omitempty"`
	ThresholdType     common1.ThresholdType      `protobuf:"varint,7,opt,name=threshold_type,json=thresholdType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdType" json:"threshold_type,omitempty"`
	Thresholds        []*common1.Threshold       `protobuf:"bytes,8,rep,name=thresholds,proto3" json:"thresholds,omitempty"`
	Legend            *common1.Legend            `protobuf:"bytes,9,opt,name=legend,proto3" json:"legend,omitempty"`
	LegendBy          common1.LegendBy           `protobuf:"varint,10,opt,name=legend_by,json=legendBy,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.LegendBy" json:"legend_by,omitempty"`
	DecimalPrecision  *wrapperspb.Int32Value     `protobuf:"bytes,11,opt,name=decimal_precision,json=decimalPrecision,proto3" json:"decimal_precision,omitempty"`
	AllowAbbreviation *wrapperspb.BoolValue      `protobuf:"bytes,12,opt,name=allow_abbreviation,json=allowAbbreviation,proto3" json:"allow_abbreviation,omitempty"`
	DisplaySeriesName *wrapperspb.BoolValue      `protobuf:"bytes,13,opt,name=display_series_name,json=displaySeriesName,proto3" json:"display_series_name,omitempty"`
	ThresholdBy       common1.ThresholdBy        `protobuf:"varint,14,opt,name=threshold_by,json=thresholdBy,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdBy" json:"threshold_by,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Dynamic_Visualization_Stat) Reset() {
	*x = Dynamic_Visualization_Stat{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_Stat) ProtoMessage() {}

func (x *Dynamic_Visualization_Stat) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_Stat.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_Stat) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 3}
}

func (x *Dynamic_Visualization_Stat) GetValueField() *common.ObservationField {
	if x != nil {
		return x.ValueField
	}
	return nil
}

func (x *Dynamic_Visualization_Stat) GetCategoryFields() []*common.ObservationField {
	if x != nil {
		return x.CategoryFields
	}
	return nil
}

func (x *Dynamic_Visualization_Stat) GetMin() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *Dynamic_Visualization_Stat) GetMax() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Max
	}
	return nil
}

func (x *Dynamic_Visualization_Stat) GetUnit() common1.Unit {
	if x != nil {
		return x.Unit
	}
	return common1.Unit(0)
}

func (x *Dynamic_Visualization_Stat) GetCustomUnit() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomUnit
	}
	return nil
}

func (x *Dynamic_Visualization_Stat) GetThresholdType() common1.ThresholdType {
	if x != nil {
		return x.ThresholdType
	}
	return common1.ThresholdType(0)
}

func (x *Dynamic_Visualization_Stat) GetThresholds() []*common1.Threshold {
	if x != nil {
		return x.Thresholds
	}
	return nil
}

func (x *Dynamic_Visualization_Stat) GetLegend() *common1.Legend {
	if x != nil {
		return x.Legend
	}
	return nil
}

func (x *Dynamic_Visualization_Stat) GetLegendBy() common1.LegendBy {
	if x != nil {
		return x.LegendBy
	}
	return common1.LegendBy(0)
}

func (x *Dynamic_Visualization_Stat) GetDecimalPrecision() *wrapperspb.Int32Value {
	if x != nil {
		return x.DecimalPrecision
	}
	return nil
}

func (x *Dynamic_Visualization_Stat) GetAllowAbbreviation() *wrapperspb.BoolValue {
	if x != nil {
		return x.AllowAbbreviation
	}
	return nil
}

func (x *Dynamic_Visualization_Stat) GetDisplaySeriesName() *wrapperspb.BoolValue {
	if x != nil {
		return x.DisplaySeriesName
	}
	return nil
}

func (x *Dynamic_Visualization_Stat) GetThresholdBy() common1.ThresholdBy {
	if x != nil {
		return x.ThresholdBy
	}
	return common1.ThresholdBy(0)
}

type Dynamic_Visualization_Gauge struct {
	state             protoimpl.MessageState     `protogen:"open.v1"`
	ValueField        *common.ObservationField   `protobuf:"bytes,1,opt,name=value_field,json=valueField,proto3" json:"value_field,omitempty"`
	CategoryFields    []*common.ObservationField `protobuf:"bytes,2,rep,name=category_fields,json=categoryFields,proto3" json:"category_fields,omitempty"`
	Min               *wrapperspb.DoubleValue    `protobuf:"bytes,3,opt,name=min,proto3" json:"min,omitempty"`
	Max               *wrapperspb.DoubleValue    `protobuf:"bytes,4,opt,name=max,proto3" json:"max,omitempty"`
	Unit              common1.Unit               `protobuf:"varint,5,opt,name=unit,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.Unit" json:"unit,omitempty"`
	CustomUnit        *wrapperspb.StringValue    `protobuf:"bytes,6,opt,name=custom_unit,json=customUnit,proto3" json:"custom_unit,omitempty"`
	ThresholdType     common1.ThresholdType      `protobuf:"varint,7,opt,name=threshold_type,json=thresholdType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdType" json:"threshold_type,omitempty"`
	Thresholds        []*common1.Threshold       `protobuf:"bytes,8,rep,name=thresholds,proto3" json:"thresholds,omitempty"`
	Legend            *common1.Legend            `protobuf:"bytes,9,opt,name=legend,proto3" json:"legend,omitempty"`
	LegendBy          common1.LegendBy           `protobuf:"varint,10,opt,name=legend_by,json=legendBy,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.LegendBy" json:"legend_by,omitempty"`
	DecimalPrecision  *wrapperspb.Int32Value     `protobuf:"bytes,11,opt,name=decimal_precision,json=decimalPrecision,proto3" json:"decimal_precision,omitempty"`
	AllowAbbreviation *wrapperspb.BoolValue      `protobuf:"bytes,12,opt,name=allow_abbreviation,json=allowAbbreviation,proto3" json:"allow_abbreviation,omitempty"`
	ShowInnerArc      *wrapperspb.BoolValue      `protobuf:"bytes,13,opt,name=show_inner_arc,json=showInnerArc,proto3" json:"show_inner_arc,omitempty"`
	ShowOuterArc      *wrapperspb.BoolValue      `protobuf:"bytes,14,opt,name=show_outer_arc,json=showOuterArc,proto3" json:"show_outer_arc,omitempty"`
	DisplaySeriesName *wrapperspb.BoolValue      `protobuf:"bytes,15,opt,name=display_series_name,json=displaySeriesName,proto3" json:"display_series_name,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Dynamic_Visualization_Gauge) Reset() {
	*x = Dynamic_Visualization_Gauge{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_Gauge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_Gauge) ProtoMessage() {}

func (x *Dynamic_Visualization_Gauge) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_Gauge.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_Gauge) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 4}
}

func (x *Dynamic_Visualization_Gauge) GetValueField() *common.ObservationField {
	if x != nil {
		return x.ValueField
	}
	return nil
}

func (x *Dynamic_Visualization_Gauge) GetCategoryFields() []*common.ObservationField {
	if x != nil {
		return x.CategoryFields
	}
	return nil
}

func (x *Dynamic_Visualization_Gauge) GetMin() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *Dynamic_Visualization_Gauge) GetMax() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Max
	}
	return nil
}

func (x *Dynamic_Visualization_Gauge) GetUnit() common1.Unit {
	if x != nil {
		return x.Unit
	}
	return common1.Unit(0)
}

func (x *Dynamic_Visualization_Gauge) GetCustomUnit() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomUnit
	}
	return nil
}

func (x *Dynamic_Visualization_Gauge) GetThresholdType() common1.ThresholdType {
	if x != nil {
		return x.ThresholdType
	}
	return common1.ThresholdType(0)
}

func (x *Dynamic_Visualization_Gauge) GetThresholds() []*common1.Threshold {
	if x != nil {
		return x.Thresholds
	}
	return nil
}

func (x *Dynamic_Visualization_Gauge) GetLegend() *common1.Legend {
	if x != nil {
		return x.Legend
	}
	return nil
}

func (x *Dynamic_Visualization_Gauge) GetLegendBy() common1.LegendBy {
	if x != nil {
		return x.LegendBy
	}
	return common1.LegendBy(0)
}

func (x *Dynamic_Visualization_Gauge) GetDecimalPrecision() *wrapperspb.Int32Value {
	if x != nil {
		return x.DecimalPrecision
	}
	return nil
}

func (x *Dynamic_Visualization_Gauge) GetAllowAbbreviation() *wrapperspb.BoolValue {
	if x != nil {
		return x.AllowAbbreviation
	}
	return nil
}

func (x *Dynamic_Visualization_Gauge) GetShowInnerArc() *wrapperspb.BoolValue {
	if x != nil {
		return x.ShowInnerArc
	}
	return nil
}

func (x *Dynamic_Visualization_Gauge) GetShowOuterArc() *wrapperspb.BoolValue {
	if x != nil {
		return x.ShowOuterArc
	}
	return nil
}

func (x *Dynamic_Visualization_Gauge) GetDisplaySeriesName() *wrapperspb.BoolValue {
	if x != nil {
		return x.DisplaySeriesName
	}
	return nil
}

type Dynamic_Visualization_HexagonBins struct {
	state             protoimpl.MessageState     `protogen:"open.v1"`
	ValueField        *common.ObservationField   `protobuf:"bytes,1,opt,name=value_field,json=valueField,proto3" json:"value_field,omitempty"`
	CategoryFields    []*common.ObservationField `protobuf:"bytes,2,rep,name=category_fields,json=categoryFields,proto3" json:"category_fields,omitempty"`
	Min               *wrapperspb.DoubleValue    `protobuf:"bytes,3,opt,name=min,proto3" json:"min,omitempty"`
	Max               *wrapperspb.DoubleValue    `protobuf:"bytes,4,opt,name=max,proto3" json:"max,omitempty"`
	Unit              common1.Unit               `protobuf:"varint,5,opt,name=unit,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.Unit" json:"unit,omitempty"`
	CustomUnit        *wrapperspb.StringValue    `protobuf:"bytes,6,opt,name=custom_unit,json=customUnit,proto3" json:"custom_unit,omitempty"`
	ThresholdType     common1.ThresholdType      `protobuf:"varint,7,opt,name=threshold_type,json=thresholdType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdType" json:"threshold_type,omitempty"`
	Thresholds        []*common1.Threshold       `protobuf:"bytes,8,rep,name=thresholds,proto3" json:"thresholds,omitempty"`
	Legend            *common1.Legend            `protobuf:"bytes,9,opt,name=legend,proto3" json:"legend,omitempty"`
	LegendBy          common1.LegendBy           `protobuf:"varint,10,opt,name=legend_by,json=legendBy,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.LegendBy" json:"legend_by,omitempty"`
	DecimalPrecision  *wrapperspb.Int32Value     `protobuf:"bytes,11,opt,name=decimal_precision,json=decimalPrecision,proto3" json:"decimal_precision,omitempty"`
	AllowAbbreviation *wrapperspb.BoolValue      `protobuf:"bytes,12,opt,name=allow_abbreviation,json=allowAbbreviation,proto3" json:"allow_abbreviation,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Dynamic_Visualization_HexagonBins) Reset() {
	*x = Dynamic_Visualization_HexagonBins{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_HexagonBins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_HexagonBins) ProtoMessage() {}

func (x *Dynamic_Visualization_HexagonBins) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_HexagonBins.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_HexagonBins) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 5}
}

func (x *Dynamic_Visualization_HexagonBins) GetValueField() *common.ObservationField {
	if x != nil {
		return x.ValueField
	}
	return nil
}

func (x *Dynamic_Visualization_HexagonBins) GetCategoryFields() []*common.ObservationField {
	if x != nil {
		return x.CategoryFields
	}
	return nil
}

func (x *Dynamic_Visualization_HexagonBins) GetMin() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *Dynamic_Visualization_HexagonBins) GetMax() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Max
	}
	return nil
}

func (x *Dynamic_Visualization_HexagonBins) GetUnit() common1.Unit {
	if x != nil {
		return x.Unit
	}
	return common1.Unit(0)
}

func (x *Dynamic_Visualization_HexagonBins) GetCustomUnit() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomUnit
	}
	return nil
}

func (x *Dynamic_Visualization_HexagonBins) GetThresholdType() common1.ThresholdType {
	if x != nil {
		return x.ThresholdType
	}
	return common1.ThresholdType(0)
}

func (x *Dynamic_Visualization_HexagonBins) GetThresholds() []*common1.Threshold {
	if x != nil {
		return x.Thresholds
	}
	return nil
}

func (x *Dynamic_Visualization_HexagonBins) GetLegend() *common1.Legend {
	if x != nil {
		return x.Legend
	}
	return nil
}

func (x *Dynamic_Visualization_HexagonBins) GetLegendBy() common1.LegendBy {
	if x != nil {
		return x.LegendBy
	}
	return common1.LegendBy(0)
}

func (x *Dynamic_Visualization_HexagonBins) GetDecimalPrecision() *wrapperspb.Int32Value {
	if x != nil {
		return x.DecimalPrecision
	}
	return nil
}

func (x *Dynamic_Visualization_HexagonBins) GetAllowAbbreviation() *wrapperspb.BoolValue {
	if x != nil {
		return x.AllowAbbreviation
	}
	return nil
}

type Dynamic_Visualization_PieChart struct {
	state              protoimpl.MessageState                          `protogen:"open.v1"`
	ValueField         *common.ObservationField                        `protobuf:"bytes,1,opt,name=value_field,json=valueField,proto3" json:"value_field,omitempty"`
	CategoryFields     []*common.ObservationField                      `protobuf:"bytes,2,rep,name=category_fields,json=categoryFields,proto3" json:"category_fields,omitempty"`
	SubCategoryFields  []*common.ObservationField                      `protobuf:"bytes,3,rep,name=sub_category_fields,json=subCategoryFields,proto3" json:"sub_category_fields,omitempty"`
	MaxSlicesPerChart  *wrapperspb.Int32Value                          `protobuf:"bytes,4,opt,name=max_slices_per_chart,json=maxSlicesPerChart,proto3" json:"max_slices_per_chart,omitempty"`
	MinSlicePercentage *wrapperspb.Int32Value                          `protobuf:"bytes,5,opt,name=min_slice_percentage,json=minSlicePercentage,proto3" json:"min_slice_percentage,omitempty"`
	MaxSlicesPerStack  *wrapperspb.Int32Value                          `protobuf:"bytes,6,opt,name=max_slices_per_stack,json=maxSlicesPerStack,proto3" json:"max_slices_per_stack,omitempty"`
	StackNameTemplate  *wrapperspb.StringValue                         `protobuf:"bytes,7,opt,name=stack_name_template,json=stackNameTemplate,proto3" json:"stack_name_template,omitempty"`
	LabelDefinition    *Dynamic_Visualization_PieChart_LabelDefinition `protobuf:"bytes,8,opt,name=label_definition,json=labelDefinition,proto3" json:"label_definition,omitempty"`
	GroupNameTemplate  *wrapperspb.StringValue                         `protobuf:"bytes,9,opt,name=group_name_template,json=groupNameTemplate,proto3" json:"group_name_template,omitempty"`
	Unit               common1.Unit                                    `protobuf:"varint,10,opt,name=unit,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.Unit" json:"unit,omitempty"`
	CustomUnit         *wrapperspb.StringValue                         `protobuf:"bytes,11,opt,name=custom_unit,json=customUnit,proto3" json:"custom_unit,omitempty"`
	ColorScheme        *wrapperspb.StringValue                         `protobuf:"bytes,12,opt,name=color_scheme,json=colorScheme,proto3" json:"color_scheme,omitempty"`
	HashColors         *wrapperspb.BoolValue                           `protobuf:"bytes,13,opt,name=hash_colors,json=hashColors,proto3" json:"hash_colors,omitempty"`
	DecimalPrecision   *wrapperspb.Int32Value                          `protobuf:"bytes,14,opt,name=decimal_precision,json=decimalPrecision,proto3" json:"decimal_precision,omitempty"`
	AllowAbbreviation  *wrapperspb.BoolValue                           `protobuf:"bytes,15,opt,name=allow_abbreviation,json=allowAbbreviation,proto3" json:"allow_abbreviation,omitempty"`
	Legend             *common1.Legend                                 `protobuf:"bytes,16,opt,name=legend,proto3" json:"legend,omitempty"`
	ShowTotal          *wrapperspb.BoolValue                           `protobuf:"bytes,17,opt,name=show_total,json=showTotal,proto3" json:"show_total,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Dynamic_Visualization_PieChart) Reset() {
	*x = Dynamic_Visualization_PieChart{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_PieChart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_PieChart) ProtoMessage() {}

func (x *Dynamic_Visualization_PieChart) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_PieChart.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_PieChart) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 6}
}

func (x *Dynamic_Visualization_PieChart) GetValueField() *common.ObservationField {
	if x != nil {
		return x.ValueField
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetCategoryFields() []*common.ObservationField {
	if x != nil {
		return x.CategoryFields
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetSubCategoryFields() []*common.ObservationField {
	if x != nil {
		return x.SubCategoryFields
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetMaxSlicesPerChart() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxSlicesPerChart
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetMinSlicePercentage() *wrapperspb.Int32Value {
	if x != nil {
		return x.MinSlicePercentage
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetMaxSlicesPerStack() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxSlicesPerStack
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetStackNameTemplate() *wrapperspb.StringValue {
	if x != nil {
		return x.StackNameTemplate
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetLabelDefinition() *Dynamic_Visualization_PieChart_LabelDefinition {
	if x != nil {
		return x.LabelDefinition
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetGroupNameTemplate() *wrapperspb.StringValue {
	if x != nil {
		return x.GroupNameTemplate
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetUnit() common1.Unit {
	if x != nil {
		return x.Unit
	}
	return common1.Unit(0)
}

func (x *Dynamic_Visualization_PieChart) GetCustomUnit() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomUnit
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetColorScheme() *wrapperspb.StringValue {
	if x != nil {
		return x.ColorScheme
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetHashColors() *wrapperspb.BoolValue {
	if x != nil {
		return x.HashColors
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetDecimalPrecision() *wrapperspb.Int32Value {
	if x != nil {
		return x.DecimalPrecision
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetAllowAbbreviation() *wrapperspb.BoolValue {
	if x != nil {
		return x.AllowAbbreviation
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetLegend() *common1.Legend {
	if x != nil {
		return x.Legend
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart) GetShowTotal() *wrapperspb.BoolValue {
	if x != nil {
		return x.ShowTotal
	}
	return nil
}

type Dynamic_Visualization_HorizontalBars struct {
	state             protoimpl.MessageState                           `protogen:"open.v1"`
	ValueField        *common.ObservationField                         `protobuf:"bytes,1,opt,name=value_field,json=valueField,proto3" json:"value_field,omitempty"`
	CategoryFields    []*common.ObservationField                       `protobuf:"bytes,2,rep,name=category_fields,json=categoryFields,proto3" json:"category_fields,omitempty"`
	SubCategoryFields []*common.ObservationField                       `protobuf:"bytes,3,rep,name=sub_category_fields,json=subCategoryFields,proto3" json:"sub_category_fields,omitempty"`
	MaxBarsPerChart   *wrapperspb.Int32Value                           `protobuf:"bytes,4,opt,name=max_bars_per_chart,json=maxBarsPerChart,proto3" json:"max_bars_per_chart,omitempty"`
	MaxSlicesPerBar   *wrapperspb.Int32Value                           `protobuf:"bytes,5,opt,name=max_slices_per_bar,json=maxSlicesPerBar,proto3" json:"max_slices_per_bar,omitempty"`
	StackNameTemplate *wrapperspb.StringValue                          `protobuf:"bytes,6,opt,name=stack_name_template,json=stackNameTemplate,proto3" json:"stack_name_template,omitempty"`
	ScaleType         common1.ScaleType                                `protobuf:"varint,7,opt,name=scale_type,json=scaleType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType" json:"scale_type,omitempty"`
	ColorsBy          *common1.ColorsBy                                `protobuf:"bytes,8,opt,name=colors_by,json=colorsBy,proto3" json:"colors_by,omitempty"`
	ColorScheme       *wrapperspb.StringValue                          `protobuf:"bytes,9,opt,name=color_scheme,json=colorScheme,proto3" json:"color_scheme,omitempty"`
	HashColors        *wrapperspb.BoolValue                            `protobuf:"bytes,10,opt,name=hash_colors,json=hashColors,proto3" json:"hash_colors,omitempty"`
	Unit              common1.Unit                                     `protobuf:"varint,11,opt,name=unit,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.Unit" json:"unit,omitempty"`
	CustomUnit        *wrapperspb.StringValue                          `protobuf:"bytes,12,opt,name=custom_unit,json=customUnit,proto3" json:"custom_unit,omitempty"`
	DisplayOnBar      *wrapperspb.BoolValue                            `protobuf:"bytes,13,opt,name=display_on_bar,json=displayOnBar,proto3" json:"display_on_bar,omitempty"`
	DecimalPrecision  *wrapperspb.Int32Value                           `protobuf:"bytes,14,opt,name=decimal_precision,json=decimalPrecision,proto3" json:"decimal_precision,omitempty"`
	AllowAbbreviation *wrapperspb.BoolValue                            `protobuf:"bytes,15,opt,name=allow_abbreviation,json=allowAbbreviation,proto3" json:"allow_abbreviation,omitempty"`
	YAxisMin          *wrapperspb.FloatValue                           `protobuf:"bytes,16,opt,name=y_axis_min,json=yAxisMin,proto3" json:"y_axis_min,omitempty"`
	YAxisMax          *wrapperspb.FloatValue                           `protobuf:"bytes,17,opt,name=y_axis_max,json=yAxisMax,proto3" json:"y_axis_max,omitempty"`
	Legend            *common1.Legend                                  `protobuf:"bytes,18,opt,name=legend,proto3" json:"legend,omitempty"`
	SortBy            common1.SortByType                               `protobuf:"varint,19,opt,name=sort_by,json=sortBy,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.SortByType" json:"sort_by,omitempty"`
	GroupNameTemplate *wrapperspb.StringValue                          `protobuf:"bytes,20,opt,name=group_name_template,json=groupNameTemplate,proto3" json:"group_name_template,omitempty"`
	YAxisViewBy       Dynamic_Visualization_HorizontalBars_YAxisViewBy `protobuf:"varint,21,opt,name=y_axis_view_by,json=yAxisViewBy,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.Dynamic_Visualization_HorizontalBars_YAxisViewBy" json:"y_axis_view_by,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Dynamic_Visualization_HorizontalBars) Reset() {
	*x = Dynamic_Visualization_HorizontalBars{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_HorizontalBars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_HorizontalBars) ProtoMessage() {}

func (x *Dynamic_Visualization_HorizontalBars) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_HorizontalBars.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_HorizontalBars) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 7}
}

func (x *Dynamic_Visualization_HorizontalBars) GetValueField() *common.ObservationField {
	if x != nil {
		return x.ValueField
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetCategoryFields() []*common.ObservationField {
	if x != nil {
		return x.CategoryFields
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetSubCategoryFields() []*common.ObservationField {
	if x != nil {
		return x.SubCategoryFields
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetMaxBarsPerChart() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxBarsPerChart
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetMaxSlicesPerBar() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxSlicesPerBar
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetStackNameTemplate() *wrapperspb.StringValue {
	if x != nil {
		return x.StackNameTemplate
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetScaleType() common1.ScaleType {
	if x != nil {
		return x.ScaleType
	}
	return common1.ScaleType(0)
}

func (x *Dynamic_Visualization_HorizontalBars) GetColorsBy() *common1.ColorsBy {
	if x != nil {
		return x.ColorsBy
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetColorScheme() *wrapperspb.StringValue {
	if x != nil {
		return x.ColorScheme
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetHashColors() *wrapperspb.BoolValue {
	if x != nil {
		return x.HashColors
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetUnit() common1.Unit {
	if x != nil {
		return x.Unit
	}
	return common1.Unit(0)
}

func (x *Dynamic_Visualization_HorizontalBars) GetCustomUnit() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomUnit
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetDisplayOnBar() *wrapperspb.BoolValue {
	if x != nil {
		return x.DisplayOnBar
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetDecimalPrecision() *wrapperspb.Int32Value {
	if x != nil {
		return x.DecimalPrecision
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetAllowAbbreviation() *wrapperspb.BoolValue {
	if x != nil {
		return x.AllowAbbreviation
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetYAxisMin() *wrapperspb.FloatValue {
	if x != nil {
		return x.YAxisMin
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetYAxisMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.YAxisMax
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetLegend() *common1.Legend {
	if x != nil {
		return x.Legend
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetSortBy() common1.SortByType {
	if x != nil {
		return x.SortBy
	}
	return common1.SortByType(0)
}

func (x *Dynamic_Visualization_HorizontalBars) GetGroupNameTemplate() *wrapperspb.StringValue {
	if x != nil {
		return x.GroupNameTemplate
	}
	return nil
}

func (x *Dynamic_Visualization_HorizontalBars) GetYAxisViewBy() Dynamic_Visualization_HorizontalBars_YAxisViewBy {
	if x != nil {
		return x.YAxisViewBy
	}
	return Dynamic_Visualization_HorizontalBars_Y_AXIS_VIEW_BY_UNSPECIFIED
}

type Dynamic_Visualization_VerticalBars struct {
	state             protoimpl.MessageState                `protogen:"open.v1"`
	ValueField        *common.ObservationField              `protobuf:"bytes,1,opt,name=value_field,json=valueField,proto3" json:"value_field,omitempty"`
	CategoryFields    []*common.ObservationField            `protobuf:"bytes,2,rep,name=category_fields,json=categoryFields,proto3" json:"category_fields,omitempty"`
	SubCategoryFields []*common.ObservationField            `protobuf:"bytes,3,rep,name=sub_category_fields,json=subCategoryFields,proto3" json:"sub_category_fields,omitempty"`
	MaxBarsPerChart   *wrapperspb.Int32Value                `protobuf:"bytes,4,opt,name=max_bars_per_chart,json=maxBarsPerChart,proto3" json:"max_bars_per_chart,omitempty"`
	MaxSlicesPerBar   *wrapperspb.Int32Value                `protobuf:"bytes,5,opt,name=max_slices_per_bar,json=maxSlicesPerBar,proto3" json:"max_slices_per_bar,omitempty"`
	StackNameTemplate *wrapperspb.StringValue               `protobuf:"bytes,6,opt,name=stack_name_template,json=stackNameTemplate,proto3" json:"stack_name_template,omitempty"`
	ScaleType         common1.ScaleType                     `protobuf:"varint,7,opt,name=scale_type,json=scaleType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType" json:"scale_type,omitempty"`
	ColorsBy          *common1.ColorsBy                     `protobuf:"bytes,8,opt,name=colors_by,json=colorsBy,proto3" json:"colors_by,omitempty"`
	ColorScheme       *wrapperspb.StringValue               `protobuf:"bytes,9,opt,name=color_scheme,json=colorScheme,proto3" json:"color_scheme,omitempty"`
	HashColors        *wrapperspb.BoolValue                 `protobuf:"bytes,10,opt,name=hash_colors,json=hashColors,proto3" json:"hash_colors,omitempty"`
	Unit              common1.Unit                          `protobuf:"varint,11,opt,name=unit,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.Unit" json:"unit,omitempty"`
	CustomUnit        *wrapperspb.StringValue               `protobuf:"bytes,12,opt,name=custom_unit,json=customUnit,proto3" json:"custom_unit,omitempty"`
	BarValueDisplay   Dynamic_Visualization_BarValueDisplay `protobuf:"varint,13,opt,name=bar_value_display,json=barValueDisplay,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.Dynamic_Visualization_BarValueDisplay" json:"bar_value_display,omitempty"`
	DecimalPrecision  *wrapperspb.Int32Value                `protobuf:"bytes,14,opt,name=decimal_precision,json=decimalPrecision,proto3" json:"decimal_precision,omitempty"`
	AllowAbbreviation *wrapperspb.BoolValue                 `protobuf:"bytes,15,opt,name=allow_abbreviation,json=allowAbbreviation,proto3" json:"allow_abbreviation,omitempty"`
	YAxisMin          *wrapperspb.FloatValue                `protobuf:"bytes,16,opt,name=y_axis_min,json=yAxisMin,proto3" json:"y_axis_min,omitempty"`
	YAxisMax          *wrapperspb.FloatValue                `protobuf:"bytes,17,opt,name=y_axis_max,json=yAxisMax,proto3" json:"y_axis_max,omitempty"`
	Legend            *common1.Legend                       `protobuf:"bytes,18,opt,name=legend,proto3" json:"legend,omitempty"`
	SortBy            common1.SortByType                    `protobuf:"varint,19,opt,name=sort_by,json=sortBy,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.SortByType" json:"sort_by,omitempty"`
	GroupNameTemplate *wrapperspb.StringValue               `protobuf:"bytes,20,opt,name=group_name_template,json=groupNameTemplate,proto3" json:"group_name_template,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Dynamic_Visualization_VerticalBars) Reset() {
	*x = Dynamic_Visualization_VerticalBars{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_VerticalBars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_VerticalBars) ProtoMessage() {}

func (x *Dynamic_Visualization_VerticalBars) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_VerticalBars.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_VerticalBars) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 8}
}

func (x *Dynamic_Visualization_VerticalBars) GetValueField() *common.ObservationField {
	if x != nil {
		return x.ValueField
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetCategoryFields() []*common.ObservationField {
	if x != nil {
		return x.CategoryFields
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetSubCategoryFields() []*common.ObservationField {
	if x != nil {
		return x.SubCategoryFields
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetMaxBarsPerChart() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxBarsPerChart
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetMaxSlicesPerBar() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxSlicesPerBar
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetStackNameTemplate() *wrapperspb.StringValue {
	if x != nil {
		return x.StackNameTemplate
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetScaleType() common1.ScaleType {
	if x != nil {
		return x.ScaleType
	}
	return common1.ScaleType(0)
}

func (x *Dynamic_Visualization_VerticalBars) GetColorsBy() *common1.ColorsBy {
	if x != nil {
		return x.ColorsBy
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetColorScheme() *wrapperspb.StringValue {
	if x != nil {
		return x.ColorScheme
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetHashColors() *wrapperspb.BoolValue {
	if x != nil {
		return x.HashColors
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetUnit() common1.Unit {
	if x != nil {
		return x.Unit
	}
	return common1.Unit(0)
}

func (x *Dynamic_Visualization_VerticalBars) GetCustomUnit() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomUnit
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetBarValueDisplay() Dynamic_Visualization_BarValueDisplay {
	if x != nil {
		return x.BarValueDisplay
	}
	return Dynamic_Visualization_BAR_VALUE_DISPLAY_UNSPECIFIED
}

func (x *Dynamic_Visualization_VerticalBars) GetDecimalPrecision() *wrapperspb.Int32Value {
	if x != nil {
		return x.DecimalPrecision
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetAllowAbbreviation() *wrapperspb.BoolValue {
	if x != nil {
		return x.AllowAbbreviation
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetYAxisMin() *wrapperspb.FloatValue {
	if x != nil {
		return x.YAxisMin
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetYAxisMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.YAxisMax
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetLegend() *common1.Legend {
	if x != nil {
		return x.Legend
	}
	return nil
}

func (x *Dynamic_Visualization_VerticalBars) GetSortBy() common1.SortByType {
	if x != nil {
		return x.SortBy
	}
	return common1.SortByType(0)
}

func (x *Dynamic_Visualization_VerticalBars) GetGroupNameTemplate() *wrapperspb.StringValue {
	if x != nil {
		return x.GroupNameTemplate
	}
	return nil
}

type Dynamic_Visualization_Heatmap struct {
	state       protoimpl.MessageState     `protogen:"open.v1"`
	ValueField  *common.ObservationField   `protobuf:"bytes,1,opt,name=value_field,json=valueField,proto3" json:"value_field,omitempty"`
	XAxisFields []*common.ObservationField `protobuf:"bytes,2,rep,name=x_axis_fields,json=xAxisFields,proto3" json:"x_axis_fields,omitempty"`
	YAxisFields []*common.ObservationField `protobuf:"bytes,3,rep,name=y_axis_fields,json=yAxisFields,proto3" json:"y_axis_fields,omitempty"`
	ShowNumbers *wrapperspb.BoolValue      `protobuf:"bytes,4,opt,name=show_numbers,json=showNumbers,proto3" json:"show_numbers,omitempty"`
	ScaleType   common1.ScaleType          `protobuf:"varint,5,opt,name=scale_type,json=scaleType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType" json:"scale_type,omitempty"`
	// Types that are valid to be assigned to ColorConfig:
	//
	//	*Dynamic_Visualization_Heatmap_Preset
	ColorConfig       isDynamic_Visualization_Heatmap_ColorConfig `protobuf_oneof:"color_config"`
	AllowAbbreviation *wrapperspb.BoolValue                       `protobuf:"bytes,7,opt,name=allow_abbreviation,json=allowAbbreviation,proto3" json:"allow_abbreviation,omitempty"`
	Unit              common1.Unit                                `protobuf:"varint,8,opt,name=unit,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.Unit" json:"unit,omitempty"`
	CustomUnit        *wrapperspb.StringValue                     `protobuf:"bytes,9,opt,name=custom_unit,json=customUnit,proto3" json:"custom_unit,omitempty"`
	DecimalPrecision  *wrapperspb.Int32Value                      `protobuf:"bytes,10,opt,name=decimal_precision,json=decimalPrecision,proto3" json:"decimal_precision,omitempty"`
	ColorAxisMin      *wrapperspb.FloatValue                      `protobuf:"bytes,11,opt,name=color_axis_min,json=colorAxisMin,proto3" json:"color_axis_min,omitempty"`
	ColorAxisMax      *wrapperspb.FloatValue                      `protobuf:"bytes,12,opt,name=color_axis_max,json=colorAxisMax,proto3" json:"color_axis_max,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Dynamic_Visualization_Heatmap) Reset() {
	*x = Dynamic_Visualization_Heatmap{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_Heatmap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_Heatmap) ProtoMessage() {}

func (x *Dynamic_Visualization_Heatmap) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_Heatmap.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_Heatmap) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 9}
}

func (x *Dynamic_Visualization_Heatmap) GetValueField() *common.ObservationField {
	if x != nil {
		return x.ValueField
	}
	return nil
}

func (x *Dynamic_Visualization_Heatmap) GetXAxisFields() []*common.ObservationField {
	if x != nil {
		return x.XAxisFields
	}
	return nil
}

func (x *Dynamic_Visualization_Heatmap) GetYAxisFields() []*common.ObservationField {
	if x != nil {
		return x.YAxisFields
	}
	return nil
}

func (x *Dynamic_Visualization_Heatmap) GetShowNumbers() *wrapperspb.BoolValue {
	if x != nil {
		return x.ShowNumbers
	}
	return nil
}

func (x *Dynamic_Visualization_Heatmap) GetScaleType() common1.ScaleType {
	if x != nil {
		return x.ScaleType
	}
	return common1.ScaleType(0)
}

func (x *Dynamic_Visualization_Heatmap) GetColorConfig() isDynamic_Visualization_Heatmap_ColorConfig {
	if x != nil {
		return x.ColorConfig
	}
	return nil
}

func (x *Dynamic_Visualization_Heatmap) GetPreset() Dynamic_Visualization_HeatmapColorPreset {
	if x != nil {
		if x, ok := x.ColorConfig.(*Dynamic_Visualization_Heatmap_Preset); ok {
			return x.Preset
		}
	}
	return Dynamic_Visualization_HEATMAP_COLOR_PRESET_UNSPECIFIED
}

func (x *Dynamic_Visualization_Heatmap) GetAllowAbbreviation() *wrapperspb.BoolValue {
	if x != nil {
		return x.AllowAbbreviation
	}
	return nil
}

func (x *Dynamic_Visualization_Heatmap) GetUnit() common1.Unit {
	if x != nil {
		return x.Unit
	}
	return common1.Unit(0)
}

func (x *Dynamic_Visualization_Heatmap) GetCustomUnit() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomUnit
	}
	return nil
}

func (x *Dynamic_Visualization_Heatmap) GetDecimalPrecision() *wrapperspb.Int32Value {
	if x != nil {
		return x.DecimalPrecision
	}
	return nil
}

func (x *Dynamic_Visualization_Heatmap) GetColorAxisMin() *wrapperspb.FloatValue {
	if x != nil {
		return x.ColorAxisMin
	}
	return nil
}

func (x *Dynamic_Visualization_Heatmap) GetColorAxisMax() *wrapperspb.FloatValue {
	if x != nil {
		return x.ColorAxisMax
	}
	return nil
}

type isDynamic_Visualization_Heatmap_ColorConfig interface {
	isDynamic_Visualization_Heatmap_ColorConfig()
}

type Dynamic_Visualization_Heatmap_Preset struct {
	Preset Dynamic_Visualization_HeatmapColorPreset `protobuf:"varint,6,opt,name=preset,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.Dynamic_Visualization_HeatmapColorPreset,oneof"`
}

func (*Dynamic_Visualization_Heatmap_Preset) isDynamic_Visualization_Heatmap_ColorConfig() {}

type Dynamic_Visualization_TimeSeriesTooltip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShowAllSeries *wrapperspb.BoolValue  `protobuf:"bytes,1,opt,name=show_all_series,json=showAllSeries,proto3" json:"show_all_series,omitempty"`
	ShowLabels    *wrapperspb.BoolValue  `protobuf:"bytes,2,opt,name=show_labels,json=showLabels,proto3" json:"show_labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dynamic_Visualization_TimeSeriesTooltip) Reset() {
	*x = Dynamic_Visualization_TimeSeriesTooltip{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_TimeSeriesTooltip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_TimeSeriesTooltip) ProtoMessage() {}

func (x *Dynamic_Visualization_TimeSeriesTooltip) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_TimeSeriesTooltip.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_TimeSeriesTooltip) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 10}
}

func (x *Dynamic_Visualization_TimeSeriesTooltip) GetShowAllSeries() *wrapperspb.BoolValue {
	if x != nil {
		return x.ShowAllSeries
	}
	return nil
}

func (x *Dynamic_Visualization_TimeSeriesTooltip) GetShowLabels() *wrapperspb.BoolValue {
	if x != nil {
		return x.ShowLabels
	}
	return nil
}

type Dynamic_Visualization_Table_Column struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Field         *common.ObservationField `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dynamic_Visualization_Table_Column) Reset() {
	*x = Dynamic_Visualization_Table_Column{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_Table_Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_Table_Column) ProtoMessage() {}

func (x *Dynamic_Visualization_Table_Column) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_Table_Column.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_Table_Column) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

func (x *Dynamic_Visualization_Table_Column) GetField() *common.ObservationField {
	if x != nil {
		return x.Field
	}
	return nil
}

type Dynamic_Visualization_Table_Rule struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Id            *v1.UUID                                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *wrapperspb.StringValue                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   *wrapperspb.StringValue                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	RuleScope     *Dynamic_Visualization_Table_RuleScope  `protobuf:"bytes,4,opt,name=rule_scope,json=ruleScope,proto3" json:"rule_scope,omitempty"`
	Properties    []*Dynamic_Visualization_Table_Property `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dynamic_Visualization_Table_Rule) Reset() {
	*x = Dynamic_Visualization_Table_Rule{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_Table_Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_Table_Rule) ProtoMessage() {}

func (x *Dynamic_Visualization_Table_Rule) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_Table_Rule.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_Table_Rule) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 0, 1}
}

func (x *Dynamic_Visualization_Table_Rule) GetId() *v1.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Dynamic_Visualization_Table_Rule) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Dynamic_Visualization_Table_Rule) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Dynamic_Visualization_Table_Rule) GetRuleScope() *Dynamic_Visualization_Table_RuleScope {
	if x != nil {
		return x.RuleScope
	}
	return nil
}

func (x *Dynamic_Visualization_Table_Rule) GetProperties() []*Dynamic_Visualization_Table_Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

type Dynamic_Visualization_Table_RuleScope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*Dynamic_Visualization_Table_RuleScope_Field
	//	*Dynamic_Visualization_Table_RuleScope_Regex
	//	*Dynamic_Visualization_Table_RuleScope_FieldType
	Value         isDynamic_Visualization_Table_RuleScope_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dynamic_Visualization_Table_RuleScope) Reset() {
	*x = Dynamic_Visualization_Table_RuleScope{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_Table_RuleScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_Table_RuleScope) ProtoMessage() {}

func (x *Dynamic_Visualization_Table_RuleScope) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_Table_RuleScope.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_Table_RuleScope) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 0, 2}
}

func (x *Dynamic_Visualization_Table_RuleScope) GetValue() isDynamic_Visualization_Table_RuleScope_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Dynamic_Visualization_Table_RuleScope) GetField() *common.ObservationField {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_Table_RuleScope_Field); ok {
			return x.Field
		}
	}
	return nil
}

func (x *Dynamic_Visualization_Table_RuleScope) GetRegex() *wrapperspb.StringValue {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_Table_RuleScope_Regex); ok {
			return x.Regex
		}
	}
	return nil
}

func (x *Dynamic_Visualization_Table_RuleScope) GetFieldType() Dynamic_Visualization_Table_FieldDataType {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_Table_RuleScope_FieldType); ok {
			return x.FieldType
		}
	}
	return Dynamic_Visualization_Table_FIELD_DATA_TYPE_UNSPECIFIED
}

type isDynamic_Visualization_Table_RuleScope_Value interface {
	isDynamic_Visualization_Table_RuleScope_Value()
}

type Dynamic_Visualization_Table_RuleScope_Field struct {
	Field *common.ObservationField `protobuf:"bytes,1,opt,name=field,proto3,oneof"`
}

type Dynamic_Visualization_Table_RuleScope_Regex struct {
	Regex *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=regex,proto3,oneof"`
}

type Dynamic_Visualization_Table_RuleScope_FieldType struct {
	FieldType Dynamic_Visualization_Table_FieldDataType `protobuf:"varint,3,opt,name=field_type,json=fieldType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.Dynamic_Visualization_Table_FieldDataType,oneof"`
}

func (*Dynamic_Visualization_Table_RuleScope_Field) isDynamic_Visualization_Table_RuleScope_Value() {}

func (*Dynamic_Visualization_Table_RuleScope_Regex) isDynamic_Visualization_Table_RuleScope_Value() {}

func (*Dynamic_Visualization_Table_RuleScope_FieldType) isDynamic_Visualization_Table_RuleScope_Value() {
}

type Dynamic_Visualization_Table_Property struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Id            *v1.UUID                                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Definition    *Dynamic_Visualization_Table_PropertyDefinition `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dynamic_Visualization_Table_Property) Reset() {
	*x = Dynamic_Visualization_Table_Property{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_Table_Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_Table_Property) ProtoMessage() {}

func (x *Dynamic_Visualization_Table_Property) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_Table_Property.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_Table_Property) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 0, 3}
}

func (x *Dynamic_Visualization_Table_Property) GetId() *v1.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Dynamic_Visualization_Table_Property) GetDefinition() *Dynamic_Visualization_Table_PropertyDefinition {
	if x != nil {
		return x.Definition
	}
	return nil
}

type Dynamic_Visualization_Table_PropertyDefinition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*Dynamic_Visualization_Table_PropertyDefinition_Thresholds
	//	*Dynamic_Visualization_Table_PropertyDefinition_Alignment
	Value         isDynamic_Visualization_Table_PropertyDefinition_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dynamic_Visualization_Table_PropertyDefinition) Reset() {
	*x = Dynamic_Visualization_Table_PropertyDefinition{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_Table_PropertyDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_Table_PropertyDefinition) ProtoMessage() {}

func (x *Dynamic_Visualization_Table_PropertyDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_Table_PropertyDefinition.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_Table_PropertyDefinition) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 0, 4}
}

func (x *Dynamic_Visualization_Table_PropertyDefinition) GetValue() isDynamic_Visualization_Table_PropertyDefinition_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Dynamic_Visualization_Table_PropertyDefinition) GetThresholds() *Dynamic_Visualization_Table_PropertyThresholds {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_Table_PropertyDefinition_Thresholds); ok {
			return x.Thresholds
		}
	}
	return nil
}

func (x *Dynamic_Visualization_Table_PropertyDefinition) GetAlignment() common1.TextAlignment {
	if x != nil {
		if x, ok := x.Value.(*Dynamic_Visualization_Table_PropertyDefinition_Alignment); ok {
			return x.Alignment
		}
	}
	return common1.TextAlignment(0)
}

type isDynamic_Visualization_Table_PropertyDefinition_Value interface {
	isDynamic_Visualization_Table_PropertyDefinition_Value()
}

type Dynamic_Visualization_Table_PropertyDefinition_Thresholds struct {
	Thresholds *Dynamic_Visualization_Table_PropertyThresholds `protobuf:"bytes,1,opt,name=thresholds,proto3,oneof"`
}

type Dynamic_Visualization_Table_PropertyDefinition_Alignment struct {
	Alignment common1.TextAlignment `protobuf:"varint,2,opt,name=alignment,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.TextAlignment,oneof"`
}

func (*Dynamic_Visualization_Table_PropertyDefinition_Thresholds) isDynamic_Visualization_Table_PropertyDefinition_Value() {
}

func (*Dynamic_Visualization_Table_PropertyDefinition_Alignment) isDynamic_Visualization_Table_PropertyDefinition_Value() {
}

type Dynamic_Visualization_Table_PropertyThresholds struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Values        []*common1.Threshold    `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	Type          common1.ThresholdType   `protobuf:"varint,2,opt,name=type,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdType" json:"type,omitempty"`
	Min           *wrapperspb.DoubleValue `protobuf:"bytes,3,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Max           *wrapperspb.DoubleValue `protobuf:"bytes,4,opt,name=max,proto3,oneof" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dynamic_Visualization_Table_PropertyThresholds) Reset() {
	*x = Dynamic_Visualization_Table_PropertyThresholds{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_Table_PropertyThresholds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_Table_PropertyThresholds) ProtoMessage() {}

func (x *Dynamic_Visualization_Table_PropertyThresholds) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_Table_PropertyThresholds.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_Table_PropertyThresholds) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 0, 5}
}

func (x *Dynamic_Visualization_Table_PropertyThresholds) GetValues() []*common1.Threshold {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *Dynamic_Visualization_Table_PropertyThresholds) GetType() common1.ThresholdType {
	if x != nil {
		return x.Type
	}
	return common1.ThresholdType(0)
}

func (x *Dynamic_Visualization_Table_PropertyThresholds) GetMin() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *Dynamic_Visualization_Table_PropertyThresholds) GetMax() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Max
	}
	return nil
}

type Dynamic_Visualization_PieChart_LabelDefinition struct {
	state          protoimpl.MessageState                     `protogen:"open.v1"`
	LabelSource    Dynamic_Visualization_PieChart_LabelSource `protobuf:"varint,1,opt,name=label_source,json=labelSource,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.Dynamic_Visualization_PieChart_LabelSource" json:"label_source,omitempty"`
	IsVisible      *wrapperspb.BoolValue                      `protobuf:"bytes,2,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`
	ShowName       *wrapperspb.BoolValue                      `protobuf:"bytes,3,opt,name=show_name,json=showName,proto3" json:"show_name,omitempty"`
	ShowValue      *wrapperspb.BoolValue                      `protobuf:"bytes,4,opt,name=show_value,json=showValue,proto3" json:"show_value,omitempty"`
	ShowPercentage *wrapperspb.BoolValue                      `protobuf:"bytes,5,opt,name=show_percentage,json=showPercentage,proto3" json:"show_percentage,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Dynamic_Visualization_PieChart_LabelDefinition) Reset() {
	*x = Dynamic_Visualization_PieChart_LabelDefinition{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic_Visualization_PieChart_LabelDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic_Visualization_PieChart_LabelDefinition) ProtoMessage() {}

func (x *Dynamic_Visualization_PieChart_LabelDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic_Visualization_PieChart_LabelDefinition.ProtoReflect.Descriptor instead.
func (*Dynamic_Visualization_PieChart_LabelDefinition) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP(), []int{0, 1, 6, 0}
}

func (x *Dynamic_Visualization_PieChart_LabelDefinition) GetLabelSource() Dynamic_Visualization_PieChart_LabelSource {
	if x != nil {
		return x.LabelSource
	}
	return Dynamic_Visualization_PieChart_LABEL_SOURCE_UNSPECIFIED
}

func (x *Dynamic_Visualization_PieChart_LabelDefinition) GetIsVisible() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsVisible
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart_LabelDefinition) GetShowName() *wrapperspb.BoolValue {
	if x != nil {
		return x.ShowName
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart_LabelDefinition) GetShowValue() *wrapperspb.BoolValue {
	if x != nil {
		return x.ShowValue
	}
	return nil
}

func (x *Dynamic_Visualization_PieChart_LabelDefinition) GetShowPercentage() *wrapperspb.BoolValue {
	if x != nil {
		return x.ShowPercentage
	}
	return nil
}

var File_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto protoreflect.FileDescriptor

const file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDesc = "" +
	"\n" +
	"9com/coralogixapis/dashboards/v1/ast/widgets/dynamic.proto\x12+com.coralogixapis.dashboards.v1.ast.widgets\x1a8com/coralogixapis/dashboards/v1/ast/filters/filter.proto\x1aBcom/coralogixapis/dashboards/v1/ast/widgets/common/colors_by.proto\x1aGcom/coralogixapis/dashboards/v1/ast/widgets/common/data_mode_type.proto\x1a?com/coralogixapis/dashboards/v1/ast/widgets/common/legend.proto\x1aRcom/coralogixapis/dashboards/v1/ast/widgets/common/metrics_query_editor_mode.proto\x1a>com/coralogixapis/dashboards/v1/ast/widgets/common/scale.proto\x1a@com/coralogixapis/dashboards/v1/ast/widgets/common/sort_by.proto\x1aGcom/coralogixapis/dashboards/v1/ast/widgets/common/text_alignment.proto\x1aCcom/coralogixapis/dashboards/v1/ast/widgets/common/thresholds.proto\x1a>com/coralogixapis/dashboards/v1/ast/widgets/common/units.proto\x1a=com/coralogixapis/dashboards/v1/common/logs_aggregation.proto\x1aFcom/coralogixapis/dashboards/v1/common/metrics_series_limit_type.proto\x1a>com/coralogixapis/dashboards/v1/common/observation_field.proto\x1a2com/coralogixapis/dashboards/v1/common/query.proto\x1a7com/coralogixapis/dashboards/v1/common/time_frame.proto\x1a+com/coralogixapis/dashboards/v1/types.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a.protoc-gen-openapiv3/options/annotations.proto\"\xc7\xe9\x01\n" +
	"\aDynamic\x12\x85\x01\n" +
	"\x05query\x18\x01 \x01(\v2:.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.QueryB3\x9aA02.A query object describing how to retrieve dataR\x05query\x12\x90\x01\n" +
	"\n" +
	"time_frame\x18\x02 \x01(\v27.com.coralogixapis.dashboards.v1.common.TimeFrameSelectB8\x9aA523Time frame which overrides the dashboard time frameR\ttimeFrame\x12\x95\x01\n" +
	"\x0einterpretation\x18\x03 \x01(\x0e2C.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.InterpretationB(\x9aA%2#Interpretation of the query resultsR\x0einterpretation\x12\xa3\x01\n" +
	"\rvisualization\x18\x04 \x01(\v2B.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.VisualizationB9\x9aA624Specifies how the query results should be visualizedR\rvisualization\x1a\x9d\x17\n" +
	"\x05Query\x12U\n" +
	"\x04logs\x18\x01 \x01(\v2?.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.LogsH\x00R\x04logs\x12X\n" +
	"\x05spans\x18\x02 \x01(\v2@.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.SpansH\x00R\x05spans\x12^\n" +
	"\ametrics\x18\x03 \x01(\v2B.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.MetricsH\x00R\ametrics\x12d\n" +
	"\tdataprime\x18\x04 \x01(\v2D.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.DataprimeH\x00R\tdataprime\x1a\x8c\x06\n" +
	"\x04Logs\x12\xba\x01\n" +
	"\flucene_query\x18\x01 \x01(\v23.com.coralogixapis.dashboards.v1.common.LuceneQueryBb\x9aA_2$A Lucene query string to search logsJ7{ \"value\": \"coralogix.metadata.subsystemName: cx_rum\" }R\vluceneQuery\x12{\n" +
	"\x0edata_mode_type\x18\x02 \x01(\x0e2@.com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeTypeB\x13\x9aA\x102\x0eData mode typeR\fdataModeType\x12\x8d\x01\n" +
	"\afilters\x18\x03 \x03(\v2>.com.coralogixapis.dashboards.v1.ast.filters.Filter.LogsFilterB3\x9aA02.List of filters that narrow down query resultsR\afilters\x12\x94\x01\n" +
	"\bgroup_by\x18\x04 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldB?\x9aA<2:A list of observation fields by which to group the resultsR\agroupBy\x12t\n" +
	"\vaggregation\x18\x05 \x03(\v27.com.coralogixapis.dashboards.v1.common.LogsAggregationB\x19\x9aA\x162\x14Aggregation functionR\vaggregation:-\x9aA*\n" +
	"(*\tLogsQuery2\x1bA logs variant of the query\x1a\xc5\x05\n" +
	"\x05Spans\x12\x87\x01\n" +
	"\flucene_query\x18\x01 \x01(\v23.com.coralogixapis.dashboards.v1.common.LuceneQueryB/\x9aA,2*Lucene query string to search span recordsR\vluceneQuery\x12{\n" +
	"\x0edata_mode_type\x18\x02 \x01(\x0e2@.com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeTypeB\x13\x9aA\x102\x0eData mode typeR\fdataModeType\x12z\n" +
	"\afilters\x18\x03 \x03(\v2?.com.coralogixapis.dashboards.v1.ast.filters.Filter.SpansFilterB\x1f\x9aA\x1c2\x1aList of span query filtersR\afilters\x12\x86\x01\n" +
	"\bgroup_by\x18\x04 \x03(\v2<.com.coralogixapis.dashboards.v1.common.SpanObservationFieldB-\x9aA*2(A list of fields to group the records byR\agroupBy\x12\x7f\n" +
	"\vaggregation\x18\x05 \x03(\v27.com.coralogixapis.dashboards.v1.common.LogsAggregationB$\x9aA!2\x1fSpan query aggregation functionR\vaggregation:/\x9aA,\n" +
	"**\n" +
	"SpansQuery2\x1cA spans variant of the query\x1a\xfc\x05\n" +
	"\aMetrics\x12\xa3\x01\n" +
	"\fpromql_query\x18\x01 \x01(\v23.com.coralogixapis.dashboards.v1.common.PromQlQueryBK\x9aAH2(PromQL query string for querying metricsJ\x1c{ \"value\": \"up{job='abc'}\" }R\vpromqlQuery\x12\x9b\x01\n" +
	"\x11promql_query_type\x18\x02 \x01(\x0e27.com.coralogixapis.dashboards.v1.common.PromQLQueryTypeB6\x9aA321Type of the PromQL query, can be Range or InstantR\x0fpromqlQueryType\x12\xc6\x01\n" +
	"\veditor_mode\x18\x03 \x01(\x0e2J.com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorModeBY\x9aAV2QType of the query editor used to generate the query, can be text or builder basedJ\x012R\n" +
	"editorMode\x12\xae\x01\n" +
	"\x11series_limit_type\x18\x04 \x01(\x0e2>.com.coralogixapis.dashboards.v1.common.MetricsSeriesLimitTypeBB\x9aA?2:How to limit the result using series_count_limit parameterJ\x011R\x0fseriesLimitType:3\x9aA0\n" +
	".*\fMetricsQuery2\x1eA metrics variant of the query\x1a\xbd\x02\n" +
	"\tDataprime\x12z\n" +
	"\x0fdataprime_query\x18\x01 \x01(\v26.com.coralogixapis.dashboards.v1.common.DataprimeQueryB\x19\x9aA\x162\x14Dataprime query textR\x0edataprimeQuery\x12{\n" +
	"\x0edata_mode_type\x18\x02 \x01(\x0e2@.com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeTypeB\x13\x9aA\x102\x0eData mode typeR\fdataModeType:7\x9aA4\n" +
	"2*\x0eDataprimeQuery2 A Dataprime variant of the queryB\a\n" +
	"\x05value\x1a\xfd\xc8\x01\n" +
	"\rVisualization\x12`\n" +
	"\x05table\x18\x01 \x01(\v2H.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TableH\x00R\x05table\x12\x80\x01\n" +
	"\x11time_series_lines\x18\x02 \x01(\v2R.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLinesH\x00R\x0ftimeSeriesLines\x12}\n" +
	"\x10time_series_bars\x18\x03 \x01(\v2Q.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBarsH\x00R\x0etimeSeriesBars\x12]\n" +
	"\x04stat\x18\x04 \x01(\v2G.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.StatH\x00R\x04stat\x12`\n" +
	"\x05gauge\x18\x05 \x01(\v2H.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.GaugeH\x00R\x05gauge\x12s\n" +
	"\fhexagon_bins\x18\x06 \x01(\v2N.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBinsH\x00R\vhexagonBins\x12j\n" +
	"\tpie_chart\x18\a \x01(\v2K.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChartH\x00R\bpieChart\x12|\n" +
	"\x0fhorizontal_bars\x18\b \x01(\v2Q.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBarsH\x00R\x0ehorizontalBars\x12v\n" +
	"\rvertical_bars\x18\t \x01(\v2O.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBarsH\x00R\fverticalBars\x12f\n" +
	"\aheatmap\x18\n" +
	" \x01(\v2J.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HeatmapH\x00R\aheatmap\x1a\x91\x10\n" +
	"\x05Table\x12i\n" +
	"\acolumns\x18\x01 \x03(\v2O.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.ColumnR\acolumns\x12c\n" +
	"\x05rules\x18\x02 \x03(\v2M.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.RuleR\x05rules\x1aX\n" +
	"\x06Column\x12N\n" +
	"\x05field\x18\x01 \x01(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x05field\x1a\x95\x03\n" +
	"\x04Rule\x125\n" +
	"\x02id\x18\x01 \x01(\v2%.com.coralogixapis.dashboards.v1.UUIDR\x02id\x120\n" +
	"\x04name\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\x04name\x12>\n" +
	"\vdescription\x18\x03 \x01(\v2\x1c.google.protobuf.StringValueR\vdescription\x12q\n" +
	"\n" +
	"rule_scope\x18\x04 \x01(\v2R.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.RuleScopeR\truleScope\x12q\n" +
	"\n" +
	"properties\x18\x05 \x03(\v2Q.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.PropertyR\n" +
	"properties\x1a\x95\x02\n" +
	"\tRuleScope\x12P\n" +
	"\x05field\x18\x01 \x01(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldH\x00R\x05field\x124\n" +
	"\x05regex\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueH\x00R\x05regex\x12w\n" +
	"\n" +
	"field_type\x18\x03 \x01(\x0e2V.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.FieldDataTypeH\x00R\tfieldTypeB\a\n" +
	"\x05value\x1a\xbe\x01\n" +
	"\bProperty\x125\n" +
	"\x02id\x18\x01 \x01(\v2%.com.coralogixapis.dashboards.v1.UUIDR\x02id\x12{\n" +
	"\n" +
	"definition\x18\x02 \x01(\v2[.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.PropertyDefinitionR\n" +
	"definition\x1a\xff\x01\n" +
	"\x12PropertyDefinition\x12}\n" +
	"\n" +
	"thresholds\x18\x01 \x01(\v2[.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.PropertyThresholdsH\x00R\n" +
	"thresholds\x12a\n" +
	"\talignment\x18\x02 \x01(\x0e2A.com.coralogixapis.dashboards.v1.ast.widgets.common.TextAlignmentH\x00R\talignmentB\a\n" +
	"\x05value\x1a\xbc\x02\n" +
	"\x12PropertyThresholds\x12U\n" +
	"\x06values\x18\x01 \x03(\v2=.com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdR\x06values\x12U\n" +
	"\x04type\x18\x02 \x01(\x0e2A.com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdTypeR\x04type\x123\n" +
	"\x03min\x18\x03 \x01(\v2\x1c.google.protobuf.DoubleValueH\x00R\x03min\x88\x01\x01\x123\n" +
	"\x03max\x18\x04 \x01(\v2\x1c.google.protobuf.DoubleValueH\x01R\x03max\x88\x01\x01B\x06\n" +
	"\x04_minB\x06\n" +
	"\x04_max\"\xab\x02\n" +
	"\rFieldDataType\x12\x1f\n" +
	"\x1bFIELD_DATA_TYPE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16FIELD_DATA_TYPE_NUMBER\x10\x01\x12\x1a\n" +
	"\x16FIELD_DATA_TYPE_STRING\x10\x02\x12\x1b\n" +
	"\x17FIELD_DATA_TYPE_BOOLEAN\x10\x03\x12\x1d\n" +
	"\x19FIELD_DATA_TYPE_TIMESTAMP\x10\x04\x12\x1a\n" +
	"\x16FIELD_DATA_TYPE_OBJECT\x10\x05\x12\x19\n" +
	"\x15FIELD_DATA_TYPE_ARRAY\x10\x06\x12\x19\n" +
	"\x15FIELD_DATA_TYPE_REGEX\x10\a\x12\x19\n" +
	"\x15FIELD_DATA_TYPE_UNION\x10\b\x12\x18\n" +
	"\x14FIELD_DATA_TYPE_ENUM\x10\t\x1a\xdd\x14\n" +
	"\x0fTimeSeriesLines\x12_\n" +
	"\x0etemporal_field\x18\x01 \x01(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\rtemporalField\x12[\n" +
	"\fvalue_fields\x18\x02 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\vvalueFields\x12a\n" +
	"\x0fcategory_fields\x18\x03 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x0ecategoryFields\x12q\n" +
	"\x06legend\x18\x04 \x01(\v2:.com.coralogixapis.dashboards.v1.ast.widgets.common.LegendB\x1d\x9aA\x1a2\x18Widget's legend settingsR\x06legend\x12\x94\x01\n" +
	"\atooltip\x18\x05 \x01(\v2T.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesTooltipB$\x9aA!2\x1fTooltip settings for the widgetR\atooltip\x12\xc4\x01\n" +
	"\fstacked_line\x18\x06 \x01(\x0e2^.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.StackedLineBA\x9aA>2<Type of stacked line, can be undefined, absolute or relativeR\vstackedLine\x12\xc4\x01\n" +
	"\rconnect_nulls\x18\a \x01(\v2\x1a.google.protobuf.BoolValueB\x82\x01\x9aA\x7f2vWhether the line should remain connected instead of producing scattered points when null values are present in betweenJ\x05falseR\fconnectNulls\x12\xa3\x01\n" +
	"\x14series_name_template\x18\b \x01(\v2\x1c.google.protobuf.StringValueBS\x9aAP2#Custom template for the series nameJ){ \"value\": \"Trace of {{ application }}\" }R\x12seriesNameTemplate\x12\x82\x01\n" +
	"\x12series_count_limit\x18\t \x01(\v2\x1b.google.protobuf.Int64ValueB7\x9aA42!Max count of the series per queryJ\x0f{ \"value\": 50 }R\x10seriesCountLimit\x12\x97\x01\n" +
	"\x04unit\x18\n" +
	" \x01(\x0e28.com.coralogixapis.dashboards.v1.ast.widgets.common.UnitBI\x9aAF2AUnit of the query results - one from a predefined list, or customJ\x013R\x04unit\x12\x9c\x01\n" +
	"\vcustom_unit\x18\v \x01(\v2\x1c.google.protobuf.StringValueB]\x9aAZ2DCustom unit (requires to have unit field as 'custom' to take effect)J\x12{ \"value\": \"rpm\" }R\n" +
	"customUnit\x12\x82\x01\n" +
	"\n" +
	"scale_type\x18\f \x01(\x0e2=.com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleTypeB$\x9aA!2\x1fScale type - linear/logarithmicR\tscaleType\x12\x9f\x01\n" +
	"\fcolor_scheme\x18\r \x01(\v2\x1c.google.protobuf.StringValueB^\x9aA[2AApplied color scheme for this query, one of the predefined valuesJ\x16{ \"value\": \"classic\" }R\vcolorScheme\x12\x88\x01\n" +
	"\vhash_colors\x18\x0e \x01(\v2\x1a.google.protobuf.BoolValueBK\x9aAH2?Whether to ignore color scheme and derive colors from algorithmJ\x05falseR\n" +
	"hashColors\x12\xa2\x01\n" +
	"\x11decimal_precision\x18\x0f \x01(\v2\x1b.google.protobuf.Int32ValueBX\x9aAU2PNumber indicating the decimal precision of the numeric values, within range 0-15J\x014R\x10decimalPrecision\x12\x8b\x01\n" +
	"\x12allow_abbreviation\x18\x11 \x01(\v2\x1a.google.protobuf.BoolValueB@\x9aA=24Whether to render numeric value without abbreviationJ\x05falseR\x11allowAbbreviation\x12r\n" +
	"\n" +
	"y_axis_min\x18\x12 \x01(\v2\x1b.google.protobuf.FloatValueB7\x9aA42+Number indicating the lower band for y axisJ\x05-1000R\byAxisMin\x12q\n" +
	"\n" +
	"y_axis_max\x18\x13 \x01(\v2\x1b.google.protobuf.FloatValueB6\x9aA32+Number indicating the upper band for y axisJ\x041000R\byAxisMax\"a\n" +
	"\vStackedLine\x12\x1c\n" +
	"\x18STACKED_LINE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15STACKED_LINE_ABSOLUTE\x10\x01\x12\x19\n" +
	"\x15STACKED_LINE_RELATIVE\x10\x02\x1a\xa3\x13\n" +
	"\x0eTimeSeriesBars\x12_\n" +
	"\x0etemporal_field\x18\x01 \x01(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\rtemporalField\x12[\n" +
	"\fvalue_fields\x18\x02 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\vvalueFields\x12a\n" +
	"\x0fcategory_fields\x18\x03 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x0ecategoryFields\x12q\n" +
	"\x06legend\x18\x04 \x01(\v2:.com.coralogixapis.dashboards.v1.ast.widgets.common.LegendB\x1d\x9aA\x1a2\x18Widget's legend settingsR\x06legend\x12\x94\x01\n" +
	"\atooltip\x18\x05 \x01(\v2T.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesTooltipB$\x9aA!2\x1fTooltip settings for the widgetR\atooltip\x12\xa3\x01\n" +
	"\x14series_name_template\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueBS\x9aAP2#Custom template for the series nameJ){ \"value\": \"Trace of {{ application }}\" }R\x12seriesNameTemplate\x12\x86\x01\n" +
	"\x12max_slices_per_bar\x18\a \x01(\v2\x1b.google.protobuf.Int32ValueB<\x9aA92'How many slices can fit in a single barJ\x0e{ \"value\": 8 }R\x0fmaxSlicesPerBar\x12\x97\x01\n" +
	"\x04unit\x18\b \x01(\x0e28.com.coralogixapis.dashboards.v1.ast.widgets.common.UnitBI\x9aAF2AUnit of the query results - one from a predefined list, or customJ\x013R\x04unit\x12\x9c\x01\n" +
	"\vcustom_unit\x18\t \x01(\v2\x1c.google.protobuf.StringValueB]\x9aAZ2DCustom unit (requires to have unit field as 'custom' to take effect)J\x12{ \"value\": \"rpm\" }R\n" +
	"customUnit\x12\x82\x01\n" +
	"\n" +
	"scale_type\x18\n" +
	" \x01(\x0e2=.com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleTypeB$\x9aA!2\x1fScale type - linear/logarithmicR\tscaleType\x12\x9f\x01\n" +
	"\fcolor_scheme\x18\v \x01(\v2\x1c.google.protobuf.StringValueB^\x9aA[2AApplied color scheme for this query, one of the predefined valuesJ\x16{ \"value\": \"classic\" }R\vcolorScheme\x12\x88\x01\n" +
	"\vhash_colors\x18\f \x01(\v2\x1a.google.protobuf.BoolValueBK\x9aAH2?Whether to ignore color scheme and derive colors from algorithmJ\x05falseR\n" +
	"hashColors\x12\xa2\x01\n" +
	"\x11decimal_precision\x18\r \x01(\v2\x1b.google.protobuf.Int32ValueBX\x9aAU2PNumber indicating the decimal precision of the numeric values, within range 0-15J\x014R\x10decimalPrecision\x12\x8b\x01\n" +
	"\x12allow_abbreviation\x18\x0e \x01(\v2\x1a.google.protobuf.BoolValueB@\x9aA=24Whether to render numeric value without abbreviationJ\x05falseR\x11allowAbbreviation\x12r\n" +
	"\n" +
	"y_axis_min\x18\x0f \x01(\v2\x1b.google.protobuf.FloatValueB7\x9aA42+Number indicating the lower band for y axisJ\x05-1000R\byAxisMin\x12q\n" +
	"\n" +
	"y_axis_max\x18\x10 \x01(\v2\x1b.google.protobuf.FloatValueB6\x9aA32+Number indicating the upper band for y axisJ\x041000R\byAxisMax\x12\xb0\x01\n" +
	"\x11bar_value_display\x18\x11 \x01(\x0e2R.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.BarValueDisplayB0\x9aA-2(Specifies where to display the bar valueJ\x011R\x0fbarValueDisplay\x12\x7f\n" +
	"\asort_by\x18\x12 \x01(\x0e2>.com.coralogixapis.dashboards.v1.ast.widgets.common.SortByTypeB&\x9aA#2\x1eSort type, by name or by valueJ\x011R\x06sortBy\x1a\xdd\x10\n" +
	"\x04Stat\x12Y\n" +
	"\vvalue_field\x18\x01 \x01(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\n" +
	"valueField\x12a\n" +
	"\x0fcategory_fields\x18\x02 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x0ecategoryFields\x12\x9a\x01\n" +
	"\x03min\x18\x03 \x01(\v2\x1c.google.protobuf.DoubleValueBj\x9aAg2bA minimum gauge value used in percentage threshold calculation and for visual value representationJ\x010R\x03min\x12\x9f\x01\n" +
	"\x03max\x18\x04 \x01(\v2\x1c.google.protobuf.DoubleValueBo\x9aAl2bA maximum gauge value used in percentage threshold calculation and for visual value representationJ\x06150000R\x03max\x12\x91\x01\n" +
	"\x04unit\x18\x05 \x01(\x0e28.com.coralogixapis.dashboards.v1.ast.widgets.common.UnitBC\x9aA@2;Unit of the value - one from a predefined list, or 'custom'J\x013R\x04unit\x12\xa4\x01\n" +
	"\vcustom_unit\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueBe\x9aAb2KCustom unit (requires to have unit field set as UNIT_CUSTOM to take effect)J\x13{ \"value\" : \"rpm\" }R\n" +
	"customUnit\x12\x9a\x01\n" +
	"\x0ethreshold_type\x18\a \x01(\x0e2A.com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdTypeB0\x9aA-2+Type of the threshold, relative or absoluteR\rthresholdType\x12\xb2\x01\n" +
	"\n" +
	"thresholds\x18\b \x03(\v2=.com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdBS\x9aAP2NList of value thresholds, each with a certain color and an optional name labelR\n" +
	"thresholds\x12q\n" +
	"\x06legend\x18\t \x01(\v2:.com.coralogixapis.dashboards.v1.ast.widgets.common.LegendB\x1d\x9aA\x1a2\x18Widget's legend settingsR\x06legend\x12\xb3\x01\n" +
	"\tlegend_by\x18\n" +
	" \x01(\x0e2<.com.coralogixapis.dashboards.v1.ast.widgets.common.LegendByBX\x9aAU2SIndicates how to group the legend elements, either by thresholds or by query groupsR\blegendBy\x12\xa2\x01\n" +
	"\x11decimal_precision\x18\v \x01(\v2\x1b.google.protobuf.Int32ValueBX\x9aAU2PNumber indicating the decimal precision of the numeric values, within range 0-15J\x012R\x10decimalPrecision\x12\x8b\x01\n" +
	"\x12allow_abbreviation\x18\f \x01(\v2\x1a.google.protobuf.BoolValueB@\x9aA=24Whether to render numeric value without abbreviationJ\x05falseR\x11allowAbbreviation\x12\x9b\x01\n" +
	"\x13display_series_name\x18\r \x01(\v2\x1a.google.protobuf.BoolValueBO\x9aAL2J(multi-stat display only) Whether to show the series names above the valueR\x11displaySeriesName\x12\xd0\x01\n" +
	"\fthreshold_by\x18\x0e \x01(\x0e2?.com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdByBl\x9aAi2gIndicates which widget element should be colorized as the threshold, either the value or the backgroundR\vthresholdBy\x1a\xce\x11\n" +
	"\x05Gauge\x12Y\n" +
	"\vvalue_field\x18\x01 \x01(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\n" +
	"valueField\x12a\n" +
	"\x0fcategory_fields\x18\x02 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x0ecategoryFields\x12\x9a\x01\n" +
	"\x03min\x18\x03 \x01(\v2\x1c.google.protobuf.DoubleValueBj\x9aAg2bA minimum gauge value used in percentage threshold calculation and for visual value representationJ\x010R\x03min\x12\x9f\x01\n" +
	"\x03max\x18\x04 \x01(\v2\x1c.google.protobuf.DoubleValueBo\x9aAl2bA maximum gauge value used in percentage threshold calculation and for visual value representationJ\x06150000R\x03max\x12\x91\x01\n" +
	"\x04unit\x18\x05 \x01(\x0e28.com.coralogixapis.dashboards.v1.ast.widgets.common.UnitBC\x9aA@2;Unit of the value - one from a predefined list, or 'custom'J\x013R\x04unit\x12\xa4\x01\n" +
	"\vcustom_unit\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueBe\x9aAb2KCustom unit (requires to have unit field set as UNIT_CUSTOM to take effect)J\x13{ \"value\" : \"rpm\" }R\n" +
	"customUnit\x12\x9a\x01\n" +
	"\x0ethreshold_type\x18\a \x01(\x0e2A.com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdTypeB0\x9aA-2+Type of the threshold, relative or absoluteR\rthresholdType\x12\xb2\x01\n" +
	"\n" +
	"thresholds\x18\b \x03(\v2=.com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdBS\x9aAP2NList of value thresholds, each with a certain color and an optional name labelR\n" +
	"thresholds\x12q\n" +
	"\x06legend\x18\t \x01(\v2:.com.coralogixapis.dashboards.v1.ast.widgets.common.LegendB\x1d\x9aA\x1a2\x18Widget's legend settingsR\x06legend\x12\xb3\x01\n" +
	"\tlegend_by\x18\n" +
	" \x01(\x0e2<.com.coralogixapis.dashboards.v1.ast.widgets.common.LegendByBX\x9aAU2SIndicates how to group the legend elements, either by thresholds or by query groupsR\blegendBy\x12\xa2\x01\n" +
	"\x11decimal_precision\x18\v \x01(\v2\x1b.google.protobuf.Int32ValueBX\x9aAU2PNumber indicating the decimal precision of the numeric values, within range 0-15J\x012R\x10decimalPrecision\x12\x8b\x01\n" +
	"\x12allow_abbreviation\x18\f \x01(\v2\x1a.google.protobuf.BoolValueB@\x9aA=24Whether to render numeric value without abbreviationJ\x05falseR\x11allowAbbreviation\x12\x9b\x01\n" +
	"\x0eshow_inner_arc\x18\r \x01(\v2\x1a.google.protobuf.BoolValueBY\x9aAV2MWhether to show the inner arc of gauge which graphically represents the valueJ\x05falseR\fshowInnerArc\x12\xa2\x01\n" +
	"\x0eshow_outer_arc\x18\x0e \x01(\v2\x1a.google.protobuf.BoolValueB`\x9aA]2UWhether to show the outer arc of gauge which graphically represents the min/max rangeJ\x04trueR\fshowOuterArc\x12\x9b\x01\n" +
	"\x13display_series_name\x18\x0f \x01(\v2\x1a.google.protobuf.BoolValueBO\x9aAL2J(multigauge display only) Whether to show the series names above the valueR\x11displaySeriesName\x1a\xf3\r\n" +
	"\vHexagonBins\x12Y\n" +
	"\vvalue_field\x18\x01 \x01(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\n" +
	"valueField\x12a\n" +
	"\x0fcategory_fields\x18\x02 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x0ecategoryFields\x12\x9a\x01\n" +
	"\x03min\x18\x03 \x01(\v2\x1c.google.protobuf.DoubleValueBj\x9aAg2bA minimum gauge value used in percentage threshold calculation and for visual value representationJ\x010R\x03min\x12\x9f\x01\n" +
	"\x03max\x18\x04 \x01(\v2\x1c.google.protobuf.DoubleValueBo\x9aAl2bA maximum gauge value used in percentage threshold calculation and for visual value representationJ\x06150000R\x03max\x12\x91\x01\n" +
	"\x04unit\x18\x05 \x01(\x0e28.com.coralogixapis.dashboards.v1.ast.widgets.common.UnitBC\x9aA@2;Unit of the value - one from a predefined list, or 'custom'J\x013R\x04unit\x12\xa4\x01\n" +
	"\vcustom_unit\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueBe\x9aAb2KCustom unit (requires to have unit field set as UNIT_CUSTOM to take effect)J\x13{ \"value\" : \"rpm\" }R\n" +
	"customUnit\x12\x9a\x01\n" +
	"\x0ethreshold_type\x18\a \x01(\x0e2A.com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdTypeB0\x9aA-2+Type of the threshold, relative or absoluteR\rthresholdType\x12\xb2\x01\n" +
	"\n" +
	"thresholds\x18\b \x03(\v2=.com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdBS\x9aAP2NList of value thresholds, each with a certain color and an optional name labelR\n" +
	"thresholds\x12q\n" +
	"\x06legend\x18\t \x01(\v2:.com.coralogixapis.dashboards.v1.ast.widgets.common.LegendB\x1d\x9aA\x1a2\x18Widget's legend settingsR\x06legend\x12\xb3\x01\n" +
	"\tlegend_by\x18\n" +
	" \x01(\x0e2<.com.coralogixapis.dashboards.v1.ast.widgets.common.LegendByBX\x9aAU2SIndicates how to group the legend elements, either by thresholds or by query groupsR\blegendBy\x12\xa2\x01\n" +
	"\x11decimal_precision\x18\v \x01(\v2\x1b.google.protobuf.Int32ValueBX\x9aAU2PNumber indicating the decimal precision of the numeric values, within range 0-15J\x012R\x10decimalPrecision\x12\x8b\x01\n" +
	"\x12allow_abbreviation\x18\f \x01(\v2\x1a.google.protobuf.BoolValueB@\x9aA=24Whether to render numeric value without abbreviationJ\x05falseR\x11allowAbbreviation\x1a\x92\x18\n" +
	"\bPieChart\x12Y\n" +
	"\vvalue_field\x18\x01 \x01(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\n" +
	"valueField\x12a\n" +
	"\x0fcategory_fields\x18\x02 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x0ecategoryFields\x12h\n" +
	"\x13sub_category_fields\x18\x03 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x11subCategoryFields\x12z\n" +
	"\x14max_slices_per_chart\x18\x04 \x01(\v2\x1b.google.protobuf.Int32ValueB,\x9aA)2#Maximum number of slices on a chartJ\x0224R\x11maxSlicesPerChart\x12\x8e\x01\n" +
	"\x14min_slice_percentage\x18\x05 \x01(\v2\x1b.google.protobuf.Int32ValueB?\x9aA<27Minimum percentage threshold for slices to be displayedJ\x015R\x12minSlicePercentage\x12\x82\x01\n" +
	"\x14max_slices_per_stack\x18\x06 \x01(\v2\x1b.google.protobuf.Int32ValueB4\x9aA12/How many slices can fit in a single slice stackR\x11maxSlicesPerStack\x12\xc7\x01\n" +
	"\x13stack_name_template\x18\a \x01(\v2\x1c.google.protobuf.StringValueBy\x9aAv28Custom template name of an individual slice in the stackJ:{ \"value\": \"Slice {{ group }} - subslice {{ subgroup }}\" }R\x11stackNameTemplate\x12\xa6\x01\n" +
	"\x10label_definition\x18\b \x01(\v2[.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.LabelDefinitionB\x1e\x9aA\x1b2\x19Settings for slice labelsR\x0flabelDefinition\x12\xb1\x01\n" +
	"\x13group_name_template\x18\t \x01(\v2\x1c.google.protobuf.StringValueBc\x9aA`27Custom template name for a group, can contain variablesJ%{ \"value\": \"Slice - {{ variable }}\" }R\x11groupNameTemplate\x12\x8f\x01\n" +
	"\x04unit\x18\n" +
	" \x01(\x0e28.com.coralogixapis.dashboards.v1.ast.widgets.common.UnitBA\x9aA>29Unit of the value - one from a predefined list, or customJ\x010R\x04unit\x12\xa0\x01\n" +
	"\vcustom_unit\x18\v \x01(\v2\x1c.google.protobuf.StringValueBa\x9aA^2HCustom unit (requires the unit field to be set to custom to take effect)J\x12{ \"value\": \"mph\" }R\n" +
	"customUnit\x12\x90\x01\n" +
	"\fcolor_scheme\x18\f \x01(\v2\x1c.google.protobuf.StringValueBO\x9aAL22Applied color scheme, one of the predefined valuesJ\x16{ \"value\": \"classic\" }R\vcolorScheme\x12\x88\x01\n" +
	"\vhash_colors\x18\r \x01(\v2\x1a.google.protobuf.BoolValueBK\x9aAH2?Whether to ignore color scheme and derive colors from algorithmJ\x05falseR\n" +
	"hashColors\x12\xa2\x01\n" +
	"\x11decimal_precision\x18\x0e \x01(\v2\x1b.google.protobuf.Int32ValueBX\x9aAU2PNumber indicating the decimal precision of the numeric values, within range 0-15J\x015R\x10decimalPrecision\x12\x8b\x01\n" +
	"\x12allow_abbreviation\x18\x0f \x01(\v2\x1a.google.protobuf.BoolValueB@\x9aA=24Whether to render numeric value without abbreviationJ\x05falseR\x11allowAbbreviation\x12q\n" +
	"\x06legend\x18\x10 \x01(\v2:.com.coralogixapis.dashboards.v1.ast.widgets.common.LegendB\x1d\x9aA\x1a2\x18Widget's legend settingsR\x06legend\x12r\n" +
	"\n" +
	"show_total\x18\x11 \x01(\v2\x1a.google.protobuf.BoolValueB7\x9aA42+Whether to show the total amount as a titleJ\x05falseR\tshowTotal\x1a\xda\x04\n" +
	"\x0fLabelDefinition\x12\x94\x01\n" +
	"\flabel_source\x18\x01 \x01(\x0e2W.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.LabelSourceB\x18\x9aA\x152\x13Source of the labelR\vlabelSource\x12R\n" +
	"\n" +
	"is_visible\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueB\x17\x9aA\x142\x12Are labels visibleR\tisVisible\x12l\n" +
	"\tshow_name\x18\x03 \x01(\v2\x1a.google.protobuf.BoolValueB3\x9aA02.Whether to show the name of slice in the labelR\bshowName\x12k\n" +
	"\n" +
	"show_value\x18\x04 \x01(\v2\x1a.google.protobuf.BoolValueB0\x9aA-2+Whether to show value of slice in the labelR\tshowValue\x12\x80\x01\n" +
	"\x0fshow_percentage\x18\x05 \x01(\v2\x1a.google.protobuf.BoolValueB;\x9aA826Whether to show percentage value of slice in the labelR\x0eshowPercentage\"[\n" +
	"\vLabelSource\x12\x1c\n" +
	"\x18LABEL_SOURCE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12LABEL_SOURCE_INNER\x10\x01\x12\x16\n" +
	"\x12LABEL_SOURCE_STACK\x10\x02\x1a\xdb\x16\n" +
	"\x0eHorizontalBars\x12Y\n" +
	"\vvalue_field\x18\x01 \x01(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\n" +
	"valueField\x12a\n" +
	"\x0fcategory_fields\x18\x02 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x0ecategoryFields\x12h\n" +
	"\x13sub_category_fields\x18\x03 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x11subCategoryFields\x12t\n" +
	"\x12max_bars_per_chart\x18\x04 \x01(\v2\x1b.google.protobuf.Int32ValueB*\x9aA'2!Maximum number of bars on a chartJ\x0220R\x0fmaxBarsPerChart\x12v\n" +
	"\x12max_slices_per_bar\x18\x05 \x01(\v2\x1b.google.protobuf.Int32ValueB,\x9aA)2'How many slices can fit in a single barR\x0fmaxSlicesPerBar\x12~\n" +
	"\x13stack_name_template\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueB0\x9aA-2+Custom template name of an individual stackR\x11stackNameTemplate\x12\x82\x01\n" +
	"\n" +
	"scale_type\x18\a \x01(\x0e2=.com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleTypeB$\x9aA!2\x1fScale type - linear/logarithmicR\tscaleType\x12\x86\x01\n" +
	"\tcolors_by\x18\b \x01(\v2<.com.coralogixapis.dashboards.v1.ast.widgets.common.ColorsByB+\x9aA(2&How the bar colors should be organizedR\bcolorsBy\x12\x90\x01\n" +
	"\fcolor_scheme\x18\t \x01(\v2\x1c.google.protobuf.StringValueBO\x9aAL22Applied color scheme, one of the predefined valuesJ\x16{ \"value\": \"classic\" }R\vcolorScheme\x12\x88\x01\n" +
	"\vhash_colors\x18\n" +
	" \x01(\v2\x1a.google.protobuf.BoolValueBK\x9aAH2?Whether to ignore color scheme and derive colors from algorithmJ\x05falseR\n" +
	"hashColors\x12\x97\x01\n" +
	"\x04unit\x18\v \x01(\x0e28.com.coralogixapis.dashboards.v1.ast.widgets.common.UnitBI\x9aAF2AUnit of the query results - one from a predefined list, or customJ\x013R\x04unit\x12\x9e\x01\n" +
	"\vcustom_unit\x18\f \x01(\v2\x1c.google.protobuf.StringValueB_\x9aA\\2FCustom unit (requires to have unit field set to custom to take effect)J\x12{ \"value\": \"mph\" }R\n" +
	"customUnit\x12o\n" +
	"\x0edisplay_on_bar\x18\r \x01(\v2\x1a.google.protobuf.BoolValueB-\x9aA*2(Specifies where to display the bar valueR\fdisplayOnBar\x12\xa2\x01\n" +
	"\x11decimal_precision\x18\x0e \x01(\v2\x1b.google.protobuf.Int32ValueBX\x9aAU2PNumber indicating the decimal precision of the numeric values, within range 0-15J\x014R\x10decimalPrecision\x12\x8b\x01\n" +
	"\x12allow_abbreviation\x18\x0f \x01(\v2\x1a.google.protobuf.BoolValueB@\x9aA=24Whether to render numeric value without abbreviationJ\x05falseR\x11allowAbbreviation\x12r\n" +
	"\n" +
	"y_axis_min\x18\x10 \x01(\v2\x1b.google.protobuf.FloatValueB7\x9aA42+Number indicating the lower band for y axisJ\x05-1000R\byAxisMin\x12q\n" +
	"\n" +
	"y_axis_max\x18\x11 \x01(\v2\x1b.google.protobuf.FloatValueB6\x9aA32+Number indicating the upper band for y axisJ\x041000R\byAxisMax\x12q\n" +
	"\x06legend\x18\x12 \x01(\v2:.com.coralogixapis.dashboards.v1.ast.widgets.common.LegendB\x1d\x9aA\x1a2\x18Widget's legend settingsR\x06legend\x12\x7f\n" +
	"\asort_by\x18\x13 \x01(\x0e2>.com.coralogixapis.dashboards.v1.ast.widgets.common.SortByTypeB&\x9aA#2\x1eSort type, by name or by valueJ\x011R\x06sortBy\x12\xb1\x01\n" +
	"\x13group_name_template\x18\x14 \x01(\v2\x1c.google.protobuf.StringValueBc\x9aA`27Custom template name for a group, can contain variablesJ%{ \"value\": \"Slice - {{ variable }}\" }R\x11groupNameTemplate\x12\xb2\x01\n" +
	"\x0ey_axis_view_by\x18\x15 \x01(\x0e2].com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.YAxisViewByB.\x9aA+2)Specifies how to organize the y-axis viewR\vyAxisViewBy\"d\n" +
	"\vYAxisViewBy\x12\x1e\n" +
	"\x1aY_AXIS_VIEW_BY_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17Y_AXIS_VIEW_BY_CATEGORY\x10\x01\x12\x18\n" +
	"\x14Y_AXIS_VIEW_BY_VALUE\x10\x02\x1a\xfd\x14\n" +
	"\fVerticalBars\x12Y\n" +
	"\vvalue_field\x18\x01 \x01(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\n" +
	"valueField\x12a\n" +
	"\x0fcategory_fields\x18\x02 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x0ecategoryFields\x12h\n" +
	"\x13sub_category_fields\x18\x03 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\x11subCategoryFields\x12t\n" +
	"\x12max_bars_per_chart\x18\x04 \x01(\v2\x1b.google.protobuf.Int32ValueB*\x9aA'2!Maximum number of bars on a chartJ\x0220R\x0fmaxBarsPerChart\x12v\n" +
	"\x12max_slices_per_bar\x18\x05 \x01(\v2\x1b.google.protobuf.Int32ValueB,\x9aA)2'How many slices can fit in a single barR\x0fmaxSlicesPerBar\x12~\n" +
	"\x13stack_name_template\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueB0\x9aA-2+Custom template name of an individual stackR\x11stackNameTemplate\x12\x82\x01\n" +
	"\n" +
	"scale_type\x18\a \x01(\x0e2=.com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleTypeB$\x9aA!2\x1fScale type - linear/logarithmicR\tscaleType\x12\x86\x01\n" +
	"\tcolors_by\x18\b \x01(\v2<.com.coralogixapis.dashboards.v1.ast.widgets.common.ColorsByB+\x9aA(2&How the bar colors should be organizedR\bcolorsBy\x12\x90\x01\n" +
	"\fcolor_scheme\x18\t \x01(\v2\x1c.google.protobuf.StringValueBO\x9aAL22Applied color scheme, one of the predefined valuesJ\x16{ \"value\": \"classic\" }R\vcolorScheme\x12\x88\x01\n" +
	"\vhash_colors\x18\n" +
	" \x01(\v2\x1a.google.protobuf.BoolValueBK\x9aAH2?Whether to ignore color scheme and derive colors from algorithmJ\x05falseR\n" +
	"hashColors\x12\x97\x01\n" +
	"\x04unit\x18\v \x01(\x0e28.com.coralogixapis.dashboards.v1.ast.widgets.common.UnitBI\x9aAF2AUnit of the query results - one from a predefined list, or customJ\x013R\x04unit\x12\x9e\x01\n" +
	"\vcustom_unit\x18\f \x01(\v2\x1c.google.protobuf.StringValueB_\x9aA\\2FCustom unit (requires to have unit field set to custom to take effect)J\x12{ \"value\": \"mph\" }R\n" +
	"customUnit\x12\xad\x01\n" +
	"\x11bar_value_display\x18\r \x01(\x0e2R.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.BarValueDisplayB-\x9aA*2(Specifies where to display the bar valueR\x0fbarValueDisplay\x12\xa2\x01\n" +
	"\x11decimal_precision\x18\x0e \x01(\v2\x1b.google.protobuf.Int32ValueBX\x9aAU2PNumber indicating the decimal precision of the numeric values, within range 0-15J\x014R\x10decimalPrecision\x12\x8b\x01\n" +
	"\x12allow_abbreviation\x18\x0f \x01(\v2\x1a.google.protobuf.BoolValueB@\x9aA=24Whether to render numeric value without abbreviationJ\x05falseR\x11allowAbbreviation\x12r\n" +
	"\n" +
	"y_axis_min\x18\x10 \x01(\v2\x1b.google.protobuf.FloatValueB7\x9aA42+Number indicating the lower band for y axisJ\x05-1000R\byAxisMin\x12q\n" +
	"\n" +
	"y_axis_max\x18\x11 \x01(\v2\x1b.google.protobuf.FloatValueB6\x9aA32+Number indicating the upper band for y axisJ\x041000R\byAxisMax\x12q\n" +
	"\x06legend\x18\x12 \x01(\v2:.com.coralogixapis.dashboards.v1.ast.widgets.common.LegendB\x1d\x9aA\x1a2\x18Widget's legend settingsR\x06legend\x12\x7f\n" +
	"\asort_by\x18\x13 \x01(\x0e2>.com.coralogixapis.dashboards.v1.ast.widgets.common.SortByTypeB&\x9aA#2\x1eSort type, by name or by valueJ\x011R\x06sortBy\x12\xb1\x01\n" +
	"\x13group_name_template\x18\x14 \x01(\v2\x1c.google.protobuf.StringValueBc\x9aA`27Custom template name for a group, can contain variablesJ%{ \"value\": \"Slice - {{ variable }}\" }R\x11groupNameTemplate\x1a\xcf\r\n" +
	"\aHeatmap\x12Y\n" +
	"\vvalue_field\x18\x01 \x01(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\n" +
	"valueField\x12\\\n" +
	"\rx_axis_fields\x18\x02 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\vxAxisFields\x12\\\n" +
	"\ry_axis_fields\x18\x03 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldR\vyAxisFields\x12}\n" +
	"\fshow_numbers\x18\x04 \x01(\v2\x1a.google.protobuf.BoolValueB>\x9aA;29Whether to render numeric values inside the heatmap tilesR\vshowNumbers\x12\x82\x01\n" +
	"\n" +
	"scale_type\x18\x05 \x01(\x0e2=.com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleTypeB$\x9aA!2\x1fScale type - linear/logarithmicR\tscaleType\x12\x99\x01\n" +
	"\x06preset\x18\x06 \x01(\x0e2U.com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HeatmapColorPresetB(\x9aA%2#Color configuration for the heatmapH\x00R\x06preset\x12\x8b\x01\n" +
	"\x12allow_abbreviation\x18\a \x01(\v2\x1a.google.protobuf.BoolValueB@\x9aA=24Whether to render numeric value without abbreviationJ\x05falseR\x11allowAbbreviation\x12\x97\x01\n" +
	"\x04unit\x18\b \x01(\x0e28.com.coralogixapis.dashboards.v1.ast.widgets.common.UnitBI\x9aAF2AUnit of the query results - one from a predefined list, or customJ\x013R\x04unit\x12\x9c\x01\n" +
	"\vcustom_unit\x18\t \x01(\v2\x1c.google.protobuf.StringValueB]\x9aAZ2DCustom unit (requires to have unit field as 'custom' to take effect)J\x12{ \"value\": \"rpm\" }R\n" +
	"customUnit\x12\xa2\x01\n" +
	"\x11decimal_precision\x18\n" +
	" \x01(\v2\x1b.google.protobuf.Int32ValueBX\x9aAU2PNumber indicating the decimal precision of the numeric values, within range 0-15J\x014R\x10decimalPrecision\x12\xc9\x01\n" +
	"\x0ecolor_axis_min\x18\v \x01(\v2\x1b.google.protobuf.FloatValueB\x85\x01\x9aA\x81\x012xOptional number indicating the lowest value for gradient color axis. Automatically calculated from data if not provided.J\x05-1000R\fcolorAxisMin\x12\xc4\x01\n" +
	"\x0ecolor_axis_max\x18\f \x01(\v2\x1b.google.protobuf.FloatValueB\x80\x01\x9aA}2uOptional number indicating the max value for gradient color axis. Automatically calculated from data if not provided.J\x041000R\fcolorAxisMaxB\x0e\n" +
	"\fcolor_config\x1a\x89\x02\n" +
	"\x11TimeSeriesTooltip\x12\xab\x01\n" +
	"\x0fshow_all_series\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueBg\x9aAd2\\Type of the tooltip display, can be showing single series value or all series values at onceJ\x04trueR\rshowAllSeries\x12F\n" +
	"\vshow_labels\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueB\t\x9aA\x06J\x04trueR\n" +
	"showLabels\"\xe0\x02\n" +
	"\x12HeatmapColorPreset\x12$\n" +
	" HEATMAP_COLOR_PRESET_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19HEATMAP_COLOR_PRESET_BLUE\x10\x01\x12\x1e\n" +
	"\x1aHEATMAP_COLOR_PRESET_GREEN\x10\x02\x12\x1c\n" +
	"\x18HEATMAP_COLOR_PRESET_RED\x10\x03\x12\"\n" +
	"\x1eHEATMAP_COLOR_PRESET_THRESHOLD\x10\x04\x12&\n" +
	"\"HEATMAP_COLOR_PRESET_BLUE_REVERSED\x10\x05\x12'\n" +
	"#HEATMAP_COLOR_PRESET_GREEN_REVERSED\x10\x06\x12%\n" +
	"!HEATMAP_COLOR_PRESET_RED_REVERSED\x10\a\x12+\n" +
	"'HEATMAP_COLOR_PRESET_THRESHOLD_REVERSED\x10\b\"\x89\x01\n" +
	"\x0fBarValueDisplay\x12!\n" +
	"\x1dBAR_VALUE_DISPLAY_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15BAR_VALUE_DISPLAY_TOP\x10\x01\x12\x1c\n" +
	"\x18BAR_VALUE_DISPLAY_INSIDE\x10\x02\x12\x1a\n" +
	"\x16BAR_VALUE_DISPLAY_BOTH\x10\x03B\a\n" +
	"\x05value\"\xc1\x04\n" +
	"\x0eInterpretation\x12\x1e\n" +
	"\x1aINTERPRETATION_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dINTERPRETATION_RAW_DATA_TABLE\x10\x01\x12'\n" +
	"#INTERPRETATION_TREND_OVER_TIME_LINE\x10\x02\x12#\n" +
	"\x1fINTERPRETATION_SINGLE_VALUE_KPI\x10\x03\x12\"\n" +
	"\x1eINTERPRETATION_MULTI_VALUE_KPI\x10\x04\x125\n" +
	"1INTERPRETATION_CATEGORICAL_ANALYSIS_VERTICAL_BARS\x10\x05\x12(\n" +
	"$INTERPRETATION_SINGLE_VALUE_KPI_STAT\x10\x06\x12)\n" +
	"%INTERPRETATION_SINGLE_VALUE_KPI_GAUGE\x10\a\x12'\n" +
	"#INTERPRETATION_MULTI_VALUE_KPI_STAT\x10\b\x12(\n" +
	"$INTERPRETATION_MULTI_VALUE_KPI_GAUGE\x10\t\x12/\n" +
	"+INTERPRETATION_MULTI_VALUE_KPI_HEXAGON_BINS\x10\n" +
	"\x121\n" +
	"-INTERPRETATION_CATEGORICAL_ANALYSIS_PIE_CHART\x10\v\x127\n" +
	"3INTERPRETATION_CATEGORICAL_ANALYSIS_HORIZONTAL_BARS\x10\fb\x06proto3"

var (
	file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescOnce sync.Once
	file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescData []byte
)

func file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDesc), len(file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDesc)))
	})
	return file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDescData
}

var file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_goTypes = []any{
	(Dynamic_Interpretation)(0),                            // 0: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Interpretation
	(Dynamic_Visualization_HeatmapColorPreset)(0),          // 1: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HeatmapColorPreset
	(Dynamic_Visualization_BarValueDisplay)(0),             // 2: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.BarValueDisplay
	(Dynamic_Visualization_Table_FieldDataType)(0),         // 3: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.FieldDataType
	(Dynamic_Visualization_TimeSeriesLines_StackedLine)(0), // 4: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.StackedLine
	(Dynamic_Visualization_PieChart_LabelSource)(0),        // 5: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.LabelSource
	(Dynamic_Visualization_HorizontalBars_YAxisViewBy)(0),  // 6: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.YAxisViewBy
	(*Dynamic)(nil),                                        // 7: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic
	(*Dynamic_Query)(nil),                                  // 8: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query
	(*Dynamic_Visualization)(nil),                          // 9: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization
	(*Dynamic_Query_Logs)(nil),                             // 10: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Logs
	(*Dynamic_Query_Spans)(nil),                            // 11: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Spans
	(*Dynamic_Query_Metrics)(nil),                          // 12: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Metrics
	(*Dynamic_Query_Dataprime)(nil),                        // 13: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Dataprime
	(*Dynamic_Visualization_Table)(nil),                    // 14: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table
	(*Dynamic_Visualization_TimeSeriesLines)(nil),          // 15: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines
	(*Dynamic_Visualization_TimeSeriesBars)(nil),           // 16: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars
	(*Dynamic_Visualization_Stat)(nil),                     // 17: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat
	(*Dynamic_Visualization_Gauge)(nil),                    // 18: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge
	(*Dynamic_Visualization_HexagonBins)(nil),              // 19: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBins
	(*Dynamic_Visualization_PieChart)(nil),                 // 20: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart
	(*Dynamic_Visualization_HorizontalBars)(nil),           // 21: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars
	(*Dynamic_Visualization_VerticalBars)(nil),             // 22: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars
	(*Dynamic_Visualization_Heatmap)(nil),                  // 23: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Heatmap
	(*Dynamic_Visualization_TimeSeriesTooltip)(nil),        // 24: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesTooltip
	(*Dynamic_Visualization_Table_Column)(nil),             // 25: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.Column
	(*Dynamic_Visualization_Table_Rule)(nil),               // 26: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.Rule
	(*Dynamic_Visualization_Table_RuleScope)(nil),          // 27: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.RuleScope
	(*Dynamic_Visualization_Table_Property)(nil),           // 28: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.Property
	(*Dynamic_Visualization_Table_PropertyDefinition)(nil), // 29: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.PropertyDefinition
	(*Dynamic_Visualization_Table_PropertyThresholds)(nil), // 30: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.PropertyThresholds
	(*Dynamic_Visualization_PieChart_LabelDefinition)(nil), // 31: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.LabelDefinition
	(*common.TimeFrameSelect)(nil),                         // 32: com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	(*common.LuceneQuery)(nil),                             // 33: com.coralogixapis.dashboards.v1.common.LuceneQuery
	(common1.DataModeType)(0),                              // 34: com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType
	(*filters.Filter_LogsFilter)(nil),                      // 35: com.coralogixapis.dashboards.v1.ast.filters.Filter.LogsFilter
	(*common.ObservationField)(nil),                        // 36: com.coralogixapis.dashboards.v1.common.ObservationField
	(*common.LogsAggregation)(nil),                         // 37: com.coralogixapis.dashboards.v1.common.LogsAggregation
	(*filters.Filter_SpansFilter)(nil),                     // 38: com.coralogixapis.dashboards.v1.ast.filters.Filter.SpansFilter
	(*common.SpanObservationField)(nil),                    // 39: com.coralogixapis.dashboards.v1.common.SpanObservationField
	(*common.PromQlQuery)(nil),                             // 40: com.coralogixapis.dashboards.v1.common.PromQlQuery
	(common.PromQLQueryType)(0),                            // 41: com.coralogixapis.dashboards.v1.common.PromQLQueryType
	(common1.MetricsQueryEditorMode)(0),                    // 42: com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorMode
	(common.MetricsSeriesLimitType)(0),                     // 43: com.coralogixapis.dashboards.v1.common.MetricsSeriesLimitType
	(*common.DataprimeQuery)(nil),                          // 44: com.coralogixapis.dashboards.v1.common.DataprimeQuery
	(*common1.Legend)(nil),                                 // 45: com.coralogixapis.dashboards.v1.ast.widgets.common.Legend
	(*wrapperspb.BoolValue)(nil),                           // 46: google.protobuf.BoolValue
	(*wrapperspb.StringValue)(nil),                         // 47: google.protobuf.StringValue
	(*wrapperspb.Int64Value)(nil),                          // 48: google.protobuf.Int64Value
	(common1.Unit)(0),                                      // 49: com.coralogixapis.dashboards.v1.ast.widgets.common.Unit
	(common1.ScaleType)(0),                                 // 50: com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType
	(*wrapperspb.Int32Value)(nil),                          // 51: google.protobuf.Int32Value
	(*wrapperspb.FloatValue)(nil),                          // 52: google.protobuf.FloatValue
	(common1.SortByType)(0),                                // 53: com.coralogixapis.dashboards.v1.ast.widgets.common.SortByType
	(*wrapperspb.DoubleValue)(nil),                         // 54: google.protobuf.DoubleValue
	(common1.ThresholdType)(0),                             // 55: com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdType
	(*common1.Threshold)(nil),                              // 56: com.coralogixapis.dashboards.v1.ast.widgets.common.Threshold
	(common1.LegendBy)(0),                                  // 57: com.coralogixapis.dashboards.v1.ast.widgets.common.LegendBy
	(common1.ThresholdBy)(0),                               // 58: com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdBy
	(*common1.ColorsBy)(nil),                               // 59: com.coralogixapis.dashboards.v1.ast.widgets.common.ColorsBy
	(*v1.UUID)(nil),                                        // 60: com.coralogixapis.dashboards.v1.UUID
	(common1.TextAlignment)(0),                             // 61: com.coralogixapis.dashboards.v1.ast.widgets.common.TextAlignment
}
var file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_depIdxs = []int32{
	8,   // 0: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.query:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query
	32,  // 1: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.time_frame:type_name -> com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	0,   // 2: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.interpretation:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Interpretation
	9,   // 3: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.visualization:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization
	10,  // 4: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.logs:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Logs
	11,  // 5: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.spans:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Spans
	12,  // 6: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.metrics:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Metrics
	13,  // 7: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.dataprime:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Dataprime
	14,  // 8: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.table:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table
	15,  // 9: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.time_series_lines:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines
	16,  // 10: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.time_series_bars:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars
	17,  // 11: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.stat:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat
	18,  // 12: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.gauge:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge
	19,  // 13: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.hexagon_bins:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBins
	20,  // 14: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.pie_chart:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart
	21,  // 15: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.horizontal_bars:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars
	22,  // 16: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.vertical_bars:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars
	23,  // 17: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.heatmap:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Heatmap
	33,  // 18: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Logs.lucene_query:type_name -> com.coralogixapis.dashboards.v1.common.LuceneQuery
	34,  // 19: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Logs.data_mode_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType
	35,  // 20: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Logs.filters:type_name -> com.coralogixapis.dashboards.v1.ast.filters.Filter.LogsFilter
	36,  // 21: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Logs.group_by:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	37,  // 22: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Logs.aggregation:type_name -> com.coralogixapis.dashboards.v1.common.LogsAggregation
	33,  // 23: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Spans.lucene_query:type_name -> com.coralogixapis.dashboards.v1.common.LuceneQuery
	34,  // 24: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Spans.data_mode_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType
	38,  // 25: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Spans.filters:type_name -> com.coralogixapis.dashboards.v1.ast.filters.Filter.SpansFilter
	39,  // 26: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Spans.group_by:type_name -> com.coralogixapis.dashboards.v1.common.SpanObservationField
	37,  // 27: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Spans.aggregation:type_name -> com.coralogixapis.dashboards.v1.common.LogsAggregation
	40,  // 28: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Metrics.promql_query:type_name -> com.coralogixapis.dashboards.v1.common.PromQlQuery
	41,  // 29: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Metrics.promql_query_type:type_name -> com.coralogixapis.dashboards.v1.common.PromQLQueryType
	42,  // 30: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Metrics.editor_mode:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorMode
	43,  // 31: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Metrics.series_limit_type:type_name -> com.coralogixapis.dashboards.v1.common.MetricsSeriesLimitType
	44,  // 32: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Dataprime.dataprime_query:type_name -> com.coralogixapis.dashboards.v1.common.DataprimeQuery
	34,  // 33: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Query.Dataprime.data_mode_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType
	25,  // 34: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.columns:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.Column
	26,  // 35: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.rules:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.Rule
	36,  // 36: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.temporal_field:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 37: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.value_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 38: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.category_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	45,  // 39: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.legend:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Legend
	24,  // 40: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.tooltip:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesTooltip
	4,   // 41: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.stacked_line:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.StackedLine
	46,  // 42: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.connect_nulls:type_name -> google.protobuf.BoolValue
	47,  // 43: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.series_name_template:type_name -> google.protobuf.StringValue
	48,  // 44: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.series_count_limit:type_name -> google.protobuf.Int64Value
	49,  // 45: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.unit:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Unit
	47,  // 46: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.custom_unit:type_name -> google.protobuf.StringValue
	50,  // 47: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.scale_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType
	47,  // 48: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.color_scheme:type_name -> google.protobuf.StringValue
	46,  // 49: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.hash_colors:type_name -> google.protobuf.BoolValue
	51,  // 50: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.decimal_precision:type_name -> google.protobuf.Int32Value
	46,  // 51: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.allow_abbreviation:type_name -> google.protobuf.BoolValue
	52,  // 52: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.y_axis_min:type_name -> google.protobuf.FloatValue
	52,  // 53: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesLines.y_axis_max:type_name -> google.protobuf.FloatValue
	36,  // 54: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.temporal_field:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 55: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.value_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 56: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.category_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	45,  // 57: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.legend:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Legend
	24,  // 58: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.tooltip:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesTooltip
	47,  // 59: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.series_name_template:type_name -> google.protobuf.StringValue
	51,  // 60: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.max_slices_per_bar:type_name -> google.protobuf.Int32Value
	49,  // 61: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.unit:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Unit
	47,  // 62: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.custom_unit:type_name -> google.protobuf.StringValue
	50,  // 63: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.scale_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType
	47,  // 64: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.color_scheme:type_name -> google.protobuf.StringValue
	46,  // 65: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.hash_colors:type_name -> google.protobuf.BoolValue
	51,  // 66: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.decimal_precision:type_name -> google.protobuf.Int32Value
	46,  // 67: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.allow_abbreviation:type_name -> google.protobuf.BoolValue
	52,  // 68: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.y_axis_min:type_name -> google.protobuf.FloatValue
	52,  // 69: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.y_axis_max:type_name -> google.protobuf.FloatValue
	2,   // 70: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.bar_value_display:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.BarValueDisplay
	53,  // 71: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesBars.sort_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.SortByType
	36,  // 72: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat.value_field:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 73: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat.category_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	54,  // 74: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat.min:type_name -> google.protobuf.DoubleValue
	54,  // 75: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat.max:type_name -> google.protobuf.DoubleValue
	49,  // 76: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat.unit:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Unit
	47,  // 77: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat.custom_unit:type_name -> google.protobuf.StringValue
	55,  // 78: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat.threshold_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdType
	56,  // 79: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat.thresholds:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Threshold
	45,  // 80: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat.legend:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Legend
	57,  // 81: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat.legend_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.LegendBy
	51,  // 82: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat.decimal_precision:type_name -> google.protobuf.Int32Value
	46,  // 83: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat.allow_abbreviation:type_name -> google.protobuf.BoolValue
	46,  // 84: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat.display_series_name:type_name -> google.protobuf.BoolValue
	58,  // 85: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Stat.threshold_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdBy
	36,  // 86: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.value_field:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 87: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.category_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	54,  // 88: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.min:type_name -> google.protobuf.DoubleValue
	54,  // 89: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.max:type_name -> google.protobuf.DoubleValue
	49,  // 90: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.unit:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Unit
	47,  // 91: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.custom_unit:type_name -> google.protobuf.StringValue
	55,  // 92: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.threshold_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdType
	56,  // 93: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.thresholds:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Threshold
	45,  // 94: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.legend:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Legend
	57,  // 95: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.legend_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.LegendBy
	51,  // 96: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.decimal_precision:type_name -> google.protobuf.Int32Value
	46,  // 97: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.allow_abbreviation:type_name -> google.protobuf.BoolValue
	46,  // 98: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.show_inner_arc:type_name -> google.protobuf.BoolValue
	46,  // 99: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.show_outer_arc:type_name -> google.protobuf.BoolValue
	46,  // 100: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Gauge.display_series_name:type_name -> google.protobuf.BoolValue
	36,  // 101: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBins.value_field:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 102: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBins.category_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	54,  // 103: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBins.min:type_name -> google.protobuf.DoubleValue
	54,  // 104: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBins.max:type_name -> google.protobuf.DoubleValue
	49,  // 105: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBins.unit:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Unit
	47,  // 106: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBins.custom_unit:type_name -> google.protobuf.StringValue
	55,  // 107: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBins.threshold_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdType
	56,  // 108: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBins.thresholds:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Threshold
	45,  // 109: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBins.legend:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Legend
	57,  // 110: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBins.legend_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.LegendBy
	51,  // 111: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBins.decimal_precision:type_name -> google.protobuf.Int32Value
	46,  // 112: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HexagonBins.allow_abbreviation:type_name -> google.protobuf.BoolValue
	36,  // 113: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.value_field:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 114: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.category_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 115: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.sub_category_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	51,  // 116: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.max_slices_per_chart:type_name -> google.protobuf.Int32Value
	51,  // 117: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.min_slice_percentage:type_name -> google.protobuf.Int32Value
	51,  // 118: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.max_slices_per_stack:type_name -> google.protobuf.Int32Value
	47,  // 119: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.stack_name_template:type_name -> google.protobuf.StringValue
	31,  // 120: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.label_definition:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.LabelDefinition
	47,  // 121: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.group_name_template:type_name -> google.protobuf.StringValue
	49,  // 122: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.unit:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Unit
	47,  // 123: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.custom_unit:type_name -> google.protobuf.StringValue
	47,  // 124: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.color_scheme:type_name -> google.protobuf.StringValue
	46,  // 125: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.hash_colors:type_name -> google.protobuf.BoolValue
	51,  // 126: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.decimal_precision:type_name -> google.protobuf.Int32Value
	46,  // 127: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.allow_abbreviation:type_name -> google.protobuf.BoolValue
	45,  // 128: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.legend:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Legend
	46,  // 129: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.show_total:type_name -> google.protobuf.BoolValue
	36,  // 130: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.value_field:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 131: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.category_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 132: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.sub_category_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	51,  // 133: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.max_bars_per_chart:type_name -> google.protobuf.Int32Value
	51,  // 134: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.max_slices_per_bar:type_name -> google.protobuf.Int32Value
	47,  // 135: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.stack_name_template:type_name -> google.protobuf.StringValue
	50,  // 136: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.scale_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType
	59,  // 137: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.colors_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ColorsBy
	47,  // 138: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.color_scheme:type_name -> google.protobuf.StringValue
	46,  // 139: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.hash_colors:type_name -> google.protobuf.BoolValue
	49,  // 140: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.unit:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Unit
	47,  // 141: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.custom_unit:type_name -> google.protobuf.StringValue
	46,  // 142: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.display_on_bar:type_name -> google.protobuf.BoolValue
	51,  // 143: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.decimal_precision:type_name -> google.protobuf.Int32Value
	46,  // 144: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.allow_abbreviation:type_name -> google.protobuf.BoolValue
	52,  // 145: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.y_axis_min:type_name -> google.protobuf.FloatValue
	52,  // 146: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.y_axis_max:type_name -> google.protobuf.FloatValue
	45,  // 147: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.legend:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Legend
	53,  // 148: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.sort_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.SortByType
	47,  // 149: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.group_name_template:type_name -> google.protobuf.StringValue
	6,   // 150: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.y_axis_view_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HorizontalBars.YAxisViewBy
	36,  // 151: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.value_field:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 152: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.category_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 153: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.sub_category_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	51,  // 154: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.max_bars_per_chart:type_name -> google.protobuf.Int32Value
	51,  // 155: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.max_slices_per_bar:type_name -> google.protobuf.Int32Value
	47,  // 156: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.stack_name_template:type_name -> google.protobuf.StringValue
	50,  // 157: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.scale_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType
	59,  // 158: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.colors_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ColorsBy
	47,  // 159: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.color_scheme:type_name -> google.protobuf.StringValue
	46,  // 160: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.hash_colors:type_name -> google.protobuf.BoolValue
	49,  // 161: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.unit:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Unit
	47,  // 162: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.custom_unit:type_name -> google.protobuf.StringValue
	2,   // 163: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.bar_value_display:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.BarValueDisplay
	51,  // 164: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.decimal_precision:type_name -> google.protobuf.Int32Value
	46,  // 165: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.allow_abbreviation:type_name -> google.protobuf.BoolValue
	52,  // 166: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.y_axis_min:type_name -> google.protobuf.FloatValue
	52,  // 167: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.y_axis_max:type_name -> google.protobuf.FloatValue
	45,  // 168: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.legend:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Legend
	53,  // 169: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.sort_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.SortByType
	47,  // 170: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.VerticalBars.group_name_template:type_name -> google.protobuf.StringValue
	36,  // 171: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Heatmap.value_field:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 172: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Heatmap.x_axis_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	36,  // 173: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Heatmap.y_axis_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	46,  // 174: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Heatmap.show_numbers:type_name -> google.protobuf.BoolValue
	50,  // 175: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Heatmap.scale_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType
	1,   // 176: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Heatmap.preset:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.HeatmapColorPreset
	46,  // 177: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Heatmap.allow_abbreviation:type_name -> google.protobuf.BoolValue
	49,  // 178: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Heatmap.unit:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Unit
	47,  // 179: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Heatmap.custom_unit:type_name -> google.protobuf.StringValue
	51,  // 180: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Heatmap.decimal_precision:type_name -> google.protobuf.Int32Value
	52,  // 181: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Heatmap.color_axis_min:type_name -> google.protobuf.FloatValue
	52,  // 182: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Heatmap.color_axis_max:type_name -> google.protobuf.FloatValue
	46,  // 183: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesTooltip.show_all_series:type_name -> google.protobuf.BoolValue
	46,  // 184: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.TimeSeriesTooltip.show_labels:type_name -> google.protobuf.BoolValue
	36,  // 185: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.Column.field:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	60,  // 186: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.Rule.id:type_name -> com.coralogixapis.dashboards.v1.UUID
	47,  // 187: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.Rule.name:type_name -> google.protobuf.StringValue
	47,  // 188: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.Rule.description:type_name -> google.protobuf.StringValue
	27,  // 189: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.Rule.rule_scope:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.RuleScope
	28,  // 190: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.Rule.properties:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.Property
	36,  // 191: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.RuleScope.field:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	47,  // 192: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.RuleScope.regex:type_name -> google.protobuf.StringValue
	3,   // 193: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.RuleScope.field_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.FieldDataType
	60,  // 194: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.Property.id:type_name -> com.coralogixapis.dashboards.v1.UUID
	29,  // 195: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.Property.definition:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.PropertyDefinition
	30,  // 196: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.PropertyDefinition.thresholds:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.PropertyThresholds
	61,  // 197: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.PropertyDefinition.alignment:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.TextAlignment
	56,  // 198: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.PropertyThresholds.values:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Threshold
	55,  // 199: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.PropertyThresholds.type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ThresholdType
	54,  // 200: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.PropertyThresholds.min:type_name -> google.protobuf.DoubleValue
	54,  // 201: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.Table.PropertyThresholds.max:type_name -> google.protobuf.DoubleValue
	5,   // 202: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.LabelDefinition.label_source:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.LabelSource
	46,  // 203: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.LabelDefinition.is_visible:type_name -> google.protobuf.BoolValue
	46,  // 204: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.LabelDefinition.show_name:type_name -> google.protobuf.BoolValue
	46,  // 205: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.LabelDefinition.show_value:type_name -> google.protobuf.BoolValue
	46,  // 206: com.coralogixapis.dashboards.v1.ast.widgets.Dynamic.Visualization.PieChart.LabelDefinition.show_percentage:type_name -> google.protobuf.BoolValue
	207, // [207:207] is the sub-list for method output_type
	207, // [207:207] is the sub-list for method input_type
	207, // [207:207] is the sub-list for extension type_name
	207, // [207:207] is the sub-list for extension extendee
	0,   // [0:207] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_init() }
func file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_init() {
	if File_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto != nil {
		return
	}
	file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[1].OneofWrappers = []any{
		(*Dynamic_Query_Logs_)(nil),
		(*Dynamic_Query_Spans_)(nil),
		(*Dynamic_Query_Metrics_)(nil),
		(*Dynamic_Query_Dataprime_)(nil),
	}
	file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[2].OneofWrappers = []any{
		(*Dynamic_Visualization_Table_)(nil),
		(*Dynamic_Visualization_TimeSeriesLines_)(nil),
		(*Dynamic_Visualization_TimeSeriesBars_)(nil),
		(*Dynamic_Visualization_Stat_)(nil),
		(*Dynamic_Visualization_Gauge_)(nil),
		(*Dynamic_Visualization_HexagonBins_)(nil),
		(*Dynamic_Visualization_PieChart_)(nil),
		(*Dynamic_Visualization_HorizontalBars_)(nil),
		(*Dynamic_Visualization_VerticalBars_)(nil),
		(*Dynamic_Visualization_Heatmap_)(nil),
	}
	file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[16].OneofWrappers = []any{
		(*Dynamic_Visualization_Heatmap_Preset)(nil),
	}
	file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[20].OneofWrappers = []any{
		(*Dynamic_Visualization_Table_RuleScope_Field)(nil),
		(*Dynamic_Visualization_Table_RuleScope_Regex)(nil),
		(*Dynamic_Visualization_Table_RuleScope_FieldType)(nil),
	}
	file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[22].OneofWrappers = []any{
		(*Dynamic_Visualization_Table_PropertyDefinition_Thresholds)(nil),
		(*Dynamic_Visualization_Table_PropertyDefinition_Alignment)(nil),
	}
	file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes[23].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDesc), len(file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_depIdxs,
		EnumInfos:         file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_enumTypes,
		MessageInfos:      file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto = out.File
	file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_goTypes = nil
	file_com_coralogixapis_dashboards_v1_ast_widgets_dynamic_proto_depIdxs = nil
}
