// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: com/coralogixapis/dashboards/v1/ast/widgets/data_table.proto

package widgets

import (
	filters "github.com/coralogix/coralogix-management-sdk/go/internal/coralogixapis/dashboards/v1/ast/filters"
	common1 "github.com/coralogix/coralogix-management-sdk/go/internal/coralogixapis/dashboards/v1/ast/widgets/common"
	common "github.com/coralogix/coralogix-management-sdk/go/internal/coralogixapis/dashboards/v1/common"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv3/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RowStyle int32

const (
	RowStyle_ROW_STYLE_UNSPECIFIED RowStyle = 0
	RowStyle_ROW_STYLE_ONE_LINE    RowStyle = 1
	RowStyle_ROW_STYLE_TWO_LINE    RowStyle = 2
	RowStyle_ROW_STYLE_CONDENSED   RowStyle = 3
	RowStyle_ROW_STYLE_JSON        RowStyle = 4
	RowStyle_ROW_STYLE_LIST        RowStyle = 5
)

// Enum value maps for RowStyle.
var (
	RowStyle_name = map[int32]string{
		0: "ROW_STYLE_UNSPECIFIED",
		1: "ROW_STYLE_ONE_LINE",
		2: "ROW_STYLE_TWO_LINE",
		3: "ROW_STYLE_CONDENSED",
		4: "ROW_STYLE_JSON",
		5: "ROW_STYLE_LIST",
	}
	RowStyle_value = map[string]int32{
		"ROW_STYLE_UNSPECIFIED": 0,
		"ROW_STYLE_ONE_LINE":    1,
		"ROW_STYLE_TWO_LINE":    2,
		"ROW_STYLE_CONDENSED":   3,
		"ROW_STYLE_JSON":        4,
		"ROW_STYLE_LIST":        5,
	}
)

func (x RowStyle) Enum() *RowStyle {
	p := new(RowStyle)
	*p = x
	return p
}

func (x RowStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RowStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_enumTypes[0].Descriptor()
}

func (RowStyle) Type() protoreflect.EnumType {
	return &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_enumTypes[0]
}

func (x RowStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RowStyle.Descriptor instead.
func (RowStyle) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescGZIP(), []int{0}
}

type DataTable struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Query          *DataTable_Query       `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	ResultsPerPage *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=results_per_page,json=resultsPerPage,proto3" json:"results_per_page,omitempty"`
	RowStyle       RowStyle               `protobuf:"varint,3,opt,name=row_style,json=rowStyle,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.RowStyle" json:"row_style,omitempty"`
	Columns        []*DataTable_Column    `protobuf:"bytes,4,rep,name=columns,proto3" json:"columns,omitempty"`
	OrderBy        *common.OrderingField  `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	DataModeType   common1.DataModeType   `protobuf:"varint,11,opt,name=data_mode_type,json=dataModeType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType" json:"data_mode_type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DataTable) Reset() {
	*x = DataTable{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTable) ProtoMessage() {}

func (x *DataTable) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTable.ProtoReflect.Descriptor instead.
func (*DataTable) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescGZIP(), []int{0}
}

func (x *DataTable) GetQuery() *DataTable_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *DataTable) GetResultsPerPage() *wrapperspb.Int32Value {
	if x != nil {
		return x.ResultsPerPage
	}
	return nil
}

func (x *DataTable) GetRowStyle() RowStyle {
	if x != nil {
		return x.RowStyle
	}
	return RowStyle_ROW_STYLE_UNSPECIFIED
}

func (x *DataTable) GetColumns() []*DataTable_Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *DataTable) GetOrderBy() *common.OrderingField {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *DataTable) GetDataModeType() common1.DataModeType {
	if x != nil {
		return x.DataModeType
	}
	return common1.DataModeType(0)
}

type DataTable_Query struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*DataTable_Query_Logs
	//	*DataTable_Query_Spans
	//	*DataTable_Query_Metrics
	//	*DataTable_Query_Dataprime
	Value         isDataTable_Query_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataTable_Query) Reset() {
	*x = DataTable_Query{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTable_Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTable_Query) ProtoMessage() {}

func (x *DataTable_Query) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTable_Query.ProtoReflect.Descriptor instead.
func (*DataTable_Query) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescGZIP(), []int{0, 0}
}

func (x *DataTable_Query) GetValue() isDataTable_Query_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *DataTable_Query) GetLogs() *DataTable_LogsQuery {
	if x != nil {
		if x, ok := x.Value.(*DataTable_Query_Logs); ok {
			return x.Logs
		}
	}
	return nil
}

func (x *DataTable_Query) GetSpans() *DataTable_SpansQuery {
	if x != nil {
		if x, ok := x.Value.(*DataTable_Query_Spans); ok {
			return x.Spans
		}
	}
	return nil
}

func (x *DataTable_Query) GetMetrics() *DataTable_MetricsQuery {
	if x != nil {
		if x, ok := x.Value.(*DataTable_Query_Metrics); ok {
			return x.Metrics
		}
	}
	return nil
}

func (x *DataTable_Query) GetDataprime() *DataTable_DataprimeQuery {
	if x != nil {
		if x, ok := x.Value.(*DataTable_Query_Dataprime); ok {
			return x.Dataprime
		}
	}
	return nil
}

type isDataTable_Query_Value interface {
	isDataTable_Query_Value()
}

type DataTable_Query_Logs struct {
	Logs *DataTable_LogsQuery `protobuf:"bytes,1,opt,name=logs,proto3,oneof"`
}

type DataTable_Query_Spans struct {
	Spans *DataTable_SpansQuery `protobuf:"bytes,2,opt,name=spans,proto3,oneof"`
}

type DataTable_Query_Metrics struct {
	Metrics *DataTable_MetricsQuery `protobuf:"bytes,3,opt,name=metrics,proto3,oneof"`
}

type DataTable_Query_Dataprime struct {
	Dataprime *DataTable_DataprimeQuery `protobuf:"bytes,4,opt,name=dataprime,proto3,oneof"`
}

func (*DataTable_Query_Logs) isDataTable_Query_Value() {}

func (*DataTable_Query_Spans) isDataTable_Query_Value() {}

func (*DataTable_Query_Metrics) isDataTable_Query_Value() {}

func (*DataTable_Query_Dataprime) isDataTable_Query_Value() {}

type DataTable_LogsQuery struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	LuceneQuery   *common.LuceneQuery           `protobuf:"bytes,1,opt,name=lucene_query,json=luceneQuery,proto3" json:"lucene_query,omitempty"`
	Filters       []*filters.Filter_LogsFilter  `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	Grouping      *DataTable_LogsQuery_Grouping `protobuf:"bytes,3,opt,name=grouping,proto3" json:"grouping,omitempty"`
	TimeFrame     *common.TimeFrameSelect       `protobuf:"bytes,4,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataTable_LogsQuery) Reset() {
	*x = DataTable_LogsQuery{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTable_LogsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTable_LogsQuery) ProtoMessage() {}

func (x *DataTable_LogsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTable_LogsQuery.ProtoReflect.Descriptor instead.
func (*DataTable_LogsQuery) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescGZIP(), []int{0, 1}
}

func (x *DataTable_LogsQuery) GetLuceneQuery() *common.LuceneQuery {
	if x != nil {
		return x.LuceneQuery
	}
	return nil
}

func (x *DataTable_LogsQuery) GetFilters() []*filters.Filter_LogsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *DataTable_LogsQuery) GetGrouping() *DataTable_LogsQuery_Grouping {
	if x != nil {
		return x.Grouping
	}
	return nil
}

func (x *DataTable_LogsQuery) GetTimeFrame() *common.TimeFrameSelect {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

type DataTable_SpansQuery struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	LuceneQuery   *common.LuceneQuery            `protobuf:"bytes,1,opt,name=lucene_query,json=luceneQuery,proto3" json:"lucene_query,omitempty"`
	Filters       []*filters.Filter_SpansFilter  `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	Grouping      *DataTable_SpansQuery_Grouping `protobuf:"bytes,3,opt,name=grouping,proto3" json:"grouping,omitempty"`
	TimeFrame     *common.TimeFrameSelect        `protobuf:"bytes,4,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataTable_SpansQuery) Reset() {
	*x = DataTable_SpansQuery{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTable_SpansQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTable_SpansQuery) ProtoMessage() {}

func (x *DataTable_SpansQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTable_SpansQuery.ProtoReflect.Descriptor instead.
func (*DataTable_SpansQuery) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescGZIP(), []int{0, 2}
}

func (x *DataTable_SpansQuery) GetLuceneQuery() *common.LuceneQuery {
	if x != nil {
		return x.LuceneQuery
	}
	return nil
}

func (x *DataTable_SpansQuery) GetFilters() []*filters.Filter_SpansFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *DataTable_SpansQuery) GetGrouping() *DataTable_SpansQuery_Grouping {
	if x != nil {
		return x.Grouping
	}
	return nil
}

func (x *DataTable_SpansQuery) GetTimeFrame() *common.TimeFrameSelect {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

type DataTable_MetricsQuery struct {
	state           protoimpl.MessageState          `protogen:"open.v1"`
	PromqlQuery     *common.PromQlQuery             `protobuf:"bytes,1,opt,name=promql_query,json=promqlQuery,proto3" json:"promql_query,omitempty"`
	Filters         []*filters.Filter_MetricsFilter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	EditorMode      common1.MetricsQueryEditorMode  `protobuf:"varint,3,opt,name=editor_mode,json=editorMode,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorMode" json:"editor_mode,omitempty"`
	TimeFrame       *common.TimeFrameSelect         `protobuf:"bytes,4,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	PromqlQueryType common.PromQLQueryType          `protobuf:"varint,5,opt,name=promql_query_type,json=promqlQueryType,proto3,enum=com.coralogixapis.dashboards.v1.common.PromQLQueryType" json:"promql_query_type,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DataTable_MetricsQuery) Reset() {
	*x = DataTable_MetricsQuery{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTable_MetricsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTable_MetricsQuery) ProtoMessage() {}

func (x *DataTable_MetricsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTable_MetricsQuery.ProtoReflect.Descriptor instead.
func (*DataTable_MetricsQuery) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescGZIP(), []int{0, 3}
}

func (x *DataTable_MetricsQuery) GetPromqlQuery() *common.PromQlQuery {
	if x != nil {
		return x.PromqlQuery
	}
	return nil
}

func (x *DataTable_MetricsQuery) GetFilters() []*filters.Filter_MetricsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *DataTable_MetricsQuery) GetEditorMode() common1.MetricsQueryEditorMode {
	if x != nil {
		return x.EditorMode
	}
	return common1.MetricsQueryEditorMode(0)
}

func (x *DataTable_MetricsQuery) GetTimeFrame() *common.TimeFrameSelect {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

func (x *DataTable_MetricsQuery) GetPromqlQueryType() common.PromQLQueryType {
	if x != nil {
		return x.PromqlQueryType
	}
	return common.PromQLQueryType(0)
}

type DataTable_DataprimeQuery struct {
	state          protoimpl.MessageState   `protogen:"open.v1"`
	DataprimeQuery *common.DataprimeQuery   `protobuf:"bytes,1,opt,name=dataprime_query,json=dataprimeQuery,proto3" json:"dataprime_query,omitempty"`
	Filters        []*filters.Filter_Source `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	TimeFrame      *common.TimeFrameSelect  `protobuf:"bytes,3,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DataTable_DataprimeQuery) Reset() {
	*x = DataTable_DataprimeQuery{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTable_DataprimeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTable_DataprimeQuery) ProtoMessage() {}

func (x *DataTable_DataprimeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTable_DataprimeQuery.ProtoReflect.Descriptor instead.
func (*DataTable_DataprimeQuery) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescGZIP(), []int{0, 4}
}

func (x *DataTable_DataprimeQuery) GetDataprimeQuery() *common.DataprimeQuery {
	if x != nil {
		return x.DataprimeQuery
	}
	return nil
}

func (x *DataTable_DataprimeQuery) GetFilters() []*filters.Filter_Source {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *DataTable_DataprimeQuery) GetTimeFrame() *common.TimeFrameSelect {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

type DataTable_Column struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Field         *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Width         *wrapperspb.Int32Value  `protobuf:"bytes,2,opt,name=width,proto3" json:"width,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataTable_Column) Reset() {
	*x = DataTable_Column{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTable_Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTable_Column) ProtoMessage() {}

func (x *DataTable_Column) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTable_Column.ProtoReflect.Descriptor instead.
func (*DataTable_Column) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescGZIP(), []int{0, 5}
}

func (x *DataTable_Column) GetField() *wrapperspb.StringValue {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *DataTable_Column) GetWidth() *wrapperspb.Int32Value {
	if x != nil {
		return x.Width
	}
	return nil
}

type DataTable_LogsQuery_Grouping struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	GroupBy       []*wrapperspb.StringValue          `protobuf:"bytes,1,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	Aggregations  []*DataTable_LogsQuery_Aggregation `protobuf:"bytes,2,rep,name=aggregations,proto3" json:"aggregations,omitempty"`
	GroupBys      []*common.ObservationField         `protobuf:"bytes,3,rep,name=group_bys,json=groupBys,proto3" json:"group_bys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataTable_LogsQuery_Grouping) Reset() {
	*x = DataTable_LogsQuery_Grouping{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTable_LogsQuery_Grouping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTable_LogsQuery_Grouping) ProtoMessage() {}

func (x *DataTable_LogsQuery_Grouping) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTable_LogsQuery_Grouping.ProtoReflect.Descriptor instead.
func (*DataTable_LogsQuery_Grouping) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *DataTable_LogsQuery_Grouping) GetGroupBy() []*wrapperspb.StringValue {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *DataTable_LogsQuery_Grouping) GetAggregations() []*DataTable_LogsQuery_Aggregation {
	if x != nil {
		return x.Aggregations
	}
	return nil
}

func (x *DataTable_LogsQuery_Grouping) GetGroupBys() []*common.ObservationField {
	if x != nil {
		return x.GroupBys
	}
	return nil
}

type DataTable_LogsQuery_Aggregation struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Id            *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsVisible     *wrapperspb.BoolValue   `protobuf:"bytes,3,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`
	Aggregation   *common.LogsAggregation `protobuf:"bytes,4,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataTable_LogsQuery_Aggregation) Reset() {
	*x = DataTable_LogsQuery_Aggregation{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTable_LogsQuery_Aggregation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTable_LogsQuery_Aggregation) ProtoMessage() {}

func (x *DataTable_LogsQuery_Aggregation) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTable_LogsQuery_Aggregation.ProtoReflect.Descriptor instead.
func (*DataTable_LogsQuery_Aggregation) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *DataTable_LogsQuery_Aggregation) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DataTable_LogsQuery_Aggregation) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *DataTable_LogsQuery_Aggregation) GetIsVisible() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsVisible
	}
	return nil
}

func (x *DataTable_LogsQuery_Aggregation) GetAggregation() *common.LogsAggregation {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

type DataTable_SpansQuery_Grouping struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	GroupBy       []*common.SpanField                 `protobuf:"bytes,1,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	Aggregations  []*DataTable_SpansQuery_Aggregation `protobuf:"bytes,2,rep,name=aggregations,proto3" json:"aggregations,omitempty"`
	GroupBys      []*common.SpanObservationField      `protobuf:"bytes,3,rep,name=group_bys,json=groupBys,proto3" json:"group_bys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataTable_SpansQuery_Grouping) Reset() {
	*x = DataTable_SpansQuery_Grouping{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTable_SpansQuery_Grouping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTable_SpansQuery_Grouping) ProtoMessage() {}

func (x *DataTable_SpansQuery_Grouping) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTable_SpansQuery_Grouping.ProtoReflect.Descriptor instead.
func (*DataTable_SpansQuery_Grouping) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *DataTable_SpansQuery_Grouping) GetGroupBy() []*common.SpanField {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *DataTable_SpansQuery_Grouping) GetAggregations() []*DataTable_SpansQuery_Aggregation {
	if x != nil {
		return x.Aggregations
	}
	return nil
}

func (x *DataTable_SpansQuery_Grouping) GetGroupBys() []*common.SpanObservationField {
	if x != nil {
		return x.GroupBys
	}
	return nil
}

type DataTable_SpansQuery_Aggregation struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Id            *wrapperspb.StringValue  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *wrapperspb.StringValue  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsVisible     *wrapperspb.BoolValue    `protobuf:"bytes,3,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`
	Aggregation   *common.SpansAggregation `protobuf:"bytes,4,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataTable_SpansQuery_Aggregation) Reset() {
	*x = DataTable_SpansQuery_Aggregation{}
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTable_SpansQuery_Aggregation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTable_SpansQuery_Aggregation) ProtoMessage() {}

func (x *DataTable_SpansQuery_Aggregation) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTable_SpansQuery_Aggregation.ProtoReflect.Descriptor instead.
func (*DataTable_SpansQuery_Aggregation) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescGZIP(), []int{0, 2, 1}
}

func (x *DataTable_SpansQuery_Aggregation) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DataTable_SpansQuery_Aggregation) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *DataTable_SpansQuery_Aggregation) GetIsVisible() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsVisible
	}
	return nil
}

func (x *DataTable_SpansQuery_Aggregation) GetAggregation() *common.SpansAggregation {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

var File_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto protoreflect.FileDescriptor

const file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDesc = "" +
	"\n" +
	"<com/coralogixapis/dashboards/v1/ast/widgets/data_table.proto\x12+com.coralogixapis.dashboards.v1.ast.widgets\x1a8com/coralogixapis/dashboards/v1/ast/filters/filter.proto\x1aGcom/coralogixapis/dashboards/v1/ast/widgets/common/data_mode_type.proto\x1aRcom/coralogixapis/dashboards/v1/ast/widgets/common/metrics_query_editor_mode.proto\x1a=com/coralogixapis/dashboards/v1/common/logs_aggregation.proto\x1a>com/coralogixapis/dashboards/v1/common/observation_field.proto\x1a;com/coralogixapis/dashboards/v1/common/ordering_field.proto\x1a2com/coralogixapis/dashboards/v1/common/query.proto\x1a7com/coralogixapis/dashboards/v1/common/span_field.proto\x1a>com/coralogixapis/dashboards/v1/common/spans_aggregation.proto\x1a7com/coralogixapis/dashboards/v1/common/time_frame.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a.protoc-gen-openapiv3/options/annotations.proto\"\xf7.\n" +
	"\tDataTable\x12\x83\x01\n" +
	"\x05query\x18\x01 \x01(\v2<.com.coralogixapis.dashboards.v1.ast.widgets.DataTable.QueryB/\x9aA,2*A query object containing query definitionR\x05query\x12}\n" +
	"\x10results_per_page\x18\x02 \x01(\v2\x1b.google.protobuf.Int32ValueB6\x9aA32-How many results are displayed per table pageJ\x0210R\x0eresultsPerPage\x12y\n" +
	"\trow_style\x18\x03 \x01(\x0e25.com.coralogixapis.dashboards.v1.ast.widgets.RowStyleB%\x9aA\"2 Specifies how rows are displayedR\browStyle\x12x\n" +
	"\acolumns\x18\x04 \x03(\v2=.com.coralogixapis.dashboards.v1.ast.widgets.DataTable.ColumnB\x1f\x9aA\x1c2\x1aList of column definitionsR\acolumns\x12\x84\x01\n" +
	"\border_by\x18\x05 \x01(\v25.com.coralogixapis.dashboards.v1.common.OrderingFieldB2\x9aA/2-Defines how to order the results in the tableR\aorderBy\x12\x93\x01\n" +
	"\x0edata_mode_type\x18\v \x01(\x0e2@.com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeTypeB+\x9aA(2&Data mode type, either high or archiveR\fdataModeType\x1a\x8b\x03\n" +
	"\x05Query\x12V\n" +
	"\x04logs\x18\x01 \x01(\v2@.com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQueryH\x00R\x04logs\x12Y\n" +
	"\x05spans\x18\x02 \x01(\v2A.com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQueryH\x00R\x05spans\x12_\n" +
	"\ametrics\x18\x03 \x01(\v2C.com.coralogixapis.dashboards.v1.ast.widgets.DataTable.MetricsQueryH\x00R\ametrics\x12e\n" +
	"\tdataprime\x18\x04 \x01(\v2E.com.coralogixapis.dashboards.v1.ast.widgets.DataTable.DataprimeQueryH\x00R\tdataprimeB\a\n" +
	"\x05value\x1a\xa6\f\n" +
	"\tLogsQuery\x12\xba\x01\n" +
	"\flucene_query\x18\x01 \x01(\v23.com.coralogixapis.dashboards.v1.common.LuceneQueryBb\x9aA_2$A Lucene query string to search logsJ7{ \"value\": \"coralogix.metadata.subsystemName: cx_rum\" }R\vluceneQuery\x12\x8d\x01\n" +
	"\afilters\x18\x02 \x03(\v2>.com.coralogixapis.dashboards.v1.ast.filters.Filter.LogsFilterB3\x9aA02.List of filters that narrow down query resultsR\afilters\x12\x93\x01\n" +
	"\bgrouping\x18\x03 \x01(\v2I.com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.GroupingB,\x9aA)2'Definition of grouping and aggregationsR\bgrouping\x12\x9f\x01\n" +
	"\n" +
	"time_frame\x18\x04 \x01(\v27.com.coralogixapis.dashboards.v1.common.TimeFrameSelectBG\x9aAD2BSpecifies the time period for which the results should be returnedR\ttimeFrame\x1a\x94\x03\n" +
	"\bGrouping\x12l\n" +
	"\bgroup_by\x18\x01 \x03(\v2\x1c.google.protobuf.StringValueB3\x9aA02.List of field names to group the query resultsR\agroupBy\x12\x8b\x01\n" +
	"\faggregations\x18\x02 \x03(\v2L.com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.AggregationB\x19\x9aA\x162\x14List of aggregationsR\faggregations\x12\x8b\x01\n" +
	"\tgroup_bys\x18\x03 \x03(\v28.com.coralogixapis.dashboards.v1.common.ObservationFieldB4\x9aA12/List of observation fields to group the resultsR\bgroupBys\x1a\xcd\x03\n" +
	"\vAggregation\x12\x85\x01\n" +
	"\x02id\x18\x01 \x01(\v2\x1c.google.protobuf.StringValueBW\x9aAT2\x1dAggregation unique identifierJ3{ \"value\": \"52d192ac-a28f-4c51-97f5-5ba004249ba1\" }R\x02id\x12G\n" +
	"\x04name\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueB\x15\x9aA\x122\x10Aggregation nameR\x04name\x12o\n" +
	"\n" +
	"is_visible\x18\x03 \x01(\v2\x1a.google.protobuf.BoolValueB4\x9aA12/Whether the aggregation is visible in the tableR\tisVisible\x12|\n" +
	"\vaggregation\x18\x04 \x01(\v27.com.coralogixapis.dashboards.v1.common.LogsAggregationB!\x9aA\x1e2\x1cType of aggregation functionR\vaggregation:-\x9aA*\n" +
	"(*\tLogsQuery2\x1bA logs variant of the query\x1a\xb0\f\n" +
	"\n" +
	"SpansQuery\x12\x89\x01\n" +
	"\flucene_query\x18\x01 \x01(\v23.com.coralogixapis.dashboards.v1.common.LuceneQueryB1\x9aA.2,A Lucene query string to search span recordsR\vluceneQuery\x12z\n" +
	"\afilters\x18\x02 \x03(\v2?.com.coralogixapis.dashboards.v1.ast.filters.Filter.SpansFilterB\x1f\x9aA\x1c2\x1aList of span query filtersR\afilters\x12\x94\x01\n" +
	"\bgrouping\x18\x03 \x01(\v2J.com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.GroupingB,\x9aA)2'Definition of grouping and aggregationsR\bgrouping\x12\x9f\x01\n" +
	"\n" +
	"time_frame\x18\x04 \x01(\v27.com.coralogixapis.dashboards.v1.common.TimeFrameSelectBG\x9aAD2BSpecifies the time period for which the records should be returnedR\ttimeFrame\x1a\xd7\x03\n" +
	"\bGrouping\x12\x80\x01\n" +
	"\bgroup_by\x18\x01 \x03(\v21.com.coralogixapis.dashboards.v1.common.SpanFieldB2\x9aA/2-List of field names to group the span recordsR\agroupBy\x12\xa4\x01\n" +
	"\faggregations\x18\x02 \x03(\v2M.com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.AggregationB1\x9aA.2,List of aggregations applied to span recordsR\faggregations\x12\xa0\x01\n" +
	"\tgroup_bys\x18\x03 \x03(\v2<.com.coralogixapis.dashboards.v1.common.SpanObservationFieldBE\x9aAB2@A list of observation fields definitions to group the records byR\bgroupBys\x1a\xd5\x03\n" +
	"\vAggregation\x12\x85\x01\n" +
	"\x02id\x18\x01 \x01(\v2\x1c.google.protobuf.StringValueBW\x9aAT2\x1dAggregation unique identifierJ3{ \"value\": \"52d192ac-a28f-4c51-97f5-5ba004249ba1\" }R\x02id\x12G\n" +
	"\x04name\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueB\x15\x9aA\x122\x10Aggregation nameR\x04name\x12o\n" +
	"\n" +
	"is_visible\x18\x03 \x01(\v2\x1a.google.protobuf.BoolValueB4\x9aA12/Whether the aggregation is visible in the tableR\tisVisible\x12\x83\x01\n" +
	"\vaggregation\x18\x04 \x01(\v28.com.coralogixapis.dashboards.v1.common.SpansAggregationB'\x9aA$2\"Type of spans aggregation functionR\vaggregation:/\x9aA,\n" +
	"**\n" +
	"SpansQuery2\x1cA spans variant of the query\x1a\xec\x06\n" +
	"\fMetricsQuery\x12\xa3\x01\n" +
	"\fpromql_query\x18\x01 \x01(\v23.com.coralogixapis.dashboards.v1.common.PromQlQueryBK\x9aAH2(PromQL query string for querying metricsJ\x1c{ \"value\": \"up{job='abc'}\" }R\vpromqlQuery\x12y\n" +
	"\afilters\x18\x02 \x03(\v2A.com.coralogixapis.dashboards.v1.ast.filters.Filter.MetricsFilterB\x1c\x9aA\x192\x17List of metrics filtersR\afilters\x12\xc6\x01\n" +
	"\veditor_mode\x18\x03 \x01(\x0e2J.com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorModeBY\x9aAV2QType of the query editor used to generate the query, can be text or builder basedJ\x012R\n" +
	"editorMode\x12\x9e\x01\n" +
	"\n" +
	"time_frame\x18\x04 \x01(\v27.com.coralogixapis.dashboards.v1.common.TimeFrameSelectBF\x9aAC2ASpecifies the time period for which the result should be returnedR\ttimeFrame\x12\x9b\x01\n" +
	"\x11promql_query_type\x18\x05 \x01(\x0e27.com.coralogixapis.dashboards.v1.common.PromQLQueryTypeB6\x9aA321Type of the PromQL query, can be Range or InstantR\x0fpromqlQueryType:3\x9aA0\n" +
	".*\fMetricsQuery2\x1eA metrics variant of the query\x1a\xd9\x03\n" +
	"\x0eDataprimeQuery\x12z\n" +
	"\x0fdataprime_query\x18\x01 \x01(\v26.com.coralogixapis.dashboards.v1.common.DataprimeQueryB\x19\x9aA\x162\x14Dataprime query textR\x0edataprimeQuery\x12p\n" +
	"\afilters\x18\x02 \x03(\v2:.com.coralogixapis.dashboards.v1.ast.filters.Filter.SourceB\x1a\x9aA\x172\x15List of query filtersR\afilters\x12\x9f\x01\n" +
	"\n" +
	"time_frame\x18\x03 \x01(\v27.com.coralogixapis.dashboards.v1.common.TimeFrameSelectBG\x9aAD2BSpecifies the time period for which the records should be returnedR\ttimeFrame:7\x9aA4\n" +
	"2*\x0eDataprimeQuery2 A Dataprime variant of the query\x1a\x9d\x02\n" +
	"\x06Column\x12\x96\x01\n" +
	"\x05field\x18\x01 \x01(\v2\x1c.google.protobuf.StringValueBb\x9aA_2*Name of the field to display in the columnJ1{ \"value\": \"coralogix.metadata.applicationName\" }R\x05field\x12z\n" +
	"\x05width\x18\x02 \x01(\v2\x1b.google.protobuf.Int32ValueBG\x9aAD2BCustom width of the column, by default it's automatically adjustedR\x05width*\x96\x01\n" +
	"\bRowStyle\x12\x19\n" +
	"\x15ROW_STYLE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12ROW_STYLE_ONE_LINE\x10\x01\x12\x16\n" +
	"\x12ROW_STYLE_TWO_LINE\x10\x02\x12\x17\n" +
	"\x13ROW_STYLE_CONDENSED\x10\x03\x12\x12\n" +
	"\x0eROW_STYLE_JSON\x10\x04\x12\x12\n" +
	"\x0eROW_STYLE_LIST\x10\x05b\x06proto3"

var (
	file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescOnce sync.Once
	file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescData []byte
)

func file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDesc), len(file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDesc)))
	})
	return file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDescData
}

var file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_goTypes = []any{
	(RowStyle)(0),                            // 0: com.coralogixapis.dashboards.v1.ast.widgets.RowStyle
	(*DataTable)(nil),                        // 1: com.coralogixapis.dashboards.v1.ast.widgets.DataTable
	(*DataTable_Query)(nil),                  // 2: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.Query
	(*DataTable_LogsQuery)(nil),              // 3: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery
	(*DataTable_SpansQuery)(nil),             // 4: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery
	(*DataTable_MetricsQuery)(nil),           // 5: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.MetricsQuery
	(*DataTable_DataprimeQuery)(nil),         // 6: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.DataprimeQuery
	(*DataTable_Column)(nil),                 // 7: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.Column
	(*DataTable_LogsQuery_Grouping)(nil),     // 8: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.Grouping
	(*DataTable_LogsQuery_Aggregation)(nil),  // 9: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.Aggregation
	(*DataTable_SpansQuery_Grouping)(nil),    // 10: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.Grouping
	(*DataTable_SpansQuery_Aggregation)(nil), // 11: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.Aggregation
	(*wrapperspb.Int32Value)(nil),            // 12: google.protobuf.Int32Value
	(*common.OrderingField)(nil),             // 13: com.coralogixapis.dashboards.v1.common.OrderingField
	(common1.DataModeType)(0),                // 14: com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType
	(*common.LuceneQuery)(nil),               // 15: com.coralogixapis.dashboards.v1.common.LuceneQuery
	(*filters.Filter_LogsFilter)(nil),        // 16: com.coralogixapis.dashboards.v1.ast.filters.Filter.LogsFilter
	(*common.TimeFrameSelect)(nil),           // 17: com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	(*filters.Filter_SpansFilter)(nil),       // 18: com.coralogixapis.dashboards.v1.ast.filters.Filter.SpansFilter
	(*common.PromQlQuery)(nil),               // 19: com.coralogixapis.dashboards.v1.common.PromQlQuery
	(*filters.Filter_MetricsFilter)(nil),     // 20: com.coralogixapis.dashboards.v1.ast.filters.Filter.MetricsFilter
	(common1.MetricsQueryEditorMode)(0),      // 21: com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorMode
	(common.PromQLQueryType)(0),              // 22: com.coralogixapis.dashboards.v1.common.PromQLQueryType
	(*common.DataprimeQuery)(nil),            // 23: com.coralogixapis.dashboards.v1.common.DataprimeQuery
	(*filters.Filter_Source)(nil),            // 24: com.coralogixapis.dashboards.v1.ast.filters.Filter.Source
	(*wrapperspb.StringValue)(nil),           // 25: google.protobuf.StringValue
	(*common.ObservationField)(nil),          // 26: com.coralogixapis.dashboards.v1.common.ObservationField
	(*wrapperspb.BoolValue)(nil),             // 27: google.protobuf.BoolValue
	(*common.LogsAggregation)(nil),           // 28: com.coralogixapis.dashboards.v1.common.LogsAggregation
	(*common.SpanField)(nil),                 // 29: com.coralogixapis.dashboards.v1.common.SpanField
	(*common.SpanObservationField)(nil),      // 30: com.coralogixapis.dashboards.v1.common.SpanObservationField
	(*common.SpansAggregation)(nil),          // 31: com.coralogixapis.dashboards.v1.common.SpansAggregation
}
var file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_depIdxs = []int32{
	2,  // 0: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.query:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.DataTable.Query
	12, // 1: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.results_per_page:type_name -> google.protobuf.Int32Value
	0,  // 2: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.row_style:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.RowStyle
	7,  // 3: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.columns:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.DataTable.Column
	13, // 4: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.order_by:type_name -> com.coralogixapis.dashboards.v1.common.OrderingField
	14, // 5: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.data_mode_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType
	3,  // 6: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.Query.logs:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery
	4,  // 7: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.Query.spans:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery
	5,  // 8: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.Query.metrics:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.DataTable.MetricsQuery
	6,  // 9: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.Query.dataprime:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.DataTable.DataprimeQuery
	15, // 10: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.lucene_query:type_name -> com.coralogixapis.dashboards.v1.common.LuceneQuery
	16, // 11: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.filters:type_name -> com.coralogixapis.dashboards.v1.ast.filters.Filter.LogsFilter
	8,  // 12: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.grouping:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.Grouping
	17, // 13: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.time_frame:type_name -> com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	15, // 14: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.lucene_query:type_name -> com.coralogixapis.dashboards.v1.common.LuceneQuery
	18, // 15: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.filters:type_name -> com.coralogixapis.dashboards.v1.ast.filters.Filter.SpansFilter
	10, // 16: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.grouping:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.Grouping
	17, // 17: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.time_frame:type_name -> com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	19, // 18: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.MetricsQuery.promql_query:type_name -> com.coralogixapis.dashboards.v1.common.PromQlQuery
	20, // 19: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.MetricsQuery.filters:type_name -> com.coralogixapis.dashboards.v1.ast.filters.Filter.MetricsFilter
	21, // 20: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.MetricsQuery.editor_mode:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorMode
	17, // 21: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.MetricsQuery.time_frame:type_name -> com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	22, // 22: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.MetricsQuery.promql_query_type:type_name -> com.coralogixapis.dashboards.v1.common.PromQLQueryType
	23, // 23: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.DataprimeQuery.dataprime_query:type_name -> com.coralogixapis.dashboards.v1.common.DataprimeQuery
	24, // 24: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.DataprimeQuery.filters:type_name -> com.coralogixapis.dashboards.v1.ast.filters.Filter.Source
	17, // 25: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.DataprimeQuery.time_frame:type_name -> com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	25, // 26: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.Column.field:type_name -> google.protobuf.StringValue
	12, // 27: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.Column.width:type_name -> google.protobuf.Int32Value
	25, // 28: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.Grouping.group_by:type_name -> google.protobuf.StringValue
	9,  // 29: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.Grouping.aggregations:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.Aggregation
	26, // 30: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.Grouping.group_bys:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	25, // 31: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.Aggregation.id:type_name -> google.protobuf.StringValue
	25, // 32: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.Aggregation.name:type_name -> google.protobuf.StringValue
	27, // 33: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.Aggregation.is_visible:type_name -> google.protobuf.BoolValue
	28, // 34: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.LogsQuery.Aggregation.aggregation:type_name -> com.coralogixapis.dashboards.v1.common.LogsAggregation
	29, // 35: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.Grouping.group_by:type_name -> com.coralogixapis.dashboards.v1.common.SpanField
	11, // 36: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.Grouping.aggregations:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.Aggregation
	30, // 37: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.Grouping.group_bys:type_name -> com.coralogixapis.dashboards.v1.common.SpanObservationField
	25, // 38: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.Aggregation.id:type_name -> google.protobuf.StringValue
	25, // 39: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.Aggregation.name:type_name -> google.protobuf.StringValue
	27, // 40: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.Aggregation.is_visible:type_name -> google.protobuf.BoolValue
	31, // 41: com.coralogixapis.dashboards.v1.ast.widgets.DataTable.SpansQuery.Aggregation.aggregation:type_name -> com.coralogixapis.dashboards.v1.common.SpansAggregation
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_init() }
func file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_init() {
	if File_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto != nil {
		return
	}
	file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes[1].OneofWrappers = []any{
		(*DataTable_Query_Logs)(nil),
		(*DataTable_Query_Spans)(nil),
		(*DataTable_Query_Metrics)(nil),
		(*DataTable_Query_Dataprime)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDesc), len(file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_depIdxs,
		EnumInfos:         file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_enumTypes,
		MessageInfos:      file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto = out.File
	file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_goTypes = nil
	file_com_coralogixapis_dashboards_v1_ast_widgets_data_table_proto_depIdxs = nil
}
