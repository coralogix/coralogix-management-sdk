// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.1
// source: com/coralogixapis/notification_center/common/config_overrides.proto

package common

import (
	v1 "github.com/coralogix/coralogix-management-sdk/go/internal/coralogixapis/notification_center/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigOverrides struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ConditionType  *ConditionType         `protobuf:"bytes,1,opt,name=condition_type,json=conditionType,proto3" json:"condition_type,omitempty"`
	OutputSchemaId string                 `protobuf:"bytes,2,opt,name=output_schema_id,json=outputSchemaId,proto3" json:"output_schema_id,omitempty"`
	MessageConfig  *MessageConfig         `protobuf:"bytes,3,opt,name=message_config,json=messageConfig,proto3" json:"message_config,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConfigOverrides) Reset() {
	*x = ConfigOverrides{}
	mi := &file_com_coralogixapis_notification_center_common_config_overrides_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigOverrides) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigOverrides) ProtoMessage() {}

func (x *ConfigOverrides) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_notification_center_common_config_overrides_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigOverrides.ProtoReflect.Descriptor instead.
func (*ConfigOverrides) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigOverrides) GetConditionType() *ConditionType {
	if x != nil {
		return x.ConditionType
	}
	return nil
}

func (x *ConfigOverrides) GetOutputSchemaId() string {
	if x != nil {
		return x.OutputSchemaId
	}
	return ""
}

func (x *ConfigOverrides) GetMessageConfig() *MessageConfig {
	if x != nil {
		return x.MessageConfig
	}
	return nil
}

type ConditionType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Condition:
	//
	//	*ConditionType_MatchEntityType
	//	*ConditionType_MatchEntityTypeAndSubType
	Condition     isConditionType_Condition `protobuf_oneof:"condition"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConditionType) Reset() {
	*x = ConditionType{}
	mi := &file_com_coralogixapis_notification_center_common_config_overrides_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConditionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionType) ProtoMessage() {}

func (x *ConditionType) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_notification_center_common_config_overrides_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionType.ProtoReflect.Descriptor instead.
func (*ConditionType) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDescGZIP(), []int{1}
}

func (x *ConditionType) GetCondition() isConditionType_Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *ConditionType) GetMatchEntityType() *MatchEntityTypeCondition {
	if x != nil {
		if x, ok := x.Condition.(*ConditionType_MatchEntityType); ok {
			return x.MatchEntityType
		}
	}
	return nil
}

func (x *ConditionType) GetMatchEntityTypeAndSubType() *MatchEntityTypeAndSubTypeCondition {
	if x != nil {
		if x, ok := x.Condition.(*ConditionType_MatchEntityTypeAndSubType); ok {
			return x.MatchEntityTypeAndSubType
		}
	}
	return nil
}

type isConditionType_Condition interface {
	isConditionType_Condition()
}

type ConditionType_MatchEntityType struct {
	MatchEntityType *MatchEntityTypeCondition `protobuf:"bytes,1,opt,name=match_entity_type,json=matchEntityType,proto3,oneof"`
}

type ConditionType_MatchEntityTypeAndSubType struct {
	MatchEntityTypeAndSubType *MatchEntityTypeAndSubTypeCondition `protobuf:"bytes,2,opt,name=match_entity_type_and_sub_type,json=matchEntityTypeAndSubType,proto3,oneof"`
}

func (*ConditionType_MatchEntityType) isConditionType_Condition() {}

func (*ConditionType_MatchEntityTypeAndSubType) isConditionType_Condition() {}

type MessageConfig struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Fields        []*v1.MessageConfigField `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageConfig) Reset() {
	*x = MessageConfig{}
	mi := &file_com_coralogixapis_notification_center_common_config_overrides_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageConfig) ProtoMessage() {}

func (x *MessageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_notification_center_common_config_overrides_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageConfig.ProtoReflect.Descriptor instead.
func (*MessageConfig) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDescGZIP(), []int{2}
}

func (x *MessageConfig) GetFields() []*v1.MessageConfigField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type MatchEntityTypeCondition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityType    string                 `protobuf:"bytes,1,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchEntityTypeCondition) Reset() {
	*x = MatchEntityTypeCondition{}
	mi := &file_com_coralogixapis_notification_center_common_config_overrides_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchEntityTypeCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchEntityTypeCondition) ProtoMessage() {}

func (x *MatchEntityTypeCondition) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_notification_center_common_config_overrides_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchEntityTypeCondition.ProtoReflect.Descriptor instead.
func (*MatchEntityTypeCondition) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDescGZIP(), []int{3}
}

func (x *MatchEntityTypeCondition) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

type MatchEntityTypeAndSubTypeCondition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityType    string                 `protobuf:"bytes,1,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	EntitySubType string                 `protobuf:"bytes,2,opt,name=entity_sub_type,json=entitySubType,proto3" json:"entity_sub_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchEntityTypeAndSubTypeCondition) Reset() {
	*x = MatchEntityTypeAndSubTypeCondition{}
	mi := &file_com_coralogixapis_notification_center_common_config_overrides_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchEntityTypeAndSubTypeCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchEntityTypeAndSubTypeCondition) ProtoMessage() {}

func (x *MatchEntityTypeAndSubTypeCondition) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_notification_center_common_config_overrides_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchEntityTypeAndSubTypeCondition.ProtoReflect.Descriptor instead.
func (*MatchEntityTypeAndSubTypeCondition) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDescGZIP(), []int{4}
}

func (x *MatchEntityTypeAndSubTypeCondition) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *MatchEntityTypeAndSubTypeCondition) GetEntitySubType() string {
	if x != nil {
		return x.EntitySubType
	}
	return ""
}

var File_com_coralogixapis_notification_center_common_config_overrides_proto protoreflect.FileDescriptor

var file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDesc = []byte{
	0x0a, 0x43, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x1a, 0x43, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf5, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x0e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x9c, 0x02, 0x0a, 0x0d, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6d, 0x0a, 0x11, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x1e, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x75,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x19, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x41, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x51, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x3b, 0x0a, 0x18,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6d, 0x0a, 0x22, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x64, 0x53,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDescOnce sync.Once
	file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDescData = file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDesc
)

func file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDescData)
	})
	return file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDescData
}

var file_com_coralogixapis_notification_center_common_config_overrides_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_com_coralogixapis_notification_center_common_config_overrides_proto_goTypes = []any{
	(*ConfigOverrides)(nil),                    // 0: com.coralogixapis.notification_center.ConfigOverrides
	(*ConditionType)(nil),                      // 1: com.coralogixapis.notification_center.ConditionType
	(*MessageConfig)(nil),                      // 2: com.coralogixapis.notification_center.MessageConfig
	(*MatchEntityTypeCondition)(nil),           // 3: com.coralogixapis.notification_center.MatchEntityTypeCondition
	(*MatchEntityTypeAndSubTypeCondition)(nil), // 4: com.coralogixapis.notification_center.MatchEntityTypeAndSubTypeCondition
	(*v1.MessageConfigField)(nil),              // 5: com.coralogixapis.notification_center.MessageConfigField
}
var file_com_coralogixapis_notification_center_common_config_overrides_proto_depIdxs = []int32{
	1, // 0: com.coralogixapis.notification_center.ConfigOverrides.condition_type:type_name -> com.coralogixapis.notification_center.ConditionType
	2, // 1: com.coralogixapis.notification_center.ConfigOverrides.message_config:type_name -> com.coralogixapis.notification_center.MessageConfig
	3, // 2: com.coralogixapis.notification_center.ConditionType.match_entity_type:type_name -> com.coralogixapis.notification_center.MatchEntityTypeCondition
	4, // 3: com.coralogixapis.notification_center.ConditionType.match_entity_type_and_sub_type:type_name -> com.coralogixapis.notification_center.MatchEntityTypeAndSubTypeCondition
	5, // 4: com.coralogixapis.notification_center.MessageConfig.fields:type_name -> com.coralogixapis.notification_center.MessageConfigField
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_notification_center_common_config_overrides_proto_init() }
func file_com_coralogixapis_notification_center_common_config_overrides_proto_init() {
	if File_com_coralogixapis_notification_center_common_config_overrides_proto != nil {
		return
	}
	file_com_coralogixapis_notification_center_common_config_overrides_proto_msgTypes[1].OneofWrappers = []any{
		(*ConditionType_MatchEntityType)(nil),
		(*ConditionType_MatchEntityTypeAndSubType)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogixapis_notification_center_common_config_overrides_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_notification_center_common_config_overrides_proto_depIdxs,
		MessageInfos:      file_com_coralogixapis_notification_center_common_config_overrides_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_notification_center_common_config_overrides_proto = out.File
	file_com_coralogixapis_notification_center_common_config_overrides_proto_rawDesc = nil
	file_com_coralogixapis_notification_center_common_config_overrides_proto_goTypes = nil
	file_com_coralogixapis_notification_center_common_config_overrides_proto_depIdxs = nil
}
