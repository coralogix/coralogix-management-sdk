// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: com/coralogixapis/notification_center/notifications/v1/testing.proto

package v1

import (
	v1 "github.com/coralogix/coralogix-management-sdk/go/internal/coralogixapis/notification_center/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*TestResult_Success_
	//	*TestResult_Failure_
	Result isTestResult_Result `protobuf_oneof:"result"`
}

func (x *TestResult) Reset() {
	*x = TestResult{}
	mi := &file_com_coralogixapis_notification_center_notifications_v1_testing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResult) ProtoMessage() {}

func (x *TestResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_notification_center_notifications_v1_testing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResult.ProtoReflect.Descriptor instead.
func (*TestResult) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDescGZIP(), []int{0}
}

func (m *TestResult) GetResult() isTestResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *TestResult) GetSuccess() *TestResult_Success {
	if x, ok := x.GetResult().(*TestResult_Success_); ok {
		return x.Success
	}
	return nil
}

func (x *TestResult) GetFailure() *TestResult_Failure {
	if x, ok := x.GetResult().(*TestResult_Failure_); ok {
		return x.Failure
	}
	return nil
}

type isTestResult_Result interface {
	isTestResult_Result()
}

type TestResult_Success_ struct {
	Success *TestResult_Success `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type TestResult_Failure_ struct {
	Failure *TestResult_Failure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*TestResult_Success_) isTestResult_Result() {}

func (*TestResult_Failure_) isTestResult_Result() {}

type TestNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId              uint32                     `protobuf:"varint,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	ConnectorId         string                     `protobuf:"bytes,3,opt,name=connector_id,json=connectorId,proto3" json:"connector_id,omitempty"`
	OutputSchemaId      string                     `protobuf:"bytes,4,opt,name=output_schema_id,json=outputSchemaId,proto3" json:"output_schema_id,omitempty"`
	EntityData          *structpb.Struct           `protobuf:"bytes,5,opt,name=entity_data,json=entityData,proto3" json:"entity_data,omitempty"`
	ConnectorConfig     []*v1.ConnectorConfigField `protobuf:"bytes,6,rep,name=connector_config,json=connectorConfig,proto3" json:"connector_config,omitempty"`
	MessageConfig       []*v1.MessageConfigField   `protobuf:"bytes,7,rep,name=message_config,json=messageConfig,proto3" json:"message_config,omitempty"`
	AvailableOperations []*NotificationOperation   `protobuf:"bytes,8,rep,name=available_operations,json=availableOperations,proto3" json:"available_operations,omitempty"`
	Attachments         []*NotificationAttachment  `protobuf:"bytes,9,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *TestNotification) Reset() {
	*x = TestNotification{}
	mi := &file_com_coralogixapis_notification_center_notifications_v1_testing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestNotification) ProtoMessage() {}

func (x *TestNotification) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_notification_center_notifications_v1_testing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestNotification.ProtoReflect.Descriptor instead.
func (*TestNotification) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDescGZIP(), []int{1}
}

func (x *TestNotification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TestNotification) GetTeamId() uint32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *TestNotification) GetConnectorId() string {
	if x != nil {
		return x.ConnectorId
	}
	return ""
}

func (x *TestNotification) GetOutputSchemaId() string {
	if x != nil {
		return x.OutputSchemaId
	}
	return ""
}

func (x *TestNotification) GetEntityData() *structpb.Struct {
	if x != nil {
		return x.EntityData
	}
	return nil
}

func (x *TestNotification) GetConnectorConfig() []*v1.ConnectorConfigField {
	if x != nil {
		return x.ConnectorConfig
	}
	return nil
}

func (x *TestNotification) GetMessageConfig() []*v1.MessageConfigField {
	if x != nil {
		return x.MessageConfig
	}
	return nil
}

func (x *TestNotification) GetAvailableOperations() []*NotificationOperation {
	if x != nil {
		return x.AvailableOperations
	}
	return nil
}

func (x *TestNotification) GetAttachments() []*NotificationAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type TestResult_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestResult_Success) Reset() {
	*x = TestResult_Success{}
	mi := &file_com_coralogixapis_notification_center_notifications_v1_testing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestResult_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResult_Success) ProtoMessage() {}

func (x *TestResult_Success) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_notification_center_notifications_v1_testing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResult_Success.ProtoReflect.Descriptor instead.
func (*TestResult_Success) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDescGZIP(), []int{0, 0}
}

type TestResult_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message    string  `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	StatusCode *uint32 `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3,oneof" json:"status_code,omitempty"`
}

func (x *TestResult_Failure) Reset() {
	*x = TestResult_Failure{}
	mi := &file_com_coralogixapis_notification_center_notifications_v1_testing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestResult_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResult_Failure) ProtoMessage() {}

func (x *TestResult_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_notification_center_notifications_v1_testing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResult_Failure.ProtoReflect.Descriptor instead.
func (*TestResult_Failure) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDescGZIP(), []int{0, 1}
}

func (x *TestResult_Failure) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TestResult_Failure) GetStatusCode() uint32 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

var File_com_coralogixapis_notification_center_notifications_v1_testing_proto protoreflect.FileDescriptor

var file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDesc = []byte{
	0x0a, 0x44, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x49,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x43, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x02, 0x0a,
	0x0a, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x66, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x66, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x1a, 0x09, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x59, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x81, 0x05, 0x0a, 0x10,
	0x54, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x66, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x60, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x80, 0x01, 0x0a, 0x14, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x70, 0x0a,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDescOnce sync.Once
	file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDescData = file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDesc
)

func file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDescData)
	})
	return file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDescData
}

var file_com_coralogixapis_notification_center_notifications_v1_testing_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_com_coralogixapis_notification_center_notifications_v1_testing_proto_goTypes = []any{
	(*TestResult)(nil),              // 0: com.coralogixapis.notification_center.notifications.v1.TestResult
	(*TestNotification)(nil),        // 1: com.coralogixapis.notification_center.notifications.v1.TestNotification
	(*TestResult_Success)(nil),      // 2: com.coralogixapis.notification_center.notifications.v1.TestResult.Success
	(*TestResult_Failure)(nil),      // 3: com.coralogixapis.notification_center.notifications.v1.TestResult.Failure
	(*structpb.Struct)(nil),         // 4: google.protobuf.Struct
	(*v1.ConnectorConfigField)(nil), // 5: com.coralogixapis.notification_center.ConnectorConfigField
	(*v1.MessageConfigField)(nil),   // 6: com.coralogixapis.notification_center.MessageConfigField
	(*NotificationOperation)(nil),   // 7: com.coralogixapis.notification_center.notifications.v1.NotificationOperation
	(*NotificationAttachment)(nil),  // 8: com.coralogixapis.notification_center.notifications.v1.NotificationAttachment
}
var file_com_coralogixapis_notification_center_notifications_v1_testing_proto_depIdxs = []int32{
	2, // 0: com.coralogixapis.notification_center.notifications.v1.TestResult.success:type_name -> com.coralogixapis.notification_center.notifications.v1.TestResult.Success
	3, // 1: com.coralogixapis.notification_center.notifications.v1.TestResult.failure:type_name -> com.coralogixapis.notification_center.notifications.v1.TestResult.Failure
	4, // 2: com.coralogixapis.notification_center.notifications.v1.TestNotification.entity_data:type_name -> google.protobuf.Struct
	5, // 3: com.coralogixapis.notification_center.notifications.v1.TestNotification.connector_config:type_name -> com.coralogixapis.notification_center.ConnectorConfigField
	6, // 4: com.coralogixapis.notification_center.notifications.v1.TestNotification.message_config:type_name -> com.coralogixapis.notification_center.MessageConfigField
	7, // 5: com.coralogixapis.notification_center.notifications.v1.TestNotification.available_operations:type_name -> com.coralogixapis.notification_center.notifications.v1.NotificationOperation
	8, // 6: com.coralogixapis.notification_center.notifications.v1.TestNotification.attachments:type_name -> com.coralogixapis.notification_center.notifications.v1.NotificationAttachment
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_notification_center_notifications_v1_testing_proto_init() }
func file_com_coralogixapis_notification_center_notifications_v1_testing_proto_init() {
	if File_com_coralogixapis_notification_center_notifications_v1_testing_proto != nil {
		return
	}
	file_com_coralogixapis_notification_center_notifications_v1_notification_proto_init()
	file_com_coralogixapis_notification_center_notifications_v1_testing_proto_msgTypes[0].OneofWrappers = []any{
		(*TestResult_Success_)(nil),
		(*TestResult_Failure_)(nil),
	}
	file_com_coralogixapis_notification_center_notifications_v1_testing_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogixapis_notification_center_notifications_v1_testing_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_notification_center_notifications_v1_testing_proto_depIdxs,
		MessageInfos:      file_com_coralogixapis_notification_center_notifications_v1_testing_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_notification_center_notifications_v1_testing_proto = out.File
	file_com_coralogixapis_notification_center_notifications_v1_testing_proto_rawDesc = nil
	file_com_coralogixapis_notification_center_notifications_v1_testing_proto_goTypes = nil
	file_com_coralogixapis_notification_center_notifications_v1_testing_proto_depIdxs = nil
}
