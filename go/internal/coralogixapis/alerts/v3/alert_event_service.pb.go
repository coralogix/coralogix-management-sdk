// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: com/coralogixapis/alerts/v3/event/alert_event_service.proto

package v3

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderByAlertEventFields int32

const (
	OrderByAlertEventFields_ORDER_BY_ALERT_EVENT_FIELDS_UNSPECIFIED OrderByAlertEventFields = 0
	OrderByAlertEventFields_ORDER_BY_ALERT_EVENT_FIELDS_TIMESTAMP   OrderByAlertEventFields = 1
)

// Enum value maps for OrderByAlertEventFields.
var (
	OrderByAlertEventFields_name = map[int32]string{
		0: "ORDER_BY_ALERT_EVENT_FIELDS_UNSPECIFIED",
		1: "ORDER_BY_ALERT_EVENT_FIELDS_TIMESTAMP",
	}
	OrderByAlertEventFields_value = map[string]int32{
		"ORDER_BY_ALERT_EVENT_FIELDS_UNSPECIFIED": 0,
		"ORDER_BY_ALERT_EVENT_FIELDS_TIMESTAMP":   1,
	}
)

func (x OrderByAlertEventFields) Enum() *OrderByAlertEventFields {
	p := new(OrderByAlertEventFields)
	*p = x
	return p
}

func (x OrderByAlertEventFields) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderByAlertEventFields) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_enumTypes[0].Descriptor()
}

func (OrderByAlertEventFields) Type() protoreflect.EnumType {
	return &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_enumTypes[0]
}

func (x OrderByAlertEventFields) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderByAlertEventFields.Descriptor instead.
func (OrderByAlertEventFields) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescGZIP(), []int{0}
}

type OrderByAlertEventDirection int32

const (
	OrderByAlertEventDirection_ORDER_BY_ALERT_EVENT_DIRECTION_UNSPECIFIED OrderByAlertEventDirection = 0
	OrderByAlertEventDirection_ORDER_BY_ALERT_EVENT_DIRECTION_ASC         OrderByAlertEventDirection = 1
	OrderByAlertEventDirection_ORDER_BY_ALERT_EVENT_DIRECTION_DESC        OrderByAlertEventDirection = 2
)

// Enum value maps for OrderByAlertEventDirection.
var (
	OrderByAlertEventDirection_name = map[int32]string{
		0: "ORDER_BY_ALERT_EVENT_DIRECTION_UNSPECIFIED",
		1: "ORDER_BY_ALERT_EVENT_DIRECTION_ASC",
		2: "ORDER_BY_ALERT_EVENT_DIRECTION_DESC",
	}
	OrderByAlertEventDirection_value = map[string]int32{
		"ORDER_BY_ALERT_EVENT_DIRECTION_UNSPECIFIED": 0,
		"ORDER_BY_ALERT_EVENT_DIRECTION_ASC":         1,
		"ORDER_BY_ALERT_EVENT_DIRECTION_DESC":        2,
	}
)

func (x OrderByAlertEventDirection) Enum() *OrderByAlertEventDirection {
	p := new(OrderByAlertEventDirection)
	*p = x
	return p
}

func (x OrderByAlertEventDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderByAlertEventDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_enumTypes[1].Descriptor()
}

func (OrderByAlertEventDirection) Type() protoreflect.EnumType {
	return &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_enumTypes[1]
}

func (x OrderByAlertEventDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderByAlertEventDirection.Descriptor instead.
func (OrderByAlertEventDirection) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescGZIP(), []int{1}
}

type GetAlertEventStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids      []*wrapperspb.StringValue `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	OrderBys []*AlertEventOrderBy      `protobuf:"bytes,2,rep,name=order_bys,json=orderBys,proto3" json:"order_bys,omitempty"`
}

func (x *GetAlertEventStatsRequest) Reset() {
	*x = GetAlertEventStatsRequest{}
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAlertEventStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertEventStatsRequest) ProtoMessage() {}

func (x *GetAlertEventStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertEventStatsRequest.ProtoReflect.Descriptor instead.
func (*GetAlertEventStatsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetAlertEventStatsRequest) GetIds() []*wrapperspb.StringValue {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetAlertEventStatsRequest) GetOrderBys() []*AlertEventOrderBy {
	if x != nil {
		return x.OrderBys
	}
	return nil
}

type GetAlertEventStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventsStats map[string]*EventStats `protobuf:"bytes,1,rep,name=events_stats,json=eventsStats,proto3" json:"events_stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAlertEventStatsResponse) Reset() {
	*x = GetAlertEventStatsResponse{}
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAlertEventStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertEventStatsResponse) ProtoMessage() {}

func (x *GetAlertEventStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertEventStatsResponse.ProtoReflect.Descriptor instead.
func (*GetAlertEventStatsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetAlertEventStatsResponse) GetEventsStats() map[string]*EventStats {
	if x != nil {
		return x.EventsStats
	}
	return nil
}

type Permutation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermutationLabels map[string]string `protobuf:"bytes,1,rep,name=permutation_labels,json=permutationLabels,proto3" json:"permutation_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Permutation) Reset() {
	*x = Permutation{}
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permutation) ProtoMessage() {}

func (x *Permutation) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permutation.ProtoReflect.Descriptor instead.
func (*Permutation) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescGZIP(), []int{2}
}

func (x *Permutation) GetPermutationLabels() map[string]string {
	if x != nil {
		return x.PermutationLabels
	}
	return nil
}

type EventStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count                        *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=count,proto3" json:"count,omitempty"`
	ResolvedCount                *wrapperspb.UInt32Value `protobuf:"bytes,2,opt,name=resolved_count,json=resolvedCount,proto3" json:"resolved_count,omitempty"`
	TriggeredCount               *wrapperspb.UInt32Value `protobuf:"bytes,3,opt,name=triggered_count,json=triggeredCount,proto3" json:"triggered_count,omitempty"`
	TriggeredPermutationsSamples []*Permutation          `protobuf:"bytes,4,rep,name=triggered_permutations_samples,json=triggeredPermutationsSamples,proto3" json:"triggered_permutations_samples,omitempty"`
	ResolvedPermutationsSamples  []*Permutation          `protobuf:"bytes,5,rep,name=resolved_permutations_samples,json=resolvedPermutationsSamples,proto3" json:"resolved_permutations_samples,omitempty"`
	ActivityAnalysisStats        *ActivityAnalysisStats  `protobuf:"bytes,6,opt,name=activity_analysis_stats,json=activityAnalysisStats,proto3" json:"activity_analysis_stats,omitempty"`
}

func (x *EventStats) Reset() {
	*x = EventStats{}
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStats) ProtoMessage() {}

func (x *EventStats) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStats.ProtoReflect.Descriptor instead.
func (*EventStats) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescGZIP(), []int{3}
}

func (x *EventStats) GetCount() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Count
	}
	return nil
}

func (x *EventStats) GetResolvedCount() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ResolvedCount
	}
	return nil
}

func (x *EventStats) GetTriggeredCount() *wrapperspb.UInt32Value {
	if x != nil {
		return x.TriggeredCount
	}
	return nil
}

func (x *EventStats) GetTriggeredPermutationsSamples() []*Permutation {
	if x != nil {
		return x.TriggeredPermutationsSamples
	}
	return nil
}

func (x *EventStats) GetResolvedPermutationsSamples() []*Permutation {
	if x != nil {
		return x.ResolvedPermutationsSamples
	}
	return nil
}

func (x *EventStats) GetActivityAnalysisStats() *ActivityAnalysisStats {
	if x != nil {
		return x.ActivityAnalysisStats
	}
	return nil
}

type ActivityAnalysisStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMutedCount *wrapperspb.UInt32Value   `protobuf:"bytes,1,opt,name=is_muted_count,json=isMutedCount,proto3" json:"is_muted_count,omitempty"`
	Rules        []*wrapperspb.StringValue `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *ActivityAnalysisStats) Reset() {
	*x = ActivityAnalysisStats{}
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityAnalysisStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityAnalysisStats) ProtoMessage() {}

func (x *ActivityAnalysisStats) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityAnalysisStats.ProtoReflect.Descriptor instead.
func (*ActivityAnalysisStats) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescGZIP(), []int{4}
}

func (x *ActivityAnalysisStats) GetIsMutedCount() *wrapperspb.UInt32Value {
	if x != nil {
		return x.IsMutedCount
	}
	return nil
}

func (x *ActivityAnalysisStats) GetRules() []*wrapperspb.StringValue {
	if x != nil {
		return x.Rules
	}
	return nil
}

type GetAlertEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderBys   []*AlertEventOrderBy    `protobuf:"bytes,2,rep,name=order_bys,json=orderBys,proto3" json:"order_bys,omitempty"`
	Pagination *PaginationRequest      `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetAlertEventRequest) Reset() {
	*x = GetAlertEventRequest{}
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAlertEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertEventRequest) ProtoMessage() {}

func (x *GetAlertEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertEventRequest.ProtoReflect.Descriptor instead.
func (*GetAlertEventRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAlertEventRequest) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GetAlertEventRequest) GetOrderBys() []*AlertEventOrderBy {
	if x != nil {
		return x.OrderBys
	}
	return nil
}

func (x *GetAlertEventRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetAlertEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to AlertEvent:
	//
	//	*GetAlertEventResponse_SinglePermutation
	//	*GetAlertEventResponse_MultiplePermutation
	AlertEvent isGetAlertEventResponse_AlertEvent `protobuf_oneof:"alert_event"`
	Pagination *PaginationResponse                `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetAlertEventResponse) Reset() {
	*x = GetAlertEventResponse{}
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAlertEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertEventResponse) ProtoMessage() {}

func (x *GetAlertEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertEventResponse.ProtoReflect.Descriptor instead.
func (*GetAlertEventResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetAlertEventResponse) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (m *GetAlertEventResponse) GetAlertEvent() isGetAlertEventResponse_AlertEvent {
	if m != nil {
		return m.AlertEvent
	}
	return nil
}

func (x *GetAlertEventResponse) GetSinglePermutation() *AlertEvent {
	if x, ok := x.GetAlertEvent().(*GetAlertEventResponse_SinglePermutation); ok {
		return x.SinglePermutation
	}
	return nil
}

func (x *GetAlertEventResponse) GetMultiplePermutation() *AlertEventMultiplePermutation {
	if x, ok := x.GetAlertEvent().(*GetAlertEventResponse_MultiplePermutation); ok {
		return x.MultiplePermutation
	}
	return nil
}

func (x *GetAlertEventResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isGetAlertEventResponse_AlertEvent interface {
	isGetAlertEventResponse_AlertEvent()
}

type GetAlertEventResponse_SinglePermutation struct {
	SinglePermutation *AlertEvent `protobuf:"bytes,2,opt,name=single_permutation,json=singlePermutation,proto3,oneof"`
}

type GetAlertEventResponse_MultiplePermutation struct {
	MultiplePermutation *AlertEventMultiplePermutation `protobuf:"bytes,3,opt,name=multiple_permutation,json=multiplePermutation,proto3,oneof"`
}

func (*GetAlertEventResponse_SinglePermutation) isGetAlertEventResponse_AlertEvent() {}

func (*GetAlertEventResponse_MultiplePermutation) isGetAlertEventResponse_AlertEvent() {}

type PaginationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *PaginationRequest) Reset() {
	*x = PaginationRequest{}
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationRequest) ProtoMessage() {}

func (x *PaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationRequest.ProtoReflect.Descriptor instead.
func (*PaginationRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescGZIP(), []int{7}
}

func (x *PaginationRequest) GetPageSize() *wrapperspb.UInt32Value {
	if x != nil {
		return x.PageSize
	}
	return nil
}

func (x *PaginationRequest) GetPageToken() *wrapperspb.StringValue {
	if x != nil {
		return x.PageToken
	}
	return nil
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSize     *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	NextPageToken *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescGZIP(), []int{8}
}

func (x *PaginationResponse) GetTotalSize() *wrapperspb.UInt32Value {
	if x != nil {
		return x.TotalSize
	}
	return nil
}

func (x *PaginationResponse) GetNextPageToken() *wrapperspb.StringValue {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type AlertEventMultiplePermutation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertEventMultiplePermutation []*AlertEvent `protobuf:"bytes,1,rep,name=alert_event_multiple_permutation,json=alertEventMultiplePermutation,proto3" json:"alert_event_multiple_permutation,omitempty"`
}

func (x *AlertEventMultiplePermutation) Reset() {
	*x = AlertEventMultiplePermutation{}
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertEventMultiplePermutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertEventMultiplePermutation) ProtoMessage() {}

func (x *AlertEventMultiplePermutation) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertEventMultiplePermutation.ProtoReflect.Descriptor instead.
func (*AlertEventMultiplePermutation) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescGZIP(), []int{9}
}

func (x *AlertEventMultiplePermutation) GetAlertEventMultiplePermutation() []*AlertEvent {
	if x != nil {
		return x.AlertEventMultiplePermutation
	}
	return nil
}

type AlertEventOrderBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName OrderByAlertEventFields    `protobuf:"varint,1,opt,name=field_name,json=fieldName,proto3,enum=com.coralogixapis.alerts.v3.OrderByAlertEventFields" json:"field_name,omitempty"`
	Direction OrderByAlertEventDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=com.coralogixapis.alerts.v3.OrderByAlertEventDirection" json:"direction,omitempty"`
}

func (x *AlertEventOrderBy) Reset() {
	*x = AlertEventOrderBy{}
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertEventOrderBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertEventOrderBy) ProtoMessage() {}

func (x *AlertEventOrderBy) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertEventOrderBy.ProtoReflect.Descriptor instead.
func (*AlertEventOrderBy) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescGZIP(), []int{10}
}

func (x *AlertEventOrderBy) GetFieldName() OrderByAlertEventFields {
	if x != nil {
		return x.FieldName
	}
	return OrderByAlertEventFields_ORDER_BY_ALERT_EVENT_FIELDS_UNSPECIFIED
}

func (x *AlertEventOrderBy) GetDirection() OrderByAlertEventDirection {
	if x != nil {
		return x.Direction
	}
	return OrderByAlertEventDirection_ORDER_BY_ALERT_EVENT_DIRECTION_UNSPECIFIED
}

var File_com_coralogixapis_alerts_v3_event_alert_event_service_proto protoreflect.FileDescriptor

var file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x34, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x12, 0x4b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x73,
	0x22, 0xf2, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6b, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x67, 0x0a, 0x10,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc3, 0x01, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a, 0x12, 0x70, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x11, 0x70, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x44, 0x0a, 0x16, 0x50, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x96, 0x04, 0x0a, 0x0a,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x43,
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6e, 0x0a, 0x1e, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1c, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x6c, 0x0a, 0x1d, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1b, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x6a, 0x0a, 0x17, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x15, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x42,
	0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x69, 0x73, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xe1, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4b, 0x0a,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x73, 0x12, 0x4e, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf0, 0x02, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x58, 0x0a, 0x12, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x65, 0x72,
	0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x14,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d,
	0x0a, 0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x8b, 0x01,
	0x0a, 0x11, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3b,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x97, 0x01, 0x0a, 0x12,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x44, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x1d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x20, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f,
	0x70, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x1d, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbf, 0x01, 0x0a, 0x11, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12,
	0x53, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76,
	0x33, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x71, 0x0a, 0x17, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x27, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f,
	0x42, 0x59, 0x5f, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f,
	0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x53, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x01, 0x2a, 0x9d,
	0x01, 0x0a, 0x1a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x2a, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x26, 0x0a,
	0x22, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x59, 0x5f, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x41, 0x53, 0x43, 0x10, 0x01, 0x12, 0x27, 0x0a, 0x23, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42,
	0x59, 0x5f, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x49,
	0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x02, 0x32, 0x83,
	0x03, 0x0a, 0x11, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0xa9, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0xc2,
	0xb8, 0x02, 0x11, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x20, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x33, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0xc1, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0xc2, 0xb8, 0x02, 0x18, 0x0a,
	0x16, 0x67, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x20, 0x73, 0x74, 0x61, 0x74, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f,
	0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescOnce sync.Once
	file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescData = file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDesc
)

func file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescData)
	})
	return file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDescData
}

var file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_goTypes = []any{
	(OrderByAlertEventFields)(0),          // 0: com.coralogixapis.alerts.v3.OrderByAlertEventFields
	(OrderByAlertEventDirection)(0),       // 1: com.coralogixapis.alerts.v3.OrderByAlertEventDirection
	(*GetAlertEventStatsRequest)(nil),     // 2: com.coralogixapis.alerts.v3.GetAlertEventStatsRequest
	(*GetAlertEventStatsResponse)(nil),    // 3: com.coralogixapis.alerts.v3.GetAlertEventStatsResponse
	(*Permutation)(nil),                   // 4: com.coralogixapis.alerts.v3.Permutation
	(*EventStats)(nil),                    // 5: com.coralogixapis.alerts.v3.EventStats
	(*ActivityAnalysisStats)(nil),         // 6: com.coralogixapis.alerts.v3.ActivityAnalysisStats
	(*GetAlertEventRequest)(nil),          // 7: com.coralogixapis.alerts.v3.GetAlertEventRequest
	(*GetAlertEventResponse)(nil),         // 8: com.coralogixapis.alerts.v3.GetAlertEventResponse
	(*PaginationRequest)(nil),             // 9: com.coralogixapis.alerts.v3.PaginationRequest
	(*PaginationResponse)(nil),            // 10: com.coralogixapis.alerts.v3.PaginationResponse
	(*AlertEventMultiplePermutation)(nil), // 11: com.coralogixapis.alerts.v3.AlertEventMultiplePermutation
	(*AlertEventOrderBy)(nil),             // 12: com.coralogixapis.alerts.v3.AlertEventOrderBy
	nil,                                   // 13: com.coralogixapis.alerts.v3.GetAlertEventStatsResponse.EventsStatsEntry
	nil,                                   // 14: com.coralogixapis.alerts.v3.Permutation.PermutationLabelsEntry
	(*wrapperspb.StringValue)(nil),        // 15: google.protobuf.StringValue
	(*wrapperspb.UInt32Value)(nil),        // 16: google.protobuf.UInt32Value
	(*AlertEvent)(nil),                    // 17: com.coralogixapis.alerts.v3.AlertEvent
}
var file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_depIdxs = []int32{
	15, // 0: com.coralogixapis.alerts.v3.GetAlertEventStatsRequest.ids:type_name -> google.protobuf.StringValue
	12, // 1: com.coralogixapis.alerts.v3.GetAlertEventStatsRequest.order_bys:type_name -> com.coralogixapis.alerts.v3.AlertEventOrderBy
	13, // 2: com.coralogixapis.alerts.v3.GetAlertEventStatsResponse.events_stats:type_name -> com.coralogixapis.alerts.v3.GetAlertEventStatsResponse.EventsStatsEntry
	14, // 3: com.coralogixapis.alerts.v3.Permutation.permutation_labels:type_name -> com.coralogixapis.alerts.v3.Permutation.PermutationLabelsEntry
	16, // 4: com.coralogixapis.alerts.v3.EventStats.count:type_name -> google.protobuf.UInt32Value
	16, // 5: com.coralogixapis.alerts.v3.EventStats.resolved_count:type_name -> google.protobuf.UInt32Value
	16, // 6: com.coralogixapis.alerts.v3.EventStats.triggered_count:type_name -> google.protobuf.UInt32Value
	4,  // 7: com.coralogixapis.alerts.v3.EventStats.triggered_permutations_samples:type_name -> com.coralogixapis.alerts.v3.Permutation
	4,  // 8: com.coralogixapis.alerts.v3.EventStats.resolved_permutations_samples:type_name -> com.coralogixapis.alerts.v3.Permutation
	6,  // 9: com.coralogixapis.alerts.v3.EventStats.activity_analysis_stats:type_name -> com.coralogixapis.alerts.v3.ActivityAnalysisStats
	16, // 10: com.coralogixapis.alerts.v3.ActivityAnalysisStats.is_muted_count:type_name -> google.protobuf.UInt32Value
	15, // 11: com.coralogixapis.alerts.v3.ActivityAnalysisStats.rules:type_name -> google.protobuf.StringValue
	15, // 12: com.coralogixapis.alerts.v3.GetAlertEventRequest.id:type_name -> google.protobuf.StringValue
	12, // 13: com.coralogixapis.alerts.v3.GetAlertEventRequest.order_bys:type_name -> com.coralogixapis.alerts.v3.AlertEventOrderBy
	9,  // 14: com.coralogixapis.alerts.v3.GetAlertEventRequest.pagination:type_name -> com.coralogixapis.alerts.v3.PaginationRequest
	15, // 15: com.coralogixapis.alerts.v3.GetAlertEventResponse.id:type_name -> google.protobuf.StringValue
	17, // 16: com.coralogixapis.alerts.v3.GetAlertEventResponse.single_permutation:type_name -> com.coralogixapis.alerts.v3.AlertEvent
	11, // 17: com.coralogixapis.alerts.v3.GetAlertEventResponse.multiple_permutation:type_name -> com.coralogixapis.alerts.v3.AlertEventMultiplePermutation
	10, // 18: com.coralogixapis.alerts.v3.GetAlertEventResponse.pagination:type_name -> com.coralogixapis.alerts.v3.PaginationResponse
	16, // 19: com.coralogixapis.alerts.v3.PaginationRequest.page_size:type_name -> google.protobuf.UInt32Value
	15, // 20: com.coralogixapis.alerts.v3.PaginationRequest.page_token:type_name -> google.protobuf.StringValue
	16, // 21: com.coralogixapis.alerts.v3.PaginationResponse.total_size:type_name -> google.protobuf.UInt32Value
	15, // 22: com.coralogixapis.alerts.v3.PaginationResponse.next_page_token:type_name -> google.protobuf.StringValue
	17, // 23: com.coralogixapis.alerts.v3.AlertEventMultiplePermutation.alert_event_multiple_permutation:type_name -> com.coralogixapis.alerts.v3.AlertEvent
	0,  // 24: com.coralogixapis.alerts.v3.AlertEventOrderBy.field_name:type_name -> com.coralogixapis.alerts.v3.OrderByAlertEventFields
	1,  // 25: com.coralogixapis.alerts.v3.AlertEventOrderBy.direction:type_name -> com.coralogixapis.alerts.v3.OrderByAlertEventDirection
	5,  // 26: com.coralogixapis.alerts.v3.GetAlertEventStatsResponse.EventsStatsEntry.value:type_name -> com.coralogixapis.alerts.v3.EventStats
	7,  // 27: com.coralogixapis.alerts.v3.AlertEventService.GetAlertEvent:input_type -> com.coralogixapis.alerts.v3.GetAlertEventRequest
	2,  // 28: com.coralogixapis.alerts.v3.AlertEventService.GetAlertEventsStats:input_type -> com.coralogixapis.alerts.v3.GetAlertEventStatsRequest
	8,  // 29: com.coralogixapis.alerts.v3.AlertEventService.GetAlertEvent:output_type -> com.coralogixapis.alerts.v3.GetAlertEventResponse
	3,  // 30: com.coralogixapis.alerts.v3.AlertEventService.GetAlertEventsStats:output_type -> com.coralogixapis.alerts.v3.GetAlertEventStatsResponse
	29, // [29:31] is the sub-list for method output_type
	27, // [27:29] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_init() }
func file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_init() {
	if File_com_coralogixapis_alerts_v3_event_alert_event_service_proto != nil {
		return
	}
	file_com_coralogixapis_alerts_v3_event_alert_event_proto_init()
	file_com_coralogixapis_alerts_v3_alert_defs_service_proto_init()
	file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes[6].OneofWrappers = []any{
		(*GetAlertEventResponse_SinglePermutation)(nil),
		(*GetAlertEventResponse_MultiplePermutation)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_depIdxs,
		EnumInfos:         file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_enumTypes,
		MessageInfos:      file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_alerts_v3_event_alert_event_service_proto = out.File
	file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_rawDesc = nil
	file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_goTypes = nil
	file_com_coralogixapis_alerts_v3_event_alert_event_service_proto_depIdxs = nil
}
