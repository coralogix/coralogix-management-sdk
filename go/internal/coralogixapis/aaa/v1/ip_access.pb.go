// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: com/coralogixapis/aaa/v1/ip_access.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv3/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CoralogixCustomerSupportAccess represents the state of Coralogix customer support access.
type CoralogixCustomerSupportAccess int32

const (
	// The default value, which is unspecified.
	CoralogixCustomerSupportAccess_CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED CoralogixCustomerSupportAccess = 0
	// Customer support access is disabled
	CoralogixCustomerSupportAccess_CORALOGIX_CUSTOMER_SUPPORT_ACCESS_DISABLED CoralogixCustomerSupportAccess = 1
	// Customer support access is enabled
	CoralogixCustomerSupportAccess_CORALOGIX_CUSTOMER_SUPPORT_ACCESS_ENABLED CoralogixCustomerSupportAccess = 2
)

// Enum value maps for CoralogixCustomerSupportAccess.
var (
	CoralogixCustomerSupportAccess_name = map[int32]string{
		0: "CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED",
		1: "CORALOGIX_CUSTOMER_SUPPORT_ACCESS_DISABLED",
		2: "CORALOGIX_CUSTOMER_SUPPORT_ACCESS_ENABLED",
	}
	CoralogixCustomerSupportAccess_value = map[string]int32{
		"CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED": 0,
		"CORALOGIX_CUSTOMER_SUPPORT_ACCESS_DISABLED":    1,
		"CORALOGIX_CUSTOMER_SUPPORT_ACCESS_ENABLED":     2,
	}
)

func (x CoralogixCustomerSupportAccess) Enum() *CoralogixCustomerSupportAccess {
	p := new(CoralogixCustomerSupportAccess)
	*p = x
	return p
}

func (x CoralogixCustomerSupportAccess) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CoralogixCustomerSupportAccess) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogixapis_aaa_v1_ip_access_proto_enumTypes[0].Descriptor()
}

func (CoralogixCustomerSupportAccess) Type() protoreflect.EnumType {
	return &file_com_coralogixapis_aaa_v1_ip_access_proto_enumTypes[0]
}

func (x CoralogixCustomerSupportAccess) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CoralogixCustomerSupportAccess.Descriptor instead.
func (CoralogixCustomerSupportAccess) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescGZIP(), []int{0}
}

type IpAccess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IpRange       string                 `protobuf:"bytes,2,opt,name=ip_range,json=ipRange,proto3" json:"ip_range,omitempty"`
	Enabled       bool                   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IpAccess) Reset() {
	*x = IpAccess{}
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IpAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpAccess) ProtoMessage() {}

func (x *IpAccess) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpAccess.ProtoReflect.Descriptor instead.
func (*IpAccess) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescGZIP(), []int{0}
}

func (x *IpAccess) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IpAccess) GetIpRange() string {
	if x != nil {
		return x.IpRange
	}
	return ""
}

func (x *IpAccess) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type CompanyIpAccessSettings struct {
	state                                protoimpl.MessageState         `protogen:"open.v1"`
	Id                                   string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IpAccess                             map[string]*IpAccess           `protobuf:"bytes,2,rep,name=ip_access,json=ipAccess,proto3" json:"ip_access,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	EnableCoralogixCustomerSupportAccess CoralogixCustomerSupportAccess `protobuf:"varint,3,opt,name=enable_coralogix_customer_support_access,json=enableCoralogixCustomerSupportAccess,proto3,enum=com.coralogixapis.aaa.v1.CoralogixCustomerSupportAccess" json:"enable_coralogix_customer_support_access,omitempty"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *CompanyIpAccessSettings) Reset() {
	*x = CompanyIpAccessSettings{}
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompanyIpAccessSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyIpAccessSettings) ProtoMessage() {}

func (x *CompanyIpAccessSettings) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyIpAccessSettings.ProtoReflect.Descriptor instead.
func (*CompanyIpAccessSettings) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescGZIP(), []int{1}
}

func (x *CompanyIpAccessSettings) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CompanyIpAccessSettings) GetIpAccess() map[string]*IpAccess {
	if x != nil {
		return x.IpAccess
	}
	return nil
}

func (x *CompanyIpAccessSettings) GetEnableCoralogixCustomerSupportAccess() CoralogixCustomerSupportAccess {
	if x != nil {
		return x.EnableCoralogixCustomerSupportAccess
	}
	return CoralogixCustomerSupportAccess_CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED
}

type CreateCompanyIpAccessSettingsRequest struct {
	state                                protoimpl.MessageState         `protogen:"open.v1"`
	IpAccess                             []*IpAccess                    `protobuf:"bytes,1,rep,name=ip_access,json=ipAccess,proto3" json:"ip_access,omitempty"`
	EnableCoralogixCustomerSupportAccess CoralogixCustomerSupportAccess `protobuf:"varint,2,opt,name=enable_coralogix_customer_support_access,json=enableCoralogixCustomerSupportAccess,proto3,enum=com.coralogixapis.aaa.v1.CoralogixCustomerSupportAccess" json:"enable_coralogix_customer_support_access,omitempty"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *CreateCompanyIpAccessSettingsRequest) Reset() {
	*x = CreateCompanyIpAccessSettingsRequest{}
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCompanyIpAccessSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyIpAccessSettingsRequest) ProtoMessage() {}

func (x *CreateCompanyIpAccessSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyIpAccessSettingsRequest.ProtoReflect.Descriptor instead.
func (*CreateCompanyIpAccessSettingsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCompanyIpAccessSettingsRequest) GetIpAccess() []*IpAccess {
	if x != nil {
		return x.IpAccess
	}
	return nil
}

func (x *CreateCompanyIpAccessSettingsRequest) GetEnableCoralogixCustomerSupportAccess() CoralogixCustomerSupportAccess {
	if x != nil {
		return x.EnableCoralogixCustomerSupportAccess
	}
	return CoralogixCustomerSupportAccess_CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED
}

type CreateCompanyIpAccessSettingsResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Settings      *CompanyIpAccessSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCompanyIpAccessSettingsResponse) Reset() {
	*x = CreateCompanyIpAccessSettingsResponse{}
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCompanyIpAccessSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyIpAccessSettingsResponse) ProtoMessage() {}

func (x *CreateCompanyIpAccessSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyIpAccessSettingsResponse.ProtoReflect.Descriptor instead.
func (*CreateCompanyIpAccessSettingsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCompanyIpAccessSettingsResponse) GetSettings() *CompanyIpAccessSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type ReplaceCompanyIpAccessSettingsRequest struct {
	state                                protoimpl.MessageState         `protogen:"open.v1"`
	Id                                   *string                        `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	IpAccess                             []*IpAccess                    `protobuf:"bytes,2,rep,name=ip_access,json=ipAccess,proto3" json:"ip_access,omitempty"`
	EnableCoralogixCustomerSupportAccess CoralogixCustomerSupportAccess `protobuf:"varint,3,opt,name=enable_coralogix_customer_support_access,json=enableCoralogixCustomerSupportAccess,proto3,enum=com.coralogixapis.aaa.v1.CoralogixCustomerSupportAccess" json:"enable_coralogix_customer_support_access,omitempty"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *ReplaceCompanyIpAccessSettingsRequest) Reset() {
	*x = ReplaceCompanyIpAccessSettingsRequest{}
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplaceCompanyIpAccessSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceCompanyIpAccessSettingsRequest) ProtoMessage() {}

func (x *ReplaceCompanyIpAccessSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceCompanyIpAccessSettingsRequest.ProtoReflect.Descriptor instead.
func (*ReplaceCompanyIpAccessSettingsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescGZIP(), []int{4}
}

func (x *ReplaceCompanyIpAccessSettingsRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ReplaceCompanyIpAccessSettingsRequest) GetIpAccess() []*IpAccess {
	if x != nil {
		return x.IpAccess
	}
	return nil
}

func (x *ReplaceCompanyIpAccessSettingsRequest) GetEnableCoralogixCustomerSupportAccess() CoralogixCustomerSupportAccess {
	if x != nil {
		return x.EnableCoralogixCustomerSupportAccess
	}
	return CoralogixCustomerSupportAccess_CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED
}

type ReplaceCompanyIpAccessSettingsResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Settings      *CompanyIpAccessSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplaceCompanyIpAccessSettingsResponse) Reset() {
	*x = ReplaceCompanyIpAccessSettingsResponse{}
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplaceCompanyIpAccessSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceCompanyIpAccessSettingsResponse) ProtoMessage() {}

func (x *ReplaceCompanyIpAccessSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceCompanyIpAccessSettingsResponse.ProtoReflect.Descriptor instead.
func (*ReplaceCompanyIpAccessSettingsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescGZIP(), []int{5}
}

func (x *ReplaceCompanyIpAccessSettingsResponse) GetSettings() *CompanyIpAccessSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type GetCompanyIpAccessSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *string                `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCompanyIpAccessSettingsRequest) Reset() {
	*x = GetCompanyIpAccessSettingsRequest{}
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompanyIpAccessSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyIpAccessSettingsRequest) ProtoMessage() {}

func (x *GetCompanyIpAccessSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyIpAccessSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyIpAccessSettingsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescGZIP(), []int{6}
}

func (x *GetCompanyIpAccessSettingsRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type GetCompanyIpAccessSettingsResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Settings      *CompanyIpAccessSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCompanyIpAccessSettingsResponse) Reset() {
	*x = GetCompanyIpAccessSettingsResponse{}
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompanyIpAccessSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyIpAccessSettingsResponse) ProtoMessage() {}

func (x *GetCompanyIpAccessSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyIpAccessSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyIpAccessSettingsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescGZIP(), []int{7}
}

func (x *GetCompanyIpAccessSettingsResponse) GetSettings() *CompanyIpAccessSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type DeleteCompanyIpAccessSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *string                `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCompanyIpAccessSettingsRequest) Reset() {
	*x = DeleteCompanyIpAccessSettingsRequest{}
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCompanyIpAccessSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompanyIpAccessSettingsRequest) ProtoMessage() {}

func (x *DeleteCompanyIpAccessSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompanyIpAccessSettingsRequest.ProtoReflect.Descriptor instead.
func (*DeleteCompanyIpAccessSettingsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteCompanyIpAccessSettingsRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type DeleteCompanyIpAccessSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCompanyIpAccessSettingsResponse) Reset() {
	*x = DeleteCompanyIpAccessSettingsResponse{}
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCompanyIpAccessSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompanyIpAccessSettingsResponse) ProtoMessage() {}

func (x *DeleteCompanyIpAccessSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompanyIpAccessSettingsResponse.ProtoReflect.Descriptor instead.
func (*DeleteCompanyIpAccessSettingsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescGZIP(), []int{9}
}

var File_com_coralogixapis_aaa_v1_ip_access_proto protoreflect.FileDescriptor

const file_com_coralogixapis_aaa_v1_ip_access_proto_rawDesc = "" +
	"\n" +
	"(com/coralogixapis/aaa/v1/ip_access.proto\x12\x18com.coralogixapis.aaa.v1\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv3/options/annotations.proto\"\xe5\x03\n" +
	"\bIpAccess\x12K\n" +
	"\x04name\x18\x01 \x01(\tB7\x9aA42 The name of the IP access entry.J\x10\"Office Network\"R\x04name\x12P\n" +
	"\bip_range\x18\x02 \x01(\tB5\x9aA22\x1eThe IP range in CIDR notation.J\x10\"192.168.0.1/24\"R\aipRange\x12M\n" +
	"\aenabled\x18\x03 \x01(\bB3\x9aA02(Whether this IP access entry is enabled.J\x04trueR\aenabled:\xea\x01\x9aA\xe6\x01\n" +
	"F*\tIP Access2$Represents a single IP access entry.\xd2\x01\bip_range\xd2\x01\aenabled*\x9b\x01\n" +
	":Find out more about IP access control in our documentation\x12]https://coralogix.com/docs/user-guides/account-management/account-settings/ip-access-control/\"\x9f\x06\n" +
	"\x17CompanyIpAccessSettings\x12\x98\x01\n" +
	"\x02id\x18\x01 \x01(\tB\x87\x01\x9aA\x83\x012YThe unique identifier for the company IP access settings. This is typically a company ID.J&\"d662a2f1-21c3-493c-8f8a-595d3ab05ef3\"R\x02id\x12\xa9\x01\n" +
	"\tip_access\x18\x02 \x03(\v2?.com.coralogixapis.aaa.v1.CompanyIpAccessSettings.IpAccessEntryBK\x9aAH2\x1eThe list of IP access entries.J&\"d662a2f1-21c3-493c-8f8a-595d3ab05ef3\"R\bipAccess\x12\xf2\x01\n" +
	"(enable_coralogix_customer_support_access\x18\x03 \x01(\x0e28.com.coralogixapis.aaa.v1.CoralogixCustomerSupportAccessB`\x9aA]2.The Coralogix customer support access setting.J+\"CORALOGIX_CUSTOMER_SUPPORT_ACCESS_ENABLED\"R$enableCoralogixCustomerSupportAccess\x1a_\n" +
	"\rIpAccessEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x128\n" +
	"\x05value\x18\x02 \x01(\v2\".com.coralogixapis.aaa.v1.IpAccessR\x05value:\x028\x01:g\x9aAd\n" +
	"b*\x1aCompany IP access settings2DThis data structure represents the IP access settings for a company.\"\x8c\x04\n" +
	"$CreateCompanyIpAccessSettingsRequest\x12j\n" +
	"\tip_access\x18\x01 \x03(\v2\".com.coralogixapis.aaa.v1.IpAccessB)\x9aA&2$List of IP access entries to create.R\bipAccess\x12\xf2\x01\n" +
	"(enable_coralogix_customer_support_access\x18\x02 \x01(\x0e28.com.coralogixapis.aaa.v1.CoralogixCustomerSupportAccessB`\x9aA]2.The Coralogix customer support access setting.J+\"CORALOGIX_CUSTOMER_SUPPORT_ACCESS_ENABLED\"R$enableCoralogixCustomerSupportAccess:\x82\x01\x9aA\x7f\n" +
	"}*)Create company IP access settings request2PThis data structure represents the request to create company IP access settings.\"\xac\x02\n" +
	"%CreateCompanyIpAccessSettingsResponse\x12{\n" +
	"\bsettings\x18\x01 \x01(\v21.com.coralogixapis.aaa.v1.CompanyIpAccessSettingsB,\x9aA)2'The created company IP access settings.R\bsettings:\x85\x01\x9aA\x81\x01\n" +
	"\x7f**Create company IP access settings response2QThis data structure represents the response to create company IP access settings.\"\x82\x05\n" +
	"%ReplaceCompanyIpAccessSettingsRequest\x12@\n" +
	"\x02id\x18\x01 \x01(\tB+\x9aA(J&\"d662a2f1-21c3-493c-8f8a-595d3ab05ef3\"H\x00R\x02id\x88\x01\x01\x12k\n" +
	"\tip_access\x18\x02 \x03(\v2\".com.coralogixapis.aaa.v1.IpAccessB*\x9aA'2%List of IP access entries to replace.R\bipAccess\x12\x9a\x02\n" +
	"(enable_coralogix_customer_support_access\x18\x03 \x01(\x0e28.com.coralogixapis.aaa.v1.CoralogixCustomerSupportAccessB\x87\x01\x9aA\x83\x012TThe Coralogix customer support access setting. Defaults to DISABLED if not provided.J+\"CORALOGIX_CUSTOMER_SUPPORT_ACCESS_ENABLED\"R$enableCoralogixCustomerSupportAccess:\x85\x01\x9aA\x81\x01\n" +
	"\x7f**Replace company IP access settings request2QThis data structure represents the request to replace company IP access settings.B\x05\n" +
	"\x03_id\"\xb1\x02\n" +
	"&ReplaceCompanyIpAccessSettingsResponse\x12|\n" +
	"\bsettings\x18\x01 \x01(\v21.com.coralogixapis.aaa.v1.CompanyIpAccessSettingsB-\x9aA*2(The replaced company IP access settings.R\bsettings:\x88\x01\x9aA\x84\x01\n" +
	"\x81\x01*+Replace company IP access settings response2RThis data structure represents the response to replace company IP access settings.\"\xc2\x02\n" +
	"!GetCompanyIpAccessSettingsRequest\x12\x97\x01\n" +
	"\x02id\x18\x01 \x01(\tB\x81\x01\x9aA~2|The ID of the company IP access settings to get. If it's not provided, the id will be derived from the authorization header.H\x00R\x02id\x88\x01\x01:|\x9aAy\n" +
	"w*&Get company IP access settings request2MThis data structure represents the request to get company IP access settings.B\x05\n" +
	"\x03_id\"\x99\x02\n" +
	"\"GetCompanyIpAccessSettingsResponse\x12s\n" +
	"\bsettings\x18\x01 \x01(\v21.com.coralogixapis.aaa.v1.CompanyIpAccessSettingsB$\x9aA!2\x1fThe company IP access settings.R\bsettings:~\x9aA{\n" +
	"y*'Get company IP access settings response2NThis data structure represents the response to get company IP access settings.\"\xf4\x01\n" +
	"$DeleteCompanyIpAccessSettingsRequest\x12@\n" +
	"\x02id\x18\x01 \x01(\tB+\x9aA(J&\"d662a2f1-21c3-493c-8f8a-595d3ab05ef3\"H\x00R\x02id\x88\x01\x01:\x82\x01\x9aA\x7f\n" +
	"}*)Delete company IP access settings request2PThis data structure represents the request to delete company IP access settings.B\x05\n" +
	"\x03_id\"\xaf\x01\n" +
	"%DeleteCompanyIpAccessSettingsResponse:\x85\x01\x9aA\x81\x01\n" +
	"\x7f**Delete company IP access settings response2QThis data structure represents the response to delete company IP access settings.*\xb2\x01\n" +
	"\x1eCoralogixCustomerSupportAccess\x121\n" +
	"-CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED\x10\x00\x12.\n" +
	"*CORALOGIX_CUSTOMER_SUPPORT_ACCESS_DISABLED\x10\x01\x12-\n" +
	")CORALOGIX_CUSTOMER_SUPPORT_ACCESS_ENABLED\x10\x022\xd8\f\n" +
	"\x0fIpAccessService\x12\xf9\x02\n" +
	"\x1dCreateCompanyIpAccessSettings\x12>.com.coralogixapis.aaa.v1.CreateCompanyIpAccessSettingsRequest\x1a?.com.coralogixapis.aaa.v1.CreateCompanyIpAccessSettingsResponse\"\xd6\x01\x9aA\x8b\x01\n" +
	"\x11IP access service\x12!Create company IP access settingsJ\x14\n" +
	"\x03400\x12\r\n" +
	"\vBad requestJ\x1d\n" +
	"\x03401\x12\x16\n" +
	"\x14Unauthorized requestJ\x1e\n" +
	"\x03500\x12\x17\n" +
	"\x15Internal server error\x82\xd3\xe4\x93\x02A:\x01*Z \"\x1e/v1/company/settings/ip-access\"\x1a/aaa/team-sec-ip-access/v1\x12\xfd\x02\n" +
	"\x1eReplaceCompanyIpAccessSettings\x12?.com.coralogixapis.aaa.v1.ReplaceCompanyIpAccessSettingsRequest\x1a@.com.coralogixapis.aaa.v1.ReplaceCompanyIpAccessSettingsResponse\"\xd7\x01\x9aA\x8c\x01\n" +
	"\x11IP access service\x12\"Replace company IP access settingsJ\x14\n" +
	"\x03400\x12\r\n" +
	"\vBad requestJ\x1d\n" +
	"\x03401\x12\x16\n" +
	"\x14Unauthorized requestJ\x1e\n" +
	"\x03500\x12\x17\n" +
	"\x15Internal server error\x82\xd3\xe4\x93\x02A:\x01*Z \x1a\x1e/v1/company/settings/ip-access\x1a\x1a/aaa/team-sec-ip-access/v1\x12\xea\x02\n" +
	"\x1aGetCompanyIpAccessSettings\x12;.com.coralogixapis.aaa.v1.GetCompanyIpAccessSettingsRequest\x1a<.com.coralogixapis.aaa.v1.GetCompanyIpAccessSettingsResponse\"\xd0\x01\x9aA\x88\x01\n" +
	"\x11IP access service\x12\x1eGet company IP access settingsJ\x14\n" +
	"\x03400\x12\r\n" +
	"\vBad requestJ\x1d\n" +
	"\x03401\x12\x16\n" +
	"\x14Unauthorized requestJ\x1e\n" +
	"\x03500\x12\x17\n" +
	"\x15Internal server error\x82\xd3\xe4\x93\x02>Z \x12\x1e/v1/company/settings/ip-access\x12\x1a/aaa/team-sec-ip-access/v1\x12\xf6\x02\n" +
	"\x1dDeleteCompanyIpAccessSettings\x12>.com.coralogixapis.aaa.v1.DeleteCompanyIpAccessSettingsRequest\x1a?.com.coralogixapis.aaa.v1.DeleteCompanyIpAccessSettingsResponse\"\xd3\x01\x9aA\x8b\x01\n" +
	"\x11IP access service\x12!Delete company IP access settingsJ\x14\n" +
	"\x03400\x12\r\n" +
	"\vBad requestJ\x1d\n" +
	"\x03401\x12\x16\n" +
	"\x14Unauthorized requestJ\x1e\n" +
	"\x03500\x12\x17\n" +
	"\x15Internal server error\x82\xd3\xe4\x93\x02>Z *\x1e/v1/company/settings/ip-access*\x1a/aaa/team-sec-ip-access/v1\x1ac\x9aA`\n" +
	"\x11IP access service\x12KIP access service provides the API for managing company IP access settings.b\x06proto3"

var (
	file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescOnce sync.Once
	file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescData []byte
)

func file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_coralogixapis_aaa_v1_ip_access_proto_rawDesc), len(file_com_coralogixapis_aaa_v1_ip_access_proto_rawDesc)))
	})
	return file_com_coralogixapis_aaa_v1_ip_access_proto_rawDescData
}

var file_com_coralogixapis_aaa_v1_ip_access_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_com_coralogixapis_aaa_v1_ip_access_proto_goTypes = []any{
	(CoralogixCustomerSupportAccess)(0),            // 0: com.coralogixapis.aaa.v1.CoralogixCustomerSupportAccess
	(*IpAccess)(nil),                               // 1: com.coralogixapis.aaa.v1.IpAccess
	(*CompanyIpAccessSettings)(nil),                // 2: com.coralogixapis.aaa.v1.CompanyIpAccessSettings
	(*CreateCompanyIpAccessSettingsRequest)(nil),   // 3: com.coralogixapis.aaa.v1.CreateCompanyIpAccessSettingsRequest
	(*CreateCompanyIpAccessSettingsResponse)(nil),  // 4: com.coralogixapis.aaa.v1.CreateCompanyIpAccessSettingsResponse
	(*ReplaceCompanyIpAccessSettingsRequest)(nil),  // 5: com.coralogixapis.aaa.v1.ReplaceCompanyIpAccessSettingsRequest
	(*ReplaceCompanyIpAccessSettingsResponse)(nil), // 6: com.coralogixapis.aaa.v1.ReplaceCompanyIpAccessSettingsResponse
	(*GetCompanyIpAccessSettingsRequest)(nil),      // 7: com.coralogixapis.aaa.v1.GetCompanyIpAccessSettingsRequest
	(*GetCompanyIpAccessSettingsResponse)(nil),     // 8: com.coralogixapis.aaa.v1.GetCompanyIpAccessSettingsResponse
	(*DeleteCompanyIpAccessSettingsRequest)(nil),   // 9: com.coralogixapis.aaa.v1.DeleteCompanyIpAccessSettingsRequest
	(*DeleteCompanyIpAccessSettingsResponse)(nil),  // 10: com.coralogixapis.aaa.v1.DeleteCompanyIpAccessSettingsResponse
	nil, // 11: com.coralogixapis.aaa.v1.CompanyIpAccessSettings.IpAccessEntry
}
var file_com_coralogixapis_aaa_v1_ip_access_proto_depIdxs = []int32{
	11, // 0: com.coralogixapis.aaa.v1.CompanyIpAccessSettings.ip_access:type_name -> com.coralogixapis.aaa.v1.CompanyIpAccessSettings.IpAccessEntry
	0,  // 1: com.coralogixapis.aaa.v1.CompanyIpAccessSettings.enable_coralogix_customer_support_access:type_name -> com.coralogixapis.aaa.v1.CoralogixCustomerSupportAccess
	1,  // 2: com.coralogixapis.aaa.v1.CreateCompanyIpAccessSettingsRequest.ip_access:type_name -> com.coralogixapis.aaa.v1.IpAccess
	0,  // 3: com.coralogixapis.aaa.v1.CreateCompanyIpAccessSettingsRequest.enable_coralogix_customer_support_access:type_name -> com.coralogixapis.aaa.v1.CoralogixCustomerSupportAccess
	2,  // 4: com.coralogixapis.aaa.v1.CreateCompanyIpAccessSettingsResponse.settings:type_name -> com.coralogixapis.aaa.v1.CompanyIpAccessSettings
	1,  // 5: com.coralogixapis.aaa.v1.ReplaceCompanyIpAccessSettingsRequest.ip_access:type_name -> com.coralogixapis.aaa.v1.IpAccess
	0,  // 6: com.coralogixapis.aaa.v1.ReplaceCompanyIpAccessSettingsRequest.enable_coralogix_customer_support_access:type_name -> com.coralogixapis.aaa.v1.CoralogixCustomerSupportAccess
	2,  // 7: com.coralogixapis.aaa.v1.ReplaceCompanyIpAccessSettingsResponse.settings:type_name -> com.coralogixapis.aaa.v1.CompanyIpAccessSettings
	2,  // 8: com.coralogixapis.aaa.v1.GetCompanyIpAccessSettingsResponse.settings:type_name -> com.coralogixapis.aaa.v1.CompanyIpAccessSettings
	1,  // 9: com.coralogixapis.aaa.v1.CompanyIpAccessSettings.IpAccessEntry.value:type_name -> com.coralogixapis.aaa.v1.IpAccess
	3,  // 10: com.coralogixapis.aaa.v1.IpAccessService.CreateCompanyIpAccessSettings:input_type -> com.coralogixapis.aaa.v1.CreateCompanyIpAccessSettingsRequest
	5,  // 11: com.coralogixapis.aaa.v1.IpAccessService.ReplaceCompanyIpAccessSettings:input_type -> com.coralogixapis.aaa.v1.ReplaceCompanyIpAccessSettingsRequest
	7,  // 12: com.coralogixapis.aaa.v1.IpAccessService.GetCompanyIpAccessSettings:input_type -> com.coralogixapis.aaa.v1.GetCompanyIpAccessSettingsRequest
	9,  // 13: com.coralogixapis.aaa.v1.IpAccessService.DeleteCompanyIpAccessSettings:input_type -> com.coralogixapis.aaa.v1.DeleteCompanyIpAccessSettingsRequest
	4,  // 14: com.coralogixapis.aaa.v1.IpAccessService.CreateCompanyIpAccessSettings:output_type -> com.coralogixapis.aaa.v1.CreateCompanyIpAccessSettingsResponse
	6,  // 15: com.coralogixapis.aaa.v1.IpAccessService.ReplaceCompanyIpAccessSettings:output_type -> com.coralogixapis.aaa.v1.ReplaceCompanyIpAccessSettingsResponse
	8,  // 16: com.coralogixapis.aaa.v1.IpAccessService.GetCompanyIpAccessSettings:output_type -> com.coralogixapis.aaa.v1.GetCompanyIpAccessSettingsResponse
	10, // 17: com.coralogixapis.aaa.v1.IpAccessService.DeleteCompanyIpAccessSettings:output_type -> com.coralogixapis.aaa.v1.DeleteCompanyIpAccessSettingsResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_aaa_v1_ip_access_proto_init() }
func file_com_coralogixapis_aaa_v1_ip_access_proto_init() {
	if File_com_coralogixapis_aaa_v1_ip_access_proto != nil {
		return
	}
	file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[4].OneofWrappers = []any{}
	file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[6].OneofWrappers = []any{}
	file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_coralogixapis_aaa_v1_ip_access_proto_rawDesc), len(file_com_coralogixapis_aaa_v1_ip_access_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogixapis_aaa_v1_ip_access_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_aaa_v1_ip_access_proto_depIdxs,
		EnumInfos:         file_com_coralogixapis_aaa_v1_ip_access_proto_enumTypes,
		MessageInfos:      file_com_coralogixapis_aaa_v1_ip_access_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_aaa_v1_ip_access_proto = out.File
	file_com_coralogixapis_aaa_v1_ip_access_proto_goTypes = nil
	file_com_coralogixapis_aaa_v1_ip_access_proto_depIdxs = nil
}
