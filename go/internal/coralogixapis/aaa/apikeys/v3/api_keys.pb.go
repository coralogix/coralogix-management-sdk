// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.26.1
// source: com/coralogixapis/aaa/apikeys/v3/api_keys.proto

package v3

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Owner struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Owner:
	//
	//	*Owner_UserId
	//	*Owner_TeamId
	//	*Owner_OrganisationId
	Owner         isOwner_Owner `protobuf_oneof:"owner"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Owner) Reset() {
	*x = Owner{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Owner) ProtoMessage() {}

func (x *Owner) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Owner.ProtoReflect.Descriptor instead.
func (*Owner) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{0}
}

func (x *Owner) GetOwner() isOwner_Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *Owner) GetUserId() string {
	if x != nil {
		if x, ok := x.Owner.(*Owner_UserId); ok {
			return x.UserId
		}
	}
	return ""
}

func (x *Owner) GetTeamId() uint32 {
	if x != nil {
		if x, ok := x.Owner.(*Owner_TeamId); ok {
			return x.TeamId
		}
	}
	return 0
}

func (x *Owner) GetOrganisationId() string {
	if x != nil {
		if x, ok := x.Owner.(*Owner_OrganisationId); ok {
			return x.OrganisationId
		}
	}
	return ""
}

type isOwner_Owner interface {
	isOwner_Owner()
}

type Owner_UserId struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof"`
}

type Owner_TeamId struct {
	TeamId uint32 `protobuf:"varint,2,opt,name=team_id,json=teamId,proto3,oneof"`
}

type Owner_OrganisationId struct {
	OrganisationId string `protobuf:"bytes,3,opt,name=organisation_id,json=organisationId,proto3,oneof"`
}

func (*Owner_UserId) isOwner_Owner() {}

func (*Owner_TeamId) isOwner_Owner() {}

func (*Owner_OrganisationId) isOwner_Owner() {}

type KeyInfo struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	Name           string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Owner          *Owner                  `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Active         bool                    `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Hashed         bool                    `protobuf:"varint,4,opt,name=hashed,proto3" json:"hashed,omitempty"`
	KeyPermissions *KeyInfo_KeyPermissions `protobuf:"bytes,5,opt,name=key_permissions,json=keyPermissions,proto3" json:"key_permissions,omitempty"`
	Value          *string                 `protobuf:"bytes,6,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Id             string                  `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *KeyInfo) Reset() {
	*x = KeyInfo{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyInfo) ProtoMessage() {}

func (x *KeyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyInfo.ProtoReflect.Descriptor instead.
func (*KeyInfo) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{1}
}

func (x *KeyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KeyInfo) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *KeyInfo) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *KeyInfo) GetHashed() bool {
	if x != nil {
		return x.Hashed
	}
	return false
}

func (x *KeyInfo) GetKeyPermissions() *KeyInfo_KeyPermissions {
	if x != nil {
		return x.KeyPermissions
	}
	return nil
}

func (x *KeyInfo) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *KeyInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PresetInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Permissions   []string               `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PresetInfo) Reset() {
	*x = PresetInfo{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PresetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetInfo) ProtoMessage() {}

func (x *PresetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetInfo.ProtoReflect.Descriptor instead.
func (*PresetInfo) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{2}
}

func (x *PresetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PresetInfo) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type UpdateApiKeyRequest struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	KeyId         string                           `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	NewName       *string                          `protobuf:"bytes,2,opt,name=new_name,json=newName,proto3,oneof" json:"new_name,omitempty"`
	IsActive      *bool                            `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3,oneof" json:"is_active,omitempty"`
	Presets       *UpdateApiKeyRequest_Presets     `protobuf:"bytes,4,opt,name=presets,proto3,oneof" json:"presets,omitempty"`
	Permissions   *UpdateApiKeyRequest_Permissions `protobuf:"bytes,5,opt,name=permissions,proto3,oneof" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateApiKeyRequest) Reset() {
	*x = UpdateApiKeyRequest{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiKeyRequest) ProtoMessage() {}

func (x *UpdateApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiKeyRequest.ProtoReflect.Descriptor instead.
func (*UpdateApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateApiKeyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *UpdateApiKeyRequest) GetNewName() string {
	if x != nil && x.NewName != nil {
		return *x.NewName
	}
	return ""
}

func (x *UpdateApiKeyRequest) GetIsActive() bool {
	if x != nil && x.IsActive != nil {
		return *x.IsActive
	}
	return false
}

func (x *UpdateApiKeyRequest) GetPresets() *UpdateApiKeyRequest_Presets {
	if x != nil {
		return x.Presets
	}
	return nil
}

func (x *UpdateApiKeyRequest) GetPermissions() *UpdateApiKeyRequest_Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type UpdateApiKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateApiKeyResponse) Reset() {
	*x = UpdateApiKeyResponse{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiKeyResponse) ProtoMessage() {}

func (x *UpdateApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiKeyResponse.ProtoReflect.Descriptor instead.
func (*UpdateApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{4}
}

type DeleteApiKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyId         string                 `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteApiKeyRequest) Reset() {
	*x = DeleteApiKeyRequest{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApiKeyRequest) ProtoMessage() {}

func (x *DeleteApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApiKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteApiKeyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type DeleteApiKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteApiKeyResponse) Reset() {
	*x = DeleteApiKeyResponse{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApiKeyResponse) ProtoMessage() {}

func (x *DeleteApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApiKeyResponse.ProtoReflect.Descriptor instead.
func (*DeleteApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{6}
}

type CreateApiKeyRequest struct {
	state          protoimpl.MessageState              `protogen:"open.v1"`
	Name           string                              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Owner          *Owner                              `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	KeyPermissions *CreateApiKeyRequest_KeyPermissions `protobuf:"bytes,3,opt,name=key_permissions,json=keyPermissions,proto3" json:"key_permissions,omitempty"`
	Hashed         bool                                `protobuf:"varint,4,opt,name=hashed,proto3" json:"hashed,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateApiKeyRequest) Reset() {
	*x = CreateApiKeyRequest{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiKeyRequest) ProtoMessage() {}

func (x *CreateApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{7}
}

func (x *CreateApiKeyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateApiKeyRequest) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *CreateApiKeyRequest) GetKeyPermissions() *CreateApiKeyRequest_KeyPermissions {
	if x != nil {
		return x.KeyPermissions
	}
	return nil
}

func (x *CreateApiKeyRequest) GetHashed() bool {
	if x != nil {
		return x.Hashed
	}
	return false
}

type CreateApiKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyId         string                 `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateApiKeyResponse) Reset() {
	*x = CreateApiKeyResponse{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiKeyResponse) ProtoMessage() {}

func (x *CreateApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{8}
}

func (x *CreateApiKeyResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *CreateApiKeyResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateApiKeyResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetApiKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyId         string                 `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApiKeyRequest) Reset() {
	*x = GetApiKeyRequest{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiKeyRequest) ProtoMessage() {}

func (x *GetApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiKeyRequest.ProtoReflect.Descriptor instead.
func (*GetApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{9}
}

func (x *GetApiKeyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type GetApiKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyInfo       *KeyInfo               `protobuf:"bytes,1,opt,name=key_info,json=keyInfo,proto3" json:"key_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApiKeyResponse) Reset() {
	*x = GetApiKeyResponse{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiKeyResponse) ProtoMessage() {}

func (x *GetApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiKeyResponse.ProtoReflect.Descriptor instead.
func (*GetApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{10}
}

func (x *GetApiKeyResponse) GetKeyInfo() *KeyInfo {
	if x != nil {
		return x.KeyInfo
	}
	return nil
}

type GetSendDataApiKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSendDataApiKeysRequest) Reset() {
	*x = GetSendDataApiKeysRequest{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSendDataApiKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendDataApiKeysRequest) ProtoMessage() {}

func (x *GetSendDataApiKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendDataApiKeysRequest.ProtoReflect.Descriptor instead.
func (*GetSendDataApiKeysRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{11}
}

type GetSendDataApiKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []*KeyInfo             `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSendDataApiKeysResponse) Reset() {
	*x = GetSendDataApiKeysResponse{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSendDataApiKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendDataApiKeysResponse) ProtoMessage() {}

func (x *GetSendDataApiKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendDataApiKeysResponse.ProtoReflect.Descriptor instead.
func (*GetSendDataApiKeysResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{12}
}

func (x *GetSendDataApiKeysResponse) GetKeys() []*KeyInfo {
	if x != nil {
		return x.Keys
	}
	return nil
}

type KeyInfo_KeyPermissions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Presets       []*PresetInfo          `protobuf:"bytes,1,rep,name=presets,proto3" json:"presets,omitempty"`
	Permissions   []string               `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyInfo_KeyPermissions) Reset() {
	*x = KeyInfo_KeyPermissions{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyInfo_KeyPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyInfo_KeyPermissions) ProtoMessage() {}

func (x *KeyInfo_KeyPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyInfo_KeyPermissions.ProtoReflect.Descriptor instead.
func (*KeyInfo_KeyPermissions) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{1, 0}
}

func (x *KeyInfo_KeyPermissions) GetPresets() []*PresetInfo {
	if x != nil {
		return x.Presets
	}
	return nil
}

func (x *KeyInfo_KeyPermissions) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type UpdateApiKeyRequest_Presets struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Presets       []string               `protobuf:"bytes,1,rep,name=presets,proto3" json:"presets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateApiKeyRequest_Presets) Reset() {
	*x = UpdateApiKeyRequest_Presets{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateApiKeyRequest_Presets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiKeyRequest_Presets) ProtoMessage() {}

func (x *UpdateApiKeyRequest_Presets) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiKeyRequest_Presets.ProtoReflect.Descriptor instead.
func (*UpdateApiKeyRequest_Presets) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{3, 0}
}

func (x *UpdateApiKeyRequest_Presets) GetPresets() []string {
	if x != nil {
		return x.Presets
	}
	return nil
}

type UpdateApiKeyRequest_Permissions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permissions   []string               `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateApiKeyRequest_Permissions) Reset() {
	*x = UpdateApiKeyRequest_Permissions{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateApiKeyRequest_Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApiKeyRequest_Permissions) ProtoMessage() {}

func (x *UpdateApiKeyRequest_Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApiKeyRequest_Permissions.ProtoReflect.Descriptor instead.
func (*UpdateApiKeyRequest_Permissions) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{3, 1}
}

func (x *UpdateApiKeyRequest_Permissions) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type CreateApiKeyRequest_KeyPermissions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Presets       []string               `protobuf:"bytes,1,rep,name=presets,proto3" json:"presets,omitempty"`
	Permissions   []string               `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateApiKeyRequest_KeyPermissions) Reset() {
	*x = CreateApiKeyRequest_KeyPermissions{}
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateApiKeyRequest_KeyPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiKeyRequest_KeyPermissions) ProtoMessage() {}

func (x *CreateApiKeyRequest_KeyPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiKeyRequest_KeyPermissions.ProtoReflect.Descriptor instead.
func (*CreateApiKeyRequest_KeyPermissions) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP(), []int{7, 0}
}

func (x *CreateApiKeyRequest_KeyPermissions) GetPresets() []string {
	if x != nil {
		return x.Presets
	}
	return nil
}

func (x *CreateApiKeyRequest_KeyPermissions) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

var File_com_coralogixapis_aaa_apikeys_v3_api_keys_proto protoreflect.FileDescriptor

const file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDesc = "" +
	"\n" +
	"/com/coralogixapis/aaa/apikeys/v3/api_keys.proto\x12 com.coralogixapis.aaa.apikeys.v3\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"q\n" +
	"\x05Owner\x12\x19\n" +
	"\auser_id\x18\x01 \x01(\tH\x00R\x06userId\x12\x19\n" +
	"\ateam_id\x18\x02 \x01(\rH\x00R\x06teamId\x12)\n" +
	"\x0forganisation_id\x18\x03 \x01(\tH\x00R\x0eorganisationIdB\a\n" +
	"\x05owner\"\xc1\a\n" +
	"\aKeyInfo\x12%\n" +
	"\x04name\x18\x01 \x01(\tB\x11\x92A\x0eJ\f\"my_api_key\"R\x04name\x12O\n" +
	"\x05owner\x18\x02 \x01(\v2'.com.coralogixapis.aaa.apikeys.v3.OwnerB\x10\x92A\rJ\v\"a_user_id\"R\x05owner\x12!\n" +
	"\x06active\x18\x03 \x01(\bB\t\x92A\x06J\x04trueR\x06active\x12!\n" +
	"\x06hashed\x18\x04 \x01(\bB\t\x92A\x06J\x04trueR\x06hashed\x12a\n" +
	"\x0fkey_permissions\x18\x05 \x01(\v28.com.coralogixapis.aaa.apikeys.v3.KeyInfo.KeyPermissionsR\x0ekeyPermissions\x12\x19\n" +
	"\x05value\x18\x06 \x01(\tH\x00R\x05value\x88\x01\x01\x12\x0e\n" +
	"\x02id\x18\a \x01(\tR\x02id\x1a\xd9\x02\n" +
	"\x0eKeyPermissions\x12F\n" +
	"\apresets\x18\x01 \x03(\v2,.com.coralogixapis.aaa.apikeys.v3.PresetInfoR\apresets\x12 \n" +
	"\vpermissions\x18\x02 \x03(\tR\vpermissions:\xdc\x01\x92A\xd8\x01\n" +
	"h*\x0fKey Permissions2=This data structure represents the permissions on an API key.\xd2\x01\apresets\xd2\x01\vpermissions*l\n" +
	"\x1cFind out more about api keys\x12Lhttps://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/:\x83\x02\x92A\xff\x01\n" +
	"\x8e\x01*\bKey Info2JThis data structure represents the information associated with an API key.\xd2\x01\x02id\xd2\x01\x04name\xd2\x01\x05owner\xd2\x01\x06active\xd2\x01\x06hashed\xd2\x01\x0fkey_permissions*l\n" +
	"\x1cFind out more about api keys\x12Lhttps://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/B\b\n" +
	"\x06_value\"\xcc\x02\n" +
	"\n" +
	"PresetInfo\x12$\n" +
	"\x04name\x18\x01 \x01(\tB\x10\x92A\rJ\v\"my_preset\"R\x04name\x124\n" +
	"\vpermissions\x18\x02 \x03(\tB\x12\x92A\x0fJ\r[\"read_logs\"]R\vpermissions:\xe1\x01\x92A\xdd\x01\n" +
	"m*\vPreset Info2IThis data structure represents a preset set of permissions on an API key.\xd2\x01\x04name\xd2\x01\vpermissions*l\n" +
	"\x1cFind out more about api keys\x12Lhttps://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/\"\xed\b\n" +
	"\x13UpdateApiKeyRequest\x12'\n" +
	"\x06key_id\x18\x01 \x01(\tB\x10\x92A\rJ\v\"my_key_id\"R\x05keyId\x122\n" +
	"\bnew_name\x18\x02 \x01(\tB\x12\x92A\x0fJ\r\"my_new_name\"H\x00R\anewName\x88\x01\x01\x12+\n" +
	"\tis_active\x18\x03 \x01(\bB\t\x92A\x06J\x04trueH\x01R\bisActive\x88\x01\x01\x12\\\n" +
	"\apresets\x18\x04 \x01(\v2=.com.coralogixapis.aaa.apikeys.v3.UpdateApiKeyRequest.PresetsH\x02R\apresets\x88\x01\x01\x12h\n" +
	"\vpermissions\x18\x05 \x01(\v2A.com.coralogixapis.aaa.apikeys.v3.UpdateApiKeyRequest.PermissionsH\x03R\vpermissions\x88\x01\x01\x1a\xf9\x01\n" +
	"\aPresets\x12\x18\n" +
	"\apresets\x18\x01 \x03(\tR\apresets:\xd3\x01\x92A\xcf\x01\n" +
	"_*\aPresets2JThis data structure represents a set of permissions presets on an API key.\xd2\x01\apresets*l\n" +
	"\x1cFind out more about api keys\x12Lhttps://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/\x1a\x85\x02\n" +
	"\vPermissions\x12 \n" +
	"\vpermissions\x18\x01 \x03(\tR\vpermissions:\xd3\x01\x92A\xcf\x01\n" +
	"_*\vPermissions2BThis data structure represents a set of permissions on an API key.\xd2\x01\vpermissions*l\n" +
	"\x1cFind out more about api keys\x12Lhttps://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/:\xc8\x01\x92A\xc4\x01\n" +
	"T*\x16Update Api Key Request21This data structure is used to update an API key.\xd2\x01\x06key_id*l\n" +
	"\x1cFind out more about api keys\x12Lhttps://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/B\v\n" +
	"\t_new_nameB\f\n" +
	"\n" +
	"_is_activeB\n" +
	"\n" +
	"\b_presetsB\x0e\n" +
	"\f_permissions\"\x16\n" +
	"\x14UpdateApiKeyResponse\"\xf7\x01\n" +
	"\x13DeleteApiKeyRequest\x12\x15\n" +
	"\x06key_id\x18\x01 \x01(\tR\x05keyId:\xc8\x01\x92A\xc4\x01\n" +
	"T*\x16Delete Api Key Request21This data structure is used to delete an API key.\xd2\x01\x06key_id*l\n" +
	"\x1cFind out more about api keys\x12Lhttps://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/\"\x16\n" +
	"\x14DeleteApiKeyResponse\"\xf1\x06\n" +
	"\x13CreateApiKeyRequest\x12%\n" +
	"\x04name\x18\x01 \x01(\tB\x11\x92A\x0eJ\f\"my_api_key\"R\x04name\x12=\n" +
	"\x05owner\x18\x02 \x01(\v2'.com.coralogixapis.aaa.apikeys.v3.OwnerR\x05owner\x12m\n" +
	"\x0fkey_permissions\x18\x03 \x01(\v2D.com.coralogixapis.aaa.apikeys.v3.CreateApiKeyRequest.KeyPermissionsR\x0ekeyPermissions\x12!\n" +
	"\x06hashed\x18\x04 \x01(\bB\t\x92A\x06J\x04trueR\x06hashed\x1a\xf5\x02\n" +
	"\x0eKeyPermissions\x12,\n" +
	"\apresets\x18\x01 \x03(\tB\x12\x92A\x0fJ\r[\"my_preset\"]R\apresets\x124\n" +
	"\vpermissions\x18\x02 \x03(\tB\x12\x92A\x0fJ\r[\"read_logs\"]R\vpermissions:\xfe\x01\x92A\xfa\x01\n" +
	"\x89\x01*\x0fKey Permissions2^This data structure allows to specify loose permissions and permission presets for an API key.\xd2\x01\apresets\xd2\x01\vpermissions*l\n" +
	"\x1cFind out more about api keys\x12Lhttps://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/:\xe9\x01\x92A\xe5\x01\n" +
	"u*\x16Create Api Key Request21This data structure is used to create an API key.\xd2\x01\x04name\xd2\x01\x05owner\xd2\x01\x0fkey_permissions\xd2\x01\x06hashed*l\n" +
	"\x1cFind out more about api keys\x12Lhttps://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/\"\x85\x03\n" +
	"\x14CreateApiKeyResponse\x12'\n" +
	"\x06key_id\x18\x01 \x01(\tB\x10\x92A\rJ\v\"my_key_id\"R\x05keyId\x12%\n" +
	"\x04name\x18\x02 \x01(\tB\x11\x92A\x0eJ\f\"my_api_key\"R\x04name\x12-\n" +
	"\x05value\x18\x03 \x01(\tB\x17\x92A\x14J\x12\"my_api_key_value\"R\x05value:\xed\x01\x92A\xe9\x01\n" +
	"y*\x17Create Api Key Response2FThis data structure is the response obtained when creating an API key.\xd2\x01\x06key_id\xd2\x01\x04name\xd2\x01\x05value*l\n" +
	"\x1cFind out more about api keys\x12Lhttps://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/\"\x85\x02\n" +
	"\x10GetApiKeyRequest\x12'\n" +
	"\x06key_id\x18\x01 \x01(\tB\x10\x92A\rJ\v\"my_key_id\"R\x05keyId:\xc7\x01\x92A\xc3\x01\n" +
	"S*\x13Get Api Key Request23This data structure is used to retrieve an API key.\xd2\x01\x06key_id*l\n" +
	"\x1cFind out more about api keys\x12Lhttps://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/\"\xbb\x02\n" +
	"\x11GetApiKeyResponse\x12D\n" +
	"\bkey_info\x18\x01 \x01(\v2).com.coralogixapis.aaa.apikeys.v3.KeyInfoR\akeyInfo:\xdf\x01\x92A\xdb\x01\n" +
	"k*\x14Get Api Key Response2HThis data structure is the response obtained when retrieving an API key.\xd2\x01\bkey_info*l\n" +
	"\x1cFind out more about api keys\x12Lhttps://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/\"\x1b\n" +
	"\x19GetSendDataApiKeysRequest\"\xbd\x02\n" +
	"\x1aGetSendDataApiKeysResponse\x12=\n" +
	"\x04keys\x18\x01 \x03(\v2).com.coralogixapis.aaa.apikeys.v3.KeyInfoR\x04keys:\xdf\x01\x92A\xdb\x01\n" +
	"k*\x14Get Api Key Response2HThis data structure is the response obtained when retrieving an API key.\xd2\x01\bkey_info*l\n" +
	"\x1cFind out more about api keys\x12Lhttps://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/2\xcf\v\n" +
	"\x0eApiKeysService\x12\x91\x02\n" +
	"\fCreateApiKey\x125.com.coralogixapis.aaa.apikeys.v3.CreateApiKeyRequest\x1a6.com.coralogixapis.aaa.apikeys.v3.CreateApiKeyResponse\"\x91\x01\x92Aw\n" +
	"\x10API Keys Service\x12\x0eCreate API KeyJ\x14\n" +
	"\x03400\x12\r\n" +
	"\vBad RequestJ\x1d\n" +
	"\x03401\x12\x16\n" +
	"\x14Unauthorized requestJ\x1e\n" +
	"\x03500\x12\x17\n" +
	"\x15Internal server error\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/v3/api_keys\x12\x8b\x02\n" +
	"\tGetApiKey\x122.com.coralogixapis.aaa.apikeys.v3.GetApiKeyRequest\x1a3.com.coralogixapis.aaa.apikeys.v3.GetApiKeyResponse\"\x94\x01\x92At\n" +
	"\x10API Keys Service\x12\vGet API KeyJ\x14\n" +
	"\x03400\x12\r\n" +
	"\vBad RequestJ\x1d\n" +
	"\x03401\x12\x16\n" +
	"\x14Unauthorized requestJ\x1e\n" +
	"\x03500\x12\x17\n" +
	"\x15Internal server error\x82\xd3\xe4\x93\x02\x17\x12\x15/v3/api_keys/{key_id}\x12\xb5\x02\n" +
	"\x12GetSendDataApiKeys\x12;.com.coralogixapis.aaa.apikeys.v3.GetSendDataApiKeysRequest\x1a<.com.coralogixapis.aaa.apikeys.v3.GetSendDataApiKeysResponse\"\xa3\x01\x92A\x81\x01\n" +
	"\x10API Keys Service\x12\x18Get \"Send Data\" API KeysJ\x14\n" +
	"\x03400\x12\r\n" +
	"\vBad RequestJ\x1d\n" +
	"\x03401\x12\x16\n" +
	"\x14Unauthorized requestJ\x1e\n" +
	"\x03500\x12\x17\n" +
	"\x15Internal server error\x82\xd3\xe4\x93\x02\x18\x12\x16/v3/api_keys/send_data\x12\x97\x02\n" +
	"\fDeleteApiKey\x125.com.coralogixapis.aaa.apikeys.v3.DeleteApiKeyRequest\x1a6.com.coralogixapis.aaa.apikeys.v3.DeleteApiKeyResponse\"\x97\x01\x92Aw\n" +
	"\x10API Keys Service\x12\x0eDelete API KeyJ\x14\n" +
	"\x03400\x12\r\n" +
	"\vBad RequestJ\x1d\n" +
	"\x03401\x12\x16\n" +
	"\x14Unauthorized requestJ\x1e\n" +
	"\x03500\x12\x17\n" +
	"\x15Internal server error\x82\xd3\xe4\x93\x02\x17*\x15/v3/api_keys/{key_id}\x12\x9a\x02\n" +
	"\fUpdateApiKey\x125.com.coralogixapis.aaa.apikeys.v3.UpdateApiKeyRequest\x1a6.com.coralogixapis.aaa.apikeys.v3.UpdateApiKeyResponse\"\x9a\x01\x92Aw\n" +
	"\x10API Keys Service\x12\x0eUpdate API KeyJ\x14\n" +
	"\x03400\x12\r\n" +
	"\vBad RequestJ\x1d\n" +
	"\x03401\x12\x16\n" +
	"\x14Unauthorized requestJ\x1e\n" +
	"\x03500\x12\x17\n" +
	"\x15Internal server error\x82\xd3\xe4\x93\x02\x1a:\x01*\x1a\x15/v3/api_keys/{key_id}\x1a,\x92A)\n" +
	"\x10API Keys Service\x12\x15Manage your API Keys.b\x06proto3"

var (
	file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescOnce sync.Once
	file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescData []byte
)

func file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDesc), len(file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDesc)))
	})
	return file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDescData
}

var file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_goTypes = []any{
	(*Owner)(nil),                              // 0: com.coralogixapis.aaa.apikeys.v3.Owner
	(*KeyInfo)(nil),                            // 1: com.coralogixapis.aaa.apikeys.v3.KeyInfo
	(*PresetInfo)(nil),                         // 2: com.coralogixapis.aaa.apikeys.v3.PresetInfo
	(*UpdateApiKeyRequest)(nil),                // 3: com.coralogixapis.aaa.apikeys.v3.UpdateApiKeyRequest
	(*UpdateApiKeyResponse)(nil),               // 4: com.coralogixapis.aaa.apikeys.v3.UpdateApiKeyResponse
	(*DeleteApiKeyRequest)(nil),                // 5: com.coralogixapis.aaa.apikeys.v3.DeleteApiKeyRequest
	(*DeleteApiKeyResponse)(nil),               // 6: com.coralogixapis.aaa.apikeys.v3.DeleteApiKeyResponse
	(*CreateApiKeyRequest)(nil),                // 7: com.coralogixapis.aaa.apikeys.v3.CreateApiKeyRequest
	(*CreateApiKeyResponse)(nil),               // 8: com.coralogixapis.aaa.apikeys.v3.CreateApiKeyResponse
	(*GetApiKeyRequest)(nil),                   // 9: com.coralogixapis.aaa.apikeys.v3.GetApiKeyRequest
	(*GetApiKeyResponse)(nil),                  // 10: com.coralogixapis.aaa.apikeys.v3.GetApiKeyResponse
	(*GetSendDataApiKeysRequest)(nil),          // 11: com.coralogixapis.aaa.apikeys.v3.GetSendDataApiKeysRequest
	(*GetSendDataApiKeysResponse)(nil),         // 12: com.coralogixapis.aaa.apikeys.v3.GetSendDataApiKeysResponse
	(*KeyInfo_KeyPermissions)(nil),             // 13: com.coralogixapis.aaa.apikeys.v3.KeyInfo.KeyPermissions
	(*UpdateApiKeyRequest_Presets)(nil),        // 14: com.coralogixapis.aaa.apikeys.v3.UpdateApiKeyRequest.Presets
	(*UpdateApiKeyRequest_Permissions)(nil),    // 15: com.coralogixapis.aaa.apikeys.v3.UpdateApiKeyRequest.Permissions
	(*CreateApiKeyRequest_KeyPermissions)(nil), // 16: com.coralogixapis.aaa.apikeys.v3.CreateApiKeyRequest.KeyPermissions
}
var file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_depIdxs = []int32{
	0,  // 0: com.coralogixapis.aaa.apikeys.v3.KeyInfo.owner:type_name -> com.coralogixapis.aaa.apikeys.v3.Owner
	13, // 1: com.coralogixapis.aaa.apikeys.v3.KeyInfo.key_permissions:type_name -> com.coralogixapis.aaa.apikeys.v3.KeyInfo.KeyPermissions
	14, // 2: com.coralogixapis.aaa.apikeys.v3.UpdateApiKeyRequest.presets:type_name -> com.coralogixapis.aaa.apikeys.v3.UpdateApiKeyRequest.Presets
	15, // 3: com.coralogixapis.aaa.apikeys.v3.UpdateApiKeyRequest.permissions:type_name -> com.coralogixapis.aaa.apikeys.v3.UpdateApiKeyRequest.Permissions
	0,  // 4: com.coralogixapis.aaa.apikeys.v3.CreateApiKeyRequest.owner:type_name -> com.coralogixapis.aaa.apikeys.v3.Owner
	16, // 5: com.coralogixapis.aaa.apikeys.v3.CreateApiKeyRequest.key_permissions:type_name -> com.coralogixapis.aaa.apikeys.v3.CreateApiKeyRequest.KeyPermissions
	1,  // 6: com.coralogixapis.aaa.apikeys.v3.GetApiKeyResponse.key_info:type_name -> com.coralogixapis.aaa.apikeys.v3.KeyInfo
	1,  // 7: com.coralogixapis.aaa.apikeys.v3.GetSendDataApiKeysResponse.keys:type_name -> com.coralogixapis.aaa.apikeys.v3.KeyInfo
	2,  // 8: com.coralogixapis.aaa.apikeys.v3.KeyInfo.KeyPermissions.presets:type_name -> com.coralogixapis.aaa.apikeys.v3.PresetInfo
	7,  // 9: com.coralogixapis.aaa.apikeys.v3.ApiKeysService.CreateApiKey:input_type -> com.coralogixapis.aaa.apikeys.v3.CreateApiKeyRequest
	9,  // 10: com.coralogixapis.aaa.apikeys.v3.ApiKeysService.GetApiKey:input_type -> com.coralogixapis.aaa.apikeys.v3.GetApiKeyRequest
	11, // 11: com.coralogixapis.aaa.apikeys.v3.ApiKeysService.GetSendDataApiKeys:input_type -> com.coralogixapis.aaa.apikeys.v3.GetSendDataApiKeysRequest
	5,  // 12: com.coralogixapis.aaa.apikeys.v3.ApiKeysService.DeleteApiKey:input_type -> com.coralogixapis.aaa.apikeys.v3.DeleteApiKeyRequest
	3,  // 13: com.coralogixapis.aaa.apikeys.v3.ApiKeysService.UpdateApiKey:input_type -> com.coralogixapis.aaa.apikeys.v3.UpdateApiKeyRequest
	8,  // 14: com.coralogixapis.aaa.apikeys.v3.ApiKeysService.CreateApiKey:output_type -> com.coralogixapis.aaa.apikeys.v3.CreateApiKeyResponse
	10, // 15: com.coralogixapis.aaa.apikeys.v3.ApiKeysService.GetApiKey:output_type -> com.coralogixapis.aaa.apikeys.v3.GetApiKeyResponse
	12, // 16: com.coralogixapis.aaa.apikeys.v3.ApiKeysService.GetSendDataApiKeys:output_type -> com.coralogixapis.aaa.apikeys.v3.GetSendDataApiKeysResponse
	6,  // 17: com.coralogixapis.aaa.apikeys.v3.ApiKeysService.DeleteApiKey:output_type -> com.coralogixapis.aaa.apikeys.v3.DeleteApiKeyResponse
	4,  // 18: com.coralogixapis.aaa.apikeys.v3.ApiKeysService.UpdateApiKey:output_type -> com.coralogixapis.aaa.apikeys.v3.UpdateApiKeyResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_init() }
func file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_init() {
	if File_com_coralogixapis_aaa_apikeys_v3_api_keys_proto != nil {
		return
	}
	file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[0].OneofWrappers = []any{
		(*Owner_UserId)(nil),
		(*Owner_TeamId)(nil),
		(*Owner_OrganisationId)(nil),
	}
	file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[1].OneofWrappers = []any{}
	file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDesc), len(file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_depIdxs,
		MessageInfos:      file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_aaa_apikeys_v3_api_keys_proto = out.File
	file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_goTypes = nil
	file_com_coralogixapis_aaa_apikeys_v3_api_keys_proto_depIdxs = nil
}
