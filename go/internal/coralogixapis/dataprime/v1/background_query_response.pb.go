// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.1
// source: com/coralogixapis/dataprime/v1/background_query_response.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubmitBackgroundQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId string `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	// all warnings that can apprear during query submission
	Warnings []*DataprimeWarning `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
}

func (x *SubmitBackgroundQueryResponse) Reset() {
	*x = SubmitBackgroundQueryResponse{}
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBackgroundQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBackgroundQueryResponse) ProtoMessage() {}

func (x *SubmitBackgroundQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBackgroundQueryResponse.ProtoReflect.Descriptor instead.
func (*SubmitBackgroundQueryResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP(), []int{0}
}

func (x *SubmitBackgroundQueryResponse) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *SubmitBackgroundQueryResponse) GetWarnings() []*DataprimeWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type GetBackgroundQueryStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Status:
	//
	//	*GetBackgroundQueryStatusResponse_Running_
	//	*GetBackgroundQueryStatusResponse_Terminated_
	//	*GetBackgroundQueryStatusResponse_WaitingForExecution_
	Status      isGetBackgroundQueryStatusResponse_Status `protobuf_oneof:"status"`
	SubmittedAt *timestamppb.Timestamp                    `protobuf:"bytes,4,opt,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty"`
	// does not contain duplicate messages
	Metadata []*ResponseMetadata `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty"`
	// includes all warnings (e.g.: warnings that can apprear during query submission + runtime warnings)
	Warnings []*DataprimeWarning `protobuf:"bytes,6,rep,name=warnings,proto3" json:"warnings,omitempty"`
}

func (x *GetBackgroundQueryStatusResponse) Reset() {
	*x = GetBackgroundQueryStatusResponse{}
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackgroundQueryStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackgroundQueryStatusResponse) ProtoMessage() {}

func (x *GetBackgroundQueryStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackgroundQueryStatusResponse.ProtoReflect.Descriptor instead.
func (*GetBackgroundQueryStatusResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP(), []int{1}
}

func (m *GetBackgroundQueryStatusResponse) GetStatus() isGetBackgroundQueryStatusResponse_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (x *GetBackgroundQueryStatusResponse) GetRunning() *GetBackgroundQueryStatusResponse_Running {
	if x, ok := x.GetStatus().(*GetBackgroundQueryStatusResponse_Running_); ok {
		return x.Running
	}
	return nil
}

func (x *GetBackgroundQueryStatusResponse) GetTerminated() *GetBackgroundQueryStatusResponse_Terminated {
	if x, ok := x.GetStatus().(*GetBackgroundQueryStatusResponse_Terminated_); ok {
		return x.Terminated
	}
	return nil
}

func (x *GetBackgroundQueryStatusResponse) GetWaitingForExecution() *GetBackgroundQueryStatusResponse_WaitingForExecution {
	if x, ok := x.GetStatus().(*GetBackgroundQueryStatusResponse_WaitingForExecution_); ok {
		return x.WaitingForExecution
	}
	return nil
}

func (x *GetBackgroundQueryStatusResponse) GetSubmittedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmittedAt
	}
	return nil
}

func (x *GetBackgroundQueryStatusResponse) GetMetadata() []*ResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetBackgroundQueryStatusResponse) GetWarnings() []*DataprimeWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type isGetBackgroundQueryStatusResponse_Status interface {
	isGetBackgroundQueryStatusResponse_Status()
}

type GetBackgroundQueryStatusResponse_Running_ struct {
	Running *GetBackgroundQueryStatusResponse_Running `protobuf:"bytes,1,opt,name=running,proto3,oneof"`
}

type GetBackgroundQueryStatusResponse_Terminated_ struct {
	Terminated *GetBackgroundQueryStatusResponse_Terminated `protobuf:"bytes,2,opt,name=terminated,proto3,oneof"`
}

type GetBackgroundQueryStatusResponse_WaitingForExecution_ struct {
	WaitingForExecution *GetBackgroundQueryStatusResponse_WaitingForExecution `protobuf:"bytes,3,opt,name=waiting_for_execution,json=waitingForExecution,proto3,oneof"`
}

func (*GetBackgroundQueryStatusResponse_Running_) isGetBackgroundQueryStatusResponse_Status() {}

func (*GetBackgroundQueryStatusResponse_Terminated_) isGetBackgroundQueryStatusResponse_Status() {}

func (*GetBackgroundQueryStatusResponse_WaitingForExecution_) isGetBackgroundQueryStatusResponse_Status() {
}

// using extensible structure for future-proofing
type GetBackgroundQueryDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*GetBackgroundQueryDataResponse_Response
	Message isGetBackgroundQueryDataResponse_Message `protobuf_oneof:"message"`
}

func (x *GetBackgroundQueryDataResponse) Reset() {
	*x = GetBackgroundQueryDataResponse{}
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackgroundQueryDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackgroundQueryDataResponse) ProtoMessage() {}

func (x *GetBackgroundQueryDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackgroundQueryDataResponse.ProtoReflect.Descriptor instead.
func (*GetBackgroundQueryDataResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP(), []int{2}
}

func (m *GetBackgroundQueryDataResponse) GetMessage() isGetBackgroundQueryDataResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *GetBackgroundQueryDataResponse) GetResponse() *GetDataResponse {
	if x, ok := x.GetMessage().(*GetBackgroundQueryDataResponse_Response); ok {
		return x.Response
	}
	return nil
}

type isGetBackgroundQueryDataResponse_Message interface {
	isGetBackgroundQueryDataResponse_Message()
}

type GetBackgroundQueryDataResponse_Response struct {
	Response *GetDataResponse `protobuf:"bytes,1,opt,name=response,proto3,oneof"`
}

func (*GetBackgroundQueryDataResponse_Response) isGetBackgroundQueryDataResponse_Message() {}

type GetDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results *DataprimeResult `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"`
}

func (x *GetDataResponse) Reset() {
	*x = GetDataResponse{}
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataResponse) ProtoMessage() {}

func (x *GetDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataResponse.ProtoReflect.Descriptor instead.
func (*GetDataResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP(), []int{3}
}

func (x *GetDataResponse) GetResults() *DataprimeResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type CancelBackgroundQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelBackgroundQueryResponse) Reset() {
	*x = CancelBackgroundQueryResponse{}
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelBackgroundQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelBackgroundQueryResponse) ProtoMessage() {}

func (x *CancelBackgroundQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelBackgroundQueryResponse.ProtoReflect.Descriptor instead.
func (*CancelBackgroundQueryResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP(), []int{4}
}

type GetBackgroundQueryStatusResponse_WaitingForExecution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBackgroundQueryStatusResponse_WaitingForExecution) Reset() {
	*x = GetBackgroundQueryStatusResponse_WaitingForExecution{}
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackgroundQueryStatusResponse_WaitingForExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackgroundQueryStatusResponse_WaitingForExecution) ProtoMessage() {}

func (x *GetBackgroundQueryStatusResponse_WaitingForExecution) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackgroundQueryStatusResponse_WaitingForExecution.ProtoReflect.Descriptor instead.
func (*GetBackgroundQueryStatusResponse_WaitingForExecution) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP(), []int{1, 0}
}

type GetBackgroundQueryStatusResponse_Running struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunningSince *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=running_since,json=runningSince,proto3" json:"running_since,omitempty"`
}

func (x *GetBackgroundQueryStatusResponse_Running) Reset() {
	*x = GetBackgroundQueryStatusResponse_Running{}
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackgroundQueryStatusResponse_Running) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackgroundQueryStatusResponse_Running) ProtoMessage() {}

func (x *GetBackgroundQueryStatusResponse_Running) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackgroundQueryStatusResponse_Running.ProtoReflect.Descriptor instead.
func (*GetBackgroundQueryStatusResponse_Running) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP(), []int{1, 1}
}

func (x *GetBackgroundQueryStatusResponse_Running) GetRunningSince() *timestamppb.Timestamp {
	if x != nil {
		return x.RunningSince
	}
	return nil
}

type GetBackgroundQueryStatusResponse_Terminated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunningSince *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=running_since,json=runningSince,proto3" json:"running_since,omitempty"`
	TerminatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=terminated_at,json=terminatedAt,proto3" json:"terminated_at,omitempty"`
	// Types that are assignable to Status:
	//
	//	*GetBackgroundQueryStatusResponse_Terminated_Success_
	//	*GetBackgroundQueryStatusResponse_Terminated_Error_
	//	*GetBackgroundQueryStatusResponse_Terminated_Cancelled_
	Status isGetBackgroundQueryStatusResponse_Terminated_Status `protobuf_oneof:"status"`
}

func (x *GetBackgroundQueryStatusResponse_Terminated) Reset() {
	*x = GetBackgroundQueryStatusResponse_Terminated{}
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackgroundQueryStatusResponse_Terminated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackgroundQueryStatusResponse_Terminated) ProtoMessage() {}

func (x *GetBackgroundQueryStatusResponse_Terminated) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackgroundQueryStatusResponse_Terminated.ProtoReflect.Descriptor instead.
func (*GetBackgroundQueryStatusResponse_Terminated) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP(), []int{1, 2}
}

func (x *GetBackgroundQueryStatusResponse_Terminated) GetRunningSince() *timestamppb.Timestamp {
	if x != nil {
		return x.RunningSince
	}
	return nil
}

func (x *GetBackgroundQueryStatusResponse_Terminated) GetTerminatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TerminatedAt
	}
	return nil
}

func (m *GetBackgroundQueryStatusResponse_Terminated) GetStatus() isGetBackgroundQueryStatusResponse_Terminated_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (x *GetBackgroundQueryStatusResponse_Terminated) GetSuccess() *GetBackgroundQueryStatusResponse_Terminated_Success {
	if x, ok := x.GetStatus().(*GetBackgroundQueryStatusResponse_Terminated_Success_); ok {
		return x.Success
	}
	return nil
}

func (x *GetBackgroundQueryStatusResponse_Terminated) GetError() *GetBackgroundQueryStatusResponse_Terminated_Error {
	if x, ok := x.GetStatus().(*GetBackgroundQueryStatusResponse_Terminated_Error_); ok {
		return x.Error
	}
	return nil
}

func (x *GetBackgroundQueryStatusResponse_Terminated) GetCancelled() *GetBackgroundQueryStatusResponse_Terminated_Cancelled {
	if x, ok := x.GetStatus().(*GetBackgroundQueryStatusResponse_Terminated_Cancelled_); ok {
		return x.Cancelled
	}
	return nil
}

type isGetBackgroundQueryStatusResponse_Terminated_Status interface {
	isGetBackgroundQueryStatusResponse_Terminated_Status()
}

type GetBackgroundQueryStatusResponse_Terminated_Success_ struct {
	Success *GetBackgroundQueryStatusResponse_Terminated_Success `protobuf:"bytes,4,opt,name=success,proto3,oneof"`
}

type GetBackgroundQueryStatusResponse_Terminated_Error_ struct {
	Error *GetBackgroundQueryStatusResponse_Terminated_Error `protobuf:"bytes,5,opt,name=error,proto3,oneof"`
}

type GetBackgroundQueryStatusResponse_Terminated_Cancelled_ struct {
	Cancelled *GetBackgroundQueryStatusResponse_Terminated_Cancelled `protobuf:"bytes,6,opt,name=cancelled,proto3,oneof"`
}

func (*GetBackgroundQueryStatusResponse_Terminated_Success_) isGetBackgroundQueryStatusResponse_Terminated_Status() {
}

func (*GetBackgroundQueryStatusResponse_Terminated_Error_) isGetBackgroundQueryStatusResponse_Terminated_Status() {
}

func (*GetBackgroundQueryStatusResponse_Terminated_Cancelled_) isGetBackgroundQueryStatusResponse_Terminated_Status() {
}

type GetBackgroundQueryStatusResponse_Terminated_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Success) Reset() {
	*x = GetBackgroundQueryStatusResponse_Terminated_Success{}
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackgroundQueryStatusResponse_Terminated_Success) ProtoMessage() {}

func (x *GetBackgroundQueryStatusResponse_Terminated_Success) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackgroundQueryStatusResponse_Terminated_Success.ProtoReflect.Descriptor instead.
func (*GetBackgroundQueryStatusResponse_Terminated_Success) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP(), []int{1, 2, 0}
}

type GetBackgroundQueryStatusResponse_Terminated_Cancelled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Cancelled) Reset() {
	*x = GetBackgroundQueryStatusResponse_Terminated_Cancelled{}
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Cancelled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackgroundQueryStatusResponse_Terminated_Cancelled) ProtoMessage() {}

func (x *GetBackgroundQueryStatusResponse_Terminated_Cancelled) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackgroundQueryStatusResponse_Terminated_Cancelled.ProtoReflect.Descriptor instead.
func (*GetBackgroundQueryStatusResponse_Terminated_Cancelled) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP(), []int{1, 2, 1}
}

type GetBackgroundQueryStatusResponse_Terminated_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Error:
	//
	//	*GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut_
	//	*GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled_
	//	*GetBackgroundQueryStatusResponse_Terminated_Error_Failed_
	Error isGetBackgroundQueryStatusResponse_Terminated_Error_Error `protobuf_oneof:"error"`
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error) Reset() {
	*x = GetBackgroundQueryStatusResponse_Terminated_Error{}
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackgroundQueryStatusResponse_Terminated_Error) ProtoMessage() {}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackgroundQueryStatusResponse_Terminated_Error.ProtoReflect.Descriptor instead.
func (*GetBackgroundQueryStatusResponse_Terminated_Error) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP(), []int{1, 2, 2}
}

func (m *GetBackgroundQueryStatusResponse_Terminated_Error) GetError() isGetBackgroundQueryStatusResponse_Terminated_Error_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error) GetTimedOut() *GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut {
	if x, ok := x.GetError().(*GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut_); ok {
		return x.TimedOut
	}
	return nil
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error) GetCancelled() *GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled {
	if x, ok := x.GetError().(*GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled_); ok {
		return x.Cancelled
	}
	return nil
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error) GetFailed() *GetBackgroundQueryStatusResponse_Terminated_Error_Failed {
	if x, ok := x.GetError().(*GetBackgroundQueryStatusResponse_Terminated_Error_Failed_); ok {
		return x.Failed
	}
	return nil
}

type isGetBackgroundQueryStatusResponse_Terminated_Error_Error interface {
	isGetBackgroundQueryStatusResponse_Terminated_Error_Error()
}

type GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut_ struct {
	TimedOut *GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut `protobuf:"bytes,1,opt,name=timed_out,json=timedOut,proto3,oneof"`
}

type GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled_ struct {
	Cancelled *GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled `protobuf:"bytes,2,opt,name=cancelled,proto3,oneof"`
}

type GetBackgroundQueryStatusResponse_Terminated_Error_Failed_ struct {
	Failed *GetBackgroundQueryStatusResponse_Terminated_Error_Failed `protobuf:"bytes,3,opt,name=failed,proto3,oneof"`
}

func (*GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut_) isGetBackgroundQueryStatusResponse_Terminated_Error_Error() {
}

func (*GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled_) isGetBackgroundQueryStatusResponse_Terminated_Error_Error() {
}

func (*GetBackgroundQueryStatusResponse_Terminated_Error_Failed_) isGetBackgroundQueryStatusResponse_Terminated_Error_Error() {
}

type GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut) Reset() {
	*x = GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut{}
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut) ProtoMessage() {}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut.ProtoReflect.Descriptor instead.
func (*GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP(), []int{1, 2, 2, 0}
}

type GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled) Reset() {
	*x = GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled{}
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled) ProtoMessage() {}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled.ProtoReflect.Descriptor instead.
func (*GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP(), []int{1, 2, 2, 1}
}

type GetBackgroundQueryStatusResponse_Terminated_Error_Failed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error_Failed) Reset() {
	*x = GetBackgroundQueryStatusResponse_Terminated_Error_Failed{}
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error_Failed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackgroundQueryStatusResponse_Terminated_Error_Failed) ProtoMessage() {}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error_Failed) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackgroundQueryStatusResponse_Terminated_Error_Failed.ProtoReflect.Descriptor instead.
func (*GetBackgroundQueryStatusResponse_Terminated_Error_Failed) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP(), []int{1, 2, 2, 2}
}

func (x *GetBackgroundQueryStatusResponse_Terminated_Error_Failed) GetReason() *wrapperspb.StringValue {
	if x != nil {
		return x.Reason
	}
	return nil
}

var File_com_coralogixapis_dataprime_v1_background_query_response_proto protoreflect.FileDescriptor

var file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x88, 0x01, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x4c, 0x0a,
	0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xaa, 0x0d, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x64, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x48, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x6d, 0x0a, 0x0a, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x12, 0x8a, 0x01, 0x0a, 0x15, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46,
	0x6f, 0x72, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x77,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x4c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x4c, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x57, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x15, 0x0a,
	0x13, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x4a, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x3f, 0x0a, 0x0d, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x6e, 0x63, 0x65,
	0x1a, 0xdb, 0x07, 0x0a, 0x0a, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x3f, 0x0a, 0x0d, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x6e, 0x63, 0x65,
	0x12, 0x3f, 0x0a, 0x0d, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0c, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x6f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x53, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x69, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x51, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x75, 0x0a,
	0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x55, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x65, 0x64, 0x1a, 0x09, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a,
	0x0b, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x1a, 0xd5, 0x03, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x79, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x5f,
	0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x64, 0x4f, 0x75, 0x74, 0x48, 0x00, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x4f, 0x75,
	0x74, 0x12, 0x7b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x5b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x72,
	0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x58,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x1a, 0x0b,
	0x0a, 0x09, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x1a, 0x3e, 0x0a, 0x06, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7a, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescOnce sync.Once
	file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescData = file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDesc
)

func file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescData)
	})
	return file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDescData
}

var file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_com_coralogixapis_dataprime_v1_background_query_response_proto_goTypes = []any{
	(*SubmitBackgroundQueryResponse)(nil),                               // 0: com.coralogixapis.dataprime.v1.SubmitBackgroundQueryResponse
	(*GetBackgroundQueryStatusResponse)(nil),                            // 1: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse
	(*GetBackgroundQueryDataResponse)(nil),                              // 2: com.coralogixapis.dataprime.v1.GetBackgroundQueryDataResponse
	(*GetDataResponse)(nil),                                             // 3: com.coralogixapis.dataprime.v1.GetDataResponse
	(*CancelBackgroundQueryResponse)(nil),                               // 4: com.coralogixapis.dataprime.v1.CancelBackgroundQueryResponse
	(*GetBackgroundQueryStatusResponse_WaitingForExecution)(nil),        // 5: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.WaitingForExecution
	(*GetBackgroundQueryStatusResponse_Running)(nil),                    // 6: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Running
	(*GetBackgroundQueryStatusResponse_Terminated)(nil),                 // 7: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated
	(*GetBackgroundQueryStatusResponse_Terminated_Success)(nil),         // 8: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Success
	(*GetBackgroundQueryStatusResponse_Terminated_Cancelled)(nil),       // 9: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Cancelled
	(*GetBackgroundQueryStatusResponse_Terminated_Error)(nil),           // 10: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Error
	(*GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut)(nil),  // 11: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Error.TimedOut
	(*GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled)(nil), // 12: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Error.Cancelled
	(*GetBackgroundQueryStatusResponse_Terminated_Error_Failed)(nil),    // 13: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Error.Failed
	(*DataprimeWarning)(nil),                                            // 14: com.coralogixapis.dataprime.v1.DataprimeWarning
	(*timestamppb.Timestamp)(nil),                                       // 15: google.protobuf.Timestamp
	(*ResponseMetadata)(nil),                                            // 16: com.coralogixapis.dataprime.v1.ResponseMetadata
	(*DataprimeResult)(nil),                                             // 17: com.coralogixapis.dataprime.v1.DataprimeResult
	(*wrapperspb.StringValue)(nil),                                      // 18: google.protobuf.StringValue
}
var file_com_coralogixapis_dataprime_v1_background_query_response_proto_depIdxs = []int32{
	14, // 0: com.coralogixapis.dataprime.v1.SubmitBackgroundQueryResponse.warnings:type_name -> com.coralogixapis.dataprime.v1.DataprimeWarning
	6,  // 1: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.running:type_name -> com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Running
	7,  // 2: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.terminated:type_name -> com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated
	5,  // 3: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.waiting_for_execution:type_name -> com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.WaitingForExecution
	15, // 4: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.submitted_at:type_name -> google.protobuf.Timestamp
	16, // 5: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.metadata:type_name -> com.coralogixapis.dataprime.v1.ResponseMetadata
	14, // 6: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.warnings:type_name -> com.coralogixapis.dataprime.v1.DataprimeWarning
	3,  // 7: com.coralogixapis.dataprime.v1.GetBackgroundQueryDataResponse.response:type_name -> com.coralogixapis.dataprime.v1.GetDataResponse
	17, // 8: com.coralogixapis.dataprime.v1.GetDataResponse.results:type_name -> com.coralogixapis.dataprime.v1.DataprimeResult
	15, // 9: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Running.running_since:type_name -> google.protobuf.Timestamp
	15, // 10: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.running_since:type_name -> google.protobuf.Timestamp
	15, // 11: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.terminated_at:type_name -> google.protobuf.Timestamp
	8,  // 12: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.success:type_name -> com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Success
	10, // 13: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.error:type_name -> com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Error
	9,  // 14: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.cancelled:type_name -> com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Cancelled
	11, // 15: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Error.timed_out:type_name -> com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Error.TimedOut
	12, // 16: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Error.cancelled:type_name -> com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Error.Cancelled
	13, // 17: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Error.failed:type_name -> com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Error.Failed
	18, // 18: com.coralogixapis.dataprime.v1.GetBackgroundQueryStatusResponse.Terminated.Error.Failed.reason:type_name -> google.protobuf.StringValue
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_dataprime_v1_background_query_response_proto_init() }
func file_com_coralogixapis_dataprime_v1_background_query_response_proto_init() {
	if File_com_coralogixapis_dataprime_v1_background_query_response_proto != nil {
		return
	}
	file_com_coralogixapis_dataprime_v1_response_proto_init()
	file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[1].OneofWrappers = []any{
		(*GetBackgroundQueryStatusResponse_Running_)(nil),
		(*GetBackgroundQueryStatusResponse_Terminated_)(nil),
		(*GetBackgroundQueryStatusResponse_WaitingForExecution_)(nil),
	}
	file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[2].OneofWrappers = []any{
		(*GetBackgroundQueryDataResponse_Response)(nil),
	}
	file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[7].OneofWrappers = []any{
		(*GetBackgroundQueryStatusResponse_Terminated_Success_)(nil),
		(*GetBackgroundQueryStatusResponse_Terminated_Error_)(nil),
		(*GetBackgroundQueryStatusResponse_Terminated_Cancelled_)(nil),
	}
	file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes[10].OneofWrappers = []any{
		(*GetBackgroundQueryStatusResponse_Terminated_Error_TimedOut_)(nil),
		(*GetBackgroundQueryStatusResponse_Terminated_Error_Cancelled_)(nil),
		(*GetBackgroundQueryStatusResponse_Terminated_Error_Failed_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogixapis_dataprime_v1_background_query_response_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_dataprime_v1_background_query_response_proto_depIdxs,
		MessageInfos:      file_com_coralogixapis_dataprime_v1_background_query_response_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_dataprime_v1_background_query_response_proto = out.File
	file_com_coralogixapis_dataprime_v1_background_query_response_proto_rawDesc = nil
	file_com_coralogixapis_dataprime_v1_background_query_response_proto_goTypes = nil
	file_com_coralogixapis_dataprime_v1_background_query_response_proto_depIdxs = nil
}
