// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: com/coralogixapis/alerting/alert_scheduler_rule_protobuf/v1/schedule.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScheduleOperation int32

const (
	ScheduleOperation_SCHEDULE_OPERATION_UNSPECIFIED ScheduleOperation = 0
	ScheduleOperation_SCHEDULE_OPERATION_MUTE        ScheduleOperation = 1
	ScheduleOperation_SCHEDULE_OPERATION_ACTIVATE    ScheduleOperation = 2
)

// Enum value maps for ScheduleOperation.
var (
	ScheduleOperation_name = map[int32]string{
		0: "SCHEDULE_OPERATION_UNSPECIFIED",
		1: "SCHEDULE_OPERATION_MUTE",
		2: "SCHEDULE_OPERATION_ACTIVATE",
	}
	ScheduleOperation_value = map[string]int32{
		"SCHEDULE_OPERATION_UNSPECIFIED": 0,
		"SCHEDULE_OPERATION_MUTE":        1,
		"SCHEDULE_OPERATION_ACTIVATE":    2,
	}
)

func (x ScheduleOperation) Enum() *ScheduleOperation {
	p := new(ScheduleOperation)
	*p = x
	return p
}

func (x ScheduleOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScheduleOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_enumTypes[0].Descriptor()
}

func (ScheduleOperation) Type() protoreflect.EnumType {
	return &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_enumTypes[0]
}

func (x ScheduleOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScheduleOperation.Descriptor instead.
func (ScheduleOperation) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescGZIP(), []int{0}
}

type Schedule struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ScheduleOperation ScheduleOperation      `protobuf:"varint,1,opt,name=schedule_operation,json=scheduleOperation,proto3,enum=com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.ScheduleOperation" json:"schedule_operation,omitempty"` // Rule schedule_operation: The rule operation mode (mute/active).
	// Types that are valid to be assigned to Scheduler:
	//
	//	*Schedule_OneTime
	//	*Schedule_Recurring
	Scheduler     isSchedule_Scheduler `protobuf_oneof:"scheduler"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescGZIP(), []int{0}
}

func (x *Schedule) GetScheduleOperation() ScheduleOperation {
	if x != nil {
		return x.ScheduleOperation
	}
	return ScheduleOperation_SCHEDULE_OPERATION_UNSPECIFIED
}

func (x *Schedule) GetScheduler() isSchedule_Scheduler {
	if x != nil {
		return x.Scheduler
	}
	return nil
}

func (x *Schedule) GetOneTime() *OneTime {
	if x != nil {
		if x, ok := x.Scheduler.(*Schedule_OneTime); ok {
			return x.OneTime
		}
	}
	return nil
}

func (x *Schedule) GetRecurring() *Recurring {
	if x != nil {
		if x, ok := x.Scheduler.(*Schedule_Recurring); ok {
			return x.Recurring
		}
	}
	return nil
}

type isSchedule_Scheduler interface {
	isSchedule_Scheduler()
}

type Schedule_OneTime struct {
	OneTime *OneTime `protobuf:"bytes,2,opt,name=one_time,json=oneTime,proto3,oneof"` // Schedule one_time: The scheduling definition will activate the rule for a specific timeframe.
}

type Schedule_Recurring struct {
	Recurring *Recurring `protobuf:"bytes,3,opt,name=recurring,proto3,oneof"` // Schedule recurring: The scheduling definition will activate the rule for a recurring timeframe.
}

func (*Schedule_OneTime) isSchedule_Scheduler() {}

func (*Schedule_Recurring) isSchedule_Scheduler() {}

type OneTime struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timeframe     *Timeframe             `protobuf:"bytes,1,opt,name=timeframe,proto3" json:"timeframe,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OneTime) Reset() {
	*x = OneTime{}
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OneTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneTime) ProtoMessage() {}

func (x *OneTime) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneTime.ProtoReflect.Descriptor instead.
func (*OneTime) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescGZIP(), []int{1}
}

func (x *OneTime) GetTimeframe() *Timeframe {
	if x != nil {
		return x.Timeframe
	}
	return nil
}

type Recurring struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Condition:
	//
	//	*Recurring_Always_
	//	*Recurring_Dynamic_
	Condition     isRecurring_Condition `protobuf_oneof:"condition"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Recurring) Reset() {
	*x = Recurring{}
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recurring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recurring) ProtoMessage() {}

func (x *Recurring) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recurring.ProtoReflect.Descriptor instead.
func (*Recurring) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescGZIP(), []int{2}
}

func (x *Recurring) GetCondition() isRecurring_Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *Recurring) GetAlways() *Recurring_Always {
	if x != nil {
		if x, ok := x.Condition.(*Recurring_Always_); ok {
			return x.Always
		}
	}
	return nil
}

func (x *Recurring) GetDynamic() *Recurring_Dynamic {
	if x != nil {
		if x, ok := x.Condition.(*Recurring_Dynamic_); ok {
			return x.Dynamic
		}
	}
	return nil
}

type isRecurring_Condition interface {
	isRecurring_Condition()
}

type Recurring_Always_ struct {
	Always *Recurring_Always `protobuf:"bytes,1,opt,name=always,proto3,oneof"`
}

type Recurring_Dynamic_ struct {
	Dynamic *Recurring_Dynamic `protobuf:"bytes,2,opt,name=dynamic,proto3,oneof"`
}

func (*Recurring_Always_) isRecurring_Condition() {}

func (*Recurring_Dynamic_) isRecurring_Condition() {}

type Daily struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Daily) Reset() {
	*x = Daily{}
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Daily) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Daily) ProtoMessage() {}

func (x *Daily) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Daily.ProtoReflect.Descriptor instead.
func (*Daily) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescGZIP(), []int{3}
}

type Weekly struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DaysOfWeek    []int32                `protobuf:"varint,1,rep,packed,name=days_of_week,json=daysOfWeek,proto3" json:"days_of_week,omitempty"` // Dynamic Weekly days_of_week: The rule will be activated at weekly intervals on specific days in a week.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Weekly) Reset() {
	*x = Weekly{}
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Weekly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weekly) ProtoMessage() {}

func (x *Weekly) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weekly.ProtoReflect.Descriptor instead.
func (*Weekly) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescGZIP(), []int{4}
}

func (x *Weekly) GetDaysOfWeek() []int32 {
	if x != nil {
		return x.DaysOfWeek
	}
	return nil
}

type Monthly struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DaysOfMonth   []int32                `protobuf:"varint,1,rep,packed,name=days_of_month,json=daysOfMonth,proto3" json:"days_of_month,omitempty"` // Dynamic Monthly days_of_month: The rule will be activated at monthly intervals on specific days in a month.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Monthly) Reset() {
	*x = Monthly{}
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Monthly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monthly) ProtoMessage() {}

func (x *Monthly) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monthly.ProtoReflect.Descriptor instead.
func (*Monthly) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescGZIP(), []int{5}
}

func (x *Monthly) GetDaysOfMonth() []int32 {
	if x != nil {
		return x.DaysOfMonth
	}
	return nil
}

type Recurring_Always struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Recurring_Always) Reset() {
	*x = Recurring_Always{}
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recurring_Always) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recurring_Always) ProtoMessage() {}

func (x *Recurring_Always) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recurring_Always.ProtoReflect.Descriptor instead.
func (*Recurring_Always) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescGZIP(), []int{2, 0}
}

type Recurring_Dynamic struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	RepeatEvery int32                  `protobuf:"varint,1,opt,name=repeat_every,json=repeatEvery,proto3" json:"repeat_every,omitempty"` // Recurring Dynamic repeat_every: The rule will be activated in a recurring mode according to the interval.
	// Types that are valid to be assigned to Frequency:
	//
	//	*Recurring_Dynamic_Daily
	//	*Recurring_Dynamic_Weekly
	//	*Recurring_Dynamic_Monthly
	Frequency       isRecurring_Dynamic_Frequency `protobuf_oneof:"frequency"`
	Timeframe       *Timeframe                    `protobuf:"bytes,5,opt,name=timeframe,proto3" json:"timeframe,omitempty"`                                          // Recurring Dynamic timeframe: The rule will be activated in a recurring mode according to the specific timeframe.
	TerminationDate *string                       `protobuf:"bytes,6,opt,name=termination_date,json=terminationDate,proto3,oneof" json:"termination_date,omitempty"` // Recurring Dynamic termination_date: The rule will be terminated according to termination_date.
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Recurring_Dynamic) Reset() {
	*x = Recurring_Dynamic{}
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recurring_Dynamic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recurring_Dynamic) ProtoMessage() {}

func (x *Recurring_Dynamic) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recurring_Dynamic.ProtoReflect.Descriptor instead.
func (*Recurring_Dynamic) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Recurring_Dynamic) GetRepeatEvery() int32 {
	if x != nil {
		return x.RepeatEvery
	}
	return 0
}

func (x *Recurring_Dynamic) GetFrequency() isRecurring_Dynamic_Frequency {
	if x != nil {
		return x.Frequency
	}
	return nil
}

func (x *Recurring_Dynamic) GetDaily() *Daily {
	if x != nil {
		if x, ok := x.Frequency.(*Recurring_Dynamic_Daily); ok {
			return x.Daily
		}
	}
	return nil
}

func (x *Recurring_Dynamic) GetWeekly() *Weekly {
	if x != nil {
		if x, ok := x.Frequency.(*Recurring_Dynamic_Weekly); ok {
			return x.Weekly
		}
	}
	return nil
}

func (x *Recurring_Dynamic) GetMonthly() *Monthly {
	if x != nil {
		if x, ok := x.Frequency.(*Recurring_Dynamic_Monthly); ok {
			return x.Monthly
		}
	}
	return nil
}

func (x *Recurring_Dynamic) GetTimeframe() *Timeframe {
	if x != nil {
		return x.Timeframe
	}
	return nil
}

func (x *Recurring_Dynamic) GetTerminationDate() string {
	if x != nil && x.TerminationDate != nil {
		return *x.TerminationDate
	}
	return ""
}

type isRecurring_Dynamic_Frequency interface {
	isRecurring_Dynamic_Frequency()
}

type Recurring_Dynamic_Daily struct {
	Daily *Daily `protobuf:"bytes,2,opt,name=daily,proto3,oneof"`
}

type Recurring_Dynamic_Weekly struct {
	Weekly *Weekly `protobuf:"bytes,3,opt,name=weekly,proto3,oneof"`
}

type Recurring_Dynamic_Monthly struct {
	Monthly *Monthly `protobuf:"bytes,4,opt,name=monthly,proto3,oneof"`
}

func (*Recurring_Dynamic_Daily) isRecurring_Dynamic_Frequency() {}

func (*Recurring_Dynamic_Weekly) isRecurring_Dynamic_Frequency() {}

func (*Recurring_Dynamic_Monthly) isRecurring_Dynamic_Frequency() {}

var File_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto protoreflect.FileDescriptor

const file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDesc = "" +
	"\n" +
	"Jcom/coralogixapis/alerting/alert_scheduler_rule_protobuf/v1/schedule.proto\x12;com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1\x1a`com/coralogixapis/alerting/alert_scheduler_rule_protobuf/v1/alert_scheduler_rule_timeframe.proto\"\xe1\x02\n" +
	"\bSchedule\x12}\n" +
	"\x12schedule_operation\x18\x01 \x01(\x0e2N.com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.ScheduleOperationR\x11scheduleOperation\x12a\n" +
	"\bone_time\x18\x02 \x01(\v2D.com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.OneTimeH\x00R\aoneTime\x12f\n" +
	"\trecurring\x18\x03 \x01(\v2F.com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.RecurringH\x00R\trecurringB\v\n" +
	"\tscheduler\"o\n" +
	"\aOneTime\x12d\n" +
	"\ttimeframe\x18\x01 \x01(\v2F.com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.TimeframeR\ttimeframe\"\xfb\x05\n" +
	"\tRecurring\x12g\n" +
	"\x06always\x18\x01 \x01(\v2M.com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Recurring.AlwaysH\x00R\x06always\x12j\n" +
	"\adynamic\x18\x02 \x01(\v2N.com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Recurring.DynamicH\x00R\adynamic\x1a\b\n" +
	"\x06Always\x1a\x81\x04\n" +
	"\aDynamic\x12!\n" +
	"\frepeat_every\x18\x01 \x01(\x05R\vrepeatEvery\x12Z\n" +
	"\x05daily\x18\x02 \x01(\v2B.com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.DailyH\x00R\x05daily\x12]\n" +
	"\x06weekly\x18\x03 \x01(\v2C.com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.WeeklyH\x00R\x06weekly\x12`\n" +
	"\amonthly\x18\x04 \x01(\v2D.com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.MonthlyH\x00R\amonthly\x12d\n" +
	"\ttimeframe\x18\x05 \x01(\v2F.com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.TimeframeR\ttimeframe\x12.\n" +
	"\x10termination_date\x18\x06 \x01(\tH\x01R\x0fterminationDate\x88\x01\x01B\v\n" +
	"\tfrequencyB\x13\n" +
	"\x11_termination_dateB\v\n" +
	"\tcondition\"\a\n" +
	"\x05Daily\"*\n" +
	"\x06Weekly\x12 \n" +
	"\fdays_of_week\x18\x01 \x03(\x05R\n" +
	"daysOfWeek\"-\n" +
	"\aMonthly\x12\"\n" +
	"\rdays_of_month\x18\x01 \x03(\x05R\vdaysOfMonth*u\n" +
	"\x11ScheduleOperation\x12\"\n" +
	"\x1eSCHEDULE_OPERATION_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17SCHEDULE_OPERATION_MUTE\x10\x01\x12\x1f\n" +
	"\x1bSCHEDULE_OPERATION_ACTIVATE\x10\x02b\x06proto3"

var (
	file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescOnce sync.Once
	file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescData []byte
)

func file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDesc), len(file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDesc)))
	})
	return file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDescData
}

var file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_goTypes = []any{
	(ScheduleOperation)(0),    // 0: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.ScheduleOperation
	(*Schedule)(nil),          // 1: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Schedule
	(*OneTime)(nil),           // 2: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.OneTime
	(*Recurring)(nil),         // 3: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Recurring
	(*Daily)(nil),             // 4: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Daily
	(*Weekly)(nil),            // 5: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Weekly
	(*Monthly)(nil),           // 6: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Monthly
	(*Recurring_Always)(nil),  // 7: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Recurring.Always
	(*Recurring_Dynamic)(nil), // 8: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Recurring.Dynamic
	(*Timeframe)(nil),         // 9: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Timeframe
}
var file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_depIdxs = []int32{
	0,  // 0: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Schedule.schedule_operation:type_name -> com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.ScheduleOperation
	2,  // 1: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Schedule.one_time:type_name -> com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.OneTime
	3,  // 2: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Schedule.recurring:type_name -> com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Recurring
	9,  // 3: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.OneTime.timeframe:type_name -> com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Timeframe
	7,  // 4: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Recurring.always:type_name -> com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Recurring.Always
	8,  // 5: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Recurring.dynamic:type_name -> com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Recurring.Dynamic
	4,  // 6: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Recurring.Dynamic.daily:type_name -> com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Daily
	5,  // 7: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Recurring.Dynamic.weekly:type_name -> com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Weekly
	6,  // 8: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Recurring.Dynamic.monthly:type_name -> com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Monthly
	9,  // 9: com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Recurring.Dynamic.timeframe:type_name -> com.coralogixapis.alerting.alert_scheduler_rule_protobuf.v1.Timeframe
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_init() }
func file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_init() {
	if File_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto != nil {
		return
	}
	file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_alert_scheduler_rule_timeframe_proto_init()
	file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[0].OneofWrappers = []any{
		(*Schedule_OneTime)(nil),
		(*Schedule_Recurring)(nil),
	}
	file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[2].OneofWrappers = []any{
		(*Recurring_Always_)(nil),
		(*Recurring_Dynamic_)(nil),
	}
	file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes[7].OneofWrappers = []any{
		(*Recurring_Dynamic_Daily)(nil),
		(*Recurring_Dynamic_Weekly)(nil),
		(*Recurring_Dynamic_Monthly)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDesc), len(file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_depIdxs,
		EnumInfos:         file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_enumTypes,
		MessageInfos:      file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto = out.File
	file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_goTypes = nil
	file_com_coralogixapis_alerting_alert_scheduler_rule_protobuf_v1_schedule_proto_depIdxs = nil
}
