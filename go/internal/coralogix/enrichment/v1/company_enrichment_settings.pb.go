// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.32.1
// source: com/coralogix/enrichment/v1/company_enrichment_settings.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CompanyEnrichmentSettings struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	EnrichmentAmountLimit   uint32                 `protobuf:"varint,1,opt,name=enrichment_amount_limit,json=enrichmentAmountLimit,proto3" json:"enrichment_amount_limit,omitempty"`
	EnrichmentsInUse        uint32                 `protobuf:"varint,2,opt,name=enrichments_in_use,json=enrichmentsInUse,proto3" json:"enrichments_in_use,omitempty"`
	SizeLimitBytes          uint64                 `protobuf:"varint,3,opt,name=size_limit_bytes,json=sizeLimitBytes,proto3" json:"size_limit_bytes,omitempty"`
	RowLimit                uint32                 `protobuf:"varint,4,opt,name=row_limit,json=rowLimit,proto3" json:"row_limit,omitempty"`
	QueryOnlySizeLimitBytes uint64                 `protobuf:"varint,5,opt,name=query_only_size_limit_bytes,json=queryOnlySizeLimitBytes,proto3" json:"query_only_size_limit_bytes,omitempty"`
	QueryOnlyRowLimit       uint32                 `protobuf:"varint,6,opt,name=query_only_row_limit,json=queryOnlyRowLimit,proto3" json:"query_only_row_limit,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CompanyEnrichmentSettings) Reset() {
	*x = CompanyEnrichmentSettings{}
	mi := &file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompanyEnrichmentSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyEnrichmentSettings) ProtoMessage() {}

func (x *CompanyEnrichmentSettings) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyEnrichmentSettings.ProtoReflect.Descriptor instead.
func (*CompanyEnrichmentSettings) Descriptor() ([]byte, []int) {
	return file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_rawDescGZIP(), []int{0}
}

func (x *CompanyEnrichmentSettings) GetEnrichmentAmountLimit() uint32 {
	if x != nil {
		return x.EnrichmentAmountLimit
	}
	return 0
}

func (x *CompanyEnrichmentSettings) GetEnrichmentsInUse() uint32 {
	if x != nil {
		return x.EnrichmentsInUse
	}
	return 0
}

func (x *CompanyEnrichmentSettings) GetSizeLimitBytes() uint64 {
	if x != nil {
		return x.SizeLimitBytes
	}
	return 0
}

func (x *CompanyEnrichmentSettings) GetRowLimit() uint32 {
	if x != nil {
		return x.RowLimit
	}
	return 0
}

func (x *CompanyEnrichmentSettings) GetQueryOnlySizeLimitBytes() uint64 {
	if x != nil {
		return x.QueryOnlySizeLimitBytes
	}
	return 0
}

func (x *CompanyEnrichmentSettings) GetQueryOnlyRowLimit() uint32 {
	if x != nil {
		return x.QueryOnlyRowLimit
	}
	return 0
}

var File_com_coralogix_enrichment_v1_company_enrichment_settings_proto protoreflect.FileDescriptor

const file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_rawDesc = "" +
	"\n" +
	"=com/coralogix/enrichment/v1/company_enrichment_settings.proto\x12\x1bcom.coralogix.enrichment.v1\"\xb7\x02\n" +
	"\x19CompanyEnrichmentSettings\x126\n" +
	"\x17enrichment_amount_limit\x18\x01 \x01(\rR\x15enrichmentAmountLimit\x12,\n" +
	"\x12enrichments_in_use\x18\x02 \x01(\rR\x10enrichmentsInUse\x12(\n" +
	"\x10size_limit_bytes\x18\x03 \x01(\x04R\x0esizeLimitBytes\x12\x1b\n" +
	"\trow_limit\x18\x04 \x01(\rR\browLimit\x12<\n" +
	"\x1bquery_only_size_limit_bytes\x18\x05 \x01(\x04R\x17queryOnlySizeLimitBytes\x12/\n" +
	"\x14query_only_row_limit\x18\x06 \x01(\rR\x11queryOnlyRowLimitb\x06proto3"

var (
	file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_rawDescOnce sync.Once
	file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_rawDescData []byte
)

func file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_rawDescGZIP() []byte {
	file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_rawDescOnce.Do(func() {
		file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_rawDesc), len(file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_rawDesc)))
	})
	return file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_rawDescData
}

var file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_goTypes = []any{
	(*CompanyEnrichmentSettings)(nil), // 0: com.coralogix.enrichment.v1.CompanyEnrichmentSettings
}
var file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_init() }
func file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_init() {
	if File_com_coralogix_enrichment_v1_company_enrichment_settings_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_rawDesc), len(file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_goTypes,
		DependencyIndexes: file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_depIdxs,
		MessageInfos:      file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_msgTypes,
	}.Build()
	File_com_coralogix_enrichment_v1_company_enrichment_settings_proto = out.File
	file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_goTypes = nil
	file_com_coralogix_enrichment_v1_company_enrichment_settings_proto_depIdxs = nil
}
