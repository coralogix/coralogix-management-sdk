// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.3
// source: com/coralogixapis/incidents/v1/incident_action/upsert_incident_state/upsert_incident_state.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpsertIncidentState struct {
	state               protoimpl.MessageState      `protogen:"open.v1"`
	CorrelationKey      *wrapperspb.StringValue     `protobuf:"bytes,1,opt,name=correlation_key,json=correlationKey,proto3" json:"correlation_key,omitempty"`
	CompanyId           *wrapperspb.Int32Value      `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	StateType           UpsertIncidentStateType     `protobuf:"varint,3,opt,name=state_type,json=stateType,proto3,enum=com.coralogixapis.incidents.v1.UpsertIncidentStateType" json:"state_type,omitempty"`
	Severity            IncidentSeverity            `protobuf:"varint,4,opt,name=severity,proto3,enum=com.coralogixapis.incidents.v1.IncidentSeverity" json:"severity,omitempty"`
	ContextualLabels    map[string]string           `protobuf:"bytes,9,rep,name=contextual_labels,json=contextualLabels,proto3" json:"contextual_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DisplayLabels       map[string]string           `protobuf:"bytes,10,rep,name=display_labels,json=displayLabels,proto3" json:"display_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Payload             *UpsertIncidentStatePayload `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty"`
	ScopeDetails        *ScopeDetails               `protobuf:"bytes,8,opt,name=scope_details,json=scopeDetails,proto3" json:"scope_details,omitempty"`
	CloseOnResolveEvent *wrapperspb.BoolValue       `protobuf:"bytes,11,opt,name=close_on_resolve_event,json=closeOnResolveEvent,proto3" json:"close_on_resolve_event,omitempty"`
	IsMuted             *wrapperspb.BoolValue       `protobuf:"bytes,12,opt,name=is_muted,json=isMuted,proto3" json:"is_muted,omitempty"`
	MetaLabels          []*MetaLabel                `protobuf:"bytes,13,rep,name=meta_labels,json=metaLabels,proto3" json:"meta_labels,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *UpsertIncidentState) Reset() {
	*x = UpsertIncidentState{}
	mi := &file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertIncidentState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertIncidentState) ProtoMessage() {}

func (x *UpsertIncidentState) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertIncidentState.ProtoReflect.Descriptor instead.
func (*UpsertIncidentState) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_rawDescGZIP(), []int{0}
}

func (x *UpsertIncidentState) GetCorrelationKey() *wrapperspb.StringValue {
	if x != nil {
		return x.CorrelationKey
	}
	return nil
}

func (x *UpsertIncidentState) GetCompanyId() *wrapperspb.Int32Value {
	if x != nil {
		return x.CompanyId
	}
	return nil
}

func (x *UpsertIncidentState) GetStateType() UpsertIncidentStateType {
	if x != nil {
		return x.StateType
	}
	return UpsertIncidentStateType_UPSERT_INCIDENT_STATE_TYPE_UNSPECIFIED
}

func (x *UpsertIncidentState) GetSeverity() IncidentSeverity {
	if x != nil {
		return x.Severity
	}
	return IncidentSeverity_INCIDENT_SEVERITY_UNSPECIFIED
}

func (x *UpsertIncidentState) GetContextualLabels() map[string]string {
	if x != nil {
		return x.ContextualLabels
	}
	return nil
}

func (x *UpsertIncidentState) GetDisplayLabels() map[string]string {
	if x != nil {
		return x.DisplayLabels
	}
	return nil
}

func (x *UpsertIncidentState) GetPayload() *UpsertIncidentStatePayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UpsertIncidentState) GetScopeDetails() *ScopeDetails {
	if x != nil {
		return x.ScopeDetails
	}
	return nil
}

func (x *UpsertIncidentState) GetCloseOnResolveEvent() *wrapperspb.BoolValue {
	if x != nil {
		return x.CloseOnResolveEvent
	}
	return nil
}

func (x *UpsertIncidentState) GetIsMuted() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsMuted
	}
	return nil
}

func (x *UpsertIncidentState) GetMetaLabels() []*MetaLabel {
	if x != nil {
		return x.MetaLabels
	}
	return nil
}

var File_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto protoreflect.FileDescriptor

var file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_rawDesc = []byte{
	0x0a, 0x60, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x6e,
	0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x1a, 0x68, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x5f,
	0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x65, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x75, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2f, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa9, 0x08, 0x0a, 0x13, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x56, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x63, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x76, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x6d, 0x0a, 0x0e, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x54, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x51, 0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x63, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x4f, 0x0a, 0x16, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x13, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6d, 0x75, 0x74, 0x65, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x07, 0x69, 0x73, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x0b, 0x6d,
	0x65, 0x74, 0x61, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0a, 0x6d, 0x65, 0x74,
	0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x43, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x75, 0x61, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_rawDescOnce sync.Once
	file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_rawDescData = file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_rawDesc
)

func file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_rawDescData)
	})
	return file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_rawDescData
}

var file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_goTypes = []any{
	(*UpsertIncidentState)(nil),        // 0: com.coralogixapis.incidents.v1.UpsertIncidentState
	nil,                                // 1: com.coralogixapis.incidents.v1.UpsertIncidentState.ContextualLabelsEntry
	nil,                                // 2: com.coralogixapis.incidents.v1.UpsertIncidentState.DisplayLabelsEntry
	(*wrapperspb.StringValue)(nil),     // 3: google.protobuf.StringValue
	(*wrapperspb.Int32Value)(nil),      // 4: google.protobuf.Int32Value
	(UpsertIncidentStateType)(0),       // 5: com.coralogixapis.incidents.v1.UpsertIncidentStateType
	(IncidentSeverity)(0),              // 6: com.coralogixapis.incidents.v1.IncidentSeverity
	(*UpsertIncidentStatePayload)(nil), // 7: com.coralogixapis.incidents.v1.UpsertIncidentStatePayload
	(*ScopeDetails)(nil),               // 8: com.coralogixapis.incidents.v1.ScopeDetails
	(*wrapperspb.BoolValue)(nil),       // 9: google.protobuf.BoolValue
	(*MetaLabel)(nil),                  // 10: com.coralogixapis.incidents.v1.MetaLabel
}
var file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_depIdxs = []int32{
	3,  // 0: com.coralogixapis.incidents.v1.UpsertIncidentState.correlation_key:type_name -> google.protobuf.StringValue
	4,  // 1: com.coralogixapis.incidents.v1.UpsertIncidentState.company_id:type_name -> google.protobuf.Int32Value
	5,  // 2: com.coralogixapis.incidents.v1.UpsertIncidentState.state_type:type_name -> com.coralogixapis.incidents.v1.UpsertIncidentStateType
	6,  // 3: com.coralogixapis.incidents.v1.UpsertIncidentState.severity:type_name -> com.coralogixapis.incidents.v1.IncidentSeverity
	1,  // 4: com.coralogixapis.incidents.v1.UpsertIncidentState.contextual_labels:type_name -> com.coralogixapis.incidents.v1.UpsertIncidentState.ContextualLabelsEntry
	2,  // 5: com.coralogixapis.incidents.v1.UpsertIncidentState.display_labels:type_name -> com.coralogixapis.incidents.v1.UpsertIncidentState.DisplayLabelsEntry
	7,  // 6: com.coralogixapis.incidents.v1.UpsertIncidentState.payload:type_name -> com.coralogixapis.incidents.v1.UpsertIncidentStatePayload
	8,  // 7: com.coralogixapis.incidents.v1.UpsertIncidentState.scope_details:type_name -> com.coralogixapis.incidents.v1.ScopeDetails
	9,  // 8: com.coralogixapis.incidents.v1.UpsertIncidentState.close_on_resolve_event:type_name -> google.protobuf.BoolValue
	9,  // 9: com.coralogixapis.incidents.v1.UpsertIncidentState.is_muted:type_name -> google.protobuf.BoolValue
	10, // 10: com.coralogixapis.incidents.v1.UpsertIncidentState.meta_labels:type_name -> com.coralogixapis.incidents.v1.MetaLabel
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() {
	file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_init()
}
func file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_init() {
	if File_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto != nil {
		return
	}
	file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_payload_proto_init()
	file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_type_proto_init()
	file_com_coralogixapis_incidents_v1_scoping_details_proto_init()
	file_com_coralogixapis_incidents_v1_incident_severity_proto_init()
	file_com_coralogixapis_incidents_v1_meta_label_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_depIdxs,
		MessageInfos:      file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto = out.File
	file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_rawDesc = nil
	file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_goTypes = nil
	file_com_coralogixapis_incidents_v1_incident_action_upsert_incident_state_upsert_incident_state_proto_depIdxs = nil
}
