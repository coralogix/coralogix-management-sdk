// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.1
// source: com/coralogix/openapi/v1/annotations.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Cloud int32

const (
	Cloud_CLOUD_UNSPECIFIED Cloud = 0
	Cloud_CLOUD_IBM         Cloud = 1
	Cloud_CLOUD_AWS         Cloud = 2
	Cloud_CLOUD_AZURE       Cloud = 3
	Cloud_CLOUD_GCP         Cloud = 4
)

// Enum value maps for Cloud.
var (
	Cloud_name = map[int32]string{
		0: "CLOUD_UNSPECIFIED",
		1: "CLOUD_IBM",
		2: "CLOUD_AWS",
		3: "CLOUD_AZURE",
		4: "CLOUD_GCP",
	}
	Cloud_value = map[string]int32{
		"CLOUD_UNSPECIFIED": 0,
		"CLOUD_IBM":         1,
		"CLOUD_AWS":         2,
		"CLOUD_AZURE":       3,
		"CLOUD_GCP":         4,
	}
)

func (x Cloud) Enum() *Cloud {
	p := new(Cloud)
	*p = x
	return p
}

func (x Cloud) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cloud) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogix_openapi_v1_annotations_proto_enumTypes[0].Descriptor()
}

func (Cloud) Type() protoreflect.EnumType {
	return &file_com_coralogix_openapi_v1_annotations_proto_enumTypes[0]
}

func (x Cloud) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cloud.Descriptor instead.
func (Cloud) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogix_openapi_v1_annotations_proto_rawDescGZIP(), []int{0}
}

// Enum ErorCode defining possible error codes.
type ApiError_Error_ErrorCode int32

const (
	ApiError_Error_ERROR_CODE_BAD_REQUEST_OR_UNSPECIFIED ApiError_Error_ErrorCode = 0
	ApiError_Error_ERROR_CODE_UNAUTHORIZED               ApiError_Error_ErrorCode = 1
	ApiError_Error_ERROR_CODE_FORBIDDEN                  ApiError_Error_ErrorCode = 2
	ApiError_Error_ERROR_CODE_NOT_FOUND                  ApiError_Error_ErrorCode = 3
	ApiError_Error_ERROR_CODE_METHOD_INTERNAL_ERROR      ApiError_Error_ErrorCode = 4
	ApiError_Error_ERROR_CODE_CONFLICT                   ApiError_Error_ErrorCode = 5
	ApiError_Error_ERROR_CODE_UNAUTHENTICATED            ApiError_Error_ErrorCode = 6
	ApiError_Error_ERROR_CODE_RESOURCE_EXHAUSTED         ApiError_Error_ErrorCode = 7
	ApiError_Error_ERROR_CODE_DEADLINE_EXCEEDED          ApiError_Error_ErrorCode = 8
)

// Enum value maps for ApiError_Error_ErrorCode.
var (
	ApiError_Error_ErrorCode_name = map[int32]string{
		0: "ERROR_CODE_BAD_REQUEST_OR_UNSPECIFIED",
		1: "ERROR_CODE_UNAUTHORIZED",
		2: "ERROR_CODE_FORBIDDEN",
		3: "ERROR_CODE_NOT_FOUND",
		4: "ERROR_CODE_METHOD_INTERNAL_ERROR",
		5: "ERROR_CODE_CONFLICT",
		6: "ERROR_CODE_UNAUTHENTICATED",
		7: "ERROR_CODE_RESOURCE_EXHAUSTED",
		8: "ERROR_CODE_DEADLINE_EXCEEDED",
	}
	ApiError_Error_ErrorCode_value = map[string]int32{
		"ERROR_CODE_BAD_REQUEST_OR_UNSPECIFIED": 0,
		"ERROR_CODE_UNAUTHORIZED":               1,
		"ERROR_CODE_FORBIDDEN":                  2,
		"ERROR_CODE_NOT_FOUND":                  3,
		"ERROR_CODE_METHOD_INTERNAL_ERROR":      4,
		"ERROR_CODE_CONFLICT":                   5,
		"ERROR_CODE_UNAUTHENTICATED":            6,
		"ERROR_CODE_RESOURCE_EXHAUSTED":         7,
		"ERROR_CODE_DEADLINE_EXCEEDED":          8,
	}
)

func (x ApiError_Error_ErrorCode) Enum() *ApiError_Error_ErrorCode {
	p := new(ApiError_Error_ErrorCode)
	*p = x
	return p
}

func (x ApiError_Error_ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiError_Error_ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogix_openapi_v1_annotations_proto_enumTypes[1].Descriptor()
}

func (ApiError_Error_ErrorCode) Type() protoreflect.EnumType {
	return &file_com_coralogix_openapi_v1_annotations_proto_enumTypes[1]
}

func (x ApiError_Error_ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiError_Error_ErrorCode.Descriptor instead.
func (ApiError_Error_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogix_openapi_v1_annotations_proto_rawDescGZIP(), []int{6, 0, 0}
}

// ServiceOpenAPI is a message used to annotate gRPC services with additional
// OpenAPI-specific metadata. This includes service description, version, and
// and error model full qualified name.
type ServiceOpenAPI struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`                       // Description of the service.
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`                               // Version of the service.
	ErrorModel    string                 `protobuf:"bytes,3,opt,name=error_model,json=errorModel,proto3" json:"error_model,omitempty"`       // Full qualified name of error model used by the service (defaults to com.coralogix.openapi.ApiError).
	ResourceName  string                 `protobuf:"bytes,4,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"` // Name of the resource used in openapi spec.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceOpenAPI) Reset() {
	*x = ServiceOpenAPI{}
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceOpenAPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceOpenAPI) ProtoMessage() {}

func (x *ServiceOpenAPI) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceOpenAPI.ProtoReflect.Descriptor instead.
func (*ServiceOpenAPI) Descriptor() ([]byte, []int) {
	return file_com_coralogix_openapi_v1_annotations_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceOpenAPI) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceOpenAPI) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServiceOpenAPI) GetErrorModel() string {
	if x != nil {
		return x.ErrorModel
	}
	return ""
}

func (x *ServiceOpenAPI) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

// MethodOpenAPI is a message used to annotate gRPC methods with additional
// OpenAPI-specific metadata. This includes whether the method operates on a REST resource,
// its description, request schema, error responses, and the index of the HTTP rule where endpoints is defined.
type MethodOpenAPI struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Resource            bool                   `protobuf:"varint,1,opt,name=resource,proto3" json:"resource,omitempty"`                                                                                                             // Indicates if the method operates on a REST resource.
	Description         string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                                                                                        // Description of the method.
	RequestSchema       string                 `protobuf:"bytes,4,opt,name=request_schema,json=requestSchema,proto3" json:"request_schema,omitempty"`                                                                               // Schema of the request message. (Used when you want to use different schema than the one that will be generated from method request mesage type).
	ResponseSchema      string                 `protobuf:"bytes,5,opt,name=response_schema,json=responseSchema,proto3" json:"response_schema,omitempty"`                                                                            // Schema of the response message. (Used when you want to use different schema than the one that will be generated from method response mesage type).
	ErrorResponses      map[uint32]string      `protobuf:"bytes,6,rep,name=error_responses,json=errorResponses,proto3" json:"error_responses,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Map of error response codes to descriptions.
	HttpRuleIndex       uint32                 `protobuf:"varint,7,opt,name=http_rule_index,json=httpRuleIndex,proto3" json:"http_rule_index,omitempty"`                                                                            // Index of the associated HTTP rule.
	PathParameterName   string                 `protobuf:"bytes,8,opt,name=path_parameter_name,json=pathParameterName,proto3" json:"path_parameter_name,omitempty"`                                                                 // Name of the path parameter used in openapi spec.
	Extensions          map[string]string      `protobuf:"bytes,9,rep,name=extensions,proto3" json:"extensions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`                                // Map of extensions. Value is a free-form property to include a JSON of this field. This is copied to generated schema. Quotes must be escaped.
	Datasource          bool                   `protobuf:"varint,10,opt,name=datasource,proto3" json:"datasource,omitempty"`                                                                                                        // Indicates if the method is a datasource.
	RequestBodyExample  string                 `protobuf:"bytes,11,opt,name=request_body_example,json=requestBodyExample,proto3" json:"request_body_example,omitempty"`                                                             // A free-form property to include a JSON example of the request body. This is copied to generated schema. Quotes must be escaped.
	ResponseBodyExample string                 `protobuf:"bytes,12,opt,name=response_body_example,json=responseBodyExample,proto3" json:"response_body_example,omitempty"`                                                          // A free-form property to include a JSON example of the response body. This is copied to generated schema. Quotes must be escaped.
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MethodOpenAPI) Reset() {
	*x = MethodOpenAPI{}
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MethodOpenAPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodOpenAPI) ProtoMessage() {}

func (x *MethodOpenAPI) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodOpenAPI.ProtoReflect.Descriptor instead.
func (*MethodOpenAPI) Descriptor() ([]byte, []int) {
	return file_com_coralogix_openapi_v1_annotations_proto_rawDescGZIP(), []int{1}
}

func (x *MethodOpenAPI) GetResource() bool {
	if x != nil {
		return x.Resource
	}
	return false
}

func (x *MethodOpenAPI) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MethodOpenAPI) GetRequestSchema() string {
	if x != nil {
		return x.RequestSchema
	}
	return ""
}

func (x *MethodOpenAPI) GetResponseSchema() string {
	if x != nil {
		return x.ResponseSchema
	}
	return ""
}

func (x *MethodOpenAPI) GetErrorResponses() map[uint32]string {
	if x != nil {
		return x.ErrorResponses
	}
	return nil
}

func (x *MethodOpenAPI) GetHttpRuleIndex() uint32 {
	if x != nil {
		return x.HttpRuleIndex
	}
	return 0
}

func (x *MethodOpenAPI) GetPathParameterName() string {
	if x != nil {
		return x.PathParameterName
	}
	return ""
}

func (x *MethodOpenAPI) GetExtensions() map[string]string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *MethodOpenAPI) GetDatasource() bool {
	if x != nil {
		return x.Datasource
	}
	return false
}

func (x *MethodOpenAPI) GetRequestBodyExample() string {
	if x != nil {
		return x.RequestBodyExample
	}
	return ""
}

func (x *MethodOpenAPI) GetResponseBodyExample() string {
	if x != nil {
		return x.ResponseBodyExample
	}
	return ""
}

// MessageOpenAPI is a message used to annotate gRPC message types with additional
// OpenAPI-specific metadata, such as description and whether the message is a REST resource.
type MessageOpenAPI struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                       // Name of the message.
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`                                                                         // Description of the message.
	Resource      bool                   `protobuf:"varint,3,opt,name=resource,proto3" json:"resource,omitempty"`                                                                              // Indicates if the message is a REST resource.
	Extensions    map[string]string      `protobuf:"bytes,4,rep,name=extensions,proto3" json:"extensions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Map of extensions. Value is a free-form property to include a JSON of this field. This is copied to generated schema. Quotes must be escaped.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageOpenAPI) Reset() {
	*x = MessageOpenAPI{}
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageOpenAPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOpenAPI) ProtoMessage() {}

func (x *MessageOpenAPI) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOpenAPI.ProtoReflect.Descriptor instead.
func (*MessageOpenAPI) Descriptor() ([]byte, []int) {
	return file_com_coralogix_openapi_v1_annotations_proto_rawDescGZIP(), []int{2}
}

func (x *MessageOpenAPI) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageOpenAPI) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MessageOpenAPI) GetResource() bool {
	if x != nil {
		return x.Resource
	}
	return false
}

func (x *MessageOpenAPI) GetExtensions() map[string]string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

// EnumOpenAPI is a message used to annotate gRPC enum types with additional OpenAPI-specific metadata.
type EnumOpenAPI struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                       // Name of the enum.
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`                                                                         // Description of the enum.
	Extensions    map[string]string      `protobuf:"bytes,3,rep,name=extensions,proto3" json:"extensions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Map of extensions. Value is a free-form property to include a JSON of this field. This is copied to generated schema. Quotes must be escaped.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnumOpenAPI) Reset() {
	*x = EnumOpenAPI{}
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnumOpenAPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumOpenAPI) ProtoMessage() {}

func (x *EnumOpenAPI) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumOpenAPI.ProtoReflect.Descriptor instead.
func (*EnumOpenAPI) Descriptor() ([]byte, []int) {
	return file_com_coralogix_openapi_v1_annotations_proto_rawDescGZIP(), []int{3}
}

func (x *EnumOpenAPI) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnumOpenAPI) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EnumOpenAPI) GetExtensions() map[string]string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

// EnumValueOpenAPI is a message used to annotate enum values with additional OpenAPI-specific metadata.
type EnumValueOpenAPI struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SkipIn        []Cloud                `protobuf:"varint,1,rep,packed,name=skip_in,json=skipIn,proto3,enum=com.coralogix.openapi.v1.Cloud" json:"skip_in,omitempty"` // List of clouds to skip this enum value in.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnumValueOpenAPI) Reset() {
	*x = EnumValueOpenAPI{}
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnumValueOpenAPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumValueOpenAPI) ProtoMessage() {}

func (x *EnumValueOpenAPI) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumValueOpenAPI.ProtoReflect.Descriptor instead.
func (*EnumValueOpenAPI) Descriptor() ([]byte, []int) {
	return file_com_coralogix_openapi_v1_annotations_proto_rawDescGZIP(), []int{4}
}

func (x *EnumValueOpenAPI) GetSkipIn() []Cloud {
	if x != nil {
		return x.SkipIn
	}
	return nil
}

// FieldOpenAPI is a message used to annotate fields within gRPC message types
// with additional OpenAPI-specific metadata. This includes field descriptions,
// examples, validation patterns, length constraints, and other properties.
type FieldOpenAPI struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                // Used for renaming field in OpenAPI schema.
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`                                                  // Description of the field. Defaults to the field name.
	Example       string                 `protobuf:"bytes,3,opt,name=example,proto3" json:"example,omitempty"`                                                          // A free-form property to include a JSON example of this field. This is copied to generated schema. Quotes must be escaped.
	Pattern       string                 `protobuf:"bytes,4,opt,name=pattern,proto3" json:"pattern,omitempty"`                                                          // Regex pattern the field value should match.
	MinLength     int32                  `protobuf:"varint,5,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`                                    // Minimum length for string fields. Defaults to 1.
	MaxLength     int32                  `protobuf:"varint,6,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`                                    // Maximum length for string fields. Defaults to 4096.
	MinItems      int32                  `protobuf:"varint,7,opt,name=min_items,json=minItems,proto3" json:"min_items,omitempty"`                                       // Minimum number of items for repeated fields. Defaults to 1.
	MaxItems      int32                  `protobuf:"varint,8,opt,name=max_items,json=maxItems,proto3" json:"max_items,omitempty"`                                       // Maximum number of items for repeated fields. Defaults to 4096.
	Required      bool                   `protobuf:"varint,9,opt,name=required,proto3" json:"required,omitempty"`                                                       // Indicates if the field is required.
	Identifier    bool                   `protobuf:"varint,10,opt,name=identifier,proto3" json:"identifier,omitempty"`                                                  // Indicates if the field is an identifier.
	Format        string                 `protobuf:"bytes,11,opt,name=format,proto3" json:"format,omitempty"`                                                           // Format of the field.
	SkipIn        []Cloud                `protobuf:"varint,12,rep,packed,name=skip_in,json=skipIn,proto3,enum=com.coralogix.openapi.v1.Cloud" json:"skip_in,omitempty"` // List of clouds to skip this field in.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldOpenAPI) Reset() {
	*x = FieldOpenAPI{}
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldOpenAPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOpenAPI) ProtoMessage() {}

func (x *FieldOpenAPI) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOpenAPI.ProtoReflect.Descriptor instead.
func (*FieldOpenAPI) Descriptor() ([]byte, []int) {
	return file_com_coralogix_openapi_v1_annotations_proto_rawDescGZIP(), []int{5}
}

func (x *FieldOpenAPI) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldOpenAPI) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FieldOpenAPI) GetExample() string {
	if x != nil {
		return x.Example
	}
	return ""
}

func (x *FieldOpenAPI) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *FieldOpenAPI) GetMinLength() int32 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *FieldOpenAPI) GetMaxLength() int32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

func (x *FieldOpenAPI) GetMinItems() int32 {
	if x != nil {
		return x.MinItems
	}
	return 0
}

func (x *FieldOpenAPI) GetMaxItems() int32 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *FieldOpenAPI) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *FieldOpenAPI) GetIdentifier() bool {
	if x != nil {
		return x.Identifier
	}
	return false
}

func (x *FieldOpenAPI) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *FieldOpenAPI) GetSkipIn() []Cloud {
	if x != nil {
		return x.SkipIn
	}
	return nil
}

// ApiError is a message representing a standardized error response format.
// It contains a list of individual errors, a trace identifier, and a status code.
type ApiError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of errors
	Errors []*ApiError_Error `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	// UUID uniquely identifying the request
	Trace *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=trace,proto3" json:"trace,omitempty"`
	// HTTP status code associated with the error
	StatusCode    *wrapperspb.Int32Value `protobuf:"bytes,3,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiError) Reset() {
	*x = ApiError{}
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiError) ProtoMessage() {}

func (x *ApiError) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiError.ProtoReflect.Descriptor instead.
func (*ApiError) Descriptor() ([]byte, []int) {
	return file_com_coralogix_openapi_v1_annotations_proto_rawDescGZIP(), []int{6}
}

func (x *ApiError) GetErrors() []*ApiError_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ApiError) GetTrace() *wrapperspb.StringValue {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *ApiError) GetStatusCode() *wrapperspb.Int32Value {
	if x != nil {
		return x.StatusCode
	}
	return nil
}

// Nested message Error representing a single error occurrence.
type ApiError_Error struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Error code
	Code ApiError_Error_ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=com.coralogix.openapi.v1.ApiError_Error_ErrorCode" json:"code,omitempty"`
	// Human-readable error message
	Message *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Additional information about the error
	MoreInfo      *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=more_info,json=moreInfo,proto3" json:"more_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiError_Error) Reset() {
	*x = ApiError_Error{}
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiError_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiError_Error) ProtoMessage() {}

func (x *ApiError_Error) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_openapi_v1_annotations_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiError_Error.ProtoReflect.Descriptor instead.
func (*ApiError_Error) Descriptor() ([]byte, []int) {
	return file_com_coralogix_openapi_v1_annotations_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ApiError_Error) GetCode() ApiError_Error_ErrorCode {
	if x != nil {
		return x.Code
	}
	return ApiError_Error_ERROR_CODE_BAD_REQUEST_OR_UNSPECIFIED
}

func (x *ApiError_Error) GetMessage() *wrapperspb.StringValue {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ApiError_Error) GetMoreInfo() *wrapperspb.StringValue {
	if x != nil {
		return x.MoreInfo
	}
	return nil
}

var file_com_coralogix_openapi_v1_annotations_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*ServiceOpenAPI)(nil),
		Field:         99999,
		Name:          "com.coralogix.openapi.v1.service",
		Tag:           "bytes,99999,opt,name=service",
		Filename:      "com/coralogix/openapi/v1/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*MethodOpenAPI)(nil),
		Field:         99999,
		Name:          "com.coralogix.openapi.v1.method",
		Tag:           "bytes,99999,opt,name=method",
		Filename:      "com/coralogix/openapi/v1/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageOpenAPI)(nil),
		Field:         99999,
		Name:          "com.coralogix.openapi.v1.message",
		Tag:           "bytes,99999,opt,name=message",
		Filename:      "com/coralogix/openapi/v1/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*EnumOpenAPI)(nil),
		Field:         99999,
		Name:          "com.coralogix.openapi.v1.enum",
		Tag:           "bytes,99999,opt,name=enum",
		Filename:      "com/coralogix/openapi/v1/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*EnumValueOpenAPI)(nil),
		Field:         99999,
		Name:          "com.coralogix.openapi.v1.enum_value",
		Tag:           "bytes,99999,opt,name=enum_value",
		Filename:      "com/coralogix/openapi/v1/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldOpenAPI)(nil),
		Field:         99999,
		Name:          "com.coralogix.openapi.v1.field",
		Tag:           "bytes,99999,opt,name=field",
		Filename:      "com/coralogix/openapi/v1/annotations.proto",
	},
}

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional com.coralogix.openapi.v1.ServiceOpenAPI service = 99999;
	E_Service = &file_com_coralogix_openapi_v1_annotations_proto_extTypes[0]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional com.coralogix.openapi.v1.MethodOpenAPI method = 99999;
	E_Method = &file_com_coralogix_openapi_v1_annotations_proto_extTypes[1]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional com.coralogix.openapi.v1.MessageOpenAPI message = 99999;
	E_Message = &file_com_coralogix_openapi_v1_annotations_proto_extTypes[2]
)

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional com.coralogix.openapi.v1.EnumOpenAPI enum = 99999;
	E_Enum = &file_com_coralogix_openapi_v1_annotations_proto_extTypes[3]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional com.coralogix.openapi.v1.EnumValueOpenAPI enum_value = 99999;
	E_EnumValue = &file_com_coralogix_openapi_v1_annotations_proto_extTypes[4]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional com.coralogix.openapi.v1.FieldOpenAPI field = 99999;
	E_Field = &file_com_coralogix_openapi_v1_annotations_proto_extTypes[5]
)

var File_com_coralogix_openapi_v1_annotations_proto protoreflect.FileDescriptor

var file_com_coralogix_openapi_v1_annotations_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xbc, 0x05,
	0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x64, 0x0a,
	0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x68, 0x74,
	0x74, 0x70, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2e, 0x0a, 0x13, 0x70,
	0x61, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x74, 0x68, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x0a, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x62, 0x6f, 0x64, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x41, 0x0a, 0x13, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a,
	0x0f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfb, 0x01, 0x0a,
	0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x58, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd9, 0x01, 0x0a, 0x0b, 0x45,
	0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x55, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4c, 0x0a, 0x10, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x12, 0x38, 0x0a, 0x07, 0x73, 0x6b,
	0x69, 0x70, 0x5f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x06, 0x73, 0x6b,
	0x69, 0x70, 0x49, 0x6e, 0x22, 0xfe, 0x02, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x65, 0x6e, 0x41, 0x50, 0x49, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6d, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d,
	0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x73,
	0x6b, 0x69, 0x70, 0x5f, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x06, 0x73,
	0x6b, 0x69, 0x70, 0x49, 0x6e, 0x22, 0xf4, 0x06, 0x0a, 0x08, 0x41, 0x70, 0x69, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x69, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0xfa, 0xe9,
	0x30, 0x04, 0x28, 0x01, 0x48, 0x01, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0xac,
	0x01, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x78, 0xfa, 0xe9,
	0x30, 0x74, 0x1a, 0x26, 0x22, 0x33, 0x64, 0x63, 0x30, 0x32, 0x39, 0x39, 0x38, 0x2d, 0x30, 0x62,
	0x35, 0x30, 0x2d, 0x34, 0x65, 0x61, 0x38, 0x2d, 0x62, 0x36, 0x38, 0x61, 0x2d, 0x34, 0x37, 0x37,
	0x39, 0x64, 0x37, 0x31, 0x36, 0x66, 0x61, 0x31, 0x66, 0x22, 0x22, 0x3e, 0x5e, 0x5b, 0x30, 0x2d,
	0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x38, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66,
	0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d,
	0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x5b, 0x30, 0x2d,
	0x39, 0x61, 0x2d, 0x66, 0x5d, 0x7b, 0x31, 0x32, 0x7d, 0x24, 0x28, 0x24, 0x30, 0x24, 0x48, 0x01,
	0x5a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x47, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x09, 0xfa, 0xe9, 0x30, 0x05, 0x1a, 0x03, 0x34, 0x30, 0x34, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0xa3, 0x04, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x4e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x42, 0x06, 0xfa, 0xe9, 0x30, 0x02, 0x48, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x49, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x11, 0xfa, 0xe9, 0x30, 0x0d, 0x1a, 0x0b, 0x22, 0x4e, 0x6f, 0x74, 0x20, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x22, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x51, 0x0a, 0x09, 0x6d,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x16, 0xfa, 0xe9,
	0x30, 0x12, 0x1a, 0x10, 0x22, 0x56, 0x69, 0x65, 0x77, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x22, 0x52, 0x08, 0x6d, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xab,
	0x02, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x25,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x42, 0x49, 0x44, 0x44, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x18,
	0x0a, 0x14, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x24, 0x0a, 0x20, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x17,
	0x0a, 0x13, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x4c, 0x49, 0x43, 0x54, 0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49,
	0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x21, 0x0a, 0x1d, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x45,
	0x58, 0x48, 0x41, 0x55, 0x53, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x41, 0x44, 0x4c, 0x49, 0x4e,
	0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x08, 0x2a, 0x5c, 0x0a, 0x05,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x49, 0x42, 0x4d, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x41, 0x57, 0x53, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4c,
	0x4f, 0x55, 0x44, 0x5f, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x47, 0x43, 0x50, 0x10, 0x04, 0x3a, 0x65, 0x0a, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x9f, 0x8d, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x3a, 0x61, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x9f, 0x8d, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x3a, 0x65, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x9f, 0x8d, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x41,
	0x50, 0x49, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x59, 0x0a, 0x04, 0x65,
	0x6e, 0x75, 0x6d, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x9f, 0x8d, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49,
	0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x3a, 0x6e, 0x0a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x9f, 0x8d, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x52, 0x09, 0x65, 0x6e, 0x75,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x5d, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x9f,
	0x8d, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x52, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogix_openapi_v1_annotations_proto_rawDescOnce sync.Once
	file_com_coralogix_openapi_v1_annotations_proto_rawDescData = file_com_coralogix_openapi_v1_annotations_proto_rawDesc
)

func file_com_coralogix_openapi_v1_annotations_proto_rawDescGZIP() []byte {
	file_com_coralogix_openapi_v1_annotations_proto_rawDescOnce.Do(func() {
		file_com_coralogix_openapi_v1_annotations_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogix_openapi_v1_annotations_proto_rawDescData)
	})
	return file_com_coralogix_openapi_v1_annotations_proto_rawDescData
}

var file_com_coralogix_openapi_v1_annotations_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_com_coralogix_openapi_v1_annotations_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_com_coralogix_openapi_v1_annotations_proto_goTypes = []any{
	(Cloud)(0),                            // 0: com.coralogix.openapi.v1.Cloud
	(ApiError_Error_ErrorCode)(0),         // 1: com.coralogix.openapi.v1.ApiError.Error.ErrorCode
	(*ServiceOpenAPI)(nil),                // 2: com.coralogix.openapi.v1.ServiceOpenAPI
	(*MethodOpenAPI)(nil),                 // 3: com.coralogix.openapi.v1.MethodOpenAPI
	(*MessageOpenAPI)(nil),                // 4: com.coralogix.openapi.v1.MessageOpenAPI
	(*EnumOpenAPI)(nil),                   // 5: com.coralogix.openapi.v1.EnumOpenAPI
	(*EnumValueOpenAPI)(nil),              // 6: com.coralogix.openapi.v1.EnumValueOpenAPI
	(*FieldOpenAPI)(nil),                  // 7: com.coralogix.openapi.v1.FieldOpenAPI
	(*ApiError)(nil),                      // 8: com.coralogix.openapi.v1.ApiError
	nil,                                   // 9: com.coralogix.openapi.v1.MethodOpenAPI.ErrorResponsesEntry
	nil,                                   // 10: com.coralogix.openapi.v1.MethodOpenAPI.ExtensionsEntry
	nil,                                   // 11: com.coralogix.openapi.v1.MessageOpenAPI.ExtensionsEntry
	nil,                                   // 12: com.coralogix.openapi.v1.EnumOpenAPI.ExtensionsEntry
	(*ApiError_Error)(nil),                // 13: com.coralogix.openapi.v1.ApiError.Error
	(*wrapperspb.StringValue)(nil),        // 14: google.protobuf.StringValue
	(*wrapperspb.Int32Value)(nil),         // 15: google.protobuf.Int32Value
	(*descriptorpb.ServiceOptions)(nil),   // 16: google.protobuf.ServiceOptions
	(*descriptorpb.MethodOptions)(nil),    // 17: google.protobuf.MethodOptions
	(*descriptorpb.MessageOptions)(nil),   // 18: google.protobuf.MessageOptions
	(*descriptorpb.EnumOptions)(nil),      // 19: google.protobuf.EnumOptions
	(*descriptorpb.EnumValueOptions)(nil), // 20: google.protobuf.EnumValueOptions
	(*descriptorpb.FieldOptions)(nil),     // 21: google.protobuf.FieldOptions
}
var file_com_coralogix_openapi_v1_annotations_proto_depIdxs = []int32{
	9,  // 0: com.coralogix.openapi.v1.MethodOpenAPI.error_responses:type_name -> com.coralogix.openapi.v1.MethodOpenAPI.ErrorResponsesEntry
	10, // 1: com.coralogix.openapi.v1.MethodOpenAPI.extensions:type_name -> com.coralogix.openapi.v1.MethodOpenAPI.ExtensionsEntry
	11, // 2: com.coralogix.openapi.v1.MessageOpenAPI.extensions:type_name -> com.coralogix.openapi.v1.MessageOpenAPI.ExtensionsEntry
	12, // 3: com.coralogix.openapi.v1.EnumOpenAPI.extensions:type_name -> com.coralogix.openapi.v1.EnumOpenAPI.ExtensionsEntry
	0,  // 4: com.coralogix.openapi.v1.EnumValueOpenAPI.skip_in:type_name -> com.coralogix.openapi.v1.Cloud
	0,  // 5: com.coralogix.openapi.v1.FieldOpenAPI.skip_in:type_name -> com.coralogix.openapi.v1.Cloud
	13, // 6: com.coralogix.openapi.v1.ApiError.errors:type_name -> com.coralogix.openapi.v1.ApiError.Error
	14, // 7: com.coralogix.openapi.v1.ApiError.trace:type_name -> google.protobuf.StringValue
	15, // 8: com.coralogix.openapi.v1.ApiError.status_code:type_name -> google.protobuf.Int32Value
	1,  // 9: com.coralogix.openapi.v1.ApiError.Error.code:type_name -> com.coralogix.openapi.v1.ApiError.Error.ErrorCode
	14, // 10: com.coralogix.openapi.v1.ApiError.Error.message:type_name -> google.protobuf.StringValue
	14, // 11: com.coralogix.openapi.v1.ApiError.Error.more_info:type_name -> google.protobuf.StringValue
	16, // 12: com.coralogix.openapi.v1.service:extendee -> google.protobuf.ServiceOptions
	17, // 13: com.coralogix.openapi.v1.method:extendee -> google.protobuf.MethodOptions
	18, // 14: com.coralogix.openapi.v1.message:extendee -> google.protobuf.MessageOptions
	19, // 15: com.coralogix.openapi.v1.enum:extendee -> google.protobuf.EnumOptions
	20, // 16: com.coralogix.openapi.v1.enum_value:extendee -> google.protobuf.EnumValueOptions
	21, // 17: com.coralogix.openapi.v1.field:extendee -> google.protobuf.FieldOptions
	2,  // 18: com.coralogix.openapi.v1.service:type_name -> com.coralogix.openapi.v1.ServiceOpenAPI
	3,  // 19: com.coralogix.openapi.v1.method:type_name -> com.coralogix.openapi.v1.MethodOpenAPI
	4,  // 20: com.coralogix.openapi.v1.message:type_name -> com.coralogix.openapi.v1.MessageOpenAPI
	5,  // 21: com.coralogix.openapi.v1.enum:type_name -> com.coralogix.openapi.v1.EnumOpenAPI
	6,  // 22: com.coralogix.openapi.v1.enum_value:type_name -> com.coralogix.openapi.v1.EnumValueOpenAPI
	7,  // 23: com.coralogix.openapi.v1.field:type_name -> com.coralogix.openapi.v1.FieldOpenAPI
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	18, // [18:24] is the sub-list for extension type_name
	12, // [12:18] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_com_coralogix_openapi_v1_annotations_proto_init() }
func file_com_coralogix_openapi_v1_annotations_proto_init() {
	if File_com_coralogix_openapi_v1_annotations_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogix_openapi_v1_annotations_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 6,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogix_openapi_v1_annotations_proto_goTypes,
		DependencyIndexes: file_com_coralogix_openapi_v1_annotations_proto_depIdxs,
		EnumInfos:         file_com_coralogix_openapi_v1_annotations_proto_enumTypes,
		MessageInfos:      file_com_coralogix_openapi_v1_annotations_proto_msgTypes,
		ExtensionInfos:    file_com_coralogix_openapi_v1_annotations_proto_extTypes,
	}.Build()
	File_com_coralogix_openapi_v1_annotations_proto = out.File
	file_com_coralogix_openapi_v1_annotations_proto_rawDesc = nil
	file_com_coralogix_openapi_v1_annotations_proto_goTypes = nil
	file_com_coralogix_openapi_v1_annotations_proto_depIdxs = nil
}
