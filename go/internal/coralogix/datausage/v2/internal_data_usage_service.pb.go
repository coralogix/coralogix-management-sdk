// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: com/coralogix/datausage/v2/internal_data_usage_service.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExportTeamsDetailedUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Date range must be between 1 hour and 24 hours.
	DateRange *DateRange `protobuf:"bytes,1,opt,name=date_range,json=dateRange,proto3" json:"date_range,omitempty"`
	// Aggregation resolution with minute precision.
	//
	// Do note that to avoid overloading the service we enforce resolution limits
	// The maximum is 24 data points for 24 hours date range and 1 hour resolution.
	// Depending on how much data there is, exporting detailed data usage for 24 hours can take significant time (~2 minutes).
	//
	// Resolution must be between 1 hour and 24 hour. It also must not be bigger than the total DateRange.
	Resolution *durationpb.Duration `protobuf:"bytes,2,opt,name=resolution,proto3" json:"resolution,omitempty"`
}

func (x *ExportTeamsDetailedUsageRequest) Reset() {
	*x = ExportTeamsDetailedUsageRequest{}
	mi := &file_com_coralogix_datausage_v2_internal_data_usage_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportTeamsDetailedUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTeamsDetailedUsageRequest) ProtoMessage() {}

func (x *ExportTeamsDetailedUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_datausage_v2_internal_data_usage_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTeamsDetailedUsageRequest.ProtoReflect.Descriptor instead.
func (*ExportTeamsDetailedUsageRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDescGZIP(), []int{0}
}

func (x *ExportTeamsDetailedUsageRequest) GetDateRange() *DateRange {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *ExportTeamsDetailedUsageRequest) GetResolution() *durationpb.Duration {
	if x != nil {
		return x.Resolution
	}
	return nil
}

type DataUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SizeGb    *wrapperspb.FloatValue `protobuf:"bytes,2,opt,name=size_gb,json=sizeGb,proto3" json:"size_gb,omitempty"`
	// / Describes this data usage
	// / i.e. [Pillar.PILLAR_LOGS, Priority.PRIORITY_HIGH], [Pillar.PILLAR_METRICS, Priority.PRIORITY_MEDIUM]
	Dimensions []*Dimension `protobuf:"bytes,3,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
}

func (x *DataUsage) Reset() {
	*x = DataUsage{}
	mi := &file_com_coralogix_datausage_v2_internal_data_usage_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataUsage) ProtoMessage() {}

func (x *DataUsage) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_datausage_v2_internal_data_usage_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataUsage.ProtoReflect.Descriptor instead.
func (*DataUsage) Descriptor() ([]byte, []int) {
	return file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDescGZIP(), []int{1}
}

func (x *DataUsage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DataUsage) GetSizeGb() *wrapperspb.FloatValue {
	if x != nil {
		return x.SizeGb
	}
	return nil
}

func (x *DataUsage) GetDimensions() []*Dimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

type TeamDetailedUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId     uint32       `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	ExternalId *string      `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3,oneof" json:"external_id,omitempty"`
	Retention  uint32       `protobuf:"varint,3,opt,name=retention,proto3" json:"retention,omitempty"`
	DataUsage  []*DataUsage `protobuf:"bytes,4,rep,name=data_usage,json=dataUsage,proto3" json:"data_usage,omitempty"`
}

func (x *TeamDetailedUsage) Reset() {
	*x = TeamDetailedUsage{}
	mi := &file_com_coralogix_datausage_v2_internal_data_usage_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamDetailedUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamDetailedUsage) ProtoMessage() {}

func (x *TeamDetailedUsage) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_datausage_v2_internal_data_usage_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamDetailedUsage.ProtoReflect.Descriptor instead.
func (*TeamDetailedUsage) Descriptor() ([]byte, []int) {
	return file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDescGZIP(), []int{2}
}

func (x *TeamDetailedUsage) GetTeamId() uint32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *TeamDetailedUsage) GetExternalId() string {
	if x != nil && x.ExternalId != nil {
		return *x.ExternalId
	}
	return ""
}

func (x *TeamDetailedUsage) GetRetention() uint32 {
	if x != nil {
		return x.Retention
	}
	return 0
}

func (x *TeamDetailedUsage) GetDataUsage() []*DataUsage {
	if x != nil {
		return x.DataUsage
	}
	return nil
}

type ExportTeamsDetailedUsageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / It is possible that if a team has many records they will be split into multiple messages
	// / Client is expected to read stream and combine all records for each team.
	TeamUsage *TeamDetailedUsage `protobuf:"bytes,1,opt,name=team_usage,json=teamUsage,proto3" json:"team_usage,omitempty"`
}

func (x *ExportTeamsDetailedUsageResponse) Reset() {
	*x = ExportTeamsDetailedUsageResponse{}
	mi := &file_com_coralogix_datausage_v2_internal_data_usage_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportTeamsDetailedUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTeamsDetailedUsageResponse) ProtoMessage() {}

func (x *ExportTeamsDetailedUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_datausage_v2_internal_data_usage_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTeamsDetailedUsageResponse.ProtoReflect.Descriptor instead.
func (*ExportTeamsDetailedUsageResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDescGZIP(), []int{3}
}

func (x *ExportTeamsDetailedUsageResponse) GetTeamUsage() *TeamDetailedUsage {
	if x != nil {
		return x.TeamUsage
	}
	return nil
}

var File_com_coralogix_datausage_v2_internal_data_usage_service_proto protoreflect.FileDescriptor

var file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDesc = []byte{
	0x0a, 0x3c, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x75, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x75, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x32, 0x1a, 0x2b, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x1f, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x75, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x01,
	0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x62,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x06, 0x73, 0x69, 0x7a, 0x65, 0x47, 0x62, 0x12, 0x45, 0x0a, 0x0a, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x75, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x11, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x20, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4c, 0x0a, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x75, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x32, 0xb4, 0x01,
	0x0a, 0x18, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x97, 0x01, 0x0a, 0x18, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x75, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x30, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDescOnce sync.Once
	file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDescData = file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDesc
)

func file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDescGZIP() []byte {
	file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDescOnce.Do(func() {
		file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDescData)
	})
	return file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDescData
}

var file_com_coralogix_datausage_v2_internal_data_usage_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_com_coralogix_datausage_v2_internal_data_usage_service_proto_goTypes = []any{
	(*ExportTeamsDetailedUsageRequest)(nil),  // 0: com.coralogix.datausage.v2.ExportTeamsDetailedUsageRequest
	(*DataUsage)(nil),                        // 1: com.coralogix.datausage.v2.DataUsage
	(*TeamDetailedUsage)(nil),                // 2: com.coralogix.datausage.v2.TeamDetailedUsage
	(*ExportTeamsDetailedUsageResponse)(nil), // 3: com.coralogix.datausage.v2.ExportTeamsDetailedUsageResponse
	(*DateRange)(nil),                        // 4: com.coralogix.datausage.v2.DateRange
	(*durationpb.Duration)(nil),              // 5: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),            // 6: google.protobuf.Timestamp
	(*wrapperspb.FloatValue)(nil),            // 7: google.protobuf.FloatValue
	(*Dimension)(nil),                        // 8: com.coralogix.datausage.v2.Dimension
}
var file_com_coralogix_datausage_v2_internal_data_usage_service_proto_depIdxs = []int32{
	4, // 0: com.coralogix.datausage.v2.ExportTeamsDetailedUsageRequest.date_range:type_name -> com.coralogix.datausage.v2.DateRange
	5, // 1: com.coralogix.datausage.v2.ExportTeamsDetailedUsageRequest.resolution:type_name -> google.protobuf.Duration
	6, // 2: com.coralogix.datausage.v2.DataUsage.timestamp:type_name -> google.protobuf.Timestamp
	7, // 3: com.coralogix.datausage.v2.DataUsage.size_gb:type_name -> google.protobuf.FloatValue
	8, // 4: com.coralogix.datausage.v2.DataUsage.dimensions:type_name -> com.coralogix.datausage.v2.Dimension
	1, // 5: com.coralogix.datausage.v2.TeamDetailedUsage.data_usage:type_name -> com.coralogix.datausage.v2.DataUsage
	2, // 6: com.coralogix.datausage.v2.ExportTeamsDetailedUsageResponse.team_usage:type_name -> com.coralogix.datausage.v2.TeamDetailedUsage
	0, // 7: com.coralogix.datausage.v2.InternalDataUsageService.ExportTeamsDetailedUsage:input_type -> com.coralogix.datausage.v2.ExportTeamsDetailedUsageRequest
	3, // 8: com.coralogix.datausage.v2.InternalDataUsageService.ExportTeamsDetailedUsage:output_type -> com.coralogix.datausage.v2.ExportTeamsDetailedUsageResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_com_coralogix_datausage_v2_internal_data_usage_service_proto_init() }
func file_com_coralogix_datausage_v2_internal_data_usage_service_proto_init() {
	if File_com_coralogix_datausage_v2_internal_data_usage_service_proto != nil {
		return
	}
	file_com_coralogix_datausage_v2_data_usage_proto_init()
	file_com_coralogix_datausage_v2_internal_data_usage_service_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogix_datausage_v2_internal_data_usage_service_proto_goTypes,
		DependencyIndexes: file_com_coralogix_datausage_v2_internal_data_usage_service_proto_depIdxs,
		MessageInfos:      file_com_coralogix_datausage_v2_internal_data_usage_service_proto_msgTypes,
	}.Build()
	File_com_coralogix_datausage_v2_internal_data_usage_service_proto = out.File
	file_com_coralogix_datausage_v2_internal_data_usage_service_proto_rawDesc = nil
	file_com_coralogix_datausage_v2_internal_data_usage_service_proto_goTypes = nil
	file_com_coralogix_datausage_v2_internal_data_usage_service_proto_depIdxs = nil
}
