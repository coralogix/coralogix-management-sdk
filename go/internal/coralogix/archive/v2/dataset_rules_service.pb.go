// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: com/coralogix/archive/dataset/v2/dataset_rules_service.proto

package v2

import (
	_ "github.com/coralogix/coralogix-management-sdk/go/internal/coralogix/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataPillar int32

const (
	DataPillar_DATA_PILLAR_UNSPECIFIED DataPillar = 0
	DataPillar_DATA_PILLAR_LOG         DataPillar = 1
	DataPillar_DATA_PILLAR_SPAN        DataPillar = 2
)

// Enum value maps for DataPillar.
var (
	DataPillar_name = map[int32]string{
		0: "DATA_PILLAR_UNSPECIFIED",
		1: "DATA_PILLAR_LOG",
		2: "DATA_PILLAR_SPAN",
	}
	DataPillar_value = map[string]int32{
		"DATA_PILLAR_UNSPECIFIED": 0,
		"DATA_PILLAR_LOG":         1,
		"DATA_PILLAR_SPAN":        2,
	}
)

func (x DataPillar) Enum() *DataPillar {
	p := new(DataPillar)
	*p = x
	return p
}

func (x DataPillar) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataPillar) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_enumTypes[0].Descriptor()
}

func (DataPillar) Type() protoreflect.EnumType {
	return &file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_enumTypes[0]
}

func (x DataPillar) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataPillar.Descriptor instead.
func (DataPillar) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDescGZIP(), []int{0}
}

type SetSchemaRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaRule    *SchemaRule            `protobuf:"bytes,1,opt,name=schema_rule,json=schemaRule,proto3" json:"schema_rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSchemaRuleRequest) Reset() {
	*x = SetSchemaRuleRequest{}
	mi := &file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSchemaRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSchemaRuleRequest) ProtoMessage() {}

func (x *SetSchemaRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSchemaRuleRequest.ProtoReflect.Descriptor instead.
func (*SetSchemaRuleRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDescGZIP(), []int{0}
}

func (x *SetSchemaRuleRequest) GetSchemaRule() *SchemaRule {
	if x != nil {
		return x.SchemaRule
	}
	return nil
}

type SetSchemaRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          *Rule                  `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSchemaRuleResponse) Reset() {
	*x = SetSchemaRuleResponse{}
	mi := &file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSchemaRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSchemaRuleResponse) ProtoMessage() {}

func (x *SetSchemaRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSchemaRuleResponse.ProtoReflect.Descriptor instead.
func (*SetSchemaRuleResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDescGZIP(), []int{1}
}

func (x *SetSchemaRuleResponse) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type SchemaRule struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SchemaTemplateIds []string               `protobuf:"bytes,1,rep,name=schema_template_ids,json=schemaTemplateIds,proto3" json:"schema_template_ids,omitempty"`
	DataPillar        DataPillar             `protobuf:"varint,2,opt,name=data_pillar,json=dataPillar,proto3,enum=com.coralogix.archive.dataset.v2.DataPillar" json:"data_pillar,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SchemaRule) Reset() {
	*x = SchemaRule{}
	mi := &file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchemaRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaRule) ProtoMessage() {}

func (x *SchemaRule) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaRule.ProtoReflect.Descriptor instead.
func (*SchemaRule) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDescGZIP(), []int{2}
}

func (x *SchemaRule) GetSchemaTemplateIds() []string {
	if x != nil {
		return x.SchemaTemplateIds
	}
	return nil
}

func (x *SchemaRule) GetDataPillar() DataPillar {
	if x != nil {
		return x.DataPillar
	}
	return DataPillar_DATA_PILLAR_UNSPECIFIED
}

type GetSchemaRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataPillar    DataPillar             `protobuf:"varint,1,opt,name=data_pillar,json=dataPillar,proto3,enum=com.coralogix.archive.dataset.v2.DataPillar" json:"data_pillar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchemaRuleRequest) Reset() {
	*x = GetSchemaRuleRequest{}
	mi := &file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchemaRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaRuleRequest) ProtoMessage() {}

func (x *GetSchemaRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaRuleRequest.ProtoReflect.Descriptor instead.
func (*GetSchemaRuleRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetSchemaRuleRequest) GetDataPillar() DataPillar {
	if x != nil {
		return x.DataPillar
	}
	return DataPillar_DATA_PILLAR_UNSPECIFIED
}

type GetSchemaRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          *Rule                  `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchemaRuleResponse) Reset() {
	*x = GetSchemaRuleResponse{}
	mi := &file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchemaRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaRuleResponse) ProtoMessage() {}

func (x *GetSchemaRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaRuleResponse.ProtoReflect.Descriptor instead.
func (*GetSchemaRuleResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetSchemaRuleResponse) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type Rule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SchemaRule    *SchemaRule            `protobuf:"bytes,2,opt,name=schema_rule,json=schemaRule,proto3" json:"schema_rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rule) Reset() {
	*x = Rule{}
	mi := &file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDescGZIP(), []int{5}
}

func (x *Rule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Rule) GetSchemaRule() *SchemaRule {
	if x != nil {
		return x.SchemaRule
	}
	return nil
}

var File_com_coralogix_archive_dataset_v2_dataset_rules_service_proto protoreflect.FileDescriptor

const file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDesc = "" +
	"\n" +
	"<com/coralogix/archive/dataset/v2/dataset_rules_service.proto\x12 com.coralogix.archive.dataset.v2\x1a'com/coralogix/common/v1/audit_log.proto\"e\n" +
	"\x14SetSchemaRuleRequest\x12M\n" +
	"\vschema_rule\x18\x01 \x01(\v2,.com.coralogix.archive.dataset.v2.SchemaRuleR\n" +
	"schemaRule\"S\n" +
	"\x15SetSchemaRuleResponse\x12:\n" +
	"\x04rule\x18\x01 \x01(\v2&.com.coralogix.archive.dataset.v2.RuleR\x04rule\"\x8b\x01\n" +
	"\n" +
	"SchemaRule\x12.\n" +
	"\x13schema_template_ids\x18\x01 \x03(\tR\x11schemaTemplateIds\x12M\n" +
	"\vdata_pillar\x18\x02 \x01(\x0e2,.com.coralogix.archive.dataset.v2.DataPillarR\n" +
	"dataPillar\"e\n" +
	"\x14GetSchemaRuleRequest\x12M\n" +
	"\vdata_pillar\x18\x01 \x01(\x0e2,.com.coralogix.archive.dataset.v2.DataPillarR\n" +
	"dataPillar\"S\n" +
	"\x15GetSchemaRuleResponse\x12:\n" +
	"\x04rule\x18\x01 \x01(\v2&.com.coralogix.archive.dataset.v2.RuleR\x04rule\"e\n" +
	"\x04Rule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12M\n" +
	"\vschema_rule\x18\x02 \x01(\v2,.com.coralogix.archive.dataset.v2.SchemaRuleR\n" +
	"schemaRule*T\n" +
	"\n" +
	"DataPillar\x12\x1b\n" +
	"\x17DATA_PILLAR_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fDATA_PILLAR_LOG\x10\x01\x12\x14\n" +
	"\x10DATA_PILLAR_SPAN\x10\x022\xdf\x02\n" +
	"\x11SchemaRuleService\x12\xa3\x01\n" +
	"\rSetSchemaRule\x126.com.coralogix.archive.dataset.v2.SetSchemaRuleRequest\x1a7.com.coralogix.archive.dataset.v2.SetSchemaRuleResponse\"!¸\x02\x1d\n" +
	"\x1bSet dataset rule definition\x12\xa3\x01\n" +
	"\rGetSchemaRule\x126.com.coralogix.archive.dataset.v2.GetSchemaRuleRequest\x1a7.com.coralogix.archive.dataset.v2.GetSchemaRuleResponse\"!¸\x02\x1d\n" +
	"\x1bSet dataset rule definitionb\x06proto3"

var (
	file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDescOnce sync.Once
	file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDescData []byte
)

func file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDescGZIP() []byte {
	file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDescOnce.Do(func() {
		file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDesc), len(file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDesc)))
	})
	return file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDescData
}

var file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_goTypes = []any{
	(DataPillar)(0),               // 0: com.coralogix.archive.dataset.v2.DataPillar
	(*SetSchemaRuleRequest)(nil),  // 1: com.coralogix.archive.dataset.v2.SetSchemaRuleRequest
	(*SetSchemaRuleResponse)(nil), // 2: com.coralogix.archive.dataset.v2.SetSchemaRuleResponse
	(*SchemaRule)(nil),            // 3: com.coralogix.archive.dataset.v2.SchemaRule
	(*GetSchemaRuleRequest)(nil),  // 4: com.coralogix.archive.dataset.v2.GetSchemaRuleRequest
	(*GetSchemaRuleResponse)(nil), // 5: com.coralogix.archive.dataset.v2.GetSchemaRuleResponse
	(*Rule)(nil),                  // 6: com.coralogix.archive.dataset.v2.Rule
}
var file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_depIdxs = []int32{
	3, // 0: com.coralogix.archive.dataset.v2.SetSchemaRuleRequest.schema_rule:type_name -> com.coralogix.archive.dataset.v2.SchemaRule
	6, // 1: com.coralogix.archive.dataset.v2.SetSchemaRuleResponse.rule:type_name -> com.coralogix.archive.dataset.v2.Rule
	0, // 2: com.coralogix.archive.dataset.v2.SchemaRule.data_pillar:type_name -> com.coralogix.archive.dataset.v2.DataPillar
	0, // 3: com.coralogix.archive.dataset.v2.GetSchemaRuleRequest.data_pillar:type_name -> com.coralogix.archive.dataset.v2.DataPillar
	6, // 4: com.coralogix.archive.dataset.v2.GetSchemaRuleResponse.rule:type_name -> com.coralogix.archive.dataset.v2.Rule
	3, // 5: com.coralogix.archive.dataset.v2.Rule.schema_rule:type_name -> com.coralogix.archive.dataset.v2.SchemaRule
	1, // 6: com.coralogix.archive.dataset.v2.SchemaRuleService.SetSchemaRule:input_type -> com.coralogix.archive.dataset.v2.SetSchemaRuleRequest
	4, // 7: com.coralogix.archive.dataset.v2.SchemaRuleService.GetSchemaRule:input_type -> com.coralogix.archive.dataset.v2.GetSchemaRuleRequest
	2, // 8: com.coralogix.archive.dataset.v2.SchemaRuleService.SetSchemaRule:output_type -> com.coralogix.archive.dataset.v2.SetSchemaRuleResponse
	5, // 9: com.coralogix.archive.dataset.v2.SchemaRuleService.GetSchemaRule:output_type -> com.coralogix.archive.dataset.v2.GetSchemaRuleResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_init() }
func file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_init() {
	if File_com_coralogix_archive_dataset_v2_dataset_rules_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDesc), len(file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_goTypes,
		DependencyIndexes: file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_depIdxs,
		EnumInfos:         file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_enumTypes,
		MessageInfos:      file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_msgTypes,
	}.Build()
	File_com_coralogix_archive_dataset_v2_dataset_rules_service_proto = out.File
	file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_goTypes = nil
	file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_depIdxs = nil
}
