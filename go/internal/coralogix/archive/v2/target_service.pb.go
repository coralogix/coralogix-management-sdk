// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: com/coralogix/archive/v2/target_service.proto

package v2

import (
	_ "github.com/coralogix/coralogix-management-sdk/go/internal/coralogixapis/common/v1"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv3/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTargetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTargetRequest) Reset() {
	*x = GetTargetRequest{}
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetRequest) ProtoMessage() {}

func (x *GetTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetRequest.ProtoReflect.Descriptor instead.
func (*GetTargetRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_target_service_proto_rawDescGZIP(), []int{0}
}

type GetTargetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        *Target                `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTargetResponse) Reset() {
	*x = GetTargetResponse{}
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTargetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetResponse) ProtoMessage() {}

func (x *GetTargetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetResponse.ProtoReflect.Descriptor instead.
func (*GetTargetResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_target_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetTargetResponse) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type SetTargetRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	IsActive bool                   `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Types that are valid to be assigned to TargetSpec:
	//
	//	*SetTargetRequest_S3
	//	*SetTargetRequest_IbmCos
	TargetSpec    isSetTargetRequest_TargetSpec `protobuf_oneof:"target_spec"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTargetRequest) Reset() {
	*x = SetTargetRequest{}
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTargetRequest) ProtoMessage() {}

func (x *SetTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTargetRequest.ProtoReflect.Descriptor instead.
func (*SetTargetRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_target_service_proto_rawDescGZIP(), []int{2}
}

func (x *SetTargetRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *SetTargetRequest) GetTargetSpec() isSetTargetRequest_TargetSpec {
	if x != nil {
		return x.TargetSpec
	}
	return nil
}

func (x *SetTargetRequest) GetS3() *S3TargetSpec {
	if x != nil {
		if x, ok := x.TargetSpec.(*SetTargetRequest_S3); ok {
			return x.S3
		}
	}
	return nil
}

func (x *SetTargetRequest) GetIbmCos() *IBMCosTargetSpec {
	if x != nil {
		if x, ok := x.TargetSpec.(*SetTargetRequest_IbmCos); ok {
			return x.IbmCos
		}
	}
	return nil
}

type isSetTargetRequest_TargetSpec interface {
	isSetTargetRequest_TargetSpec()
}

type SetTargetRequest_S3 struct {
	S3 *S3TargetSpec `protobuf:"bytes,2,opt,name=s3,proto3,oneof"`
}

type SetTargetRequest_IbmCos struct {
	IbmCos *IBMCosTargetSpec `protobuf:"bytes,3,opt,name=ibm_cos,json=ibmCos,proto3,oneof"`
}

func (*SetTargetRequest_S3) isSetTargetRequest_TargetSpec() {}

func (*SetTargetRequest_IbmCos) isSetTargetRequest_TargetSpec() {}

type SetTargetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        *Target                `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTargetResponse) Reset() {
	*x = SetTargetResponse{}
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTargetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTargetResponse) ProtoMessage() {}

func (x *SetTargetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTargetResponse.ProtoReflect.Descriptor instead.
func (*SetTargetResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_target_service_proto_rawDescGZIP(), []int{3}
}

func (x *SetTargetResponse) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type SetExternalTargetRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	IsActive bool                   `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Types that are valid to be assigned to TargetSpec:
	//
	//	*SetExternalTargetRequest_S3
	//	*SetExternalTargetRequest_IbmCos
	TargetSpec    isSetExternalTargetRequest_TargetSpec `protobuf_oneof:"target_spec"`
	CompanyId     uint32                                `protobuf:"varint,4,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetExternalTargetRequest) Reset() {
	*x = SetExternalTargetRequest{}
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetExternalTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetExternalTargetRequest) ProtoMessage() {}

func (x *SetExternalTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetExternalTargetRequest.ProtoReflect.Descriptor instead.
func (*SetExternalTargetRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_target_service_proto_rawDescGZIP(), []int{4}
}

func (x *SetExternalTargetRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *SetExternalTargetRequest) GetTargetSpec() isSetExternalTargetRequest_TargetSpec {
	if x != nil {
		return x.TargetSpec
	}
	return nil
}

func (x *SetExternalTargetRequest) GetS3() *S3TargetSpec {
	if x != nil {
		if x, ok := x.TargetSpec.(*SetExternalTargetRequest_S3); ok {
			return x.S3
		}
	}
	return nil
}

func (x *SetExternalTargetRequest) GetIbmCos() *IBMCosTargetSpec {
	if x != nil {
		if x, ok := x.TargetSpec.(*SetExternalTargetRequest_IbmCos); ok {
			return x.IbmCos
		}
	}
	return nil
}

func (x *SetExternalTargetRequest) GetCompanyId() uint32 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type isSetExternalTargetRequest_TargetSpec interface {
	isSetExternalTargetRequest_TargetSpec()
}

type SetExternalTargetRequest_S3 struct {
	S3 *S3TargetSpec `protobuf:"bytes,2,opt,name=s3,proto3,oneof"`
}

type SetExternalTargetRequest_IbmCos struct {
	IbmCos *IBMCosTargetSpec `protobuf:"bytes,3,opt,name=ibm_cos,json=ibmCos,proto3,oneof"`
}

func (*SetExternalTargetRequest_S3) isSetExternalTargetRequest_TargetSpec() {}

func (*SetExternalTargetRequest_IbmCos) isSetExternalTargetRequest_TargetSpec() {}

type SetExternalTargetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        *Target                `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetExternalTargetResponse) Reset() {
	*x = SetExternalTargetResponse{}
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetExternalTargetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetExternalTargetResponse) ProtoMessage() {}

func (x *SetExternalTargetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetExternalTargetResponse.ProtoReflect.Descriptor instead.
func (*SetExternalTargetResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_target_service_proto_rawDescGZIP(), []int{5}
}

func (x *SetExternalTargetResponse) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type CompanyArchiveConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CompanyId         uint32                 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	ArchiveConfigured bool                   `protobuf:"varint,2,opt,name=archive_configured,json=archiveConfigured,proto3" json:"archive_configured,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CompanyArchiveConfig) Reset() {
	*x = CompanyArchiveConfig{}
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompanyArchiveConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyArchiveConfig) ProtoMessage() {}

func (x *CompanyArchiveConfig) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyArchiveConfig.ProtoReflect.Descriptor instead.
func (*CompanyArchiveConfig) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_target_service_proto_rawDescGZIP(), []int{6}
}

func (x *CompanyArchiveConfig) GetCompanyId() uint32 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *CompanyArchiveConfig) GetArchiveConfigured() bool {
	if x != nil {
		return x.ArchiveConfigured
	}
	return false
}

type ValidateTargetRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	IsActive bool                   `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Types that are valid to be assigned to TargetSpec:
	//
	//	*ValidateTargetRequest_S3
	//	*ValidateTargetRequest_IbmCos
	TargetSpec    isValidateTargetRequest_TargetSpec `protobuf_oneof:"target_spec"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateTargetRequest) Reset() {
	*x = ValidateTargetRequest{}
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTargetRequest) ProtoMessage() {}

func (x *ValidateTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTargetRequest.ProtoReflect.Descriptor instead.
func (*ValidateTargetRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_target_service_proto_rawDescGZIP(), []int{7}
}

func (x *ValidateTargetRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *ValidateTargetRequest) GetTargetSpec() isValidateTargetRequest_TargetSpec {
	if x != nil {
		return x.TargetSpec
	}
	return nil
}

func (x *ValidateTargetRequest) GetS3() *S3TargetSpec {
	if x != nil {
		if x, ok := x.TargetSpec.(*ValidateTargetRequest_S3); ok {
			return x.S3
		}
	}
	return nil
}

func (x *ValidateTargetRequest) GetIbmCos() *IBMCosTargetSpec {
	if x != nil {
		if x, ok := x.TargetSpec.(*ValidateTargetRequest_IbmCos); ok {
			return x.IbmCos
		}
	}
	return nil
}

type isValidateTargetRequest_TargetSpec interface {
	isValidateTargetRequest_TargetSpec()
}

type ValidateTargetRequest_S3 struct {
	S3 *S3TargetSpec `protobuf:"bytes,2,opt,name=s3,proto3,oneof"`
}

type ValidateTargetRequest_IbmCos struct {
	IbmCos *IBMCosTargetSpec `protobuf:"bytes,3,opt,name=ibm_cos,json=ibmCos,proto3,oneof"`
}

func (*ValidateTargetRequest_S3) isValidateTargetRequest_TargetSpec() {}

func (*ValidateTargetRequest_IbmCos) isValidateTargetRequest_TargetSpec() {}

type ValidateTargetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsValid       bool                   `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateTargetResponse) Reset() {
	*x = ValidateTargetResponse{}
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateTargetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTargetResponse) ProtoMessage() {}

func (x *ValidateTargetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTargetResponse.ProtoReflect.Descriptor instead.
func (*ValidateTargetResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_target_service_proto_rawDescGZIP(), []int{8}
}

func (x *ValidateTargetResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type S3TargetServiceGetTargetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3TargetServiceGetTargetRequest) Reset() {
	*x = S3TargetServiceGetTargetRequest{}
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3TargetServiceGetTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3TargetServiceGetTargetRequest) ProtoMessage() {}

func (x *S3TargetServiceGetTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3TargetServiceGetTargetRequest.ProtoReflect.Descriptor instead.
func (*S3TargetServiceGetTargetRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_target_service_proto_rawDescGZIP(), []int{9}
}

type S3TargetServiceGetTargetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        *Target                `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3TargetServiceGetTargetResponse) Reset() {
	*x = S3TargetServiceGetTargetResponse{}
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3TargetServiceGetTargetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3TargetServiceGetTargetResponse) ProtoMessage() {}

func (x *S3TargetServiceGetTargetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3TargetServiceGetTargetResponse.ProtoReflect.Descriptor instead.
func (*S3TargetServiceGetTargetResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_target_service_proto_rawDescGZIP(), []int{10}
}

func (x *S3TargetServiceGetTargetResponse) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type S3TargetServiceSetTargetRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	IsActive bool                   `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Types that are valid to be assigned to TargetSpec:
	//
	//	*S3TargetServiceSetTargetRequest_S3
	TargetSpec    isS3TargetServiceSetTargetRequest_TargetSpec `protobuf_oneof:"target_spec"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3TargetServiceSetTargetRequest) Reset() {
	*x = S3TargetServiceSetTargetRequest{}
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3TargetServiceSetTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3TargetServiceSetTargetRequest) ProtoMessage() {}

func (x *S3TargetServiceSetTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3TargetServiceSetTargetRequest.ProtoReflect.Descriptor instead.
func (*S3TargetServiceSetTargetRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_target_service_proto_rawDescGZIP(), []int{11}
}

func (x *S3TargetServiceSetTargetRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *S3TargetServiceSetTargetRequest) GetTargetSpec() isS3TargetServiceSetTargetRequest_TargetSpec {
	if x != nil {
		return x.TargetSpec
	}
	return nil
}

func (x *S3TargetServiceSetTargetRequest) GetS3() *S3TargetSpec {
	if x != nil {
		if x, ok := x.TargetSpec.(*S3TargetServiceSetTargetRequest_S3); ok {
			return x.S3
		}
	}
	return nil
}

type isS3TargetServiceSetTargetRequest_TargetSpec interface {
	isS3TargetServiceSetTargetRequest_TargetSpec()
}

type S3TargetServiceSetTargetRequest_S3 struct {
	S3 *S3TargetSpec `protobuf:"bytes,2,opt,name=s3,proto3,oneof"`
}

func (*S3TargetServiceSetTargetRequest_S3) isS3TargetServiceSetTargetRequest_TargetSpec() {}

type S3TargetServiceSetTargetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        *Target                `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3TargetServiceSetTargetResponse) Reset() {
	*x = S3TargetServiceSetTargetResponse{}
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3TargetServiceSetTargetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3TargetServiceSetTargetResponse) ProtoMessage() {}

func (x *S3TargetServiceSetTargetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_target_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3TargetServiceSetTargetResponse.ProtoReflect.Descriptor instead.
func (*S3TargetServiceSetTargetResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_target_service_proto_rawDescGZIP(), []int{12}
}

func (x *S3TargetServiceSetTargetResponse) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

var File_com_coralogix_archive_v2_target_service_proto protoreflect.FileDescriptor

const file_com_coralogix_archive_v2_target_service_proto_rawDesc = "" +
	"\n" +
	"-com/coralogix/archive/v2/target_service.proto\x12\x18com.coralogix.archive.v2\x1a%com/coralogix/archive/v2/target.proto\x1a+com/coralogixapis/common/v1/audit_log.proto\x1a.protoc-gen-openapiv3/options/annotations.proto\x1a\x1cgoogle/api/annotations.proto\"\x12\n" +
	"\x10GetTargetRequest\"\xa9\x02\n" +
	"\x11GetTargetResponse\x128\n" +
	"\x06target\x18\x01 \x01(\v2 .com.coralogix.archive.v2.TargetR\x06target:\xd9\x01\x9aA\xd5\x01\n" +
	"b*\x13Get Target Response2BThis data structure is used to retrieve a storage target for logs.\xd2\x01\x06target*o\n" +
	"\x1cFind out more about archives\x12Ohttps://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/\"\xb2\x03\n" +
	"\x10SetTargetRequest\x12&\n" +
	"\tis_active\x18\x01 \x01(\bB\t\x9aA\x06J\x04trueR\bisActive\x128\n" +
	"\x02s3\x18\x02 \x01(\v2&.com.coralogix.archive.v2.S3TargetSpecH\x00R\x02s3\x12E\n" +
	"\aibm_cos\x18\x03 \x01(\v2*.com.coralogix.archive.v2.IBMCosTargetSpecH\x00R\x06ibmCos:\xe5\x01\x9aA\xe1\x01\n" +
	"n*\x13Set Target Response2=This data structure is used to set a storage target for logs.\xd2\x01\tis_active\xd2\x01\vtarget_spec*o\n" +
	"\x1cFind out more about archives\x12Ohttps://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/B\r\n" +
	"\vtarget_spec\"\xaf\x02\n" +
	"\x11SetTargetResponse\x128\n" +
	"\x06target\x18\x01 \x01(\v2 .com.coralogix.archive.v2.TargetR\x06target:\xdf\x01\x9aA\xdb\x01\n" +
	"h*\x13Set Target Response2HThis data structure is obtained after setting a storage target for logs.\xd2\x01\x06target*o\n" +
	"\x1cFind out more about archives\x12Ohttps://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/\"\x8f\x04\n" +
	"\x18SetExternalTargetRequest\x12&\n" +
	"\tis_active\x18\x01 \x01(\bB\t\x9aA\x06J\x04trueR\bisActive\x128\n" +
	"\x02s3\x18\x02 \x01(\v2&.com.coralogix.archive.v2.S3TargetSpecH\x00R\x02s3\x12E\n" +
	"\aibm_cos\x18\x03 \x01(\v2*.com.coralogix.archive.v2.IBMCosTargetSpecH\x00R\x06ibmCos\x12(\n" +
	"\n" +
	"company_id\x18\x04 \x01(\rB\t\x9aA\x06J\x04trueR\tcompanyId:\x90\x02\x9aA\x8c\x02\n" +
	"\x98\x01*\x1bSet External Target Request2RThis data structure is obtained after setting an external storage target for logs.\xd2\x01\tis_active\xd2\x01\vtarget_spec\xd2\x01\n" +
	"company_id*o\n" +
	"\x1cFind out more about archives\x12Ohttps://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/B\r\n" +
	"\vtarget_spec\"\xc1\x02\n" +
	"\x19SetExternalTargetResponse\x128\n" +
	"\x06target\x18\x01 \x01(\v2 .com.coralogix.archive.v2.TargetR\x06target:\xe9\x01\x9aA\xe5\x01\n" +
	"r*\x13Set Target Response2RThis data structure is obtained after setting an external storage target for logs.\xd2\x01\x06target*o\n" +
	"\x1cFind out more about archives\x12Ohttps://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/\"\xfe\x02\n" +
	"\x14CompanyArchiveConfig\x12+\n" +
	"\n" +
	"company_id\x18\x01 \x01(\rB\f\x9aA\tJ\a1234567R\tcompanyId\x128\n" +
	"\x12archive_configured\x18\x02 \x01(\bB\t\x9aA\x06J\x04trueR\x11archiveConfigured:\xfe\x01\x9aA\xfa\x01\n" +
	"\x86\x01*\x15Common Archive Config2dThis data structure represents a common archive configuration for a company within the organization.\xd2\x01\x06target*o\n" +
	"\x1cFind out more about archives\x12Ohttps://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/\"\xb1\x03\n" +
	"\x15ValidateTargetRequest\x12\x1b\n" +
	"\tis_active\x18\x01 \x01(\bR\bisActive\x128\n" +
	"\x02s3\x18\x02 \x01(\v2&.com.coralogix.archive.v2.S3TargetSpecH\x00R\x02s3\x12E\n" +
	"\aibm_cos\x18\x03 \x01(\v2*.com.coralogix.archive.v2.IBMCosTargetSpecH\x00R\x06ibmCos:\xea\x01\x9aA\xe6\x01\n" +
	"s*\x13Set Target Response2BThis data structure is used to validate a storage target for logs.\xd2\x01\tis_active\xd2\x01\vtarget_spec*o\n" +
	"\x1cFind out more about archives\x12Ohttps://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/B\r\n" +
	"\vtarget_spec\"\xaa\x02\n" +
	"\x16ValidateTargetResponse\x12$\n" +
	"\bis_valid\x18\x01 \x01(\bB\t\x9aA\x06J\x04trueR\aisValid:\xe9\x01\x9aA\xe5\x01\n" +
	"r*\x18Validate Target Response2KThis data structure is obtained after validating a storage target for logs.\xd2\x01\bis_valid*o\n" +
	"\x1cFind out more about archives\x12Ohttps://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/\"!\n" +
	"\x1fS3TargetServiceGetTargetRequest\"\xb8\x02\n" +
	" S3TargetServiceGetTargetResponse\x128\n" +
	"\x06target\x18\x01 \x01(\v2 .com.coralogix.archive.v2.TargetR\x06target:\xd9\x01\x9aA\xd5\x01\n" +
	"b*\x13Get Target Response2BThis data structure is used to retrieve a storage target for logs.\xd2\x01\x06target*o\n" +
	"\x1cFind out more about archives\x12Ohttps://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/\"\xfa\x02\n" +
	"\x1fS3TargetServiceSetTargetRequest\x12&\n" +
	"\tis_active\x18\x01 \x01(\bB\t\x9aA\x06J\x04trueR\bisActive\x128\n" +
	"\x02s3\x18\x02 \x01(\v2&.com.coralogix.archive.v2.S3TargetSpecH\x00R\x02s3:\xe5\x01\x9aA\xe1\x01\n" +
	"n*\x13Set Target Response2=This data structure is used to set a storage target for logs.\xd2\x01\tis_active\xd2\x01\vtarget_spec*o\n" +
	"\x1cFind out more about archives\x12Ohttps://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/B\r\n" +
	"\vtarget_spec\"\xbe\x02\n" +
	" S3TargetServiceSetTargetResponse\x128\n" +
	"\x06target\x18\x01 \x01(\v2 .com.coralogix.archive.v2.TargetR\x06target:\xdf\x01\x9aA\xdb\x01\n" +
	"h*\x13Set Target Response2HThis data structure is obtained after setting a storage target for logs.\xd2\x01\x06target*o\n" +
	"\x1cFind out more about archives\x12Ohttps://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/2\xef\a\n" +
	"\rTargetService\x12\xfd\x01\n" +
	"\tGetTarget\x12*.com.coralogix.archive.v2.GetTargetRequest\x1a+.com.coralogix.archive.v2.GetTargetResponse\"\x96\x01\x9aAq\n" +
	"\x0eTarget Service\x12\n" +
	"Get targetJ\x14\n" +
	"\x03400\x12\r\n" +
	"\vBad RequestJ\x1d\n" +
	"\x03401\x12\x16\n" +
	"\x14Unauthorized requestJ\x1e\n" +
	"\x03500\x12\x17\n" +
	"\x15Internal server errorʸ\x02\f\n" +
	"\n" +
	"Get target\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/v2/target\x12\x80\x02\n" +
	"\tSetTarget\x12*.com.coralogix.archive.v2.SetTargetRequest\x1a+.com.coralogix.archive.v2.SetTargetResponse\"\x99\x01\x9aAq\n" +
	"\x0eTarget Service\x12\n" +
	"Set targetJ\x14\n" +
	"\x03400\x12\r\n" +
	"\vBad RequestJ\x1d\n" +
	"\x03401\x12\x16\n" +
	"\x14Unauthorized requestJ\x1e\n" +
	"\x03500\x12\x17\n" +
	"\x15Internal server errorʸ\x02\f\n" +
	"\n" +
	"Set target\x82\xd3\xe4\x93\x02\x0f:\x01*\"\n" +
	"/v2/target\x12\xa2\x02\n" +
	"\x0eValidateTarget\x12/.com.coralogix.archive.v2.ValidateTargetRequest\x1a0.com.coralogix.archive.v2.ValidateTargetResponse\"\xac\x01\x9aAv\n" +
	"\x0eTarget Service\x12\x0fValidate targetJ\x14\n" +
	"\x03400\x12\r\n" +
	"\vBad RequestJ\x1d\n" +
	"\x03401\x12\x16\n" +
	"\x14Unauthorized requestJ\x1e\n" +
	"\x03500\x12\x17\n" +
	"\x15Internal server errorʸ\x02\x11\n" +
	"\x0fValidate target\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v2/target:validate\x1a\xb5\x01\x9aA\xb1\x01\n" +
	"\x0eTarget Service\x12.View and manage your storage targets for logs.\x1ao\n" +
	"\x1cFind out more about archives\x12Ohttps://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/2\x88\x06\n" +
	"\x0fS3TargetService\x12\x9b\x02\n" +
	"\tGetTarget\x129.com.coralogix.archive.v2.S3TargetServiceGetTargetRequest\x1a:.com.coralogix.archive.v2.S3TargetServiceGetTargetResponse\"\x96\x01\x9aAq\n" +
	"\x0eTarget Service\x12\n" +
	"Get targetJ\x14\n" +
	"\x03400\x12\r\n" +
	"\vBad RequestJ\x1d\n" +
	"\x03401\x12\x16\n" +
	"\x14Unauthorized requestJ\x1e\n" +
	"\x03500\x12\x17\n" +
	"\x15Internal server errorʸ\x02\f\n" +
	"\n" +
	"Get target\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/v2/target\x12\x9e\x02\n" +
	"\tSetTarget\x129.com.coralogix.archive.v2.S3TargetServiceSetTargetRequest\x1a:.com.coralogix.archive.v2.S3TargetServiceSetTargetResponse\"\x99\x01\x9aAq\n" +
	"\x0eTarget Service\x12\n" +
	"Set targetJ\x14\n" +
	"\x03400\x12\r\n" +
	"\vBad RequestJ\x1d\n" +
	"\x03401\x12\x16\n" +
	"\x14Unauthorized requestJ\x1e\n" +
	"\x03500\x12\x17\n" +
	"\x15Internal server errorʸ\x02\f\n" +
	"\n" +
	"Set target\x82\xd3\xe4\x93\x02\x0f:\x01*\"\n" +
	"/v2/target\x1a\xb5\x01\x9aA\xb1\x01\n" +
	"\x0eTarget Service\x12.View and manage your storage targets for logs.\x1ao\n" +
	"\x1cFind out more about archives\x12Ohttps://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/b\x06proto3"

var (
	file_com_coralogix_archive_v2_target_service_proto_rawDescOnce sync.Once
	file_com_coralogix_archive_v2_target_service_proto_rawDescData []byte
)

func file_com_coralogix_archive_v2_target_service_proto_rawDescGZIP() []byte {
	file_com_coralogix_archive_v2_target_service_proto_rawDescOnce.Do(func() {
		file_com_coralogix_archive_v2_target_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_coralogix_archive_v2_target_service_proto_rawDesc), len(file_com_coralogix_archive_v2_target_service_proto_rawDesc)))
	})
	return file_com_coralogix_archive_v2_target_service_proto_rawDescData
}

var file_com_coralogix_archive_v2_target_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_com_coralogix_archive_v2_target_service_proto_goTypes = []any{
	(*GetTargetRequest)(nil),                 // 0: com.coralogix.archive.v2.GetTargetRequest
	(*GetTargetResponse)(nil),                // 1: com.coralogix.archive.v2.GetTargetResponse
	(*SetTargetRequest)(nil),                 // 2: com.coralogix.archive.v2.SetTargetRequest
	(*SetTargetResponse)(nil),                // 3: com.coralogix.archive.v2.SetTargetResponse
	(*SetExternalTargetRequest)(nil),         // 4: com.coralogix.archive.v2.SetExternalTargetRequest
	(*SetExternalTargetResponse)(nil),        // 5: com.coralogix.archive.v2.SetExternalTargetResponse
	(*CompanyArchiveConfig)(nil),             // 6: com.coralogix.archive.v2.CompanyArchiveConfig
	(*ValidateTargetRequest)(nil),            // 7: com.coralogix.archive.v2.ValidateTargetRequest
	(*ValidateTargetResponse)(nil),           // 8: com.coralogix.archive.v2.ValidateTargetResponse
	(*S3TargetServiceGetTargetRequest)(nil),  // 9: com.coralogix.archive.v2.S3TargetServiceGetTargetRequest
	(*S3TargetServiceGetTargetResponse)(nil), // 10: com.coralogix.archive.v2.S3TargetServiceGetTargetResponse
	(*S3TargetServiceSetTargetRequest)(nil),  // 11: com.coralogix.archive.v2.S3TargetServiceSetTargetRequest
	(*S3TargetServiceSetTargetResponse)(nil), // 12: com.coralogix.archive.v2.S3TargetServiceSetTargetResponse
	(*Target)(nil),                           // 13: com.coralogix.archive.v2.Target
	(*S3TargetSpec)(nil),                     // 14: com.coralogix.archive.v2.S3TargetSpec
	(*IBMCosTargetSpec)(nil),                 // 15: com.coralogix.archive.v2.IBMCosTargetSpec
}
var file_com_coralogix_archive_v2_target_service_proto_depIdxs = []int32{
	13, // 0: com.coralogix.archive.v2.GetTargetResponse.target:type_name -> com.coralogix.archive.v2.Target
	14, // 1: com.coralogix.archive.v2.SetTargetRequest.s3:type_name -> com.coralogix.archive.v2.S3TargetSpec
	15, // 2: com.coralogix.archive.v2.SetTargetRequest.ibm_cos:type_name -> com.coralogix.archive.v2.IBMCosTargetSpec
	13, // 3: com.coralogix.archive.v2.SetTargetResponse.target:type_name -> com.coralogix.archive.v2.Target
	14, // 4: com.coralogix.archive.v2.SetExternalTargetRequest.s3:type_name -> com.coralogix.archive.v2.S3TargetSpec
	15, // 5: com.coralogix.archive.v2.SetExternalTargetRequest.ibm_cos:type_name -> com.coralogix.archive.v2.IBMCosTargetSpec
	13, // 6: com.coralogix.archive.v2.SetExternalTargetResponse.target:type_name -> com.coralogix.archive.v2.Target
	14, // 7: com.coralogix.archive.v2.ValidateTargetRequest.s3:type_name -> com.coralogix.archive.v2.S3TargetSpec
	15, // 8: com.coralogix.archive.v2.ValidateTargetRequest.ibm_cos:type_name -> com.coralogix.archive.v2.IBMCosTargetSpec
	13, // 9: com.coralogix.archive.v2.S3TargetServiceGetTargetResponse.target:type_name -> com.coralogix.archive.v2.Target
	14, // 10: com.coralogix.archive.v2.S3TargetServiceSetTargetRequest.s3:type_name -> com.coralogix.archive.v2.S3TargetSpec
	13, // 11: com.coralogix.archive.v2.S3TargetServiceSetTargetResponse.target:type_name -> com.coralogix.archive.v2.Target
	0,  // 12: com.coralogix.archive.v2.TargetService.GetTarget:input_type -> com.coralogix.archive.v2.GetTargetRequest
	2,  // 13: com.coralogix.archive.v2.TargetService.SetTarget:input_type -> com.coralogix.archive.v2.SetTargetRequest
	7,  // 14: com.coralogix.archive.v2.TargetService.ValidateTarget:input_type -> com.coralogix.archive.v2.ValidateTargetRequest
	9,  // 15: com.coralogix.archive.v2.S3TargetService.GetTarget:input_type -> com.coralogix.archive.v2.S3TargetServiceGetTargetRequest
	11, // 16: com.coralogix.archive.v2.S3TargetService.SetTarget:input_type -> com.coralogix.archive.v2.S3TargetServiceSetTargetRequest
	1,  // 17: com.coralogix.archive.v2.TargetService.GetTarget:output_type -> com.coralogix.archive.v2.GetTargetResponse
	3,  // 18: com.coralogix.archive.v2.TargetService.SetTarget:output_type -> com.coralogix.archive.v2.SetTargetResponse
	8,  // 19: com.coralogix.archive.v2.TargetService.ValidateTarget:output_type -> com.coralogix.archive.v2.ValidateTargetResponse
	10, // 20: com.coralogix.archive.v2.S3TargetService.GetTarget:output_type -> com.coralogix.archive.v2.S3TargetServiceGetTargetResponse
	12, // 21: com.coralogix.archive.v2.S3TargetService.SetTarget:output_type -> com.coralogix.archive.v2.S3TargetServiceSetTargetResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_com_coralogix_archive_v2_target_service_proto_init() }
func file_com_coralogix_archive_v2_target_service_proto_init() {
	if File_com_coralogix_archive_v2_target_service_proto != nil {
		return
	}
	file_com_coralogix_archive_v2_target_proto_init()
	file_com_coralogix_archive_v2_target_service_proto_msgTypes[2].OneofWrappers = []any{
		(*SetTargetRequest_S3)(nil),
		(*SetTargetRequest_IbmCos)(nil),
	}
	file_com_coralogix_archive_v2_target_service_proto_msgTypes[4].OneofWrappers = []any{
		(*SetExternalTargetRequest_S3)(nil),
		(*SetExternalTargetRequest_IbmCos)(nil),
	}
	file_com_coralogix_archive_v2_target_service_proto_msgTypes[7].OneofWrappers = []any{
		(*ValidateTargetRequest_S3)(nil),
		(*ValidateTargetRequest_IbmCos)(nil),
	}
	file_com_coralogix_archive_v2_target_service_proto_msgTypes[11].OneofWrappers = []any{
		(*S3TargetServiceSetTargetRequest_S3)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_coralogix_archive_v2_target_service_proto_rawDesc), len(file_com_coralogix_archive_v2_target_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_com_coralogix_archive_v2_target_service_proto_goTypes,
		DependencyIndexes: file_com_coralogix_archive_v2_target_service_proto_depIdxs,
		MessageInfos:      file_com_coralogix_archive_v2_target_service_proto_msgTypes,
	}.Build()
	File_com_coralogix_archive_v2_target_service_proto = out.File
	file_com_coralogix_archive_v2_target_service_proto_goTypes = nil
	file_com_coralogix_archive_v2_target_service_proto_depIdxs = nil
}
