// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: com/coralogix/archive/dataset/v2/dataset_locations_service.proto

package v2

import (
	_ "github.com/coralogix/coralogix-management-sdk/go/internal/coralogix/archive/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Timeframe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *Timeframe) Reset() {
	*x = Timeframe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timeframe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timeframe) ProtoMessage() {}

func (x *Timeframe) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timeframe.ProtoReflect.Descriptor instead.
func (*Timeframe) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescGZIP(), []int{0}
}

func (x *Timeframe) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Timeframe) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type GetDatasetLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetsLocations []*DatasetLocationRequest `protobuf:"bytes,1,rep,name=datasets_locations,json=datasetsLocations,proto3" json:"datasets_locations,omitempty"`
}

func (x *GetDatasetLocationsRequest) Reset() {
	*x = GetDatasetLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetLocationsRequest) ProtoMessage() {}

func (x *GetDatasetLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetLocationsRequest.ProtoReflect.Descriptor instead.
func (*GetDatasetLocationsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetDatasetLocationsRequest) GetDatasetsLocations() []*DatasetLocationRequest {
	if x != nil {
		return x.DatasetsLocations
	}
	return nil
}

type DatasetLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyIds     []uint32   `protobuf:"varint,1,rep,packed,name=company_ids,json=companyIds,proto3" json:"company_ids,omitempty"`
	DataspaceRegex string     `protobuf:"bytes,2,opt,name=dataspace_regex,json=dataspaceRegex,proto3" json:"dataspace_regex,omitempty"`
	DatasetRegex   string     `protobuf:"bytes,3,opt,name=dataset_regex,json=datasetRegex,proto3" json:"dataset_regex,omitempty"`
	Timeframe      *Timeframe `protobuf:"bytes,4,opt,name=timeframe,proto3,oneof" json:"timeframe,omitempty"`
}

func (x *DatasetLocationRequest) Reset() {
	*x = DatasetLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetLocationRequest) ProtoMessage() {}

func (x *DatasetLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetLocationRequest.ProtoReflect.Descriptor instead.
func (*DatasetLocationRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescGZIP(), []int{2}
}

func (x *DatasetLocationRequest) GetCompanyIds() []uint32 {
	if x != nil {
		return x.CompanyIds
	}
	return nil
}

func (x *DatasetLocationRequest) GetDataspaceRegex() string {
	if x != nil {
		return x.DataspaceRegex
	}
	return ""
}

func (x *DatasetLocationRequest) GetDatasetRegex() string {
	if x != nil {
		return x.DatasetRegex
	}
	return ""
}

func (x *DatasetLocationRequest) GetTimeframe() *Timeframe {
	if x != nil {
		return x.Timeframe
	}
	return nil
}

type GetDatasetLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetLocations []*DatasetLocations `protobuf:"bytes,1,rep,name=dataset_locations,json=datasetLocations,proto3" json:"dataset_locations,omitempty"`
}

func (x *GetDatasetLocationsResponse) Reset() {
	*x = GetDatasetLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetLocationsResponse) ProtoMessage() {}

func (x *GetDatasetLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetLocationsResponse.ProtoReflect.Descriptor instead.
func (*GetDatasetLocationsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetDatasetLocationsResponse) GetDatasetLocations() []*DatasetLocations {
	if x != nil {
		return x.DatasetLocations
	}
	return nil
}

type DatasetLocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []*DatasetLocation `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *DatasetLocations) Reset() {
	*x = DatasetLocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetLocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetLocations) ProtoMessage() {}

func (x *DatasetLocations) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetLocations.ProtoReflect.Descriptor instead.
func (*DatasetLocations) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescGZIP(), []int{4}
}

func (x *DatasetLocations) GetLocations() []*DatasetLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

type DatasetLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId        uint32                 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Dataset          *Dataset               `protobuf:"bytes,2,opt,name=dataset,proto3" json:"dataset,omitempty"`
	PhysicalLocation *FinalLocation         `protobuf:"bytes,3,opt,name=physical_location,json=physicalLocation,proto3" json:"physical_location,omitempty"`
	FirstEventTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=first_event_time,json=firstEventTime,proto3" json:"first_event_time,omitempty"`
	LastEventTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_event_time,json=lastEventTime,proto3" json:"last_event_time,omitempty"`
}

func (x *DatasetLocation) Reset() {
	*x = DatasetLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetLocation) ProtoMessage() {}

func (x *DatasetLocation) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetLocation.ProtoReflect.Descriptor instead.
func (*DatasetLocation) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescGZIP(), []int{5}
}

func (x *DatasetLocation) GetCompanyId() uint32 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *DatasetLocation) GetDataset() *Dataset {
	if x != nil {
		return x.Dataset
	}
	return nil
}

func (x *DatasetLocation) GetPhysicalLocation() *FinalLocation {
	if x != nil {
		return x.PhysicalLocation
	}
	return nil
}

func (x *DatasetLocation) GetFirstEventTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstEventTime
	}
	return nil
}

func (x *DatasetLocation) GetLastEventTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEventTime
	}
	return nil
}

type GetDatasetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyIds []uint32 `protobuf:"varint,1,rep,packed,name=company_ids,json=companyIds,proto3" json:"company_ids,omitempty"`
}

func (x *GetDatasetListRequest) Reset() {
	*x = GetDatasetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetListRequest) ProtoMessage() {}

func (x *GetDatasetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetListRequest.ProtoReflect.Descriptor instead.
func (*GetDatasetListRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetDatasetListRequest) GetCompanyIds() []uint32 {
	if x != nil {
		return x.CompanyIds
	}
	return nil
}

type DatasetsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId uint32     `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Datasets  []*Dataset `protobuf:"bytes,2,rep,name=datasets,proto3" json:"datasets,omitempty"`
}

func (x *DatasetsInfo) Reset() {
	*x = DatasetsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetsInfo) ProtoMessage() {}

func (x *DatasetsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetsInfo.ProtoReflect.Descriptor instead.
func (*DatasetsInfo) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescGZIP(), []int{7}
}

func (x *DatasetsInfo) GetCompanyId() uint32 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *DatasetsInfo) GetDatasets() []*Dataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

type GetDatasetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetsInfo []*DatasetsInfo `protobuf:"bytes,1,rep,name=datasets_info,json=datasetsInfo,proto3" json:"datasets_info,omitempty"`
}

func (x *GetDatasetListResponse) Reset() {
	*x = GetDatasetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatasetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetListResponse) ProtoMessage() {}

func (x *GetDatasetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetListResponse.ProtoReflect.Descriptor instead.
func (*GetDatasetListResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetDatasetListResponse) GetDatasetsInfo() []*DatasetsInfo {
	if x != nil {
		return x.DatasetsInfo
	}
	return nil
}

var File_com_coralogix_archive_dataset_v2_dataset_locations_service_proto protoreflect.FileDescriptor

var file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDesc = []byte{
	0x0a, 0x40, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2f,
	0x76, 0x32, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x2e, 0x76, 0x32, 0x1a, 0x28, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2f, 0x76,
	0x32, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x38, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2f, 0x76,
	0x32, 0x2f, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7d, 0x0a, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x12, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x11, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xe5, 0x01, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x0f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x67, 0x65, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x67, 0x65, 0x78, 0x12, 0x4e, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x7e, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x10, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x63, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4f, 0x0a, 0x09,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xdd, 0x02,
	0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64,
	0x12, 0x43, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x07, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x5c, 0x0a, 0x11, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x10, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x10, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d,
	0x6c, 0x61, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x38, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x73, 0x22, 0x74, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x22, 0x6d, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xae, 0x03, 0x0a,
	0x17, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xdc, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0xc2,
	0xb8, 0x02, 0x44, 0x0a, 0x42, 0x47, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x20, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x62, 0x79, 0x20, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x2c, 0x20, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2c, 0x20, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74, 0x69,
	0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0xb3, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0xc2,
	0xb8, 0x02, 0x2a, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x20, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x20,
	0x74, 0x6f, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x20, 0x69, 0x64, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescOnce sync.Once
	file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescData = file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDesc
)

func file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescGZIP() []byte {
	file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescOnce.Do(func() {
		file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescData)
	})
	return file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDescData
}

var file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_goTypes = []any{
	(*Timeframe)(nil),                   // 0: com.coralogix.archive.dataset.v2.Timeframe
	(*GetDatasetLocationsRequest)(nil),  // 1: com.coralogix.archive.dataset.v2.GetDatasetLocationsRequest
	(*DatasetLocationRequest)(nil),      // 2: com.coralogix.archive.dataset.v2.DatasetLocationRequest
	(*GetDatasetLocationsResponse)(nil), // 3: com.coralogix.archive.dataset.v2.GetDatasetLocationsResponse
	(*DatasetLocations)(nil),            // 4: com.coralogix.archive.dataset.v2.DatasetLocations
	(*DatasetLocation)(nil),             // 5: com.coralogix.archive.dataset.v2.DatasetLocation
	(*GetDatasetListRequest)(nil),       // 6: com.coralogix.archive.dataset.v2.GetDatasetListRequest
	(*DatasetsInfo)(nil),                // 7: com.coralogix.archive.dataset.v2.DatasetsInfo
	(*GetDatasetListResponse)(nil),      // 8: com.coralogix.archive.dataset.v2.GetDatasetListResponse
	(*timestamppb.Timestamp)(nil),       // 9: google.protobuf.Timestamp
	(*Dataset)(nil),                     // 10: com.coralogix.archive.dataset.v2.Dataset
	(*FinalLocation)(nil),               // 11: com.coralogix.archive.dataset.v2.FinalLocation
}
var file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_depIdxs = []int32{
	9,  // 0: com.coralogix.archive.dataset.v2.Timeframe.start_time:type_name -> google.protobuf.Timestamp
	9,  // 1: com.coralogix.archive.dataset.v2.Timeframe.end_time:type_name -> google.protobuf.Timestamp
	2,  // 2: com.coralogix.archive.dataset.v2.GetDatasetLocationsRequest.datasets_locations:type_name -> com.coralogix.archive.dataset.v2.DatasetLocationRequest
	0,  // 3: com.coralogix.archive.dataset.v2.DatasetLocationRequest.timeframe:type_name -> com.coralogix.archive.dataset.v2.Timeframe
	4,  // 4: com.coralogix.archive.dataset.v2.GetDatasetLocationsResponse.dataset_locations:type_name -> com.coralogix.archive.dataset.v2.DatasetLocations
	5,  // 5: com.coralogix.archive.dataset.v2.DatasetLocations.locations:type_name -> com.coralogix.archive.dataset.v2.DatasetLocation
	10, // 6: com.coralogix.archive.dataset.v2.DatasetLocation.dataset:type_name -> com.coralogix.archive.dataset.v2.Dataset
	11, // 7: com.coralogix.archive.dataset.v2.DatasetLocation.physical_location:type_name -> com.coralogix.archive.dataset.v2.FinalLocation
	9,  // 8: com.coralogix.archive.dataset.v2.DatasetLocation.first_event_time:type_name -> google.protobuf.Timestamp
	9,  // 9: com.coralogix.archive.dataset.v2.DatasetLocation.last_event_time:type_name -> google.protobuf.Timestamp
	10, // 10: com.coralogix.archive.dataset.v2.DatasetsInfo.datasets:type_name -> com.coralogix.archive.dataset.v2.Dataset
	7,  // 11: com.coralogix.archive.dataset.v2.GetDatasetListResponse.datasets_info:type_name -> com.coralogix.archive.dataset.v2.DatasetsInfo
	1,  // 12: com.coralogix.archive.dataset.v2.DatasetLocationsService.GetDatasetLocations:input_type -> com.coralogix.archive.dataset.v2.GetDatasetLocationsRequest
	6,  // 13: com.coralogix.archive.dataset.v2.DatasetLocationsService.GetDatasetList:input_type -> com.coralogix.archive.dataset.v2.GetDatasetListRequest
	3,  // 14: com.coralogix.archive.dataset.v2.DatasetLocationsService.GetDatasetLocations:output_type -> com.coralogix.archive.dataset.v2.GetDatasetLocationsResponse
	8,  // 15: com.coralogix.archive.dataset.v2.DatasetLocationsService.GetDatasetList:output_type -> com.coralogix.archive.dataset.v2.GetDatasetListResponse
	14, // [14:16] is the sub-list for method output_type
	12, // [12:14] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_init() }
func file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_init() {
	if File_com_coralogix_archive_dataset_v2_dataset_locations_service_proto != nil {
		return
	}
	file_com_coralogix_archive_dataset_v2_dataset_proto_init()
	file_com_coralogix_archive_dataset_v2_physical_location_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Timeframe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetDatasetLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DatasetLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetDatasetLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DatasetLocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DatasetLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetDatasetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DatasetsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetDatasetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_goTypes,
		DependencyIndexes: file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_depIdxs,
		MessageInfos:      file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_msgTypes,
	}.Build()
	File_com_coralogix_archive_dataset_v2_dataset_locations_service_proto = out.File
	file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_rawDesc = nil
	file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_goTypes = nil
	file_com_coralogix_archive_dataset_v2_dataset_locations_service_proto_depIdxs = nil
}
