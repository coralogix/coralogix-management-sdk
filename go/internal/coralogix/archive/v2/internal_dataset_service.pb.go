// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: com/coralogix/archive/dataset/v2/internal_dataset_service.proto

package v2

import (
	_ "github.com/coralogix/coralogix-management-sdk/go/internal/coralogix/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAllDatasetRulesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	LastUpdateTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=last_update_time,json=lastUpdateTime,proto3,oneof" json:"last_update_time,omitempty"`
	ForceUpdate    bool                   `protobuf:"varint,2,opt,name=force_update,json=forceUpdate,proto3" json:"force_update,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetAllDatasetRulesRequest) Reset() {
	*x = GetAllDatasetRulesRequest{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllDatasetRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDatasetRulesRequest) ProtoMessage() {}

func (x *GetAllDatasetRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDatasetRulesRequest.ProtoReflect.Descriptor instead.
func (*GetAllDatasetRulesRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetAllDatasetRulesRequest) GetLastUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdateTime
	}
	return nil
}

func (x *GetAllDatasetRulesRequest) GetForceUpdate() bool {
	if x != nil {
		return x.ForceUpdate
	}
	return false
}

type GetDatasetSchemaFieldsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaFields  []*DatasetSchemaFields `protobuf:"bytes,1,rep,name=schema_fields,json=schemaFields,proto3" json:"schema_fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatasetSchemaFieldsResponse) Reset() {
	*x = GetDatasetSchemaFieldsResponse{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatasetSchemaFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetSchemaFieldsResponse) ProtoMessage() {}

func (x *GetDatasetSchemaFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetSchemaFieldsResponse.ProtoReflect.Descriptor instead.
func (*GetDatasetSchemaFieldsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetDatasetSchemaFieldsResponse) GetSchemaFields() []*DatasetSchemaFields {
	if x != nil {
		return x.SchemaFields
	}
	return nil
}

type DatasetSchemaFields struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompanyId     uint32                 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Dataset       *Dataset               `protobuf:"bytes,2,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Fields        []*SchemaTemplateField `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatasetSchemaFields) Reset() {
	*x = DatasetSchemaFields{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatasetSchemaFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetSchemaFields) ProtoMessage() {}

func (x *DatasetSchemaFields) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetSchemaFields.ProtoReflect.Descriptor instead.
func (*DatasetSchemaFields) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{2}
}

func (x *DatasetSchemaFields) GetCompanyId() uint32 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *DatasetSchemaFields) GetDataset() *Dataset {
	if x != nil {
		return x.Dataset
	}
	return nil
}

func (x *DatasetSchemaFields) GetFields() []*SchemaTemplateField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type CompanyDataset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompanyId     uint32                 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Dataset       *Dataset               `protobuf:"bytes,2,opt,name=dataset,proto3" json:"dataset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompanyDataset) Reset() {
	*x = CompanyDataset{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompanyDataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyDataset) ProtoMessage() {}

func (x *CompanyDataset) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyDataset.ProtoReflect.Descriptor instead.
func (*CompanyDataset) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{3}
}

func (x *CompanyDataset) GetCompanyId() uint32 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *CompanyDataset) GetDataset() *Dataset {
	if x != nil {
		return x.Dataset
	}
	return nil
}

type GetDatasetSchemaFieldsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Datasets      []*CompanyDataset      `protobuf:"bytes,1,rep,name=datasets,proto3" json:"datasets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDatasetSchemaFieldsRequest) Reset() {
	*x = GetDatasetSchemaFieldsRequest{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDatasetSchemaFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatasetSchemaFieldsRequest) ProtoMessage() {}

func (x *GetDatasetSchemaFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatasetSchemaFieldsRequest.ProtoReflect.Descriptor instead.
func (*GetDatasetSchemaFieldsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetDatasetSchemaFieldsRequest) GetDatasets() []*CompanyDataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

type CompanyDatasetRules struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompanyId     uint32                 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Rules         []*DatasetRule         `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompanyDatasetRules) Reset() {
	*x = CompanyDatasetRules{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompanyDatasetRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyDatasetRules) ProtoMessage() {}

func (x *CompanyDatasetRules) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyDatasetRules.ProtoReflect.Descriptor instead.
func (*CompanyDatasetRules) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{5}
}

func (x *CompanyDatasetRules) GetCompanyId() uint32 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *CompanyDatasetRules) GetRules() []*DatasetRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type GetAllDatasetRulesResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Rules          []*CompanyDatasetRules `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	LastUpdateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetAllDatasetRulesResponse) Reset() {
	*x = GetAllDatasetRulesResponse{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllDatasetRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDatasetRulesResponse) ProtoMessage() {}

func (x *GetAllDatasetRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDatasetRulesResponse.ProtoReflect.Descriptor instead.
func (*GetAllDatasetRulesResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllDatasetRulesResponse) GetRules() []*CompanyDatasetRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *GetAllDatasetRulesResponse) GetLastUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdateTime
	}
	return nil
}

type InternalDatasetManagementServiceSetSchemaRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompanyId     int32                  `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	SchemaRule    *SchemaRule            `protobuf:"bytes,2,opt,name=schema_rule,json=schemaRule,proto3" json:"schema_rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InternalDatasetManagementServiceSetSchemaRuleRequest) Reset() {
	*x = InternalDatasetManagementServiceSetSchemaRuleRequest{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalDatasetManagementServiceSetSchemaRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalDatasetManagementServiceSetSchemaRuleRequest) ProtoMessage() {}

func (x *InternalDatasetManagementServiceSetSchemaRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalDatasetManagementServiceSetSchemaRuleRequest.ProtoReflect.Descriptor instead.
func (*InternalDatasetManagementServiceSetSchemaRuleRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{7}
}

func (x *InternalDatasetManagementServiceSetSchemaRuleRequest) GetCompanyId() int32 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *InternalDatasetManagementServiceSetSchemaRuleRequest) GetSchemaRule() *SchemaRule {
	if x != nil {
		return x.SchemaRule
	}
	return nil
}

type InternalDatasetManagementServiceSetSchemaRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          *Rule                  `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InternalDatasetManagementServiceSetSchemaRuleResponse) Reset() {
	*x = InternalDatasetManagementServiceSetSchemaRuleResponse{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalDatasetManagementServiceSetSchemaRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalDatasetManagementServiceSetSchemaRuleResponse) ProtoMessage() {}

func (x *InternalDatasetManagementServiceSetSchemaRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalDatasetManagementServiceSetSchemaRuleResponse.ProtoReflect.Descriptor instead.
func (*InternalDatasetManagementServiceSetSchemaRuleResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{8}
}

func (x *InternalDatasetManagementServiceSetSchemaRuleResponse) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type InternalDatasetManagementServiceGetSchemaRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompanyId     int32                  `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	DataPillar    DataPillar             `protobuf:"varint,2,opt,name=data_pillar,json=dataPillar,proto3,enum=com.coralogix.archive.dataset.v2.DataPillar" json:"data_pillar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InternalDatasetManagementServiceGetSchemaRuleRequest) Reset() {
	*x = InternalDatasetManagementServiceGetSchemaRuleRequest{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalDatasetManagementServiceGetSchemaRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalDatasetManagementServiceGetSchemaRuleRequest) ProtoMessage() {}

func (x *InternalDatasetManagementServiceGetSchemaRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalDatasetManagementServiceGetSchemaRuleRequest.ProtoReflect.Descriptor instead.
func (*InternalDatasetManagementServiceGetSchemaRuleRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{9}
}

func (x *InternalDatasetManagementServiceGetSchemaRuleRequest) GetCompanyId() int32 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *InternalDatasetManagementServiceGetSchemaRuleRequest) GetDataPillar() DataPillar {
	if x != nil {
		return x.DataPillar
	}
	return DataPillar_DATA_PILLAR_UNSPECIFIED
}

type InternalDatasetManagementServiceGetSchemaRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          *Rule                  `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InternalDatasetManagementServiceGetSchemaRuleResponse) Reset() {
	*x = InternalDatasetManagementServiceGetSchemaRuleResponse{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalDatasetManagementServiceGetSchemaRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalDatasetManagementServiceGetSchemaRuleResponse) ProtoMessage() {}

func (x *InternalDatasetManagementServiceGetSchemaRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalDatasetManagementServiceGetSchemaRuleResponse.ProtoReflect.Descriptor instead.
func (*InternalDatasetManagementServiceGetSchemaRuleResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{10}
}

func (x *InternalDatasetManagementServiceGetSchemaRuleResponse) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type InputFile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Bucket:
	//
	//	*InputFile_S3
	//	*InputFile_IbmCos
	Bucket        isInputFile_Bucket `protobuf_oneof:"bucket"`
	Path          string             `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Format        *Format            `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputFile) Reset() {
	*x = InputFile{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputFile) ProtoMessage() {}

func (x *InputFile) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputFile.ProtoReflect.Descriptor instead.
func (*InputFile) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{11}
}

func (x *InputFile) GetBucket() isInputFile_Bucket {
	if x != nil {
		return x.Bucket
	}
	return nil
}

func (x *InputFile) GetS3() *S3TargetSpec {
	if x != nil {
		if x, ok := x.Bucket.(*InputFile_S3); ok {
			return x.S3
		}
	}
	return nil
}

func (x *InputFile) GetIbmCos() *IBMCosTargetSpec {
	if x != nil {
		if x, ok := x.Bucket.(*InputFile_IbmCos); ok {
			return x.IbmCos
		}
	}
	return nil
}

func (x *InputFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *InputFile) GetFormat() *Format {
	if x != nil {
		return x.Format
	}
	return nil
}

type isInputFile_Bucket interface {
	isInputFile_Bucket()
}

type InputFile_S3 struct {
	S3 *S3TargetSpec `protobuf:"bytes,1,opt,name=s3,proto3,oneof"`
}

type InputFile_IbmCos struct {
	IbmCos *IBMCosTargetSpec `protobuf:"bytes,2,opt,name=ibm_cos,json=ibmCos,proto3,oneof"`
}

func (*InputFile_S3) isInputFile_Bucket() {}

func (*InputFile_IbmCos) isInputFile_Bucket() {}

type InternalWriteToDatasetRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CompanyId        uint32                 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Dataset          *Dataset               `protobuf:"bytes,2,opt,name=dataset,proto3" json:"dataset,omitempty"`
	InputFiles       []*InputFile           `protobuf:"bytes,3,rep,name=input_files,json=inputFiles,proto3" json:"input_files,omitempty"`
	DefaultKeyFields []*FieldPath           `protobuf:"bytes,4,rep,name=default_key_fields,json=defaultKeyFields,proto3" json:"default_key_fields,omitempty"`
	// Types that are valid to be assigned to Mode:
	//
	//	*InternalWriteToDatasetRequest_Append
	//	*InternalWriteToDatasetRequest_Overwrite
	Mode          isInternalWriteToDatasetRequest_Mode `protobuf_oneof:"mode"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InternalWriteToDatasetRequest) Reset() {
	*x = InternalWriteToDatasetRequest{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalWriteToDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalWriteToDatasetRequest) ProtoMessage() {}

func (x *InternalWriteToDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalWriteToDatasetRequest.ProtoReflect.Descriptor instead.
func (*InternalWriteToDatasetRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{12}
}

func (x *InternalWriteToDatasetRequest) GetCompanyId() uint32 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *InternalWriteToDatasetRequest) GetDataset() *Dataset {
	if x != nil {
		return x.Dataset
	}
	return nil
}

func (x *InternalWriteToDatasetRequest) GetInputFiles() []*InputFile {
	if x != nil {
		return x.InputFiles
	}
	return nil
}

func (x *InternalWriteToDatasetRequest) GetDefaultKeyFields() []*FieldPath {
	if x != nil {
		return x.DefaultKeyFields
	}
	return nil
}

func (x *InternalWriteToDatasetRequest) GetMode() isInternalWriteToDatasetRequest_Mode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *InternalWriteToDatasetRequest) GetAppend() *InternalWriteToDatasetRequest_AppendMode {
	if x != nil {
		if x, ok := x.Mode.(*InternalWriteToDatasetRequest_Append); ok {
			return x.Append
		}
	}
	return nil
}

func (x *InternalWriteToDatasetRequest) GetOverwrite() *InternalWriteToDatasetRequest_OverwriteMode {
	if x != nil {
		if x, ok := x.Mode.(*InternalWriteToDatasetRequest_Overwrite); ok {
			return x.Overwrite
		}
	}
	return nil
}

type isInternalWriteToDatasetRequest_Mode interface {
	isInternalWriteToDatasetRequest_Mode()
}

type InternalWriteToDatasetRequest_Append struct {
	Append *InternalWriteToDatasetRequest_AppendMode `protobuf:"bytes,5,opt,name=append,proto3,oneof"`
}

type InternalWriteToDatasetRequest_Overwrite struct {
	Overwrite *InternalWriteToDatasetRequest_OverwriteMode `protobuf:"bytes,6,opt,name=overwrite,proto3,oneof"`
}

func (*InternalWriteToDatasetRequest_Append) isInternalWriteToDatasetRequest_Mode() {}

func (*InternalWriteToDatasetRequest_Overwrite) isInternalWriteToDatasetRequest_Mode() {}

type InternalWriteToDatasetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InternalWriteToDatasetResponse) Reset() {
	*x = InternalWriteToDatasetResponse{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalWriteToDatasetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalWriteToDatasetResponse) ProtoMessage() {}

func (x *InternalWriteToDatasetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalWriteToDatasetResponse.ProtoReflect.Descriptor instead.
func (*InternalWriteToDatasetResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{13}
}

type InternalWriteToDatasetRequest_AppendMode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InternalWriteToDatasetRequest_AppendMode) Reset() {
	*x = InternalWriteToDatasetRequest_AppendMode{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalWriteToDatasetRequest_AppendMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalWriteToDatasetRequest_AppendMode) ProtoMessage() {}

func (x *InternalWriteToDatasetRequest_AppendMode) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalWriteToDatasetRequest_AppendMode.ProtoReflect.Descriptor instead.
func (*InternalWriteToDatasetRequest_AppendMode) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{12, 0}
}

type InternalWriteToDatasetRequest_OverwriteMode struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	OverwrittenDatasets []*Dataset             `protobuf:"bytes,1,rep,name=overwritten_datasets,json=overwrittenDatasets,proto3" json:"overwritten_datasets,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *InternalWriteToDatasetRequest_OverwriteMode) Reset() {
	*x = InternalWriteToDatasetRequest_OverwriteMode{}
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalWriteToDatasetRequest_OverwriteMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalWriteToDatasetRequest_OverwriteMode) ProtoMessage() {}

func (x *InternalWriteToDatasetRequest_OverwriteMode) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalWriteToDatasetRequest_OverwriteMode.ProtoReflect.Descriptor instead.
func (*InternalWriteToDatasetRequest_OverwriteMode) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP(), []int{12, 1}
}

func (x *InternalWriteToDatasetRequest_OverwriteMode) GetOverwrittenDatasets() []*Dataset {
	if x != nil {
		return x.OverwrittenDatasets
	}
	return nil
}

var File_com_coralogix_archive_dataset_v2_internal_dataset_service_proto protoreflect.FileDescriptor

const file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDesc = "" +
	"\n" +
	"?com/coralogix/archive/dataset/v2/internal_dataset_service.proto\x12 com.coralogix.archive.dataset.v2\x1a4com/coralogix/archive/dataset/v2/dataset_rules.proto\x1a'com/coralogix/common/v1/audit_log.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a7com/coralogix/archive/dataset/v2/preferred_schema.proto\x1a.com/coralogix/archive/dataset/v2/dataset.proto\x1a<com/coralogix/archive/dataset/v2/dataset_rules_service.proto\x1a%com/coralogix/archive/v2/target.proto\x1a%com/coralogix/archive/v2/format.proto\x1a3com/coralogix/archive/dataset/v2/default_keys.proto\"\x9e\x01\n" +
	"\x19GetAllDatasetRulesRequest\x12I\n" +
	"\x10last_update_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x0elastUpdateTime\x88\x01\x01\x12!\n" +
	"\fforce_update\x18\x02 \x01(\bR\vforceUpdateB\x13\n" +
	"\x11_last_update_time\"|\n" +
	"\x1eGetDatasetSchemaFieldsResponse\x12Z\n" +
	"\rschema_fields\x18\x01 \x03(\v25.com.coralogix.archive.dataset.v2.DatasetSchemaFieldsR\fschemaFields\"\xc8\x01\n" +
	"\x13DatasetSchemaFields\x12\x1d\n" +
	"\n" +
	"company_id\x18\x01 \x01(\rR\tcompanyId\x12C\n" +
	"\adataset\x18\x02 \x01(\v2).com.coralogix.archive.dataset.v2.DatasetR\adataset\x12M\n" +
	"\x06fields\x18\x03 \x03(\v25.com.coralogix.archive.dataset.v2.SchemaTemplateFieldR\x06fields\"t\n" +
	"\x0eCompanyDataset\x12\x1d\n" +
	"\n" +
	"company_id\x18\x01 \x01(\rR\tcompanyId\x12C\n" +
	"\adataset\x18\x02 \x01(\v2).com.coralogix.archive.dataset.v2.DatasetR\adataset\"m\n" +
	"\x1dGetDatasetSchemaFieldsRequest\x12L\n" +
	"\bdatasets\x18\x01 \x03(\v20.com.coralogix.archive.dataset.v2.CompanyDatasetR\bdatasets\"y\n" +
	"\x13CompanyDatasetRules\x12\x1d\n" +
	"\n" +
	"company_id\x18\x01 \x01(\rR\tcompanyId\x12C\n" +
	"\x05rules\x18\x02 \x03(\v2-.com.coralogix.archive.dataset.v2.DatasetRuleR\x05rules\"\xaf\x01\n" +
	"\x1aGetAllDatasetRulesResponse\x12K\n" +
	"\x05rules\x18\x01 \x03(\v25.com.coralogix.archive.dataset.v2.CompanyDatasetRulesR\x05rules\x12D\n" +
	"\x10last_update_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x0elastUpdateTime\"\xa4\x01\n" +
	"4InternalDatasetManagementServiceSetSchemaRuleRequest\x12\x1d\n" +
	"\n" +
	"company_id\x18\x01 \x01(\x05R\tcompanyId\x12M\n" +
	"\vschema_rule\x18\x02 \x01(\v2,.com.coralogix.archive.dataset.v2.SchemaRuleR\n" +
	"schemaRule\"s\n" +
	"5InternalDatasetManagementServiceSetSchemaRuleResponse\x12:\n" +
	"\x04rule\x18\x01 \x01(\v2&.com.coralogix.archive.dataset.v2.RuleR\x04rule\"\xa4\x01\n" +
	"4InternalDatasetManagementServiceGetSchemaRuleRequest\x12\x1d\n" +
	"\n" +
	"company_id\x18\x01 \x01(\x05R\tcompanyId\x12M\n" +
	"\vdata_pillar\x18\x02 \x01(\x0e2,.com.coralogix.archive.dataset.v2.DataPillarR\n" +
	"dataPillar\"s\n" +
	"5InternalDatasetManagementServiceGetSchemaRuleResponse\x12:\n" +
	"\x04rule\x18\x01 \x01(\v2&.com.coralogix.archive.dataset.v2.RuleR\x04rule\"\xe4\x01\n" +
	"\tInputFile\x128\n" +
	"\x02s3\x18\x01 \x01(\v2&.com.coralogix.archive.v2.S3TargetSpecH\x00R\x02s3\x12E\n" +
	"\aibm_cos\x18\x02 \x01(\v2*.com.coralogix.archive.v2.IBMCosTargetSpecH\x00R\x06ibmCos\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x128\n" +
	"\x06format\x18\x04 \x01(\v2 .com.coralogix.archive.v2.FormatR\x06formatB\b\n" +
	"\x06bucket\"\x86\x05\n" +
	"\x1dInternalWriteToDatasetRequest\x12\x1d\n" +
	"\n" +
	"company_id\x18\x01 \x01(\rR\tcompanyId\x12C\n" +
	"\adataset\x18\x02 \x01(\v2).com.coralogix.archive.dataset.v2.DatasetR\adataset\x12L\n" +
	"\vinput_files\x18\x03 \x03(\v2+.com.coralogix.archive.dataset.v2.InputFileR\n" +
	"inputFiles\x12Y\n" +
	"\x12default_key_fields\x18\x04 \x03(\v2+.com.coralogix.archive.dataset.v2.FieldPathR\x10defaultKeyFields\x12d\n" +
	"\x06append\x18\x05 \x01(\v2J.com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest.AppendModeH\x00R\x06append\x12m\n" +
	"\toverwrite\x18\x06 \x01(\v2M.com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest.OverwriteModeH\x00R\toverwrite\x1a\f\n" +
	"\n" +
	"AppendMode\x1am\n" +
	"\rOverwriteMode\x12\\\n" +
	"\x14overwritten_datasets\x18\x01 \x03(\v2).com.coralogix.archive.dataset.v2.DatasetR\x13overwrittenDatasetsB\x06\n" +
	"\x04mode\" \n" +
	"\x1eInternalWriteToDatasetResponse2\xbd\b\n" +
	" InternalDatasetManagementService\x12\xca\x01\n" +
	"\x12GetAllDatasetRules\x12;.com.coralogix.archive.dataset.v2.GetAllDatasetRulesRequest\x1a<.com.coralogix.archive.dataset.v2.GetAllDatasetRulesResponse\"9¸\x025\n" +
	"3Get dataset rules (by last update time, optionally)\x12\xbe\x01\n" +
	"\x16GetDatasetSchemaFields\x12?.com.coralogix.archive.dataset.v2.GetDatasetSchemaFieldsRequest\x1a@.com.coralogix.archive.dataset.v2.GetDatasetSchemaFieldsResponse\"!¸\x02\x1d\n" +
	"\x1bSet dataset rule definition\x12\xe3\x01\n" +
	"\rSetSchemaRule\x12V.com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceSetSchemaRuleRequest\x1aW.com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceSetSchemaRuleResponse\"!¸\x02\x1d\n" +
	"\x1bSet dataset rule definition\x12\xe3\x01\n" +
	"\rGetSchemaRule\x12V.com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceGetSchemaRuleRequest\x1aW.com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceGetSchemaRuleResponse\"!¸\x02\x1d\n" +
	"\x1bSet dataset rule definition\x12\xbe\x01\n" +
	"\x16InternalWriteToDataset\x12?.com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest\x1a@.com.coralogix.archive.dataset.v2.InternalWriteToDatasetResponse\"!¸\x02\x1d\n" +
	"\x1bCreate a dataset from filesb\x06proto3"

var (
	file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescOnce sync.Once
	file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescData []byte
)

func file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescGZIP() []byte {
	file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescOnce.Do(func() {
		file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDesc), len(file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDesc)))
	})
	return file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDescData
}

var file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_goTypes = []any{
	(*GetAllDatasetRulesRequest)(nil),                             // 0: com.coralogix.archive.dataset.v2.GetAllDatasetRulesRequest
	(*GetDatasetSchemaFieldsResponse)(nil),                        // 1: com.coralogix.archive.dataset.v2.GetDatasetSchemaFieldsResponse
	(*DatasetSchemaFields)(nil),                                   // 2: com.coralogix.archive.dataset.v2.DatasetSchemaFields
	(*CompanyDataset)(nil),                                        // 3: com.coralogix.archive.dataset.v2.CompanyDataset
	(*GetDatasetSchemaFieldsRequest)(nil),                         // 4: com.coralogix.archive.dataset.v2.GetDatasetSchemaFieldsRequest
	(*CompanyDatasetRules)(nil),                                   // 5: com.coralogix.archive.dataset.v2.CompanyDatasetRules
	(*GetAllDatasetRulesResponse)(nil),                            // 6: com.coralogix.archive.dataset.v2.GetAllDatasetRulesResponse
	(*InternalDatasetManagementServiceSetSchemaRuleRequest)(nil),  // 7: com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceSetSchemaRuleRequest
	(*InternalDatasetManagementServiceSetSchemaRuleResponse)(nil), // 8: com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceSetSchemaRuleResponse
	(*InternalDatasetManagementServiceGetSchemaRuleRequest)(nil),  // 9: com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceGetSchemaRuleRequest
	(*InternalDatasetManagementServiceGetSchemaRuleResponse)(nil), // 10: com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceGetSchemaRuleResponse
	(*InputFile)(nil),                                             // 11: com.coralogix.archive.dataset.v2.InputFile
	(*InternalWriteToDatasetRequest)(nil),                         // 12: com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest
	(*InternalWriteToDatasetResponse)(nil),                        // 13: com.coralogix.archive.dataset.v2.InternalWriteToDatasetResponse
	(*InternalWriteToDatasetRequest_AppendMode)(nil),              // 14: com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest.AppendMode
	(*InternalWriteToDatasetRequest_OverwriteMode)(nil),           // 15: com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest.OverwriteMode
	(*timestamppb.Timestamp)(nil),                                 // 16: google.protobuf.Timestamp
	(*Dataset)(nil),                                               // 17: com.coralogix.archive.dataset.v2.Dataset
	(*SchemaTemplateField)(nil),                                   // 18: com.coralogix.archive.dataset.v2.SchemaTemplateField
	(*DatasetRule)(nil),                                           // 19: com.coralogix.archive.dataset.v2.DatasetRule
	(*SchemaRule)(nil),                                            // 20: com.coralogix.archive.dataset.v2.SchemaRule
	(*Rule)(nil),                                                  // 21: com.coralogix.archive.dataset.v2.Rule
	(DataPillar)(0),                                               // 22: com.coralogix.archive.dataset.v2.DataPillar
	(*S3TargetSpec)(nil),                                          // 23: com.coralogix.archive.v2.S3TargetSpec
	(*IBMCosTargetSpec)(nil),                                      // 24: com.coralogix.archive.v2.IBMCosTargetSpec
	(*Format)(nil),                                                // 25: com.coralogix.archive.v2.Format
	(*FieldPath)(nil),                                             // 26: com.coralogix.archive.dataset.v2.FieldPath
}
var file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_depIdxs = []int32{
	16, // 0: com.coralogix.archive.dataset.v2.GetAllDatasetRulesRequest.last_update_time:type_name -> google.protobuf.Timestamp
	2,  // 1: com.coralogix.archive.dataset.v2.GetDatasetSchemaFieldsResponse.schema_fields:type_name -> com.coralogix.archive.dataset.v2.DatasetSchemaFields
	17, // 2: com.coralogix.archive.dataset.v2.DatasetSchemaFields.dataset:type_name -> com.coralogix.archive.dataset.v2.Dataset
	18, // 3: com.coralogix.archive.dataset.v2.DatasetSchemaFields.fields:type_name -> com.coralogix.archive.dataset.v2.SchemaTemplateField
	17, // 4: com.coralogix.archive.dataset.v2.CompanyDataset.dataset:type_name -> com.coralogix.archive.dataset.v2.Dataset
	3,  // 5: com.coralogix.archive.dataset.v2.GetDatasetSchemaFieldsRequest.datasets:type_name -> com.coralogix.archive.dataset.v2.CompanyDataset
	19, // 6: com.coralogix.archive.dataset.v2.CompanyDatasetRules.rules:type_name -> com.coralogix.archive.dataset.v2.DatasetRule
	5,  // 7: com.coralogix.archive.dataset.v2.GetAllDatasetRulesResponse.rules:type_name -> com.coralogix.archive.dataset.v2.CompanyDatasetRules
	16, // 8: com.coralogix.archive.dataset.v2.GetAllDatasetRulesResponse.last_update_time:type_name -> google.protobuf.Timestamp
	20, // 9: com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceSetSchemaRuleRequest.schema_rule:type_name -> com.coralogix.archive.dataset.v2.SchemaRule
	21, // 10: com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceSetSchemaRuleResponse.rule:type_name -> com.coralogix.archive.dataset.v2.Rule
	22, // 11: com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceGetSchemaRuleRequest.data_pillar:type_name -> com.coralogix.archive.dataset.v2.DataPillar
	21, // 12: com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceGetSchemaRuleResponse.rule:type_name -> com.coralogix.archive.dataset.v2.Rule
	23, // 13: com.coralogix.archive.dataset.v2.InputFile.s3:type_name -> com.coralogix.archive.v2.S3TargetSpec
	24, // 14: com.coralogix.archive.dataset.v2.InputFile.ibm_cos:type_name -> com.coralogix.archive.v2.IBMCosTargetSpec
	25, // 15: com.coralogix.archive.dataset.v2.InputFile.format:type_name -> com.coralogix.archive.v2.Format
	17, // 16: com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest.dataset:type_name -> com.coralogix.archive.dataset.v2.Dataset
	11, // 17: com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest.input_files:type_name -> com.coralogix.archive.dataset.v2.InputFile
	26, // 18: com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest.default_key_fields:type_name -> com.coralogix.archive.dataset.v2.FieldPath
	14, // 19: com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest.append:type_name -> com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest.AppendMode
	15, // 20: com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest.overwrite:type_name -> com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest.OverwriteMode
	17, // 21: com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest.OverwriteMode.overwritten_datasets:type_name -> com.coralogix.archive.dataset.v2.Dataset
	0,  // 22: com.coralogix.archive.dataset.v2.InternalDatasetManagementService.GetAllDatasetRules:input_type -> com.coralogix.archive.dataset.v2.GetAllDatasetRulesRequest
	4,  // 23: com.coralogix.archive.dataset.v2.InternalDatasetManagementService.GetDatasetSchemaFields:input_type -> com.coralogix.archive.dataset.v2.GetDatasetSchemaFieldsRequest
	7,  // 24: com.coralogix.archive.dataset.v2.InternalDatasetManagementService.SetSchemaRule:input_type -> com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceSetSchemaRuleRequest
	9,  // 25: com.coralogix.archive.dataset.v2.InternalDatasetManagementService.GetSchemaRule:input_type -> com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceGetSchemaRuleRequest
	12, // 26: com.coralogix.archive.dataset.v2.InternalDatasetManagementService.InternalWriteToDataset:input_type -> com.coralogix.archive.dataset.v2.InternalWriteToDatasetRequest
	6,  // 27: com.coralogix.archive.dataset.v2.InternalDatasetManagementService.GetAllDatasetRules:output_type -> com.coralogix.archive.dataset.v2.GetAllDatasetRulesResponse
	1,  // 28: com.coralogix.archive.dataset.v2.InternalDatasetManagementService.GetDatasetSchemaFields:output_type -> com.coralogix.archive.dataset.v2.GetDatasetSchemaFieldsResponse
	8,  // 29: com.coralogix.archive.dataset.v2.InternalDatasetManagementService.SetSchemaRule:output_type -> com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceSetSchemaRuleResponse
	10, // 30: com.coralogix.archive.dataset.v2.InternalDatasetManagementService.GetSchemaRule:output_type -> com.coralogix.archive.dataset.v2.InternalDatasetManagementServiceGetSchemaRuleResponse
	13, // 31: com.coralogix.archive.dataset.v2.InternalDatasetManagementService.InternalWriteToDataset:output_type -> com.coralogix.archive.dataset.v2.InternalWriteToDatasetResponse
	27, // [27:32] is the sub-list for method output_type
	22, // [22:27] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_init() }
func file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_init() {
	if File_com_coralogix_archive_dataset_v2_internal_dataset_service_proto != nil {
		return
	}
	file_com_coralogix_archive_dataset_v2_dataset_rules_proto_init()
	file_com_coralogix_archive_dataset_v2_preferred_schema_proto_init()
	file_com_coralogix_archive_dataset_v2_dataset_proto_init()
	file_com_coralogix_archive_dataset_v2_dataset_rules_service_proto_init()
	file_com_coralogix_archive_v2_target_proto_init()
	file_com_coralogix_archive_v2_format_proto_init()
	file_com_coralogix_archive_dataset_v2_default_keys_proto_init()
	file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[11].OneofWrappers = []any{
		(*InputFile_S3)(nil),
		(*InputFile_IbmCos)(nil),
	}
	file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes[12].OneofWrappers = []any{
		(*InternalWriteToDatasetRequest_Append)(nil),
		(*InternalWriteToDatasetRequest_Overwrite)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDesc), len(file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_goTypes,
		DependencyIndexes: file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_depIdxs,
		MessageInfos:      file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_msgTypes,
	}.Build()
	File_com_coralogix_archive_dataset_v2_internal_dataset_service_proto = out.File
	file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_goTypes = nil
	file_com_coralogix_archive_dataset_v2_internal_dataset_service_proto_depIdxs = nil
}
