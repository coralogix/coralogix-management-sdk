// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: com/coralogix/archive/dataset/v2/physical_location.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ObjectStoreLocation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Bucket:
	//
	//	*ObjectStoreLocation_S3
	//	*ObjectStoreLocation_IbmCos
	Bucket             isObjectStoreLocation_Bucket `protobuf_oneof:"bucket"`
	Prefix             string                       `protobuf:"bytes,3,opt,name=prefix,proto3" json:"prefix,omitempty"`
	EnableTags         bool                         `protobuf:"varint,4,opt,name=enable_tags,json=enableTags,proto3" json:"enable_tags,omitempty"`
	Tags               []*ObjectTag                 `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	PartitioningScheme *PartitioningScheme          `protobuf:"varint,6,opt,name=partitioning_scheme,json=partitioningScheme,proto3,enum=com.coralogix.archive.v2.PartitioningScheme,oneof" json:"partitioning_scheme,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ObjectStoreLocation) Reset() {
	*x = ObjectStoreLocation{}
	mi := &file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectStoreLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStoreLocation) ProtoMessage() {}

func (x *ObjectStoreLocation) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStoreLocation.ProtoReflect.Descriptor instead.
func (*ObjectStoreLocation) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDescGZIP(), []int{0}
}

func (x *ObjectStoreLocation) GetBucket() isObjectStoreLocation_Bucket {
	if x != nil {
		return x.Bucket
	}
	return nil
}

func (x *ObjectStoreLocation) GetS3() *S3TargetSpec {
	if x != nil {
		if x, ok := x.Bucket.(*ObjectStoreLocation_S3); ok {
			return x.S3
		}
	}
	return nil
}

func (x *ObjectStoreLocation) GetIbmCos() *IBMCosTargetSpec {
	if x != nil {
		if x, ok := x.Bucket.(*ObjectStoreLocation_IbmCos); ok {
			return x.IbmCos
		}
	}
	return nil
}

func (x *ObjectStoreLocation) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ObjectStoreLocation) GetEnableTags() bool {
	if x != nil {
		return x.EnableTags
	}
	return false
}

func (x *ObjectStoreLocation) GetTags() []*ObjectTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ObjectStoreLocation) GetPartitioningScheme() PartitioningScheme {
	if x != nil && x.PartitioningScheme != nil {
		return *x.PartitioningScheme
	}
	return PartitioningScheme_PARTITIONING_SCHEME_UNSPECIFIED
}

type isObjectStoreLocation_Bucket interface {
	isObjectStoreLocation_Bucket()
}

type ObjectStoreLocation_S3 struct {
	S3 *S3TargetSpec `protobuf:"bytes,1,opt,name=s3,proto3,oneof"`
}

type ObjectStoreLocation_IbmCos struct {
	IbmCos *IBMCosTargetSpec `protobuf:"bytes,2,opt,name=ibm_cos,json=ibmCos,proto3,oneof"`
}

func (*ObjectStoreLocation_S3) isObjectStoreLocation_Bucket() {}

func (*ObjectStoreLocation_IbmCos) isObjectStoreLocation_Bucket() {}

// Publicly known location spec. Customers could use this model in future "set location" API.
type LocationSpec struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Name     *string                `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	IsActive bool                   `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Types that are valid to be assigned to Location:
	//
	//	*LocationSpec_ObjectStoreLocation
	Location      isLocationSpec_Location `protobuf_oneof:"location"`
	Format        *Format                 `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationSpec) Reset() {
	*x = LocationSpec{}
	mi := &file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationSpec) ProtoMessage() {}

func (x *LocationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationSpec.ProtoReflect.Descriptor instead.
func (*LocationSpec) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDescGZIP(), []int{1}
}

func (x *LocationSpec) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LocationSpec) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *LocationSpec) GetLocation() isLocationSpec_Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *LocationSpec) GetObjectStoreLocation() *ObjectStoreLocation {
	if x != nil {
		if x, ok := x.Location.(*LocationSpec_ObjectStoreLocation); ok {
			return x.ObjectStoreLocation
		}
	}
	return nil
}

func (x *LocationSpec) GetFormat() *Format {
	if x != nil {
		return x.Format
	}
	return nil
}

type isLocationSpec_Location interface {
	isLocationSpec_Location()
}

type LocationSpec_ObjectStoreLocation struct {
	ObjectStoreLocation *ObjectStoreLocation `protobuf:"bytes,3,opt,name=object_store_location,json=objectStoreLocation,proto3,oneof"`
}

func (*LocationSpec_ObjectStoreLocation) isLocationSpec_Location() {}

// Internal fields that shouldn't be known outside ingestion pipeline.
// Mostly properties that can be set only for predefined datasets.
type IngestionLocationSpecProps struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MaxCompactionLevel int32                  `protobuf:"varint,1,opt,name=max_compaction_level,json=maxCompactionLevel,proto3" json:"max_compaction_level,omitempty"`
	CollectLabels      bool                   `protobuf:"varint,2,opt,name=collect_labels,json=collectLabels,proto3" json:"collect_labels,omitempty"`
	SplitByEventLabels []string               `protobuf:"bytes,3,rep,name=split_by_event_labels,json=splitByEventLabels,proto3" json:"split_by_event_labels,omitempty"`
	// Deprecated: Marked as deprecated in com/coralogix/archive/dataset/v2/physical_location.proto.
	PartitioningScheme *PartitioningScheme `protobuf:"varint,4,opt,name=partitioning_scheme,json=partitioningScheme,proto3,enum=com.coralogix.archive.v2.PartitioningScheme,oneof" json:"partitioning_scheme,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *IngestionLocationSpecProps) Reset() {
	*x = IngestionLocationSpecProps{}
	mi := &file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestionLocationSpecProps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestionLocationSpecProps) ProtoMessage() {}

func (x *IngestionLocationSpecProps) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestionLocationSpecProps.ProtoReflect.Descriptor instead.
func (*IngestionLocationSpecProps) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDescGZIP(), []int{2}
}

func (x *IngestionLocationSpecProps) GetMaxCompactionLevel() int32 {
	if x != nil {
		return x.MaxCompactionLevel
	}
	return 0
}

func (x *IngestionLocationSpecProps) GetCollectLabels() bool {
	if x != nil {
		return x.CollectLabels
	}
	return false
}

func (x *IngestionLocationSpecProps) GetSplitByEventLabels() []string {
	if x != nil {
		return x.SplitByEventLabels
	}
	return nil
}

// Deprecated: Marked as deprecated in com/coralogix/archive/dataset/v2/physical_location.proto.
func (x *IngestionLocationSpecProps) GetPartitioningScheme() PartitioningScheme {
	if x != nil && x.PartitioningScheme != nil {
		return *x.PartitioningScheme
	}
	return PartitioningScheme_PARTITIONING_SCHEME_UNSPECIFIED
}

// Specifies where specific dataset data can be found at the location.
type FinalLocation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Spec  *LocationSpec          `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	// In case of data saved to S3 - base prefix of the dataset inside the bucket, without the dynamic dt/hr part
	FinalLocationBasePrefix *string `protobuf:"bytes,2,opt,name=final_location_base_prefix,json=finalLocationBasePrefix,proto3,oneof" json:"final_location_base_prefix,omitempty"`
	// Represents a relation between datasets and its physical location. created by datasets-tracker service
	Id            string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalLocation) Reset() {
	*x = FinalLocation{}
	mi := &file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalLocation) ProtoMessage() {}

func (x *FinalLocation) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalLocation.ProtoReflect.Descriptor instead.
func (*FinalLocation) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDescGZIP(), []int{3}
}

func (x *FinalLocation) GetSpec() *LocationSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *FinalLocation) GetFinalLocationBasePrefix() string {
	if x != nil && x.FinalLocationBasePrefix != nil {
		return *x.FinalLocationBasePrefix
	}
	return ""
}

func (x *FinalLocation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Intended for internal use inside ingestion pipeline. Only part that may change after dataset-ingress.
// As of now fully filled out by stage-writer, but if there will be more changes to location properties through the pipeline, they will go here too
type IngestionFinalLocationProps struct {
	state                   protoimpl.MessageState      `protogen:"open.v1"`
	Spec                    *IngestionLocationSpecProps `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	FilenamePrefix          *string                     `protobuf:"bytes,2,opt,name=filename_prefix,json=filenamePrefix,proto3,oneof" json:"filename_prefix,omitempty"`
	Tags                    []*ObjectTag                `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	FinalLocationFullPrefix *string                     `protobuf:"bytes,4,opt,name=final_location_full_prefix,json=finalLocationFullPrefix,proto3,oneof" json:"final_location_full_prefix,omitempty"` // does not include the dynamic dt/hr part (if there is one), but everything up to it
	DefaultKeyFields        []*FieldPath                `protobuf:"bytes,5,rep,name=default_key_fields,json=defaultKeyFields,proto3" json:"default_key_fields,omitempty"`                              // Optional, needed for keyed datasets, like enrichments
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *IngestionFinalLocationProps) Reset() {
	*x = IngestionFinalLocationProps{}
	mi := &file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestionFinalLocationProps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestionFinalLocationProps) ProtoMessage() {}

func (x *IngestionFinalLocationProps) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestionFinalLocationProps.ProtoReflect.Descriptor instead.
func (*IngestionFinalLocationProps) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDescGZIP(), []int{4}
}

func (x *IngestionFinalLocationProps) GetSpec() *IngestionLocationSpecProps {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *IngestionFinalLocationProps) GetFilenamePrefix() string {
	if x != nil && x.FilenamePrefix != nil {
		return *x.FilenamePrefix
	}
	return ""
}

func (x *IngestionFinalLocationProps) GetTags() []*ObjectTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *IngestionFinalLocationProps) GetFinalLocationFullPrefix() string {
	if x != nil && x.FinalLocationFullPrefix != nil {
		return *x.FinalLocationFullPrefix
	}
	return ""
}

func (x *IngestionFinalLocationProps) GetDefaultKeyFields() []*FieldPath {
	if x != nil {
		return x.DefaultKeyFields
	}
	return nil
}

// LocationSpec + internal fields needed for ingestion (dataset-ingress)
type IngestionLocationSpec struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Location      *LocationSpec               `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Internal      *IngestionLocationSpecProps `protobuf:"bytes,2,opt,name=internal,proto3,oneof" json:"internal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestionLocationSpec) Reset() {
	*x = IngestionLocationSpec{}
	mi := &file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestionLocationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestionLocationSpec) ProtoMessage() {}

func (x *IngestionLocationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestionLocationSpec.ProtoReflect.Descriptor instead.
func (*IngestionLocationSpec) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDescGZIP(), []int{5}
}

func (x *IngestionLocationSpec) GetLocation() *LocationSpec {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *IngestionLocationSpec) GetInternal() *IngestionLocationSpecProps {
	if x != nil {
		return x.Internal
	}
	return nil
}

// Goes through the whole ingestion pipeline, and is used externally for metastores
type IngestionFinalLocation struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Location      *FinalLocation               `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Internal      *IngestionFinalLocationProps `protobuf:"bytes,2,opt,name=internal,proto3,oneof" json:"internal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestionFinalLocation) Reset() {
	*x = IngestionFinalLocation{}
	mi := &file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestionFinalLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestionFinalLocation) ProtoMessage() {}

func (x *IngestionFinalLocation) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestionFinalLocation.ProtoReflect.Descriptor instead.
func (*IngestionFinalLocation) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDescGZIP(), []int{6}
}

func (x *IngestionFinalLocation) GetLocation() *FinalLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *IngestionFinalLocation) GetInternal() *IngestionFinalLocationProps {
	if x != nil {
		return x.Internal
	}
	return nil
}

var File_com_coralogix_archive_dataset_v2_physical_location_proto protoreflect.FileDescriptor

const file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDesc = "" +
	"\n" +
	"8com/coralogix/archive/dataset/v2/physical_location.proto\x12 com.coralogix.archive.dataset.v2\x1a%com/coralogix/archive/v2/target.proto\x1a)com/coralogix/archive/v2/object_tag.proto\x1a-com/coralogix/archive/v2/archive_target.proto\x1a%com/coralogix/archive/v2/format.proto\x1a3com/coralogix/archive/dataset/v2/default_keys.proto\"\x8e\x03\n" +
	"\x13ObjectStoreLocation\x128\n" +
	"\x02s3\x18\x01 \x01(\v2&.com.coralogix.archive.v2.S3TargetSpecH\x00R\x02s3\x12E\n" +
	"\aibm_cos\x18\x02 \x01(\v2*.com.coralogix.archive.v2.IBMCosTargetSpecH\x00R\x06ibmCos\x12\x16\n" +
	"\x06prefix\x18\x03 \x01(\tR\x06prefix\x12\x1f\n" +
	"\venable_tags\x18\x04 \x01(\bR\n" +
	"enableTags\x127\n" +
	"\x04tags\x18\x05 \x03(\v2#.com.coralogix.archive.v2.ObjectTagR\x04tags\x12b\n" +
	"\x13partitioning_scheme\x18\x06 \x01(\x0e2,.com.coralogix.archive.v2.PartitioningSchemeH\x01R\x12partitioningScheme\x88\x01\x01B\b\n" +
	"\x06bucketB\x16\n" +
	"\x14_partitioning_scheme\"\x80\x02\n" +
	"\fLocationSpec\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x01R\x04name\x88\x01\x01\x12\x1b\n" +
	"\tis_active\x18\x02 \x01(\bR\bisActive\x12k\n" +
	"\x15object_store_location\x18\x03 \x01(\v25.com.coralogix.archive.dataset.v2.ObjectStoreLocationH\x00R\x13objectStoreLocation\x128\n" +
	"\x06format\x18\x04 \x01(\v2 .com.coralogix.archive.v2.FormatR\x06formatB\n" +
	"\n" +
	"\blocationB\a\n" +
	"\x05_name\"\xa8\x02\n" +
	"\x1aIngestionLocationSpecProps\x120\n" +
	"\x14max_compaction_level\x18\x01 \x01(\x05R\x12maxCompactionLevel\x12%\n" +
	"\x0ecollect_labels\x18\x02 \x01(\bR\rcollectLabels\x121\n" +
	"\x15split_by_event_labels\x18\x03 \x03(\tR\x12splitByEventLabels\x12f\n" +
	"\x13partitioning_scheme\x18\x04 \x01(\x0e2,.com.coralogix.archive.v2.PartitioningSchemeB\x02\x18\x01H\x00R\x12partitioningScheme\x88\x01\x01B\x16\n" +
	"\x14_partitioning_scheme\"\xc4\x01\n" +
	"\rFinalLocation\x12B\n" +
	"\x04spec\x18\x01 \x01(\v2..com.coralogix.archive.dataset.v2.LocationSpecR\x04spec\x12@\n" +
	"\x1afinal_location_base_prefix\x18\x02 \x01(\tH\x00R\x17finalLocationBasePrefix\x88\x01\x01\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02idB\x1d\n" +
	"\x1b_final_location_base_prefix\"\xa6\x03\n" +
	"\x1bIngestionFinalLocationProps\x12P\n" +
	"\x04spec\x18\x01 \x01(\v2<.com.coralogix.archive.dataset.v2.IngestionLocationSpecPropsR\x04spec\x12,\n" +
	"\x0ffilename_prefix\x18\x02 \x01(\tH\x00R\x0efilenamePrefix\x88\x01\x01\x127\n" +
	"\x04tags\x18\x03 \x03(\v2#.com.coralogix.archive.v2.ObjectTagR\x04tags\x12@\n" +
	"\x1afinal_location_full_prefix\x18\x04 \x01(\tH\x01R\x17finalLocationFullPrefix\x88\x01\x01\x12Y\n" +
	"\x12default_key_fields\x18\x05 \x03(\v2+.com.coralogix.archive.dataset.v2.FieldPathR\x10defaultKeyFieldsB\x12\n" +
	"\x10_filename_prefixB\x1d\n" +
	"\x1b_final_location_full_prefix\"\xcf\x01\n" +
	"\x15IngestionLocationSpec\x12J\n" +
	"\blocation\x18\x01 \x01(\v2..com.coralogix.archive.dataset.v2.LocationSpecR\blocation\x12]\n" +
	"\binternal\x18\x02 \x01(\v2<.com.coralogix.archive.dataset.v2.IngestionLocationSpecPropsH\x00R\binternal\x88\x01\x01B\v\n" +
	"\t_internal\"\xd2\x01\n" +
	"\x16IngestionFinalLocation\x12K\n" +
	"\blocation\x18\x01 \x01(\v2/.com.coralogix.archive.dataset.v2.FinalLocationR\blocation\x12^\n" +
	"\binternal\x18\x02 \x01(\v2=.com.coralogix.archive.dataset.v2.IngestionFinalLocationPropsH\x00R\binternal\x88\x01\x01B\v\n" +
	"\t_internalb\x06proto3"

var (
	file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDescOnce sync.Once
	file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDescData []byte
)

func file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDescGZIP() []byte {
	file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDescOnce.Do(func() {
		file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDesc), len(file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDesc)))
	})
	return file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDescData
}

var file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_com_coralogix_archive_dataset_v2_physical_location_proto_goTypes = []any{
	(*ObjectStoreLocation)(nil),         // 0: com.coralogix.archive.dataset.v2.ObjectStoreLocation
	(*LocationSpec)(nil),                // 1: com.coralogix.archive.dataset.v2.LocationSpec
	(*IngestionLocationSpecProps)(nil),  // 2: com.coralogix.archive.dataset.v2.IngestionLocationSpecProps
	(*FinalLocation)(nil),               // 3: com.coralogix.archive.dataset.v2.FinalLocation
	(*IngestionFinalLocationProps)(nil), // 4: com.coralogix.archive.dataset.v2.IngestionFinalLocationProps
	(*IngestionLocationSpec)(nil),       // 5: com.coralogix.archive.dataset.v2.IngestionLocationSpec
	(*IngestionFinalLocation)(nil),      // 6: com.coralogix.archive.dataset.v2.IngestionFinalLocation
	(*S3TargetSpec)(nil),                // 7: com.coralogix.archive.v2.S3TargetSpec
	(*IBMCosTargetSpec)(nil),            // 8: com.coralogix.archive.v2.IBMCosTargetSpec
	(*ObjectTag)(nil),                   // 9: com.coralogix.archive.v2.ObjectTag
	(PartitioningScheme)(0),             // 10: com.coralogix.archive.v2.PartitioningScheme
	(*Format)(nil),                      // 11: com.coralogix.archive.v2.Format
	(*FieldPath)(nil),                   // 12: com.coralogix.archive.dataset.v2.FieldPath
}
var file_com_coralogix_archive_dataset_v2_physical_location_proto_depIdxs = []int32{
	7,  // 0: com.coralogix.archive.dataset.v2.ObjectStoreLocation.s3:type_name -> com.coralogix.archive.v2.S3TargetSpec
	8,  // 1: com.coralogix.archive.dataset.v2.ObjectStoreLocation.ibm_cos:type_name -> com.coralogix.archive.v2.IBMCosTargetSpec
	9,  // 2: com.coralogix.archive.dataset.v2.ObjectStoreLocation.tags:type_name -> com.coralogix.archive.v2.ObjectTag
	10, // 3: com.coralogix.archive.dataset.v2.ObjectStoreLocation.partitioning_scheme:type_name -> com.coralogix.archive.v2.PartitioningScheme
	0,  // 4: com.coralogix.archive.dataset.v2.LocationSpec.object_store_location:type_name -> com.coralogix.archive.dataset.v2.ObjectStoreLocation
	11, // 5: com.coralogix.archive.dataset.v2.LocationSpec.format:type_name -> com.coralogix.archive.v2.Format
	10, // 6: com.coralogix.archive.dataset.v2.IngestionLocationSpecProps.partitioning_scheme:type_name -> com.coralogix.archive.v2.PartitioningScheme
	1,  // 7: com.coralogix.archive.dataset.v2.FinalLocation.spec:type_name -> com.coralogix.archive.dataset.v2.LocationSpec
	2,  // 8: com.coralogix.archive.dataset.v2.IngestionFinalLocationProps.spec:type_name -> com.coralogix.archive.dataset.v2.IngestionLocationSpecProps
	9,  // 9: com.coralogix.archive.dataset.v2.IngestionFinalLocationProps.tags:type_name -> com.coralogix.archive.v2.ObjectTag
	12, // 10: com.coralogix.archive.dataset.v2.IngestionFinalLocationProps.default_key_fields:type_name -> com.coralogix.archive.dataset.v2.FieldPath
	1,  // 11: com.coralogix.archive.dataset.v2.IngestionLocationSpec.location:type_name -> com.coralogix.archive.dataset.v2.LocationSpec
	2,  // 12: com.coralogix.archive.dataset.v2.IngestionLocationSpec.internal:type_name -> com.coralogix.archive.dataset.v2.IngestionLocationSpecProps
	3,  // 13: com.coralogix.archive.dataset.v2.IngestionFinalLocation.location:type_name -> com.coralogix.archive.dataset.v2.FinalLocation
	4,  // 14: com.coralogix.archive.dataset.v2.IngestionFinalLocation.internal:type_name -> com.coralogix.archive.dataset.v2.IngestionFinalLocationProps
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_com_coralogix_archive_dataset_v2_physical_location_proto_init() }
func file_com_coralogix_archive_dataset_v2_physical_location_proto_init() {
	if File_com_coralogix_archive_dataset_v2_physical_location_proto != nil {
		return
	}
	file_com_coralogix_archive_v2_target_proto_init()
	file_com_coralogix_archive_v2_object_tag_proto_init()
	file_com_coralogix_archive_v2_archive_target_proto_init()
	file_com_coralogix_archive_v2_format_proto_init()
	file_com_coralogix_archive_dataset_v2_default_keys_proto_init()
	file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[0].OneofWrappers = []any{
		(*ObjectStoreLocation_S3)(nil),
		(*ObjectStoreLocation_IbmCos)(nil),
	}
	file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[1].OneofWrappers = []any{
		(*LocationSpec_ObjectStoreLocation)(nil),
	}
	file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[2].OneofWrappers = []any{}
	file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[3].OneofWrappers = []any{}
	file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[4].OneofWrappers = []any{}
	file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[5].OneofWrappers = []any{}
	file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDesc), len(file_com_coralogix_archive_dataset_v2_physical_location_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogix_archive_dataset_v2_physical_location_proto_goTypes,
		DependencyIndexes: file_com_coralogix_archive_dataset_v2_physical_location_proto_depIdxs,
		MessageInfos:      file_com_coralogix_archive_dataset_v2_physical_location_proto_msgTypes,
	}.Build()
	File_com_coralogix_archive_dataset_v2_physical_location_proto = out.File
	file_com_coralogix_archive_dataset_v2_physical_location_proto_goTypes = nil
	file_com_coralogix_archive_dataset_v2_physical_location_proto_depIdxs = nil
}
