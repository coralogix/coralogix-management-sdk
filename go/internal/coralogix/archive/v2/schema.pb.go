// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: com/coralogix/archive/v2/schema.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Namespace int32

const (
	Namespace_NAMESPACE_UNSPECIFIED Namespace = 0
	Namespace_NAMESPACE_METADATA    Namespace = 1
	Namespace_NAMESPACE_LABELS      Namespace = 2
	Namespace_NAMESPACE_USER_DATA   Namespace = 3
)

// Enum value maps for Namespace.
var (
	Namespace_name = map[int32]string{
		0: "NAMESPACE_UNSPECIFIED",
		1: "NAMESPACE_METADATA",
		2: "NAMESPACE_LABELS",
		3: "NAMESPACE_USER_DATA",
	}
	Namespace_value = map[string]int32{
		"NAMESPACE_UNSPECIFIED": 0,
		"NAMESPACE_METADATA":    1,
		"NAMESPACE_LABELS":      2,
		"NAMESPACE_USER_DATA":   3,
	}
)

func (x Namespace) Enum() *Namespace {
	p := new(Namespace)
	*p = x
	return p
}

func (x Namespace) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Namespace) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogix_archive_v2_schema_proto_enumTypes[0].Descriptor()
}

func (Namespace) Type() protoreflect.EnumType {
	return &file_com_coralogix_archive_v2_schema_proto_enumTypes[0]
}

func (x Namespace) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Namespace.Descriptor instead.
func (Namespace) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_schema_proto_rawDescGZIP(), []int{0}
}

type SchemaType int32

const (
	SchemaType_SCHEMA_TYPE_UNSPECIFIED      SchemaType = 0
	SchemaType_SCHEMA_TYPE_STRING           SchemaType = 1
	SchemaType_SCHEMA_TYPE_TIMESTAMP_NANOS  SchemaType = 2
	SchemaType_SCHEMA_TYPE_TIMESTAMP_MICROS SchemaType = 3
)

// Enum value maps for SchemaType.
var (
	SchemaType_name = map[int32]string{
		0: "SCHEMA_TYPE_UNSPECIFIED",
		1: "SCHEMA_TYPE_STRING",
		2: "SCHEMA_TYPE_TIMESTAMP_NANOS",
		3: "SCHEMA_TYPE_TIMESTAMP_MICROS",
	}
	SchemaType_value = map[string]int32{
		"SCHEMA_TYPE_UNSPECIFIED":      0,
		"SCHEMA_TYPE_STRING":           1,
		"SCHEMA_TYPE_TIMESTAMP_NANOS":  2,
		"SCHEMA_TYPE_TIMESTAMP_MICROS": 3,
	}
)

func (x SchemaType) Enum() *SchemaType {
	p := new(SchemaType)
	*p = x
	return p
}

func (x SchemaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SchemaType) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogix_archive_v2_schema_proto_enumTypes[1].Descriptor()
}

func (SchemaType) Type() protoreflect.EnumType {
	return &file_com_coralogix_archive_v2_schema_proto_enumTypes[1]
}

func (x SchemaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SchemaType.Descriptor instead.
func (SchemaType) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_schema_proto_rawDescGZIP(), []int{1}
}

type SubSchema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     Namespace              `protobuf:"varint,1,opt,name=namespace,proto3,enum=com.coralogix.archive.v2.Namespace" json:"namespace,omitempty"`
	Fields        map[string]*FieldNode  `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubSchema) Reset() {
	*x = SubSchema{}
	mi := &file_com_coralogix_archive_v2_schema_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubSchema) ProtoMessage() {}

func (x *SubSchema) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_schema_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubSchema.ProtoReflect.Descriptor instead.
func (*SubSchema) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_schema_proto_rawDescGZIP(), []int{0}
}

func (x *SubSchema) GetNamespace() Namespace {
	if x != nil {
		return x.Namespace
	}
	return Namespace_NAMESPACE_UNSPECIFIED
}

func (x *SubSchema) GetFields() map[string]*FieldNode {
	if x != nil {
		return x.Fields
	}
	return nil
}

type SchemaTree struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemas       []*SubSchema           `protobuf:"bytes,1,rep,name=schemas,proto3" json:"schemas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchemaTree) Reset() {
	*x = SchemaTree{}
	mi := &file_com_coralogix_archive_v2_schema_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchemaTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaTree) ProtoMessage() {}

func (x *SchemaTree) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_schema_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaTree.ProtoReflect.Descriptor instead.
func (*SchemaTree) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_schema_proto_rawDescGZIP(), []int{1}
}

func (x *SchemaTree) GetSchemas() []*SubSchema {
	if x != nil {
		return x.Schemas
	}
	return nil
}

type FieldNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Children      map[string]*FieldNode  `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Metadata      *FieldMetadata         `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldNode) Reset() {
	*x = FieldNode{}
	mi := &file_com_coralogix_archive_v2_schema_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldNode) ProtoMessage() {}

func (x *FieldNode) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_schema_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldNode.ProtoReflect.Descriptor instead.
func (*FieldNode) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_schema_proto_rawDescGZIP(), []int{2}
}

func (x *FieldNode) GetChildren() map[string]*FieldNode {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *FieldNode) GetMetadata() *FieldMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type FieldMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Location      *FieldLocation         `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Required      bool                   `protobuf:"varint,2,opt,name=required,proto3" json:"required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldMetadata) Reset() {
	*x = FieldMetadata{}
	mi := &file_com_coralogix_archive_v2_schema_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMetadata) ProtoMessage() {}

func (x *FieldMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_schema_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMetadata.ProtoReflect.Descriptor instead.
func (*FieldMetadata) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_schema_proto_rawDescGZIP(), []int{3}
}

func (x *FieldMetadata) GetLocation() *FieldLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *FieldMetadata) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

type FieldLocation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Location:
	//
	//	*FieldLocation_Payload
	//	*FieldLocation_Column
	Location      isFieldLocation_Location `protobuf_oneof:"location"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldLocation) Reset() {
	*x = FieldLocation{}
	mi := &file_com_coralogix_archive_v2_schema_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldLocation) ProtoMessage() {}

func (x *FieldLocation) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_schema_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldLocation.ProtoReflect.Descriptor instead.
func (*FieldLocation) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_schema_proto_rawDescGZIP(), []int{4}
}

func (x *FieldLocation) GetLocation() isFieldLocation_Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *FieldLocation) GetPayload() *Payload {
	if x != nil {
		if x, ok := x.Location.(*FieldLocation_Payload); ok {
			return x.Payload
		}
	}
	return nil
}

func (x *FieldLocation) GetColumn() *Column {
	if x != nil {
		if x, ok := x.Location.(*FieldLocation_Column); ok {
			return x.Column
		}
	}
	return nil
}

type isFieldLocation_Location interface {
	isFieldLocation_Location()
}

type FieldLocation_Payload struct {
	Payload *Payload `protobuf:"bytes,1,opt,name=payload,proto3,oneof"`
}

type FieldLocation_Column struct {
	Column *Column `protobuf:"bytes,2,opt,name=column,proto3,oneof"`
}

func (*FieldLocation_Payload) isFieldLocation_Location() {}

func (*FieldLocation_Column) isFieldLocation_Location() {}

type Payload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Payload) Reset() {
	*x = Payload{}
	mi := &file_com_coralogix_archive_v2_schema_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_schema_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_schema_proto_rawDescGZIP(), []int{5}
}

type Column struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column) Reset() {
	*x = Column{}
	mi := &file_com_coralogix_archive_v2_schema_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_archive_v2_schema_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_com_coralogix_archive_v2_schema_proto_rawDescGZIP(), []int{6}
}

func (x *Column) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

var File_com_coralogix_archive_v2_schema_proto protoreflect.FileDescriptor

const file_com_coralogix_archive_v2_schema_proto_rawDesc = "" +
	"\n" +
	"%com/coralogix/archive/v2/schema.proto\x12\x18com.coralogix.archive.v2\"\xf7\x01\n" +
	"\tSubSchema\x12A\n" +
	"\tnamespace\x18\x01 \x01(\x0e2#.com.coralogix.archive.v2.NamespaceR\tnamespace\x12G\n" +
	"\x06fields\x18\x02 \x03(\v2/.com.coralogix.archive.v2.SubSchema.FieldsEntryR\x06fields\x1a^\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x129\n" +
	"\x05value\x18\x02 \x01(\v2#.com.coralogix.archive.v2.FieldNodeR\x05value:\x028\x01\"K\n" +
	"\n" +
	"SchemaTree\x12=\n" +
	"\aschemas\x18\x01 \x03(\v2#.com.coralogix.archive.v2.SubSchemaR\aschemas\"\x87\x02\n" +
	"\tFieldNode\x12M\n" +
	"\bchildren\x18\x02 \x03(\v21.com.coralogix.archive.v2.FieldNode.ChildrenEntryR\bchildren\x12C\n" +
	"\bmetadata\x18\x03 \x01(\v2'.com.coralogix.archive.v2.FieldMetadataR\bmetadata\x1a`\n" +
	"\rChildrenEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x129\n" +
	"\x05value\x18\x02 \x01(\v2#.com.coralogix.archive.v2.FieldNodeR\x05value:\x028\x01J\x04\b\x01\x10\x02\"p\n" +
	"\rFieldMetadata\x12C\n" +
	"\blocation\x18\x01 \x01(\v2'.com.coralogix.archive.v2.FieldLocationR\blocation\x12\x1a\n" +
	"\brequired\x18\x02 \x01(\bR\brequired\"\x96\x01\n" +
	"\rFieldLocation\x12=\n" +
	"\apayload\x18\x01 \x01(\v2!.com.coralogix.archive.v2.PayloadH\x00R\apayload\x12:\n" +
	"\x06column\x18\x02 \x01(\v2 .com.coralogix.archive.v2.ColumnH\x00R\x06columnB\n" +
	"\n" +
	"\blocation\"\t\n" +
	"\aPayload\"\x1e\n" +
	"\x06Column\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index*m\n" +
	"\tNamespace\x12\x19\n" +
	"\x15NAMESPACE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12NAMESPACE_METADATA\x10\x01\x12\x14\n" +
	"\x10NAMESPACE_LABELS\x10\x02\x12\x17\n" +
	"\x13NAMESPACE_USER_DATA\x10\x03*\x84\x01\n" +
	"\n" +
	"SchemaType\x12\x1b\n" +
	"\x17SCHEMA_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12SCHEMA_TYPE_STRING\x10\x01\x12\x1f\n" +
	"\x1bSCHEMA_TYPE_TIMESTAMP_NANOS\x10\x02\x12 \n" +
	"\x1cSCHEMA_TYPE_TIMESTAMP_MICROS\x10\x03b\x06proto3"

var (
	file_com_coralogix_archive_v2_schema_proto_rawDescOnce sync.Once
	file_com_coralogix_archive_v2_schema_proto_rawDescData []byte
)

func file_com_coralogix_archive_v2_schema_proto_rawDescGZIP() []byte {
	file_com_coralogix_archive_v2_schema_proto_rawDescOnce.Do(func() {
		file_com_coralogix_archive_v2_schema_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_coralogix_archive_v2_schema_proto_rawDesc), len(file_com_coralogix_archive_v2_schema_proto_rawDesc)))
	})
	return file_com_coralogix_archive_v2_schema_proto_rawDescData
}

var file_com_coralogix_archive_v2_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_com_coralogix_archive_v2_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_com_coralogix_archive_v2_schema_proto_goTypes = []any{
	(Namespace)(0),        // 0: com.coralogix.archive.v2.Namespace
	(SchemaType)(0),       // 1: com.coralogix.archive.v2.SchemaType
	(*SubSchema)(nil),     // 2: com.coralogix.archive.v2.SubSchema
	(*SchemaTree)(nil),    // 3: com.coralogix.archive.v2.SchemaTree
	(*FieldNode)(nil),     // 4: com.coralogix.archive.v2.FieldNode
	(*FieldMetadata)(nil), // 5: com.coralogix.archive.v2.FieldMetadata
	(*FieldLocation)(nil), // 6: com.coralogix.archive.v2.FieldLocation
	(*Payload)(nil),       // 7: com.coralogix.archive.v2.Payload
	(*Column)(nil),        // 8: com.coralogix.archive.v2.Column
	nil,                   // 9: com.coralogix.archive.v2.SubSchema.FieldsEntry
	nil,                   // 10: com.coralogix.archive.v2.FieldNode.ChildrenEntry
}
var file_com_coralogix_archive_v2_schema_proto_depIdxs = []int32{
	0,  // 0: com.coralogix.archive.v2.SubSchema.namespace:type_name -> com.coralogix.archive.v2.Namespace
	9,  // 1: com.coralogix.archive.v2.SubSchema.fields:type_name -> com.coralogix.archive.v2.SubSchema.FieldsEntry
	2,  // 2: com.coralogix.archive.v2.SchemaTree.schemas:type_name -> com.coralogix.archive.v2.SubSchema
	10, // 3: com.coralogix.archive.v2.FieldNode.children:type_name -> com.coralogix.archive.v2.FieldNode.ChildrenEntry
	5,  // 4: com.coralogix.archive.v2.FieldNode.metadata:type_name -> com.coralogix.archive.v2.FieldMetadata
	6,  // 5: com.coralogix.archive.v2.FieldMetadata.location:type_name -> com.coralogix.archive.v2.FieldLocation
	7,  // 6: com.coralogix.archive.v2.FieldLocation.payload:type_name -> com.coralogix.archive.v2.Payload
	8,  // 7: com.coralogix.archive.v2.FieldLocation.column:type_name -> com.coralogix.archive.v2.Column
	4,  // 8: com.coralogix.archive.v2.SubSchema.FieldsEntry.value:type_name -> com.coralogix.archive.v2.FieldNode
	4,  // 9: com.coralogix.archive.v2.FieldNode.ChildrenEntry.value:type_name -> com.coralogix.archive.v2.FieldNode
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_com_coralogix_archive_v2_schema_proto_init() }
func file_com_coralogix_archive_v2_schema_proto_init() {
	if File_com_coralogix_archive_v2_schema_proto != nil {
		return
	}
	file_com_coralogix_archive_v2_schema_proto_msgTypes[4].OneofWrappers = []any{
		(*FieldLocation_Payload)(nil),
		(*FieldLocation_Column)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_coralogix_archive_v2_schema_proto_rawDesc), len(file_com_coralogix_archive_v2_schema_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogix_archive_v2_schema_proto_goTypes,
		DependencyIndexes: file_com_coralogix_archive_v2_schema_proto_depIdxs,
		EnumInfos:         file_com_coralogix_archive_v2_schema_proto_enumTypes,
		MessageInfos:      file_com_coralogix_archive_v2_schema_proto_msgTypes,
	}.Build()
	File_com_coralogix_archive_v2_schema_proto = out.File
	file_com_coralogix_archive_v2_schema_proto_goTypes = nil
	file_com_coralogix_archive_v2_schema_proto_depIdxs = nil
}
