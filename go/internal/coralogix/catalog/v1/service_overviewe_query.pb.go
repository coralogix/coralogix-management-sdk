// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.0
// source: com/coralogix/catalog/v1/service_overviewe_query.proto

package v1

import (
	v1 "github.com/coralogix/coralogix-management-sdk/go/internal/coralogix/global_mapping/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GraphMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject         ActionGraphSubject     `protobuf:"varint,1,opt,name=subject,proto3,enum=com.coralogix.catalog.v1.ActionGraphSubject" json:"subject,omitempty"`
	Topk            *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=topk,proto3" json:"topk,omitempty"`
	AggregationType v1.AggregationType     `protobuf:"varint,3,opt,name=aggregation_type,json=aggregationType,proto3,enum=com.coralogix.global_mapping.v1.AggregationType" json:"aggregation_type,omitempty"`
}

func (x *GraphMetadata) Reset() {
	*x = GraphMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_service_overviewe_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphMetadata) ProtoMessage() {}

func (x *GraphMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_service_overviewe_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphMetadata.ProtoReflect.Descriptor instead.
func (*GraphMetadata) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_service_overviewe_query_proto_rawDescGZIP(), []int{0}
}

func (x *GraphMetadata) GetSubject() ActionGraphSubject {
	if x != nil {
		return x.Subject
	}
	return ActionGraphSubject_ACTION_GRAPH_SUBJECT_UNSPECIFIED
}

func (x *GraphMetadata) GetTopk() *wrapperspb.Int32Value {
	if x != nil {
		return x.Topk
	}
	return nil
}

func (x *GraphMetadata) GetAggregationType() v1.AggregationType {
	if x != nil {
		return x.AggregationType
	}
	return v1.AggregationType(0)
}

type ServiceOverviewQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeRange             *TimeRange              `protobuf:"bytes,1,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	ServiceName           *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	ServiceCatalogFilters []*ServiceCatalogFilter `protobuf:"bytes,3,rep,name=service_catalog_filters,json=serviceCatalogFilters,proto3" json:"service_catalog_filters,omitempty"`
	SpanKind              []SpanKind              `protobuf:"varint,4,rep,packed,name=span_kind,json=spanKind,proto3,enum=com.coralogix.catalog.v1.SpanKind" json:"span_kind,omitempty"`
	Graphs                []*GraphMetadata        `protobuf:"bytes,5,rep,name=graphs,proto3" json:"graphs,omitempty"`
	SubjectLabel          *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=subject_label,json=subjectLabel,proto3" json:"subject_label,omitempty"`
}

func (x *ServiceOverviewQuery) Reset() {
	*x = ServiceOverviewQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_service_overviewe_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceOverviewQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceOverviewQuery) ProtoMessage() {}

func (x *ServiceOverviewQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_service_overviewe_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceOverviewQuery.ProtoReflect.Descriptor instead.
func (*ServiceOverviewQuery) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_service_overviewe_query_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceOverviewQuery) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *ServiceOverviewQuery) GetServiceName() *wrapperspb.StringValue {
	if x != nil {
		return x.ServiceName
	}
	return nil
}

func (x *ServiceOverviewQuery) GetServiceCatalogFilters() []*ServiceCatalogFilter {
	if x != nil {
		return x.ServiceCatalogFilters
	}
	return nil
}

func (x *ServiceOverviewQuery) GetSpanKind() []SpanKind {
	if x != nil {
		return x.SpanKind
	}
	return nil
}

func (x *ServiceOverviewQuery) GetGraphs() []*GraphMetadata {
	if x != nil {
		return x.Graphs
	}
	return nil
}

func (x *ServiceOverviewQuery) GetSubjectLabel() *wrapperspb.StringValue {
	if x != nil {
		return x.SubjectLabel
	}
	return nil
}

var File_com_coralogix_catalog_v1_service_overviewe_query_proto protoreflect.FileDescriptor

var file_com_coralogix_catalog_v1_service_overviewe_query_proto_rawDesc = []byte{
	0x0a, 0x36, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x65, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x25, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x28, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x61, 0x6e,
	0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x37, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x01, 0x0a, 0x0d, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04,
	0x74, 0x6f, 0x70, 0x6b, 0x12, 0x5b, 0x0a, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xc8, 0x03, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x76, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x42, 0x0a, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3f,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x66, 0x0a, 0x17, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x6e, 0x5f,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x08,
	0x73, 0x70, 0x61, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x06, 0x67, 0x72, 0x61, 0x70, 0x68, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogix_catalog_v1_service_overviewe_query_proto_rawDescOnce sync.Once
	file_com_coralogix_catalog_v1_service_overviewe_query_proto_rawDescData = file_com_coralogix_catalog_v1_service_overviewe_query_proto_rawDesc
)

func file_com_coralogix_catalog_v1_service_overviewe_query_proto_rawDescGZIP() []byte {
	file_com_coralogix_catalog_v1_service_overviewe_query_proto_rawDescOnce.Do(func() {
		file_com_coralogix_catalog_v1_service_overviewe_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogix_catalog_v1_service_overviewe_query_proto_rawDescData)
	})
	return file_com_coralogix_catalog_v1_service_overviewe_query_proto_rawDescData
}

var file_com_coralogix_catalog_v1_service_overviewe_query_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_com_coralogix_catalog_v1_service_overviewe_query_proto_goTypes = []any{
	(*GraphMetadata)(nil),          // 0: com.coralogix.catalog.v1.GraphMetadata
	(*ServiceOverviewQuery)(nil),   // 1: com.coralogix.catalog.v1.ServiceOverviewQuery
	(ActionGraphSubject)(0),        // 2: com.coralogix.catalog.v1.ActionGraphSubject
	(*wrapperspb.Int32Value)(nil),  // 3: google.protobuf.Int32Value
	(v1.AggregationType)(0),        // 4: com.coralogix.global_mapping.v1.AggregationType
	(*TimeRange)(nil),              // 5: com.coralogix.catalog.v1.TimeRange
	(*wrapperspb.StringValue)(nil), // 6: google.protobuf.StringValue
	(*ServiceCatalogFilter)(nil),   // 7: com.coralogix.catalog.v1.ServiceCatalogFilter
	(SpanKind)(0),                  // 8: com.coralogix.catalog.v1.SpanKind
}
var file_com_coralogix_catalog_v1_service_overviewe_query_proto_depIdxs = []int32{
	2, // 0: com.coralogix.catalog.v1.GraphMetadata.subject:type_name -> com.coralogix.catalog.v1.ActionGraphSubject
	3, // 1: com.coralogix.catalog.v1.GraphMetadata.topk:type_name -> google.protobuf.Int32Value
	4, // 2: com.coralogix.catalog.v1.GraphMetadata.aggregation_type:type_name -> com.coralogix.global_mapping.v1.AggregationType
	5, // 3: com.coralogix.catalog.v1.ServiceOverviewQuery.time_range:type_name -> com.coralogix.catalog.v1.TimeRange
	6, // 4: com.coralogix.catalog.v1.ServiceOverviewQuery.service_name:type_name -> google.protobuf.StringValue
	7, // 5: com.coralogix.catalog.v1.ServiceOverviewQuery.service_catalog_filters:type_name -> com.coralogix.catalog.v1.ServiceCatalogFilter
	8, // 6: com.coralogix.catalog.v1.ServiceOverviewQuery.span_kind:type_name -> com.coralogix.catalog.v1.SpanKind
	0, // 7: com.coralogix.catalog.v1.ServiceOverviewQuery.graphs:type_name -> com.coralogix.catalog.v1.GraphMetadata
	6, // 8: com.coralogix.catalog.v1.ServiceOverviewQuery.subject_label:type_name -> google.protobuf.StringValue
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_com_coralogix_catalog_v1_service_overviewe_query_proto_init() }
func file_com_coralogix_catalog_v1_service_overviewe_query_proto_init() {
	if File_com_coralogix_catalog_v1_service_overviewe_query_proto != nil {
		return
	}
	file_com_coralogix_catalog_v1_common_proto_init()
	file_com_coralogix_catalog_v1_service_proto_init()
	file_com_coralogix_catalog_v1_span_kind_proto_init()
	file_com_coralogix_catalog_v1_action_graph_subject_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_com_coralogix_catalog_v1_service_overviewe_query_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GraphMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_catalog_v1_service_overviewe_query_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceOverviewQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogix_catalog_v1_service_overviewe_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogix_catalog_v1_service_overviewe_query_proto_goTypes,
		DependencyIndexes: file_com_coralogix_catalog_v1_service_overviewe_query_proto_depIdxs,
		MessageInfos:      file_com_coralogix_catalog_v1_service_overviewe_query_proto_msgTypes,
	}.Build()
	File_com_coralogix_catalog_v1_service_overviewe_query_proto = out.File
	file_com_coralogix_catalog_v1_service_overviewe_query_proto_rawDesc = nil
	file_com_coralogix_catalog_v1_service_overviewe_query_proto_goTypes = nil
	file_com_coralogix_catalog_v1_service_overviewe_query_proto_depIdxs = nil
}
