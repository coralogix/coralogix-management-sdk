// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.29.1
// source: com/coralogix/catalog/v1/service_overview_service.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ServiceOverviewService_GetServiceOverview_FullMethodName = "/com.coralogix.catalog.v1.ServiceOverviewService/GetServiceOverview"
)

// ServiceOverviewServiceClient is the client API for ServiceOverviewService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ServiceOverviewServiceClient interface {
	GetServiceOverview(ctx context.Context, in *GetServiceOverviewRequest, opts ...grpc.CallOption) (*GetServiceOverviewResponse, error)
}

type serviceOverviewServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewServiceOverviewServiceClient(cc grpc.ClientConnInterface) ServiceOverviewServiceClient {
	return &serviceOverviewServiceClient{cc}
}

func (c *serviceOverviewServiceClient) GetServiceOverview(ctx context.Context, in *GetServiceOverviewRequest, opts ...grpc.CallOption) (*GetServiceOverviewResponse, error) {
	out := new(GetServiceOverviewResponse)
	err := c.cc.Invoke(ctx, ServiceOverviewService_GetServiceOverview_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceOverviewServiceServer is the server API for ServiceOverviewService service.
// All implementations must embed UnimplementedServiceOverviewServiceServer
// for forward compatibility
type ServiceOverviewServiceServer interface {
	GetServiceOverview(context.Context, *GetServiceOverviewRequest) (*GetServiceOverviewResponse, error)
	mustEmbedUnimplementedServiceOverviewServiceServer()
}

// UnimplementedServiceOverviewServiceServer must be embedded to have forward compatible implementations.
type UnimplementedServiceOverviewServiceServer struct {
}

func (UnimplementedServiceOverviewServiceServer) GetServiceOverview(context.Context, *GetServiceOverviewRequest) (*GetServiceOverviewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceOverview not implemented")
}
func (UnimplementedServiceOverviewServiceServer) mustEmbedUnimplementedServiceOverviewServiceServer() {
}

// UnsafeServiceOverviewServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ServiceOverviewServiceServer will
// result in compilation errors.
type UnsafeServiceOverviewServiceServer interface {
	mustEmbedUnimplementedServiceOverviewServiceServer()
}

func RegisterServiceOverviewServiceServer(s grpc.ServiceRegistrar, srv ServiceOverviewServiceServer) {
	s.RegisterService(&ServiceOverviewService_ServiceDesc, srv)
}

func _ServiceOverviewService_GetServiceOverview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceOverviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceOverviewServiceServer).GetServiceOverview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ServiceOverviewService_GetServiceOverview_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceOverviewServiceServer).GetServiceOverview(ctx, req.(*GetServiceOverviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ServiceOverviewService_ServiceDesc is the grpc.ServiceDesc for ServiceOverviewService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ServiceOverviewService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "com.coralogix.catalog.v1.ServiceOverviewService",
	HandlerType: (*ServiceOverviewServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetServiceOverview",
			Handler:    _ServiceOverviewService_GetServiceOverview_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "com/coralogix/catalog/v1/service_overview_service.proto",
}
