// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: com/coralogix/catalog/v1/service_overview.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SeriesResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *wrapperspb.Int64Value  `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DataPoint *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=data_point,json=dataPoint,proto3" json:"data_point,omitempty"`
}

func (x *SeriesResult) Reset() {
	*x = SeriesResult{}
	mi := &file_com_coralogix_catalog_v1_service_overview_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeriesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeriesResult) ProtoMessage() {}

func (x *SeriesResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_service_overview_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeriesResult.ProtoReflect.Descriptor instead.
func (*SeriesResult) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_service_overview_proto_rawDescGZIP(), []int{0}
}

func (x *SeriesResult) GetTimestamp() *wrapperspb.Int64Value {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SeriesResult) GetDataPoint() *wrapperspb.StringValue {
	if x != nil {
		return x.DataPoint
	}
	return nil
}

type OperationSeriesResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationName *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`
	Values        []*SeriesResult         `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	Steps         *wrapperspb.Int32Value  `protobuf:"bytes,3,opt,name=steps,proto3" json:"steps,omitempty"`
}

func (x *OperationSeriesResult) Reset() {
	*x = OperationSeriesResult{}
	mi := &file_com_coralogix_catalog_v1_service_overview_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationSeriesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationSeriesResult) ProtoMessage() {}

func (x *OperationSeriesResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_service_overview_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationSeriesResult.ProtoReflect.Descriptor instead.
func (*OperationSeriesResult) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_service_overview_proto_rawDescGZIP(), []int{1}
}

func (x *OperationSeriesResult) GetOperationName() *wrapperspb.StringValue {
	if x != nil {
		return x.OperationName
	}
	return nil
}

func (x *OperationSeriesResult) GetValues() []*SeriesResult {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *OperationSeriesResult) GetSteps() *wrapperspb.Int32Value {
	if x != nil {
		return x.Steps
	}
	return nil
}

type ClientTimeConsumingSeriesResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerService *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=peer_service,json=peerService,proto3" json:"peer_service,omitempty"`
	Values      []*SeriesResult         `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	Steps       *wrapperspb.Int32Value  `protobuf:"bytes,3,opt,name=steps,proto3" json:"steps,omitempty"`
}

func (x *ClientTimeConsumingSeriesResult) Reset() {
	*x = ClientTimeConsumingSeriesResult{}
	mi := &file_com_coralogix_catalog_v1_service_overview_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientTimeConsumingSeriesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientTimeConsumingSeriesResult) ProtoMessage() {}

func (x *ClientTimeConsumingSeriesResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_service_overview_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientTimeConsumingSeriesResult.ProtoReflect.Descriptor instead.
func (*ClientTimeConsumingSeriesResult) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_service_overview_proto_rawDescGZIP(), []int{2}
}

func (x *ClientTimeConsumingSeriesResult) GetPeerService() *wrapperspb.StringValue {
	if x != nil {
		return x.PeerService
	}
	return nil
}

func (x *ClientTimeConsumingSeriesResult) GetValues() []*SeriesResult {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ClientTimeConsumingSeriesResult) GetSteps() *wrapperspb.Int32Value {
	if x != nil {
		return x.Steps
	}
	return nil
}

type ServiceOverview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName                           *wrapperspb.StringValue            `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	RequestPerSecond                      []*OperationSeriesResult           `protobuf:"bytes,2,rep,name=request_per_second,json=requestPerSecond,proto3" json:"request_per_second,omitempty"`
	ErrorRate                             []*OperationSeriesResult           `protobuf:"bytes,3,rep,name=error_rate,json=errorRate,proto3" json:"error_rate,omitempty"`
	P95Latency                            []*OperationSeriesResult           `protobuf:"bytes,4,rep,name=p95_latency,json=p95Latency,proto3" json:"p95_latency,omitempty"`
	ClientTimeConsuming                   []*ClientTimeConsumingSeriesResult `protobuf:"bytes,5,rep,name=client_time_consuming,json=clientTimeConsuming,proto3" json:"client_time_consuming,omitempty"`
	RequestPerSecondNumberOfOperations    *wrapperspb.Int32Value             `protobuf:"bytes,6,opt,name=request_per_second_number_of_operations,json=requestPerSecondNumberOfOperations,proto3" json:"request_per_second_number_of_operations,omitempty"`
	ErrorRateNumberOfOperations           *wrapperspb.Int32Value             `protobuf:"bytes,7,opt,name=error_rate_number_of_operations,json=errorRateNumberOfOperations,proto3" json:"error_rate_number_of_operations,omitempty"`
	ClientTimeConsumingNumberOfOperations *wrapperspb.Int32Value             `protobuf:"bytes,8,opt,name=client_time_consuming_number_of_operations,json=clientTimeConsumingNumberOfOperations,proto3" json:"client_time_consuming_number_of_operations,omitempty"`
}

func (x *ServiceOverview) Reset() {
	*x = ServiceOverview{}
	mi := &file_com_coralogix_catalog_v1_service_overview_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceOverview) ProtoMessage() {}

func (x *ServiceOverview) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_service_overview_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceOverview.ProtoReflect.Descriptor instead.
func (*ServiceOverview) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_service_overview_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceOverview) GetServiceName() *wrapperspb.StringValue {
	if x != nil {
		return x.ServiceName
	}
	return nil
}

func (x *ServiceOverview) GetRequestPerSecond() []*OperationSeriesResult {
	if x != nil {
		return x.RequestPerSecond
	}
	return nil
}

func (x *ServiceOverview) GetErrorRate() []*OperationSeriesResult {
	if x != nil {
		return x.ErrorRate
	}
	return nil
}

func (x *ServiceOverview) GetP95Latency() []*OperationSeriesResult {
	if x != nil {
		return x.P95Latency
	}
	return nil
}

func (x *ServiceOverview) GetClientTimeConsuming() []*ClientTimeConsumingSeriesResult {
	if x != nil {
		return x.ClientTimeConsuming
	}
	return nil
}

func (x *ServiceOverview) GetRequestPerSecondNumberOfOperations() *wrapperspb.Int32Value {
	if x != nil {
		return x.RequestPerSecondNumberOfOperations
	}
	return nil
}

func (x *ServiceOverview) GetErrorRateNumberOfOperations() *wrapperspb.Int32Value {
	if x != nil {
		return x.ErrorRateNumberOfOperations
	}
	return nil
}

func (x *ServiceOverview) GetClientTimeConsumingNumberOfOperations() *wrapperspb.Int32Value {
	if x != nil {
		return x.ClientTimeConsumingNumberOfOperations
	}
	return nil
}

var File_com_coralogix_catalog_v1_service_overview_proto protoreflect.FileDescriptor

var file_com_coralogix_catalog_v1_service_overview_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x0c,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3b, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x15, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x43,
	0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0xd5, 0x01, 0x0a, 0x1f, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x0c, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b,
	0x70, 0x65, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x73,
	0x74, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0x8f,
	0x06, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x5d, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x12, 0x4e, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x70, 0x39, 0x35, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x70, 0x39, 0x35, 0x4c, 0x61, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x6d, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x13,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x70, 0x0a, 0x27, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x6f, 0x66, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x22, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x61, 0x0a, 0x1f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x1b, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x76, 0x0a, 0x2a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x69, 0x6e,
	0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x25, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x69, 0x6e, 0x67, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogix_catalog_v1_service_overview_proto_rawDescOnce sync.Once
	file_com_coralogix_catalog_v1_service_overview_proto_rawDescData = file_com_coralogix_catalog_v1_service_overview_proto_rawDesc
)

func file_com_coralogix_catalog_v1_service_overview_proto_rawDescGZIP() []byte {
	file_com_coralogix_catalog_v1_service_overview_proto_rawDescOnce.Do(func() {
		file_com_coralogix_catalog_v1_service_overview_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogix_catalog_v1_service_overview_proto_rawDescData)
	})
	return file_com_coralogix_catalog_v1_service_overview_proto_rawDescData
}

var file_com_coralogix_catalog_v1_service_overview_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_com_coralogix_catalog_v1_service_overview_proto_goTypes = []any{
	(*SeriesResult)(nil),                    // 0: com.coralogix.catalog.v1.SeriesResult
	(*OperationSeriesResult)(nil),           // 1: com.coralogix.catalog.v1.OperationSeriesResult
	(*ClientTimeConsumingSeriesResult)(nil), // 2: com.coralogix.catalog.v1.ClientTimeConsumingSeriesResult
	(*ServiceOverview)(nil),                 // 3: com.coralogix.catalog.v1.ServiceOverview
	(*wrapperspb.Int64Value)(nil),           // 4: google.protobuf.Int64Value
	(*wrapperspb.StringValue)(nil),          // 5: google.protobuf.StringValue
	(*wrapperspb.Int32Value)(nil),           // 6: google.protobuf.Int32Value
}
var file_com_coralogix_catalog_v1_service_overview_proto_depIdxs = []int32{
	4,  // 0: com.coralogix.catalog.v1.SeriesResult.timestamp:type_name -> google.protobuf.Int64Value
	5,  // 1: com.coralogix.catalog.v1.SeriesResult.data_point:type_name -> google.protobuf.StringValue
	5,  // 2: com.coralogix.catalog.v1.OperationSeriesResult.operation_name:type_name -> google.protobuf.StringValue
	0,  // 3: com.coralogix.catalog.v1.OperationSeriesResult.values:type_name -> com.coralogix.catalog.v1.SeriesResult
	6,  // 4: com.coralogix.catalog.v1.OperationSeriesResult.steps:type_name -> google.protobuf.Int32Value
	5,  // 5: com.coralogix.catalog.v1.ClientTimeConsumingSeriesResult.peer_service:type_name -> google.protobuf.StringValue
	0,  // 6: com.coralogix.catalog.v1.ClientTimeConsumingSeriesResult.values:type_name -> com.coralogix.catalog.v1.SeriesResult
	6,  // 7: com.coralogix.catalog.v1.ClientTimeConsumingSeriesResult.steps:type_name -> google.protobuf.Int32Value
	5,  // 8: com.coralogix.catalog.v1.ServiceOverview.service_name:type_name -> google.protobuf.StringValue
	1,  // 9: com.coralogix.catalog.v1.ServiceOverview.request_per_second:type_name -> com.coralogix.catalog.v1.OperationSeriesResult
	1,  // 10: com.coralogix.catalog.v1.ServiceOverview.error_rate:type_name -> com.coralogix.catalog.v1.OperationSeriesResult
	1,  // 11: com.coralogix.catalog.v1.ServiceOverview.p95_latency:type_name -> com.coralogix.catalog.v1.OperationSeriesResult
	2,  // 12: com.coralogix.catalog.v1.ServiceOverview.client_time_consuming:type_name -> com.coralogix.catalog.v1.ClientTimeConsumingSeriesResult
	6,  // 13: com.coralogix.catalog.v1.ServiceOverview.request_per_second_number_of_operations:type_name -> google.protobuf.Int32Value
	6,  // 14: com.coralogix.catalog.v1.ServiceOverview.error_rate_number_of_operations:type_name -> google.protobuf.Int32Value
	6,  // 15: com.coralogix.catalog.v1.ServiceOverview.client_time_consuming_number_of_operations:type_name -> google.protobuf.Int32Value
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_com_coralogix_catalog_v1_service_overview_proto_init() }
func file_com_coralogix_catalog_v1_service_overview_proto_init() {
	if File_com_coralogix_catalog_v1_service_overview_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogix_catalog_v1_service_overview_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogix_catalog_v1_service_overview_proto_goTypes,
		DependencyIndexes: file_com_coralogix_catalog_v1_service_overview_proto_depIdxs,
		MessageInfos:      file_com_coralogix_catalog_v1_service_overview_proto_msgTypes,
	}.Build()
	File_com_coralogix_catalog_v1_service_overview_proto = out.File
	file_com_coralogix_catalog_v1_service_overview_proto_rawDesc = nil
	file_com_coralogix_catalog_v1_service_overview_proto_goTypes = nil
	file_com_coralogix_catalog_v1_service_overview_proto_depIdxs = nil
}
