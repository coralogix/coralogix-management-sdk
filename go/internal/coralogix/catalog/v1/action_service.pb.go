// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.2
// source: com/coralogix/catalog/v1/action_service.proto

package v1

import (
	_ "github.com/coralogix/coralogix-management-sdk/go/internal/coralogixapis/apm/common/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetServiceActionsRequest struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	TimeRange             *TimeRange              `protobuf:"bytes,1,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	ServiceName           *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	ServiceCatalogFilters []*ApmFilter            `protobuf:"bytes,3,rep,name=service_catalog_filters,json=serviceCatalogFilters,proto3" json:"service_catalog_filters,omitempty"`
	SpanKinds             []SpanKind              `protobuf:"varint,4,rep,packed,name=span_kinds,json=spanKinds,proto3,enum=com.coralogix.catalog.v1.SpanKind" json:"span_kinds,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetServiceActionsRequest) Reset() {
	*x = GetServiceActionsRequest{}
	mi := &file_com_coralogix_catalog_v1_action_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceActionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceActionsRequest) ProtoMessage() {}

func (x *GetServiceActionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_action_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceActionsRequest.ProtoReflect.Descriptor instead.
func (*GetServiceActionsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_action_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetServiceActionsRequest) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *GetServiceActionsRequest) GetServiceName() *wrapperspb.StringValue {
	if x != nil {
		return x.ServiceName
	}
	return nil
}

func (x *GetServiceActionsRequest) GetServiceCatalogFilters() []*ApmFilter {
	if x != nil {
		return x.ServiceCatalogFilters
	}
	return nil
}

func (x *GetServiceActionsRequest) GetSpanKinds() []SpanKind {
	if x != nil {
		return x.SpanKinds
	}
	return nil
}

type GetServiceActionsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ServiceActions []*ServiceAction       `protobuf:"bytes,1,rep,name=service_actions,json=serviceActions,proto3" json:"service_actions,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetServiceActionsResponse) Reset() {
	*x = GetServiceActionsResponse{}
	mi := &file_com_coralogix_catalog_v1_action_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceActionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceActionsResponse) ProtoMessage() {}

func (x *GetServiceActionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_action_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceActionsResponse.ProtoReflect.Descriptor instead.
func (*GetServiceActionsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_action_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetServiceActionsResponse) GetServiceActions() []*ServiceAction {
	if x != nil {
		return x.ServiceActions
	}
	return nil
}

var File_com_coralogix_catalog_v1_action_service_proto protoreflect.FileDescriptor

var file_com_coralogix_catalog_v1_action_service_proto_rawDesc = string([]byte{
	0x0a, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x6d,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x26, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xbf, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x42, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5b, 0x0a, 0x17, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x15, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x41, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x70, 0x61, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x09, 0x73, 0x70, 0x61, 0x6e, 0x4b,
	0x69, 0x6e, 0x64, 0x73, 0x22, 0x6d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x32, 0xa9, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x97, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0xc2, 0xb8, 0x02, 0x15, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x20,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_com_coralogix_catalog_v1_action_service_proto_rawDescOnce sync.Once
	file_com_coralogix_catalog_v1_action_service_proto_rawDescData []byte
)

func file_com_coralogix_catalog_v1_action_service_proto_rawDescGZIP() []byte {
	file_com_coralogix_catalog_v1_action_service_proto_rawDescOnce.Do(func() {
		file_com_coralogix_catalog_v1_action_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_coralogix_catalog_v1_action_service_proto_rawDesc), len(file_com_coralogix_catalog_v1_action_service_proto_rawDesc)))
	})
	return file_com_coralogix_catalog_v1_action_service_proto_rawDescData
}

var file_com_coralogix_catalog_v1_action_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_com_coralogix_catalog_v1_action_service_proto_goTypes = []any{
	(*GetServiceActionsRequest)(nil),  // 0: com.coralogix.catalog.v1.GetServiceActionsRequest
	(*GetServiceActionsResponse)(nil), // 1: com.coralogix.catalog.v1.GetServiceActionsResponse
	(*TimeRange)(nil),                 // 2: com.coralogix.catalog.v1.TimeRange
	(*wrapperspb.StringValue)(nil),    // 3: google.protobuf.StringValue
	(*ApmFilter)(nil),                 // 4: com.coralogix.catalog.v1.ApmFilter
	(SpanKind)(0),                     // 5: com.coralogix.catalog.v1.SpanKind
	(*ServiceAction)(nil),             // 6: com.coralogix.catalog.v1.ServiceAction
}
var file_com_coralogix_catalog_v1_action_service_proto_depIdxs = []int32{
	2, // 0: com.coralogix.catalog.v1.GetServiceActionsRequest.time_range:type_name -> com.coralogix.catalog.v1.TimeRange
	3, // 1: com.coralogix.catalog.v1.GetServiceActionsRequest.service_name:type_name -> google.protobuf.StringValue
	4, // 2: com.coralogix.catalog.v1.GetServiceActionsRequest.service_catalog_filters:type_name -> com.coralogix.catalog.v1.ApmFilter
	5, // 3: com.coralogix.catalog.v1.GetServiceActionsRequest.span_kinds:type_name -> com.coralogix.catalog.v1.SpanKind
	6, // 4: com.coralogix.catalog.v1.GetServiceActionsResponse.service_actions:type_name -> com.coralogix.catalog.v1.ServiceAction
	0, // 5: com.coralogix.catalog.v1.ActionService.GetServiceActions:input_type -> com.coralogix.catalog.v1.GetServiceActionsRequest
	1, // 6: com.coralogix.catalog.v1.ActionService.GetServiceActions:output_type -> com.coralogix.catalog.v1.GetServiceActionsResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_com_coralogix_catalog_v1_action_service_proto_init() }
func file_com_coralogix_catalog_v1_action_service_proto_init() {
	if File_com_coralogix_catalog_v1_action_service_proto != nil {
		return
	}
	file_com_coralogix_catalog_v1_service_action_proto_init()
	file_com_coralogix_catalog_v1_common_proto_init()
	file_com_coralogix_catalog_v1_service_proto_init()
	file_com_coralogix_catalog_v1_span_kind_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_coralogix_catalog_v1_action_service_proto_rawDesc), len(file_com_coralogix_catalog_v1_action_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogix_catalog_v1_action_service_proto_goTypes,
		DependencyIndexes: file_com_coralogix_catalog_v1_action_service_proto_depIdxs,
		MessageInfos:      file_com_coralogix_catalog_v1_action_service_proto_msgTypes,
	}.Build()
	File_com_coralogix_catalog_v1_action_service_proto = out.File
	file_com_coralogix_catalog_v1_action_service_proto_goTypes = nil
	file_com_coralogix_catalog_v1_action_service_proto_depIdxs = nil
}
