// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.1
// source: com/coralogix/metrics/metrics-blocking-rules.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ByMetricName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ByMetricName) Reset() {
	*x = ByMetricName{}
	mi := &file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ByMetricName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByMetricName) ProtoMessage() {}

func (x *ByMetricName) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByMetricName.ProtoReflect.Descriptor instead.
func (*ByMetricName) Descriptor() ([]byte, []int) {
	return file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDescGZIP(), []int{0}
}

func (x *ByMetricName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RuleExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RuleExpression:
	//
	//	*RuleExpression_ByMetricName
	RuleExpression isRuleExpression_RuleExpression `protobuf_oneof:"rule_expression"`
}

func (x *RuleExpression) Reset() {
	*x = RuleExpression{}
	mi := &file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleExpression) ProtoMessage() {}

func (x *RuleExpression) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleExpression.ProtoReflect.Descriptor instead.
func (*RuleExpression) Descriptor() ([]byte, []int) {
	return file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDescGZIP(), []int{1}
}

func (m *RuleExpression) GetRuleExpression() isRuleExpression_RuleExpression {
	if m != nil {
		return m.RuleExpression
	}
	return nil
}

func (x *RuleExpression) GetByMetricName() *ByMetricName {
	if x, ok := x.GetRuleExpression().(*RuleExpression_ByMetricName); ok {
		return x.ByMetricName
	}
	return nil
}

type isRuleExpression_RuleExpression interface {
	isRuleExpression_RuleExpression()
}

type RuleExpression_ByMetricName struct {
	ByMetricName *ByMetricName `protobuf:"bytes,1,opt,name=by_metric_name,json=byMetricName,proto3,oneof"`
}

func (*RuleExpression_ByMetricName) isRuleExpression_RuleExpression() {}

type Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleId         uint64          `protobuf:"varint,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	RuleExpression *RuleExpression `protobuf:"bytes,2,opt,name=rule_expression,json=ruleExpression,proto3" json:"rule_expression,omitempty"`
}

func (x *Rule) Reset() {
	*x = Rule{}
	mi := &file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDescGZIP(), []int{2}
}

func (x *Rule) GetRuleId() uint64 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

func (x *Rule) GetRuleExpression() *RuleExpression {
	if x != nil {
		return x.RuleExpression
	}
	return nil
}

type BlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleExpressions []*RuleExpression `protobuf:"bytes,1,rep,name=rule_expressions,json=ruleExpressions,proto3" json:"rule_expressions,omitempty"`
}

func (x *BlockRequest) Reset() {
	*x = BlockRequest{}
	mi := &file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRequest) ProtoMessage() {}

func (x *BlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRequest.ProtoReflect.Descriptor instead.
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDescGZIP(), []int{3}
}

func (x *BlockRequest) GetRuleExpressions() []*RuleExpression {
	if x != nil {
		return x.RuleExpressions
	}
	return nil
}

type AllowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleIds []uint64 `protobuf:"varint,1,rep,packed,name=rule_ids,json=ruleIds,proto3" json:"rule_ids,omitempty"`
}

func (x *AllowRequest) Reset() {
	*x = AllowRequest{}
	mi := &file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowRequest) ProtoMessage() {}

func (x *AllowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowRequest.ProtoReflect.Descriptor instead.
func (*AllowRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDescGZIP(), []int{4}
}

func (x *AllowRequest) GetRuleIds() []uint64 {
	if x != nil {
		return x.RuleIds
	}
	return nil
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules []*Rule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDescGZIP(), []int{5}
}

func (x *ListResponse) GetRules() []*Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

var File_com_coralogix_metrics_metrics_blocking_rules_proto protoreflect.FileDescriptor

var file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDesc = []byte{
	0x0a, 0x32, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2d,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2d, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2c, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x22, 0x0a, 0x0c, 0x42, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x0e, 0x52, 0x75, 0x6c, 0x65, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x0e, 0x62, 0x79, 0x5f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x42, 0x79,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x79,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x72, 0x75,
	0x6c, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x01,
	0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x65, 0x0a, 0x0f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x72, 0x75, 0x6c, 0x65, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x10, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e,
	0x52, 0x75, 0x6c, 0x65, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x72, 0x75, 0x6c, 0x65, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x29, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x58, 0x0a, 0x0c, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x32, 0xb9, 0x02, 0x0a, 0x1b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3a, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x05, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x3a, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x75, 0x6c, 0x65,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDescOnce sync.Once
	file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDescData = file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDesc
)

func file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDescGZIP() []byte {
	file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDescOnce.Do(func() {
		file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDescData)
	})
	return file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDescData
}

var file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_com_coralogix_metrics_metrics_blocking_rules_proto_goTypes = []any{
	(*ByMetricName)(nil),   // 0: com.coralogix.metrics.metrics_blocking_rules.ByMetricName
	(*RuleExpression)(nil), // 1: com.coralogix.metrics.metrics_blocking_rules.RuleExpression
	(*Rule)(nil),           // 2: com.coralogix.metrics.metrics_blocking_rules.Rule
	(*BlockRequest)(nil),   // 3: com.coralogix.metrics.metrics_blocking_rules.BlockRequest
	(*AllowRequest)(nil),   // 4: com.coralogix.metrics.metrics_blocking_rules.AllowRequest
	(*ListResponse)(nil),   // 5: com.coralogix.metrics.metrics_blocking_rules.ListResponse
	(*emptypb.Empty)(nil),  // 6: google.protobuf.Empty
}
var file_com_coralogix_metrics_metrics_blocking_rules_proto_depIdxs = []int32{
	0, // 0: com.coralogix.metrics.metrics_blocking_rules.RuleExpression.by_metric_name:type_name -> com.coralogix.metrics.metrics_blocking_rules.ByMetricName
	1, // 1: com.coralogix.metrics.metrics_blocking_rules.Rule.rule_expression:type_name -> com.coralogix.metrics.metrics_blocking_rules.RuleExpression
	1, // 2: com.coralogix.metrics.metrics_blocking_rules.BlockRequest.rule_expressions:type_name -> com.coralogix.metrics.metrics_blocking_rules.RuleExpression
	2, // 3: com.coralogix.metrics.metrics_blocking_rules.ListResponse.rules:type_name -> com.coralogix.metrics.metrics_blocking_rules.Rule
	3, // 4: com.coralogix.metrics.metrics_blocking_rules.MetricsBlockingRulesService.Block:input_type -> com.coralogix.metrics.metrics_blocking_rules.BlockRequest
	4, // 5: com.coralogix.metrics.metrics_blocking_rules.MetricsBlockingRulesService.Allow:input_type -> com.coralogix.metrics.metrics_blocking_rules.AllowRequest
	6, // 6: com.coralogix.metrics.metrics_blocking_rules.MetricsBlockingRulesService.List:input_type -> google.protobuf.Empty
	6, // 7: com.coralogix.metrics.metrics_blocking_rules.MetricsBlockingRulesService.Block:output_type -> google.protobuf.Empty
	6, // 8: com.coralogix.metrics.metrics_blocking_rules.MetricsBlockingRulesService.Allow:output_type -> google.protobuf.Empty
	5, // 9: com.coralogix.metrics.metrics_blocking_rules.MetricsBlockingRulesService.List:output_type -> com.coralogix.metrics.metrics_blocking_rules.ListResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_com_coralogix_metrics_metrics_blocking_rules_proto_init() }
func file_com_coralogix_metrics_metrics_blocking_rules_proto_init() {
	if File_com_coralogix_metrics_metrics_blocking_rules_proto != nil {
		return
	}
	file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes[1].OneofWrappers = []any{
		(*RuleExpression_ByMetricName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogix_metrics_metrics_blocking_rules_proto_goTypes,
		DependencyIndexes: file_com_coralogix_metrics_metrics_blocking_rules_proto_depIdxs,
		MessageInfos:      file_com_coralogix_metrics_metrics_blocking_rules_proto_msgTypes,
	}.Build()
	File_com_coralogix_metrics_metrics_blocking_rules_proto = out.File
	file_com_coralogix_metrics_metrics_blocking_rules_proto_rawDesc = nil
	file_com_coralogix_metrics_metrics_blocking_rules_proto_goTypes = nil
	file_com_coralogix_metrics_metrics_blocking_rules_proto_depIdxs = nil
}
