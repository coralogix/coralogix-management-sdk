// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: com/coralogix/extensions/v1/extension_deployment_service.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDeployedExtensionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDeployedExtensionsRequest) Reset() {
	*x = GetDeployedExtensionsRequest{}
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeployedExtensionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeployedExtensionsRequest) ProtoMessage() {}

func (x *GetDeployedExtensionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeployedExtensionsRequest.ProtoReflect.Descriptor instead.
func (*GetDeployedExtensionsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescGZIP(), []int{0}
}

type GetDeployedExtensionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeployedExtensions []*GetDeployedExtensionsResponse_DeployedExtension `protobuf:"bytes,1,rep,name=deployed_extensions,json=deployedExtensions,proto3" json:"deployed_extensions,omitempty"`
}

func (x *GetDeployedExtensionsResponse) Reset() {
	*x = GetDeployedExtensionsResponse{}
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeployedExtensionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeployedExtensionsResponse) ProtoMessage() {}

func (x *GetDeployedExtensionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeployedExtensionsResponse.ProtoReflect.Descriptor instead.
func (*GetDeployedExtensionsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetDeployedExtensionsResponse) GetDeployedExtensions() []*GetDeployedExtensionsResponse_DeployedExtension {
	if x != nil {
		return x.DeployedExtensions
	}
	return nil
}

type ExtensionDeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *wrapperspb.StringValue   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version      *wrapperspb.StringValue   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	ItemIds      []*wrapperspb.StringValue `protobuf:"bytes,3,rep,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	Applications []*wrapperspb.StringValue `protobuf:"bytes,4,rep,name=applications,proto3" json:"applications,omitempty"`
	Subsystems   []*wrapperspb.StringValue `protobuf:"bytes,5,rep,name=subsystems,proto3" json:"subsystems,omitempty"`
}

func (x *ExtensionDeployment) Reset() {
	*x = ExtensionDeployment{}
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtensionDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionDeployment) ProtoMessage() {}

func (x *ExtensionDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionDeployment.ProtoReflect.Descriptor instead.
func (*ExtensionDeployment) Descriptor() ([]byte, []int) {
	return file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescGZIP(), []int{2}
}

func (x *ExtensionDeployment) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ExtensionDeployment) GetVersion() *wrapperspb.StringValue {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *ExtensionDeployment) GetItemIds() []*wrapperspb.StringValue {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

func (x *ExtensionDeployment) GetApplications() []*wrapperspb.StringValue {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *ExtensionDeployment) GetSubsystems() []*wrapperspb.StringValue {
	if x != nil {
		return x.Subsystems
	}
	return nil
}

type DeployExtensionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  *wrapperspb.StringValue   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version             *wrapperspb.StringValue   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	ItemIds             []*wrapperspb.StringValue `protobuf:"bytes,3,rep,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	Applications        []*wrapperspb.StringValue `protobuf:"bytes,4,rep,name=applications,proto3" json:"applications,omitempty"`
	Subsystems          []*wrapperspb.StringValue `protobuf:"bytes,5,rep,name=subsystems,proto3" json:"subsystems,omitempty"`
	ExtensionDeployment *ExtensionDeployment      `protobuf:"bytes,6,opt,name=extension_deployment,json=extensionDeployment,proto3,oneof" json:"extension_deployment,omitempty"`
}

func (x *DeployExtensionRequest) Reset() {
	*x = DeployExtensionRequest{}
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployExtensionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployExtensionRequest) ProtoMessage() {}

func (x *DeployExtensionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployExtensionRequest.ProtoReflect.Descriptor instead.
func (*DeployExtensionRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeployExtensionRequest) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DeployExtensionRequest) GetVersion() *wrapperspb.StringValue {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *DeployExtensionRequest) GetItemIds() []*wrapperspb.StringValue {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

func (x *DeployExtensionRequest) GetApplications() []*wrapperspb.StringValue {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *DeployExtensionRequest) GetSubsystems() []*wrapperspb.StringValue {
	if x != nil {
		return x.Subsystems
	}
	return nil
}

func (x *DeployExtensionRequest) GetExtensionDeployment() *ExtensionDeployment {
	if x != nil {
		return x.ExtensionDeployment
	}
	return nil
}

type DeployExtensionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtensionDeployment *ExtensionDeployment `protobuf:"bytes,1,opt,name=extension_deployment,json=extensionDeployment,proto3" json:"extension_deployment,omitempty"`
}

func (x *DeployExtensionResponse) Reset() {
	*x = DeployExtensionResponse{}
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployExtensionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployExtensionResponse) ProtoMessage() {}

func (x *DeployExtensionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployExtensionResponse.ProtoReflect.Descriptor instead.
func (*DeployExtensionResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeployExtensionResponse) GetExtensionDeployment() *ExtensionDeployment {
	if x != nil {
		return x.ExtensionDeployment
	}
	return nil
}

type UpdateExtensionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  *wrapperspb.StringValue   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version             *wrapperspb.StringValue   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	ItemIds             []*wrapperspb.StringValue `protobuf:"bytes,3,rep,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	Applications        []*wrapperspb.StringValue `protobuf:"bytes,4,rep,name=applications,proto3" json:"applications,omitempty"`
	Subsystems          []*wrapperspb.StringValue `protobuf:"bytes,5,rep,name=subsystems,proto3" json:"subsystems,omitempty"`
	ExtensionDeployment *ExtensionDeployment      `protobuf:"bytes,6,opt,name=extension_deployment,json=extensionDeployment,proto3,oneof" json:"extension_deployment,omitempty"`
}

func (x *UpdateExtensionRequest) Reset() {
	*x = UpdateExtensionRequest{}
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExtensionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExtensionRequest) ProtoMessage() {}

func (x *UpdateExtensionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExtensionRequest.ProtoReflect.Descriptor instead.
func (*UpdateExtensionRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateExtensionRequest) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateExtensionRequest) GetVersion() *wrapperspb.StringValue {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *UpdateExtensionRequest) GetItemIds() []*wrapperspb.StringValue {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

func (x *UpdateExtensionRequest) GetApplications() []*wrapperspb.StringValue {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *UpdateExtensionRequest) GetSubsystems() []*wrapperspb.StringValue {
	if x != nil {
		return x.Subsystems
	}
	return nil
}

func (x *UpdateExtensionRequest) GetExtensionDeployment() *ExtensionDeployment {
	if x != nil {
		return x.ExtensionDeployment
	}
	return nil
}

type UpdateExtensionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtensionDeployment *ExtensionDeployment `protobuf:"bytes,1,opt,name=extension_deployment,json=extensionDeployment,proto3" json:"extension_deployment,omitempty"`
}

func (x *UpdateExtensionResponse) Reset() {
	*x = UpdateExtensionResponse{}
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExtensionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExtensionResponse) ProtoMessage() {}

func (x *UpdateExtensionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExtensionResponse.ProtoReflect.Descriptor instead.
func (*UpdateExtensionResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateExtensionResponse) GetExtensionDeployment() *ExtensionDeployment {
	if x != nil {
		return x.ExtensionDeployment
	}
	return nil
}

type UndeployExtensionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *wrapperspb.StringValue   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	KeptExtensionItems []*wrapperspb.StringValue `protobuf:"bytes,2,rep,name=kept_extension_items,json=keptExtensionItems,proto3" json:"kept_extension_items,omitempty"`
}

func (x *UndeployExtensionRequest) Reset() {
	*x = UndeployExtensionRequest{}
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UndeployExtensionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeployExtensionRequest) ProtoMessage() {}

func (x *UndeployExtensionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeployExtensionRequest.ProtoReflect.Descriptor instead.
func (*UndeployExtensionRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescGZIP(), []int{7}
}

func (x *UndeployExtensionRequest) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UndeployExtensionRequest) GetKeptExtensionItems() []*wrapperspb.StringValue {
	if x != nil {
		return x.KeptExtensionItems
	}
	return nil
}

type UndeployExtensionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailedItems         []*UndeployExtensionResponse_FailedItem `protobuf:"bytes,1,rep,name=failed_items,json=failedItems,proto3" json:"failed_items,omitempty"`
	ExtensionDeployment *ExtensionDeployment                    `protobuf:"bytes,2,opt,name=extension_deployment,json=extensionDeployment,proto3,oneof" json:"extension_deployment,omitempty"`
}

func (x *UndeployExtensionResponse) Reset() {
	*x = UndeployExtensionResponse{}
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UndeployExtensionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeployExtensionResponse) ProtoMessage() {}

func (x *UndeployExtensionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeployExtensionResponse.ProtoReflect.Descriptor instead.
func (*UndeployExtensionResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescGZIP(), []int{8}
}

func (x *UndeployExtensionResponse) GetFailedItems() []*UndeployExtensionResponse_FailedItem {
	if x != nil {
		return x.FailedItems
	}
	return nil
}

func (x *UndeployExtensionResponse) GetExtensionDeployment() *ExtensionDeployment {
	if x != nil {
		return x.ExtensionDeployment
	}
	return nil
}

type GetDeployedExtensionsResponse_DeployedExtensionSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeployedItemCounts *ItemCounts `protobuf:"bytes,1,opt,name=deployed_item_counts,json=deployedItemCounts,proto3" json:"deployed_item_counts,omitempty"`
}

func (x *GetDeployedExtensionsResponse_DeployedExtensionSummary) Reset() {
	*x = GetDeployedExtensionsResponse_DeployedExtensionSummary{}
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeployedExtensionsResponse_DeployedExtensionSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeployedExtensionsResponse_DeployedExtensionSummary) ProtoMessage() {}

func (x *GetDeployedExtensionsResponse_DeployedExtensionSummary) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeployedExtensionsResponse_DeployedExtensionSummary.ProtoReflect.Descriptor instead.
func (*GetDeployedExtensionsResponse_DeployedExtensionSummary) Descriptor() ([]byte, []int) {
	return file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetDeployedExtensionsResponse_DeployedExtensionSummary) GetDeployedItemCounts() *ItemCounts {
	if x != nil {
		return x.DeployedItemCounts
	}
	return nil
}

type GetDeployedExtensionsResponse_DeployedExtension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *wrapperspb.StringValue                                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version      *wrapperspb.StringValue                                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Applications []*wrapperspb.StringValue                               `protobuf:"bytes,3,rep,name=applications,proto3" json:"applications,omitempty"`
	Subsystems   []*wrapperspb.StringValue                               `protobuf:"bytes,4,rep,name=subsystems,proto3" json:"subsystems,omitempty"`
	ItemIds      []*wrapperspb.StringValue                               `protobuf:"bytes,5,rep,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	Summary      *GetDeployedExtensionsResponse_DeployedExtensionSummary `protobuf:"bytes,6,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *GetDeployedExtensionsResponse_DeployedExtension) Reset() {
	*x = GetDeployedExtensionsResponse_DeployedExtension{}
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeployedExtensionsResponse_DeployedExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeployedExtensionsResponse_DeployedExtension) ProtoMessage() {}

func (x *GetDeployedExtensionsResponse_DeployedExtension) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeployedExtensionsResponse_DeployedExtension.ProtoReflect.Descriptor instead.
func (*GetDeployedExtensionsResponse_DeployedExtension) Descriptor() ([]byte, []int) {
	return file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescGZIP(), []int{1, 1}
}

func (x *GetDeployedExtensionsResponse_DeployedExtension) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GetDeployedExtensionsResponse_DeployedExtension) GetVersion() *wrapperspb.StringValue {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *GetDeployedExtensionsResponse_DeployedExtension) GetApplications() []*wrapperspb.StringValue {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *GetDeployedExtensionsResponse_DeployedExtension) GetSubsystems() []*wrapperspb.StringValue {
	if x != nil {
		return x.Subsystems
	}
	return nil
}

func (x *GetDeployedExtensionsResponse_DeployedExtension) GetItemIds() []*wrapperspb.StringValue {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

func (x *GetDeployedExtensionsResponse_DeployedExtension) GetSummary() *GetDeployedExtensionsResponse_DeployedExtensionSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type UndeployExtensionResponse_FailedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId   *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	RemoteId *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=remote_id,json=remoteId,proto3" json:"remote_id,omitempty"`
	Reason   *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *UndeployExtensionResponse_FailedItem) Reset() {
	*x = UndeployExtensionResponse_FailedItem{}
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UndeployExtensionResponse_FailedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeployExtensionResponse_FailedItem) ProtoMessage() {}

func (x *UndeployExtensionResponse_FailedItem) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeployExtensionResponse_FailedItem.ProtoReflect.Descriptor instead.
func (*UndeployExtensionResponse_FailedItem) Descriptor() ([]byte, []int) {
	return file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *UndeployExtensionResponse_FailedItem) GetItemId() *wrapperspb.StringValue {
	if x != nil {
		return x.ItemId
	}
	return nil
}

func (x *UndeployExtensionResponse_FailedItem) GetRemoteId() *wrapperspb.StringValue {
	if x != nil {
		return x.RemoteId
	}
	return nil
}

func (x *UndeployExtensionResponse_FailedItem) GetReason() *wrapperspb.StringValue {
	if x != nil {
		return x.Reason
	}
	return nil
}

var File_com_coralogix_extensions_v1_extension_deployment_service_proto protoreflect.FileDescriptor

var file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x2b, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb9, 0x05, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x13, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x75, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x59, 0x0a, 0x14, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x12, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a,
	0xa1, 0x03, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0c, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0a, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x73, 0x12, 0x6d, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x22, 0xb4, 0x02, 0x0a, 0x13, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a,
	0x73, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xba, 0x03, 0x0a, 0x16, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x08, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x68, 0x0a, 0x14, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x17,
	0x0a, 0x15, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x7e, 0x0a, 0x17, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x63, 0x0a, 0x14, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xba, 0x03, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x36, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x73, 0x12, 0x40, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x68, 0x0a, 0x14, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x7e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x63, 0x0a, 0x14, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x13, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x18, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x4e, 0x0a, 0x14, 0x6b, 0x65, 0x70, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x12, 0x6b, 0x65, 0x70,
	0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0xbb, 0x03, 0x0a, 0x19, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a,
	0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x68, 0x0a, 0x14, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x1a, 0xb4, 0x01,
	0x0a, 0x0a, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x35, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0xc6, 0x06,
	0x0a, 0x1a, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xd7, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0xc2,
	0xb8, 0x02, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x20, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x64, 0x20, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x24, 0x12, 0x22, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2d,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x12, 0xbf, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0xc2, 0xb8, 0x02, 0x12, 0x0a, 0x10, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x20, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0xbf, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0xc2, 0xb8, 0x02, 0x12, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0xc9, 0x01, 0x0a, 0x11, 0x55,
	0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x45, 0xc2, 0xb8, 0x02, 0x14, 0x0a, 0x12, 0x55, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x20,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a,
	0x01, 0x2a, 0x22, 0x22, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2d,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x6e,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescOnce sync.Once
	file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescData = file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDesc
)

func file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescGZIP() []byte {
	file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescOnce.Do(func() {
		file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescData)
	})
	return file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDescData
}

var file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_com_coralogix_extensions_v1_extension_deployment_service_proto_goTypes = []any{
	(*GetDeployedExtensionsRequest)(nil),                           // 0: com.coralogix.extensions.v1.GetDeployedExtensionsRequest
	(*GetDeployedExtensionsResponse)(nil),                          // 1: com.coralogix.extensions.v1.GetDeployedExtensionsResponse
	(*ExtensionDeployment)(nil),                                    // 2: com.coralogix.extensions.v1.ExtensionDeployment
	(*DeployExtensionRequest)(nil),                                 // 3: com.coralogix.extensions.v1.DeployExtensionRequest
	(*DeployExtensionResponse)(nil),                                // 4: com.coralogix.extensions.v1.DeployExtensionResponse
	(*UpdateExtensionRequest)(nil),                                 // 5: com.coralogix.extensions.v1.UpdateExtensionRequest
	(*UpdateExtensionResponse)(nil),                                // 6: com.coralogix.extensions.v1.UpdateExtensionResponse
	(*UndeployExtensionRequest)(nil),                               // 7: com.coralogix.extensions.v1.UndeployExtensionRequest
	(*UndeployExtensionResponse)(nil),                              // 8: com.coralogix.extensions.v1.UndeployExtensionResponse
	(*GetDeployedExtensionsResponse_DeployedExtensionSummary)(nil), // 9: com.coralogix.extensions.v1.GetDeployedExtensionsResponse.DeployedExtensionSummary
	(*GetDeployedExtensionsResponse_DeployedExtension)(nil),        // 10: com.coralogix.extensions.v1.GetDeployedExtensionsResponse.DeployedExtension
	(*UndeployExtensionResponse_FailedItem)(nil),                   // 11: com.coralogix.extensions.v1.UndeployExtensionResponse.FailedItem
	(*wrapperspb.StringValue)(nil),                                 // 12: google.protobuf.StringValue
	(*ItemCounts)(nil),                                             // 13: com.coralogix.extensions.v1.ItemCounts
}
var file_com_coralogix_extensions_v1_extension_deployment_service_proto_depIdxs = []int32{
	10, // 0: com.coralogix.extensions.v1.GetDeployedExtensionsResponse.deployed_extensions:type_name -> com.coralogix.extensions.v1.GetDeployedExtensionsResponse.DeployedExtension
	12, // 1: com.coralogix.extensions.v1.ExtensionDeployment.id:type_name -> google.protobuf.StringValue
	12, // 2: com.coralogix.extensions.v1.ExtensionDeployment.version:type_name -> google.protobuf.StringValue
	12, // 3: com.coralogix.extensions.v1.ExtensionDeployment.item_ids:type_name -> google.protobuf.StringValue
	12, // 4: com.coralogix.extensions.v1.ExtensionDeployment.applications:type_name -> google.protobuf.StringValue
	12, // 5: com.coralogix.extensions.v1.ExtensionDeployment.subsystems:type_name -> google.protobuf.StringValue
	12, // 6: com.coralogix.extensions.v1.DeployExtensionRequest.id:type_name -> google.protobuf.StringValue
	12, // 7: com.coralogix.extensions.v1.DeployExtensionRequest.version:type_name -> google.protobuf.StringValue
	12, // 8: com.coralogix.extensions.v1.DeployExtensionRequest.item_ids:type_name -> google.protobuf.StringValue
	12, // 9: com.coralogix.extensions.v1.DeployExtensionRequest.applications:type_name -> google.protobuf.StringValue
	12, // 10: com.coralogix.extensions.v1.DeployExtensionRequest.subsystems:type_name -> google.protobuf.StringValue
	2,  // 11: com.coralogix.extensions.v1.DeployExtensionRequest.extension_deployment:type_name -> com.coralogix.extensions.v1.ExtensionDeployment
	2,  // 12: com.coralogix.extensions.v1.DeployExtensionResponse.extension_deployment:type_name -> com.coralogix.extensions.v1.ExtensionDeployment
	12, // 13: com.coralogix.extensions.v1.UpdateExtensionRequest.id:type_name -> google.protobuf.StringValue
	12, // 14: com.coralogix.extensions.v1.UpdateExtensionRequest.version:type_name -> google.protobuf.StringValue
	12, // 15: com.coralogix.extensions.v1.UpdateExtensionRequest.item_ids:type_name -> google.protobuf.StringValue
	12, // 16: com.coralogix.extensions.v1.UpdateExtensionRequest.applications:type_name -> google.protobuf.StringValue
	12, // 17: com.coralogix.extensions.v1.UpdateExtensionRequest.subsystems:type_name -> google.protobuf.StringValue
	2,  // 18: com.coralogix.extensions.v1.UpdateExtensionRequest.extension_deployment:type_name -> com.coralogix.extensions.v1.ExtensionDeployment
	2,  // 19: com.coralogix.extensions.v1.UpdateExtensionResponse.extension_deployment:type_name -> com.coralogix.extensions.v1.ExtensionDeployment
	12, // 20: com.coralogix.extensions.v1.UndeployExtensionRequest.id:type_name -> google.protobuf.StringValue
	12, // 21: com.coralogix.extensions.v1.UndeployExtensionRequest.kept_extension_items:type_name -> google.protobuf.StringValue
	11, // 22: com.coralogix.extensions.v1.UndeployExtensionResponse.failed_items:type_name -> com.coralogix.extensions.v1.UndeployExtensionResponse.FailedItem
	2,  // 23: com.coralogix.extensions.v1.UndeployExtensionResponse.extension_deployment:type_name -> com.coralogix.extensions.v1.ExtensionDeployment
	13, // 24: com.coralogix.extensions.v1.GetDeployedExtensionsResponse.DeployedExtensionSummary.deployed_item_counts:type_name -> com.coralogix.extensions.v1.ItemCounts
	12, // 25: com.coralogix.extensions.v1.GetDeployedExtensionsResponse.DeployedExtension.id:type_name -> google.protobuf.StringValue
	12, // 26: com.coralogix.extensions.v1.GetDeployedExtensionsResponse.DeployedExtension.version:type_name -> google.protobuf.StringValue
	12, // 27: com.coralogix.extensions.v1.GetDeployedExtensionsResponse.DeployedExtension.applications:type_name -> google.protobuf.StringValue
	12, // 28: com.coralogix.extensions.v1.GetDeployedExtensionsResponse.DeployedExtension.subsystems:type_name -> google.protobuf.StringValue
	12, // 29: com.coralogix.extensions.v1.GetDeployedExtensionsResponse.DeployedExtension.item_ids:type_name -> google.protobuf.StringValue
	9,  // 30: com.coralogix.extensions.v1.GetDeployedExtensionsResponse.DeployedExtension.summary:type_name -> com.coralogix.extensions.v1.GetDeployedExtensionsResponse.DeployedExtensionSummary
	12, // 31: com.coralogix.extensions.v1.UndeployExtensionResponse.FailedItem.item_id:type_name -> google.protobuf.StringValue
	12, // 32: com.coralogix.extensions.v1.UndeployExtensionResponse.FailedItem.remote_id:type_name -> google.protobuf.StringValue
	12, // 33: com.coralogix.extensions.v1.UndeployExtensionResponse.FailedItem.reason:type_name -> google.protobuf.StringValue
	0,  // 34: com.coralogix.extensions.v1.ExtensionDeploymentService.GetDeployedExtensions:input_type -> com.coralogix.extensions.v1.GetDeployedExtensionsRequest
	3,  // 35: com.coralogix.extensions.v1.ExtensionDeploymentService.DeployExtension:input_type -> com.coralogix.extensions.v1.DeployExtensionRequest
	5,  // 36: com.coralogix.extensions.v1.ExtensionDeploymentService.UpdateExtension:input_type -> com.coralogix.extensions.v1.UpdateExtensionRequest
	7,  // 37: com.coralogix.extensions.v1.ExtensionDeploymentService.UndeployExtension:input_type -> com.coralogix.extensions.v1.UndeployExtensionRequest
	1,  // 38: com.coralogix.extensions.v1.ExtensionDeploymentService.GetDeployedExtensions:output_type -> com.coralogix.extensions.v1.GetDeployedExtensionsResponse
	4,  // 39: com.coralogix.extensions.v1.ExtensionDeploymentService.DeployExtension:output_type -> com.coralogix.extensions.v1.DeployExtensionResponse
	6,  // 40: com.coralogix.extensions.v1.ExtensionDeploymentService.UpdateExtension:output_type -> com.coralogix.extensions.v1.UpdateExtensionResponse
	8,  // 41: com.coralogix.extensions.v1.ExtensionDeploymentService.UndeployExtension:output_type -> com.coralogix.extensions.v1.UndeployExtensionResponse
	38, // [38:42] is the sub-list for method output_type
	34, // [34:38] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_com_coralogix_extensions_v1_extension_deployment_service_proto_init() }
func file_com_coralogix_extensions_v1_extension_deployment_service_proto_init() {
	if File_com_coralogix_extensions_v1_extension_deployment_service_proto != nil {
		return
	}
	file_com_coralogix_extensions_v1_audit_log_proto_init()
	file_com_coralogix_extensions_v1_extension_proto_init()
	file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[3].OneofWrappers = []any{}
	file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[5].OneofWrappers = []any{}
	file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogix_extensions_v1_extension_deployment_service_proto_goTypes,
		DependencyIndexes: file_com_coralogix_extensions_v1_extension_deployment_service_proto_depIdxs,
		MessageInfos:      file_com_coralogix_extensions_v1_extension_deployment_service_proto_msgTypes,
	}.Build()
	File_com_coralogix_extensions_v1_extension_deployment_service_proto = out.File
	file_com_coralogix_extensions_v1_extension_deployment_service_proto_rawDesc = nil
	file_com_coralogix_extensions_v1_extension_deployment_service_proto_goTypes = nil
	file_com_coralogix_extensions_v1_extension_deployment_service_proto_depIdxs = nil
}
