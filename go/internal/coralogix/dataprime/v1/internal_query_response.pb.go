// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.1
// source: com/coralogix/dataprime/v1/internal_query_response.proto

package v1

import (
	v1 "github.com/coralogix/coralogix-management-sdk/go/internal/coralogixapis/dataprime/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// dataprime response for text query
type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*QueryResponse_Error
	//	*QueryResponse_Result
	//	*QueryResponse_Warning
	//	*QueryResponse_QueryId
	//	*QueryResponse_Schema
	//	*QueryResponse_Stats
	Message isQueryResponse_Message `protobuf_oneof:"message"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	mi := &file_com_coralogix_dataprime_v1_internal_query_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_internal_query_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_internal_query_response_proto_rawDescGZIP(), []int{0}
}

func (m *QueryResponse) GetMessage() isQueryResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *QueryResponse) GetError() *v1.DataprimeError {
	if x, ok := x.GetMessage().(*QueryResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *QueryResponse) GetResult() *v1.DataprimeResult {
	if x, ok := x.GetMessage().(*QueryResponse_Result); ok {
		return x.Result
	}
	return nil
}

func (x *QueryResponse) GetWarning() *v1.DataprimeWarning {
	if x, ok := x.GetMessage().(*QueryResponse_Warning); ok {
		return x.Warning
	}
	return nil
}

func (x *QueryResponse) GetQueryId() *v1.QueryId {
	if x, ok := x.GetMessage().(*QueryResponse_QueryId); ok {
		return x.QueryId
	}
	return nil
}

func (x *QueryResponse) GetSchema() *QuerySchema {
	if x, ok := x.GetMessage().(*QueryResponse_Schema); ok {
		return x.Schema
	}
	return nil
}

func (x *QueryResponse) GetStats() *QueryStats {
	if x, ok := x.GetMessage().(*QueryResponse_Stats); ok {
		return x.Stats
	}
	return nil
}

type isQueryResponse_Message interface {
	isQueryResponse_Message()
}

type QueryResponse_Error struct {
	Error *v1.DataprimeError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type QueryResponse_Result struct {
	Result *v1.DataprimeResult `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

type QueryResponse_Warning struct {
	Warning *v1.DataprimeWarning `protobuf:"bytes,3,opt,name=warning,proto3,oneof"`
}

type QueryResponse_QueryId struct {
	QueryId *v1.QueryId `protobuf:"bytes,4,opt,name=query_id,json=queryId,proto3,oneof"`
}

type QueryResponse_Schema struct {
	Schema *QuerySchema `protobuf:"bytes,5,opt,name=schema,proto3,oneof"`
}

type QueryResponse_Stats struct {
	Stats *QueryStats `protobuf:"bytes,6,opt,name=stats,proto3,oneof"`
}

func (*QueryResponse_Error) isQueryResponse_Message() {}

func (*QueryResponse_Result) isQueryResponse_Message() {}

func (*QueryResponse_Warning) isQueryResponse_Message() {}

func (*QueryResponse_QueryId) isQueryResponse_Message() {}

func (*QueryResponse_Schema) isQueryResponse_Message() {}

func (*QueryResponse_Stats) isQueryResponse_Message() {}

type QuerySchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputSchema *Schema        `protobuf:"bytes,1,opt,name=output_schema,json=outputSchema,proto3" json:"output_schema,omitempty"`
	Columns      []*SchemaField `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *QuerySchema) Reset() {
	*x = QuerySchema{}
	mi := &file_com_coralogix_dataprime_v1_internal_query_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySchema) ProtoMessage() {}

func (x *QuerySchema) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_internal_query_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySchema.ProtoReflect.Descriptor instead.
func (*QuerySchema) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_internal_query_response_proto_rawDescGZIP(), []int{1}
}

func (x *QuerySchema) GetOutputSchema() *Schema {
	if x != nil {
		return x.OutputSchema
	}
	return nil
}

func (x *QuerySchema) GetColumns() []*SchemaField {
	if x != nil {
		return x.Columns
	}
	return nil
}

type QueryStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowCount      int64                `protobuf:"varint,1,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
	BytesScanned  int64                `protobuf:"varint,2,opt,name=bytes_scanned,json=bytesScanned,proto3" json:"bytes_scanned,omitempty"`
	ExecutionTime *durationpb.Duration `protobuf:"bytes,3,opt,name=execution_time,json=executionTime,proto3" json:"execution_time,omitempty"`
}

func (x *QueryStats) Reset() {
	*x = QueryStats{}
	mi := &file_com_coralogix_dataprime_v1_internal_query_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStats) ProtoMessage() {}

func (x *QueryStats) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_internal_query_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStats.ProtoReflect.Descriptor instead.
func (*QueryStats) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_internal_query_response_proto_rawDescGZIP(), []int{2}
}

func (x *QueryStats) GetRowCount() int64 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

func (x *QueryStats) GetBytesScanned() int64 {
	if x != nil {
		return x.BytesScanned
	}
	return 0
}

func (x *QueryStats) GetExecutionTime() *durationpb.Duration {
	if x != nil {
		return x.ExecutionTime
	}
	return nil
}

var File_com_coralogix_dataprime_v1_internal_query_response_proto protoreflect.FileDescriptor

var file_com_coralogix_dataprime_v1_internal_query_response_proto_rawDesc = []byte{
	0x0a, 0x38, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x27, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4,
	0x03, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x4c, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x57,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x12, 0x44, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x48, 0x00, 0x52, 0x07,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3e, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x47, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x41,
	0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x22, 0x90, 0x01, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x79, 0x74, 0x65, 0x73, 0x53, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogix_dataprime_v1_internal_query_response_proto_rawDescOnce sync.Once
	file_com_coralogix_dataprime_v1_internal_query_response_proto_rawDescData = file_com_coralogix_dataprime_v1_internal_query_response_proto_rawDesc
)

func file_com_coralogix_dataprime_v1_internal_query_response_proto_rawDescGZIP() []byte {
	file_com_coralogix_dataprime_v1_internal_query_response_proto_rawDescOnce.Do(func() {
		file_com_coralogix_dataprime_v1_internal_query_response_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogix_dataprime_v1_internal_query_response_proto_rawDescData)
	})
	return file_com_coralogix_dataprime_v1_internal_query_response_proto_rawDescData
}

var file_com_coralogix_dataprime_v1_internal_query_response_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_com_coralogix_dataprime_v1_internal_query_response_proto_goTypes = []any{
	(*QueryResponse)(nil),       // 0: com.coralogix.dataprime.v1.QueryResponse
	(*QuerySchema)(nil),         // 1: com.coralogix.dataprime.v1.QuerySchema
	(*QueryStats)(nil),          // 2: com.coralogix.dataprime.v1.QueryStats
	(*v1.DataprimeError)(nil),   // 3: com.coralogixapis.dataprime.v1.DataprimeError
	(*v1.DataprimeResult)(nil),  // 4: com.coralogixapis.dataprime.v1.DataprimeResult
	(*v1.DataprimeWarning)(nil), // 5: com.coralogixapis.dataprime.v1.DataprimeWarning
	(*v1.QueryId)(nil),          // 6: com.coralogixapis.dataprime.v1.QueryId
	(*Schema)(nil),              // 7: com.coralogix.dataprime.v1.Schema
	(*SchemaField)(nil),         // 8: com.coralogix.dataprime.v1.SchemaField
	(*durationpb.Duration)(nil), // 9: google.protobuf.Duration
}
var file_com_coralogix_dataprime_v1_internal_query_response_proto_depIdxs = []int32{
	3, // 0: com.coralogix.dataprime.v1.QueryResponse.error:type_name -> com.coralogixapis.dataprime.v1.DataprimeError
	4, // 1: com.coralogix.dataprime.v1.QueryResponse.result:type_name -> com.coralogixapis.dataprime.v1.DataprimeResult
	5, // 2: com.coralogix.dataprime.v1.QueryResponse.warning:type_name -> com.coralogixapis.dataprime.v1.DataprimeWarning
	6, // 3: com.coralogix.dataprime.v1.QueryResponse.query_id:type_name -> com.coralogixapis.dataprime.v1.QueryId
	1, // 4: com.coralogix.dataprime.v1.QueryResponse.schema:type_name -> com.coralogix.dataprime.v1.QuerySchema
	2, // 5: com.coralogix.dataprime.v1.QueryResponse.stats:type_name -> com.coralogix.dataprime.v1.QueryStats
	7, // 6: com.coralogix.dataprime.v1.QuerySchema.output_schema:type_name -> com.coralogix.dataprime.v1.Schema
	8, // 7: com.coralogix.dataprime.v1.QuerySchema.columns:type_name -> com.coralogix.dataprime.v1.SchemaField
	9, // 8: com.coralogix.dataprime.v1.QueryStats.execution_time:type_name -> google.protobuf.Duration
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_com_coralogix_dataprime_v1_internal_query_response_proto_init() }
func file_com_coralogix_dataprime_v1_internal_query_response_proto_init() {
	if File_com_coralogix_dataprime_v1_internal_query_response_proto != nil {
		return
	}
	file_com_coralogix_dataprime_v1_schema_proto_init()
	file_com_coralogix_dataprime_v1_internal_query_response_proto_msgTypes[0].OneofWrappers = []any{
		(*QueryResponse_Error)(nil),
		(*QueryResponse_Result)(nil),
		(*QueryResponse_Warning)(nil),
		(*QueryResponse_QueryId)(nil),
		(*QueryResponse_Schema)(nil),
		(*QueryResponse_Stats)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogix_dataprime_v1_internal_query_response_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogix_dataprime_v1_internal_query_response_proto_goTypes,
		DependencyIndexes: file_com_coralogix_dataprime_v1_internal_query_response_proto_depIdxs,
		MessageInfos:      file_com_coralogix_dataprime_v1_internal_query_response_proto_msgTypes,
	}.Build()
	File_com_coralogix_dataprime_v1_internal_query_response_proto = out.File
	file_com_coralogix_dataprime_v1_internal_query_response_proto_rawDesc = nil
	file_com_coralogix_dataprime_v1_internal_query_response_proto_goTypes = nil
	file_com_coralogix_dataprime_v1_internal_query_response_proto_depIdxs = nil
}
