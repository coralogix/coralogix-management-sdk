// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: com/coralogix/dataprime/v1/compile.proto

package v1

import (
	v1 "github.com/coralogix/coralogix-management-sdk/go/internal/coralogix/dataprime/ast/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QuerySyntax int32

const (
	QuerySyntax_QUERY_SYNTAX_DATAPRIME_UNSPECIFIED QuerySyntax = 0
	QuerySyntax_QUERY_SYNTAX_LUCENE                QuerySyntax = 1
)

// Enum value maps for QuerySyntax.
var (
	QuerySyntax_name = map[int32]string{
		0: "QUERY_SYNTAX_DATAPRIME_UNSPECIFIED",
		1: "QUERY_SYNTAX_LUCENE",
	}
	QuerySyntax_value = map[string]int32{
		"QUERY_SYNTAX_DATAPRIME_UNSPECIFIED": 0,
		"QUERY_SYNTAX_LUCENE":                1,
	}
)

func (x QuerySyntax) Enum() *QuerySyntax {
	p := new(QuerySyntax)
	*p = x
	return p
}

func (x QuerySyntax) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuerySyntax) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogix_dataprime_v1_compile_proto_enumTypes[0].Descriptor()
}

func (QuerySyntax) Type() protoreflect.EnumType {
	return &file_com_coralogix_dataprime_v1_compile_proto_enumTypes[0]
}

func (x QuerySyntax) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuerySyntax.Descriptor instead.
func (QuerySyntax) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_compile_proto_rawDescGZIP(), []int{0}
}

type CompileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceCode *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=source_code,json=sourceCode,proto3" json:"source_code,omitempty"`
	TeamId     *uint32                 `protobuf:"varint,2,opt,name=team_id,json=teamId,proto3,oneof" json:"team_id,omitempty"`
	TimeRange  *v1.TimeRange           `protobuf:"bytes,3,opt,name=time_range,json=timeRange,proto3,oneof" json:"time_range,omitempty"`
	// default value for source to be used when source is omitted in a query
	DefaultSource    *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=default_source,json=defaultSource,proto3,oneof" json:"default_source,omitempty"`
	Syntax           *QuerySyntax            `protobuf:"varint,5,opt,name=syntax,proto3,enum=com.coralogix.dataprime.v1.QuerySyntax,oneof" json:"syntax,omitempty"`
	AvailableSources []*v1.Source            `protobuf:"bytes,6,rep,name=available_sources,json=availableSources,proto3" json:"available_sources,omitempty"`
	OverrideSchema   *SchemaLookup           `protobuf:"bytes,7,opt,name=override_schema,json=overrideSchema,proto3,oneof" json:"override_schema,omitempty"`
	Backend          *Backend                `protobuf:"varint,8,opt,name=backend,proto3,enum=com.coralogix.dataprime.v1.Backend,oneof" json:"backend,omitempty"`
	// contextual `now` for the query, default: current time
	NowDate *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=now_date,json=nowDate,proto3,oneof" json:"now_date,omitempty"`
}

func (x *CompileRequest) Reset() {
	*x = CompileRequest{}
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompileRequest) ProtoMessage() {}

func (x *CompileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompileRequest.ProtoReflect.Descriptor instead.
func (*CompileRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_compile_proto_rawDescGZIP(), []int{0}
}

func (x *CompileRequest) GetSourceCode() *wrapperspb.StringValue {
	if x != nil {
		return x.SourceCode
	}
	return nil
}

func (x *CompileRequest) GetTeamId() uint32 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

func (x *CompileRequest) GetTimeRange() *v1.TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *CompileRequest) GetDefaultSource() *wrapperspb.StringValue {
	if x != nil {
		return x.DefaultSource
	}
	return nil
}

func (x *CompileRequest) GetSyntax() QuerySyntax {
	if x != nil && x.Syntax != nil {
		return *x.Syntax
	}
	return QuerySyntax_QUERY_SYNTAX_DATAPRIME_UNSPECIFIED
}

func (x *CompileRequest) GetAvailableSources() []*v1.Source {
	if x != nil {
		return x.AvailableSources
	}
	return nil
}

func (x *CompileRequest) GetOverrideSchema() *SchemaLookup {
	if x != nil {
		return x.OverrideSchema
	}
	return nil
}

func (x *CompileRequest) GetBackend() Backend {
	if x != nil && x.Backend != nil {
		return *x.Backend
	}
	return Backend_BACKEND_ARCHIVE_UNSPECIFIED
}

func (x *CompileRequest) GetNowDate() *timestamppb.Timestamp {
	if x != nil {
		return x.NowDate
	}
	return nil
}

type CompileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CompilationResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *CompileResponse) Reset() {
	*x = CompileResponse{}
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompileResponse) ProtoMessage() {}

func (x *CompileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompileResponse.ProtoReflect.Descriptor instead.
func (*CompileResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_compile_proto_rawDescGZIP(), []int{1}
}

func (x *CompileResponse) GetResponse() *CompilationResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type CheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ast *v1.Ast `protobuf:"bytes,1,opt,name=ast,proto3" json:"ast,omitempty"`
}

func (x *CheckRequest) Reset() {
	*x = CheckRequest{}
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRequest) ProtoMessage() {}

func (x *CheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRequest.ProtoReflect.Descriptor instead.
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_compile_proto_rawDescGZIP(), []int{2}
}

func (x *CheckRequest) GetAst() *v1.Ast {
	if x != nil {
		return x.Ast
	}
	return nil
}

type CheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CompilationResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *CheckResponse) Reset() {
	*x = CheckResponse{}
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResponse) ProtoMessage() {}

func (x *CheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResponse.ProtoReflect.Descriptor instead.
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_compile_proto_rawDescGZIP(), []int{3}
}

func (x *CheckResponse) GetResponse() *CompilationResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type CompilationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to CompileResponse:
	//
	//	*CompilationResponse_Success
	//	*CompilationResponse_Failure
	CompileResponse isCompilationResponse_CompileResponse `protobuf_oneof:"compile_response"`
}

func (x *CompilationResponse) Reset() {
	*x = CompilationResponse{}
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompilationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompilationResponse) ProtoMessage() {}

func (x *CompilationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompilationResponse.ProtoReflect.Descriptor instead.
func (*CompilationResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_compile_proto_rawDescGZIP(), []int{4}
}

func (m *CompilationResponse) GetCompileResponse() isCompilationResponse_CompileResponse {
	if m != nil {
		return m.CompileResponse
	}
	return nil
}

func (x *CompilationResponse) GetSuccess() *CompilationResponse_CompilationSuccessful {
	if x, ok := x.GetCompileResponse().(*CompilationResponse_Success); ok {
		return x.Success
	}
	return nil
}

func (x *CompilationResponse) GetFailure() *CompilationResponse_CompilationFailure {
	if x, ok := x.GetCompileResponse().(*CompilationResponse_Failure); ok {
		return x.Failure
	}
	return nil
}

type isCompilationResponse_CompileResponse interface {
	isCompilationResponse_CompileResponse()
}

type CompilationResponse_Success struct {
	Success *CompilationResponse_CompilationSuccessful `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type CompilationResponse_Failure struct {
	Failure *CompilationResponse_CompilationFailure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*CompilationResponse_Success) isCompilationResponse_CompileResponse() {}

func (*CompilationResponse_Failure) isCompilationResponse_CompileResponse() {}

type CompilationResponse_CompilationSuccessful struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ast      *v1.Ast                        `protobuf:"bytes,1,opt,name=ast,proto3" json:"ast,omitempty"`
	Warnings []*CompilationResponse_Warning `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
}

func (x *CompilationResponse_CompilationSuccessful) Reset() {
	*x = CompilationResponse_CompilationSuccessful{}
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompilationResponse_CompilationSuccessful) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompilationResponse_CompilationSuccessful) ProtoMessage() {}

func (x *CompilationResponse_CompilationSuccessful) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompilationResponse_CompilationSuccessful.ProtoReflect.Descriptor instead.
func (*CompilationResponse_CompilationSuccessful) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_compile_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CompilationResponse_CompilationSuccessful) GetAst() *v1.Ast {
	if x != nil {
		return x.Ast
	}
	return nil
}

func (x *CompilationResponse_CompilationSuccessful) GetWarnings() []*CompilationResponse_Warning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type CompilationResponse_CompilationFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problems []*CompilationResponse_Problem `protobuf:"bytes,1,rep,name=problems,proto3" json:"problems,omitempty"`
}

func (x *CompilationResponse_CompilationFailure) Reset() {
	*x = CompilationResponse_CompilationFailure{}
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompilationResponse_CompilationFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompilationResponse_CompilationFailure) ProtoMessage() {}

func (x *CompilationResponse_CompilationFailure) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompilationResponse_CompilationFailure.ProtoReflect.Descriptor instead.
func (*CompilationResponse_CompilationFailure) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_compile_proto_rawDescGZIP(), []int{4, 1}
}

func (x *CompilationResponse_CompilationFailure) GetProblems() []*CompilationResponse_Problem {
	if x != nil {
		return x.Problems
	}
	return nil
}

type CompilationResponse_Problem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Problem:
	//
	//	*CompilationResponse_Problem_Error
	//	*CompilationResponse_Problem_Warning
	Problem isCompilationResponse_Problem_Problem `protobuf_oneof:"problem"`
}

func (x *CompilationResponse_Problem) Reset() {
	*x = CompilationResponse_Problem{}
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompilationResponse_Problem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompilationResponse_Problem) ProtoMessage() {}

func (x *CompilationResponse_Problem) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompilationResponse_Problem.ProtoReflect.Descriptor instead.
func (*CompilationResponse_Problem) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_compile_proto_rawDescGZIP(), []int{4, 2}
}

func (m *CompilationResponse_Problem) GetProblem() isCompilationResponse_Problem_Problem {
	if m != nil {
		return m.Problem
	}
	return nil
}

func (x *CompilationResponse_Problem) GetError() *CompilationResponse_Error {
	if x, ok := x.GetProblem().(*CompilationResponse_Problem_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CompilationResponse_Problem) GetWarning() *CompilationResponse_Warning {
	if x, ok := x.GetProblem().(*CompilationResponse_Problem_Warning); ok {
		return x.Warning
	}
	return nil
}

type isCompilationResponse_Problem_Problem interface {
	isCompilationResponse_Problem_Problem()
}

type CompilationResponse_Problem_Error struct {
	Error *CompilationResponse_Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CompilationResponse_Problem_Warning struct {
	Warning *CompilationResponse_Warning `protobuf:"bytes,2,opt,name=warning,proto3,oneof"`
}

func (*CompilationResponse_Problem_Error) isCompilationResponse_Problem_Problem() {}

func (*CompilationResponse_Problem_Warning) isCompilationResponse_Problem_Problem() {}

type CompilationResponse_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg      *wrapperspb.StringValue       `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Position *CompilationResponse_Position `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *CompilationResponse_Error) Reset() {
	*x = CompilationResponse_Error{}
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompilationResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompilationResponse_Error) ProtoMessage() {}

func (x *CompilationResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompilationResponse_Error.ProtoReflect.Descriptor instead.
func (*CompilationResponse_Error) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_compile_proto_rawDescGZIP(), []int{4, 3}
}

func (x *CompilationResponse_Error) GetMsg() *wrapperspb.StringValue {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *CompilationResponse_Error) GetPosition() *CompilationResponse_Position {
	if x != nil {
		return x.Position
	}
	return nil
}

type CompilationResponse_Warning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg      *wrapperspb.StringValue       `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Position *CompilationResponse_Position `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *CompilationResponse_Warning) Reset() {
	*x = CompilationResponse_Warning{}
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompilationResponse_Warning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompilationResponse_Warning) ProtoMessage() {}

func (x *CompilationResponse_Warning) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompilationResponse_Warning.ProtoReflect.Descriptor instead.
func (*CompilationResponse_Warning) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_compile_proto_rawDescGZIP(), []int{4, 4}
}

func (x *CompilationResponse_Warning) GetMsg() *wrapperspb.StringValue {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *CompilationResponse_Warning) GetPosition() *CompilationResponse_Position {
	if x != nil {
		return x.Position
	}
	return nil
}

type CompilationResponse_Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"`
	Col  *wrapperspb.UInt32Value `protobuf:"bytes,2,opt,name=col,proto3" json:"col,omitempty"`
}

func (x *CompilationResponse_Position) Reset() {
	*x = CompilationResponse_Position{}
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompilationResponse_Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompilationResponse_Position) ProtoMessage() {}

func (x *CompilationResponse_Position) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_compile_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompilationResponse_Position.ProtoReflect.Descriptor instead.
func (*CompilationResponse_Position) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_compile_proto_rawDescGZIP(), []int{4, 5}
}

func (x *CompilationResponse_Position) GetLine() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Line
	}
	return nil
}

func (x *CompilationResponse_Position) GetCol() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Col
	}
	return nil
}

var File_com_coralogix_dataprime_v1_compile_proto protoreflect.FileDescriptor

var file_com_coralogix_dataprime_v1_compile_proto_rawDesc = []byte{
	0x0a, 0x28, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x28, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2f,
	0x61, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2a, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2f, 0x61, 0x73, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x72, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xdf, 0x05, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x4d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x01,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x48,
	0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x02, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x79, 0x6e, 0x74,
	0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x74, 0x61,
	0x78, 0x48, 0x03, 0x52, 0x06, 0x73, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x88, 0x01, 0x01, 0x12, 0x53,
	0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x69, 0x6d, 0x65, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x0f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x48, 0x04, 0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x07, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x48, 0x05, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x3a, 0x0a, 0x08, 0x6e, 0x6f, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x06, 0x52,
	0x07, 0x6e, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x79,
	0x6e, 0x74, 0x61, 0x78, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x6f, 0x77, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x22, 0x5e, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x45, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x35, 0x0a, 0x03, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x73, 0x74, 0x52, 0x03, 0x61, 0x73, 0x74, 0x22, 0x5c, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc8, 0x08, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x69,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x5e, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x1a, 0xa3, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x12, 0x35, 0x0a, 0x03, 0x61,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x74, 0x52, 0x03, 0x61,
	0x73, 0x74, 0x12, 0x53, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x77,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x69, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x69,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x53, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x1a, 0xb8, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x4d,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x53, 0x0a,
	0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x1a, 0x8d, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x54, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x8f, 0x01,
	0x0a, 0x07, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x54, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x6c, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2e, 0x0a,
	0x03, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x63, 0x6f, 0x6c, 0x42, 0x12, 0x0a,
	0x10, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2a, 0x4e, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x74, 0x61, 0x78,
	0x12, 0x26, 0x0a, 0x22, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x59, 0x4e, 0x54, 0x41, 0x58,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x50, 0x52, 0x49, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x51, 0x55, 0x45, 0x52,
	0x59, 0x5f, 0x53, 0x59, 0x4e, 0x54, 0x41, 0x58, 0x5f, 0x4c, 0x55, 0x43, 0x45, 0x4e, 0x45, 0x10,
	0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogix_dataprime_v1_compile_proto_rawDescOnce sync.Once
	file_com_coralogix_dataprime_v1_compile_proto_rawDescData = file_com_coralogix_dataprime_v1_compile_proto_rawDesc
)

func file_com_coralogix_dataprime_v1_compile_proto_rawDescGZIP() []byte {
	file_com_coralogix_dataprime_v1_compile_proto_rawDescOnce.Do(func() {
		file_com_coralogix_dataprime_v1_compile_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogix_dataprime_v1_compile_proto_rawDescData)
	})
	return file_com_coralogix_dataprime_v1_compile_proto_rawDescData
}

var file_com_coralogix_dataprime_v1_compile_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_coralogix_dataprime_v1_compile_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_com_coralogix_dataprime_v1_compile_proto_goTypes = []any{
	(QuerySyntax)(0),                                  // 0: com.coralogix.dataprime.v1.QuerySyntax
	(*CompileRequest)(nil),                            // 1: com.coralogix.dataprime.v1.CompileRequest
	(*CompileResponse)(nil),                           // 2: com.coralogix.dataprime.v1.CompileResponse
	(*CheckRequest)(nil),                              // 3: com.coralogix.dataprime.v1.CheckRequest
	(*CheckResponse)(nil),                             // 4: com.coralogix.dataprime.v1.CheckResponse
	(*CompilationResponse)(nil),                       // 5: com.coralogix.dataprime.v1.CompilationResponse
	(*CompilationResponse_CompilationSuccessful)(nil), // 6: com.coralogix.dataprime.v1.CompilationResponse.CompilationSuccessful
	(*CompilationResponse_CompilationFailure)(nil),    // 7: com.coralogix.dataprime.v1.CompilationResponse.CompilationFailure
	(*CompilationResponse_Problem)(nil),               // 8: com.coralogix.dataprime.v1.CompilationResponse.Problem
	(*CompilationResponse_Error)(nil),                 // 9: com.coralogix.dataprime.v1.CompilationResponse.Error
	(*CompilationResponse_Warning)(nil),               // 10: com.coralogix.dataprime.v1.CompilationResponse.Warning
	(*CompilationResponse_Position)(nil),              // 11: com.coralogix.dataprime.v1.CompilationResponse.Position
	(*wrapperspb.StringValue)(nil),                    // 12: google.protobuf.StringValue
	(*v1.TimeRange)(nil),                              // 13: com.coralogix.dataprime.ast.v1.TimeRange
	(*v1.Source)(nil),                                 // 14: com.coralogix.dataprime.ast.v1.Source
	(*SchemaLookup)(nil),                              // 15: com.coralogix.dataprime.v1.SchemaLookup
	(Backend)(0),                                      // 16: com.coralogix.dataprime.v1.Backend
	(*timestamppb.Timestamp)(nil),                     // 17: google.protobuf.Timestamp
	(*v1.Ast)(nil),                                    // 18: com.coralogix.dataprime.ast.v1.Ast
	(*wrapperspb.UInt32Value)(nil),                    // 19: google.protobuf.UInt32Value
}
var file_com_coralogix_dataprime_v1_compile_proto_depIdxs = []int32{
	12, // 0: com.coralogix.dataprime.v1.CompileRequest.source_code:type_name -> google.protobuf.StringValue
	13, // 1: com.coralogix.dataprime.v1.CompileRequest.time_range:type_name -> com.coralogix.dataprime.ast.v1.TimeRange
	12, // 2: com.coralogix.dataprime.v1.CompileRequest.default_source:type_name -> google.protobuf.StringValue
	0,  // 3: com.coralogix.dataprime.v1.CompileRequest.syntax:type_name -> com.coralogix.dataprime.v1.QuerySyntax
	14, // 4: com.coralogix.dataprime.v1.CompileRequest.available_sources:type_name -> com.coralogix.dataprime.ast.v1.Source
	15, // 5: com.coralogix.dataprime.v1.CompileRequest.override_schema:type_name -> com.coralogix.dataprime.v1.SchemaLookup
	16, // 6: com.coralogix.dataprime.v1.CompileRequest.backend:type_name -> com.coralogix.dataprime.v1.Backend
	17, // 7: com.coralogix.dataprime.v1.CompileRequest.now_date:type_name -> google.protobuf.Timestamp
	5,  // 8: com.coralogix.dataprime.v1.CompileResponse.response:type_name -> com.coralogix.dataprime.v1.CompilationResponse
	18, // 9: com.coralogix.dataprime.v1.CheckRequest.ast:type_name -> com.coralogix.dataprime.ast.v1.Ast
	5,  // 10: com.coralogix.dataprime.v1.CheckResponse.response:type_name -> com.coralogix.dataprime.v1.CompilationResponse
	6,  // 11: com.coralogix.dataprime.v1.CompilationResponse.success:type_name -> com.coralogix.dataprime.v1.CompilationResponse.CompilationSuccessful
	7,  // 12: com.coralogix.dataprime.v1.CompilationResponse.failure:type_name -> com.coralogix.dataprime.v1.CompilationResponse.CompilationFailure
	18, // 13: com.coralogix.dataprime.v1.CompilationResponse.CompilationSuccessful.ast:type_name -> com.coralogix.dataprime.ast.v1.Ast
	10, // 14: com.coralogix.dataprime.v1.CompilationResponse.CompilationSuccessful.warnings:type_name -> com.coralogix.dataprime.v1.CompilationResponse.Warning
	8,  // 15: com.coralogix.dataprime.v1.CompilationResponse.CompilationFailure.problems:type_name -> com.coralogix.dataprime.v1.CompilationResponse.Problem
	9,  // 16: com.coralogix.dataprime.v1.CompilationResponse.Problem.error:type_name -> com.coralogix.dataprime.v1.CompilationResponse.Error
	10, // 17: com.coralogix.dataprime.v1.CompilationResponse.Problem.warning:type_name -> com.coralogix.dataprime.v1.CompilationResponse.Warning
	12, // 18: com.coralogix.dataprime.v1.CompilationResponse.Error.msg:type_name -> google.protobuf.StringValue
	11, // 19: com.coralogix.dataprime.v1.CompilationResponse.Error.position:type_name -> com.coralogix.dataprime.v1.CompilationResponse.Position
	12, // 20: com.coralogix.dataprime.v1.CompilationResponse.Warning.msg:type_name -> google.protobuf.StringValue
	11, // 21: com.coralogix.dataprime.v1.CompilationResponse.Warning.position:type_name -> com.coralogix.dataprime.v1.CompilationResponse.Position
	19, // 22: com.coralogix.dataprime.v1.CompilationResponse.Position.line:type_name -> google.protobuf.UInt32Value
	19, // 23: com.coralogix.dataprime.v1.CompilationResponse.Position.col:type_name -> google.protobuf.UInt32Value
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_com_coralogix_dataprime_v1_compile_proto_init() }
func file_com_coralogix_dataprime_v1_compile_proto_init() {
	if File_com_coralogix_dataprime_v1_compile_proto != nil {
		return
	}
	file_com_coralogix_dataprime_v1_schema_proto_init()
	file_com_coralogix_dataprime_v1_common_proto_init()
	file_com_coralogix_dataprime_v1_compile_proto_msgTypes[0].OneofWrappers = []any{}
	file_com_coralogix_dataprime_v1_compile_proto_msgTypes[4].OneofWrappers = []any{
		(*CompilationResponse_Success)(nil),
		(*CompilationResponse_Failure)(nil),
	}
	file_com_coralogix_dataprime_v1_compile_proto_msgTypes[7].OneofWrappers = []any{
		(*CompilationResponse_Problem_Error)(nil),
		(*CompilationResponse_Problem_Warning)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogix_dataprime_v1_compile_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogix_dataprime_v1_compile_proto_goTypes,
		DependencyIndexes: file_com_coralogix_dataprime_v1_compile_proto_depIdxs,
		EnumInfos:         file_com_coralogix_dataprime_v1_compile_proto_enumTypes,
		MessageInfos:      file_com_coralogix_dataprime_v1_compile_proto_msgTypes,
	}.Build()
	File_com_coralogix_dataprime_v1_compile_proto = out.File
	file_com_coralogix_dataprime_v1_compile_proto_rawDesc = nil
	file_com_coralogix_dataprime_v1_compile_proto_goTypes = nil
	file_com_coralogix_dataprime_v1_compile_proto_depIdxs = nil
}
