// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.0
// source: com/coralogix/dataprime/v1/schema.proto

package v1

import (
	v1 "github.com/coralogix/coralogix-management-sdk/go/internal/coralogix/dataprime/ast/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SchemaLookup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schemas []*NamedSchema `protobuf:"bytes,1,rep,name=schemas,proto3" json:"schemas,omitempty"`
}

func (x *SchemaLookup) Reset() {
	*x = SchemaLookup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_dataprime_v1_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemaLookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaLookup) ProtoMessage() {}

func (x *SchemaLookup) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaLookup.ProtoReflect.Descriptor instead.
func (*SchemaLookup) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_schema_proto_rawDescGZIP(), []int{0}
}

func (x *SchemaLookup) GetSchemas() []*NamedSchema {
	if x != nil {
		return x.Schemas
	}
	return nil
}

type NamedSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *v1.Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Schema *Schema    `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *NamedSchema) Reset() {
	*x = NamedSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_dataprime_v1_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedSchema) ProtoMessage() {}

func (x *NamedSchema) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedSchema.ProtoReflect.Descriptor instead.
func (*NamedSchema) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_schema_proto_rawDescGZIP(), []int{1}
}

func (x *NamedSchema) GetSource() *v1.Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *NamedSchema) GetSchema() *Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

type Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserdataFields []*SchemaField `protobuf:"bytes,1,rep,name=userdata_fields,json=userdataFields,proto3" json:"userdata_fields,omitempty"`
	MetadataFields []*SchemaField `protobuf:"bytes,2,rep,name=metadata_fields,json=metadataFields,proto3" json:"metadata_fields,omitempty"`
	LabelsFields   []*SchemaField `protobuf:"bytes,3,rep,name=labels_fields,json=labelsFields,proto3" json:"labels_fields,omitempty"`
}

func (x *Schema) Reset() {
	*x = Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_dataprime_v1_schema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_schema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_schema_proto_rawDescGZIP(), []int{2}
}

func (x *Schema) GetUserdataFields() []*SchemaField {
	if x != nil {
		return x.UserdataFields
	}
	return nil
}

func (x *Schema) GetMetadataFields() []*SchemaField {
	if x != nil {
		return x.MetadataFields
	}
	return nil
}

func (x *Schema) GetLabelsFields() []*SchemaField {
	if x != nil {
		return x.LabelsFields
	}
	return nil
}

type SchemaField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       []string     `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	LucenePath *LucenePath  `protobuf:"bytes,2,opt,name=lucene_path,json=lucenePath,proto3,oneof" json:"lucene_path,omitempty"`
	Datatype   *v1.Datatype `protobuf:"bytes,3,opt,name=datatype,proto3,oneof" json:"datatype,omitempty"`
}

func (x *SchemaField) Reset() {
	*x = SchemaField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_dataprime_v1_schema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemaField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaField) ProtoMessage() {}

func (x *SchemaField) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_schema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaField.ProtoReflect.Descriptor instead.
func (*SchemaField) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_schema_proto_rawDescGZIP(), []int{3}
}

func (x *SchemaField) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *SchemaField) GetLucenePath() *LucenePath {
	if x != nil {
		return x.LucenePath
	}
	return nil
}

func (x *SchemaField) GetDatatype() *v1.Datatype {
	if x != nil {
		return x.Datatype
	}
	return nil
}

type LucenePath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path []string `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
}

func (x *LucenePath) Reset() {
	*x = LucenePath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_dataprime_v1_schema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LucenePath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LucenePath) ProtoMessage() {}

func (x *LucenePath) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_dataprime_v1_schema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LucenePath.ProtoReflect.Descriptor instead.
func (*LucenePath) Descriptor() ([]byte, []int) {
	return file_com_coralogix_dataprime_v1_schema_proto_rawDescGZIP(), []int{4}
}

func (x *LucenePath) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

var File_com_coralogix_dataprime_v1_schema_proto protoreflect.FileDescriptor

var file_com_coralogix_dataprime_v1_schema_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x2a, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2f, 0x61,
	0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2a, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2f, 0x61, 0x73, 0x74, 0x2f, 0x76,
	0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a,
	0x0c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x41, 0x0a,
	0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73,
	0x22, 0x89, 0x01, 0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x3e, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x3a, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0xfa, 0x01, 0x0a,
	0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x50, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x64,
	0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x50, 0x0a, 0x0f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0e, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x4c, 0x0a, 0x0d, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0c, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x0b, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x4c, 0x0a,
	0x0b, 0x6c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x61, 0x74, 0x68, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x75,
	0x63, 0x65, 0x6e, 0x65, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x74,
	0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x75, 0x63, 0x65, 0x6e,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x20, 0x0a, 0x0a, 0x4c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogix_dataprime_v1_schema_proto_rawDescOnce sync.Once
	file_com_coralogix_dataprime_v1_schema_proto_rawDescData = file_com_coralogix_dataprime_v1_schema_proto_rawDesc
)

func file_com_coralogix_dataprime_v1_schema_proto_rawDescGZIP() []byte {
	file_com_coralogix_dataprime_v1_schema_proto_rawDescOnce.Do(func() {
		file_com_coralogix_dataprime_v1_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogix_dataprime_v1_schema_proto_rawDescData)
	})
	return file_com_coralogix_dataprime_v1_schema_proto_rawDescData
}

var file_com_coralogix_dataprime_v1_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_com_coralogix_dataprime_v1_schema_proto_goTypes = []any{
	(*SchemaLookup)(nil), // 0: com.coralogix.dataprime.v1.SchemaLookup
	(*NamedSchema)(nil),  // 1: com.coralogix.dataprime.v1.NamedSchema
	(*Schema)(nil),       // 2: com.coralogix.dataprime.v1.Schema
	(*SchemaField)(nil),  // 3: com.coralogix.dataprime.v1.SchemaField
	(*LucenePath)(nil),   // 4: com.coralogix.dataprime.v1.LucenePath
	(*v1.Source)(nil),    // 5: com.coralogix.dataprime.ast.v1.Source
	(*v1.Datatype)(nil),  // 6: com.coralogix.dataprime.ast.v1.Datatype
}
var file_com_coralogix_dataprime_v1_schema_proto_depIdxs = []int32{
	1, // 0: com.coralogix.dataprime.v1.SchemaLookup.schemas:type_name -> com.coralogix.dataprime.v1.NamedSchema
	5, // 1: com.coralogix.dataprime.v1.NamedSchema.source:type_name -> com.coralogix.dataprime.ast.v1.Source
	2, // 2: com.coralogix.dataprime.v1.NamedSchema.schema:type_name -> com.coralogix.dataprime.v1.Schema
	3, // 3: com.coralogix.dataprime.v1.Schema.userdata_fields:type_name -> com.coralogix.dataprime.v1.SchemaField
	3, // 4: com.coralogix.dataprime.v1.Schema.metadata_fields:type_name -> com.coralogix.dataprime.v1.SchemaField
	3, // 5: com.coralogix.dataprime.v1.Schema.labels_fields:type_name -> com.coralogix.dataprime.v1.SchemaField
	4, // 6: com.coralogix.dataprime.v1.SchemaField.lucene_path:type_name -> com.coralogix.dataprime.v1.LucenePath
	6, // 7: com.coralogix.dataprime.v1.SchemaField.datatype:type_name -> com.coralogix.dataprime.ast.v1.Datatype
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_com_coralogix_dataprime_v1_schema_proto_init() }
func file_com_coralogix_dataprime_v1_schema_proto_init() {
	if File_com_coralogix_dataprime_v1_schema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_com_coralogix_dataprime_v1_schema_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SchemaLookup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_dataprime_v1_schema_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*NamedSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_dataprime_v1_schema_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_dataprime_v1_schema_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SchemaField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_dataprime_v1_schema_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*LucenePath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_com_coralogix_dataprime_v1_schema_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogix_dataprime_v1_schema_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogix_dataprime_v1_schema_proto_goTypes,
		DependencyIndexes: file_com_coralogix_dataprime_v1_schema_proto_depIdxs,
		MessageInfos:      file_com_coralogix_dataprime_v1_schema_proto_msgTypes,
	}.Build()
	File_com_coralogix_dataprime_v1_schema_proto = out.File
	file_com_coralogix_dataprime_v1_schema_proto_rawDesc = nil
	file_com_coralogix_dataprime_v1_schema_proto_goTypes = nil
	file_com_coralogix_dataprime_v1_schema_proto_depIdxs = nil
}
