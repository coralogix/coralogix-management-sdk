// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: com/coralogix/permissions/v1/permissions_mgmt.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// / A filter type describes how to match a filter against an input string
type FilterType int32

const (
	FilterType_FILTER_TYPE_UNSPECIFIED FilterType = 0
	// / Matches if string starts with filter
	FilterType_FILTER_TYPE_STARTS_WITH FilterType = 1
	// / Matches if string ends with filter
	FilterType_FILTER_TYPE_ENDS_WITH FilterType = 2
	// / Matches if string contains filter
	FilterType_FILTER_TYPE_CONTAINS FilterType = 3
	// / Matches if string exactly matches filter
	FilterType_FILTER_TYPE_EXACT FilterType = 4
)

// Enum value maps for FilterType.
var (
	FilterType_name = map[int32]string{
		0: "FILTER_TYPE_UNSPECIFIED",
		1: "FILTER_TYPE_STARTS_WITH",
		2: "FILTER_TYPE_ENDS_WITH",
		3: "FILTER_TYPE_CONTAINS",
		4: "FILTER_TYPE_EXACT",
	}
	FilterType_value = map[string]int32{
		"FILTER_TYPE_UNSPECIFIED": 0,
		"FILTER_TYPE_STARTS_WITH": 1,
		"FILTER_TYPE_ENDS_WITH":   2,
		"FILTER_TYPE_CONTAINS":    3,
		"FILTER_TYPE_EXACT":       4,
	}
)

func (x FilterType) Enum() *FilterType {
	p := new(FilterType)
	*p = x
	return p
}

func (x FilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_enumTypes[0].Descriptor()
}

func (FilterType) Type() protoreflect.EnumType {
	return &file_com_coralogix_permissions_v1_permissions_mgmt_proto_enumTypes[0]
}

func (x FilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterType.Descriptor instead.
func (FilterType) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{0}
}

// / User status
type UserStatus int32

const (
	UserStatus_USER_STATUS_UNSPECIFIED UserStatus = 0
	// / User is active
	UserStatus_USER_STATUS_ACTIVE UserStatus = 1
	// / User is inactive
	UserStatus_USER_STATUS_INACTIVE UserStatus = 2
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0: "USER_STATUS_UNSPECIFIED",
		1: "USER_STATUS_ACTIVE",
		2: "USER_STATUS_INACTIVE",
	}
	UserStatus_value = map[string]int32{
		"USER_STATUS_UNSPECIFIED": 0,
		"USER_STATUS_ACTIVE":      1,
		"USER_STATUS_INACTIVE":    2,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_enumTypes[1].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_com_coralogix_permissions_v1_permissions_mgmt_proto_enumTypes[1]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{1}
}

// / Group origin defines in which circumstances the group was created.
type GroupOrigin int32

const (
	GroupOrigin_GROUP_ORIGIN_UNSPECIFIED GroupOrigin = 0
	// / A built in group is defined by the system and users are not able to alter them.
	GroupOrigin_GROUP_ORIGIN_BUILT_IN GroupOrigin = 1
	// / User defined or custom role.
	GroupOrigin_GROUP_ORIGIN_USER_DEFINED GroupOrigin = 2
)

// Enum value maps for GroupOrigin.
var (
	GroupOrigin_name = map[int32]string{
		0: "GROUP_ORIGIN_UNSPECIFIED",
		1: "GROUP_ORIGIN_BUILT_IN",
		2: "GROUP_ORIGIN_USER_DEFINED",
	}
	GroupOrigin_value = map[string]int32{
		"GROUP_ORIGIN_UNSPECIFIED":  0,
		"GROUP_ORIGIN_BUILT_IN":     1,
		"GROUP_ORIGIN_USER_DEFINED": 2,
	}
)

func (x GroupOrigin) Enum() *GroupOrigin {
	p := new(GroupOrigin)
	*p = x
	return p
}

func (x GroupOrigin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupOrigin) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_enumTypes[2].Descriptor()
}

func (GroupOrigin) Type() protoreflect.EnumType {
	return &file_com_coralogix_permissions_v1_permissions_mgmt_proto_enumTypes[2]
}

func (x GroupOrigin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupOrigin.Descriptor instead.
func (GroupOrigin) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{2}
}

// / Group type defines the level of access to the group itself
type GroupType int32

const (
	GroupType_GROUP_TYPE_UNSPECIFIED GroupType = 0
	// / Discoverable and joinable by any authorized user. Ideal for open collaboration (e.g., general teams).
	GroupType_GROUP_TYPE_OPEN GroupType = 1
	// / Not discoverable. Membership is by invitation or manual assignment only. Suitable for controlled collaboration (e.g., project teams).
	GroupType_GROUP_TYPE_CLOSED GroupType = 2
	// / A closed group applied to highly sensitive content.
	GroupType_GROUP_TYPE_RESTRICTED GroupType = 3
)

// Enum value maps for GroupType.
var (
	GroupType_name = map[int32]string{
		0: "GROUP_TYPE_UNSPECIFIED",
		1: "GROUP_TYPE_OPEN",
		2: "GROUP_TYPE_CLOSED",
		3: "GROUP_TYPE_RESTRICTED",
	}
	GroupType_value = map[string]int32{
		"GROUP_TYPE_UNSPECIFIED": 0,
		"GROUP_TYPE_OPEN":        1,
		"GROUP_TYPE_CLOSED":      2,
		"GROUP_TYPE_RESTRICTED":  3,
	}
)

func (x GroupType) Enum() *GroupType {
	p := new(GroupType)
	*p = x
	return p
}

func (x GroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_enumTypes[3].Descriptor()
}

func (GroupType) Type() protoreflect.EnumType {
	return &file_com_coralogix_permissions_v1_permissions_mgmt_proto_enumTypes[3]
}

func (x GroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupType.Descriptor instead.
func (GroupType) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{3}
}

// / A scope filter, given a filter term and a filter type is used to configure filter capabilities
type ScopeFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// / The filter term to use as a matching reference.
	Term string `protobuf:"bytes,1,opt,name=term,proto3" json:"term,omitempty"`
	// / The filter type. i.e. given a term prod and filter type FilterType.STARTS_WITH the string production will pass the filter.
	FilterType    FilterType `protobuf:"varint,2,opt,name=filter_type,json=filterType,proto3,enum=com.coralogix.permissions.v1.FilterType" json:"filter_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScopeFilter) Reset() {
	*x = ScopeFilter{}
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScopeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeFilter) ProtoMessage() {}

func (x *ScopeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeFilter.ProtoReflect.Descriptor instead.
func (*ScopeFilter) Descriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{0}
}

func (x *ScopeFilter) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *ScopeFilter) GetFilterType() FilterType {
	if x != nil {
		return x.FilterType
	}
	return FilterType_FILTER_TYPE_UNSPECIFIED
}

// / Scope filters are currently possible to be defined for subsystems and applications
type ScopeFilters struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// / List of subsystem scope filters
	Subsystems []*ScopeFilter `protobuf:"bytes,1,rep,name=subsystems,proto3" json:"subsystems,omitempty"`
	// / List of applications scope filters
	Applications  []*ScopeFilter `protobuf:"bytes,2,rep,name=applications,proto3" json:"applications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScopeFilters) Reset() {
	*x = ScopeFilters{}
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScopeFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeFilters) ProtoMessage() {}

func (x *ScopeFilters) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeFilters.ProtoReflect.Descriptor instead.
func (*ScopeFilters) Descriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{1}
}

func (x *ScopeFilters) GetSubsystems() []*ScopeFilter {
	if x != nil {
		return x.Subsystems
	}
	return nil
}

func (x *ScopeFilters) GetApplications() []*ScopeFilter {
	if x != nil {
		return x.Applications
	}
	return nil
}

// / A group scope has a list of filters for subsystems and applications. Used to filter traffic based on user defined rules.
type Scope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// / Unique scope identifier
	Id *ScopeId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// / The filters definition
	Filters       *ScopeFilters `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Scope) Reset() {
	*x = Scope{}
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Scope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scope) ProtoMessage() {}

func (x *Scope) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scope.ProtoReflect.Descriptor instead.
func (*Scope) Descriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{2}
}

func (x *Scope) GetId() *ScopeId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Scope) GetFilters() *ScopeFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

// / An user is an entity that is always part of a team and has an account associated with it
type User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// / Unique user id
	UserId *UserId `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// / Associated account id. An account can have many users.
	UserAccountId *UserAccountId `protobuf:"bytes,2,opt,name=user_account_id,json=userAccountId,proto3" json:"user_account_id,omitempty"`
	// / Unique username
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// / User first name
	FirstName string `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// / User last name
	LastName string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// / User status: [Active, Inactive]
	Status        UserStatus `protobuf:"varint,6,opt,name=status,proto3,enum=com.coralogix.permissions.v1.UserStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{3}
}

func (x *User) GetUserId() *UserId {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *User) GetUserAccountId() *UserAccountId {
	if x != nil {
		return x.UserAccountId
	}
	return nil
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_USER_STATUS_UNSPECIFIED
}

// / A group role. Each role has a collection of permissions associated with it. A group can have many roles.
type Role struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// / Unique role identifier
	RoleId *RoleId `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// / Unique role name
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Role) Reset() {
	*x = Role{}
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{4}
}

func (x *Role) GetRoleId() *RoleId {
	if x != nil {
		return x.RoleId
	}
	return nil
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TeamGroupSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *TeamGroupId           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	UserCount     uint32                 `protobuf:"varint,3,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamGroupSummary) Reset() {
	*x = TeamGroupSummary{}
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamGroupSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamGroupSummary) ProtoMessage() {}

func (x *TeamGroupSummary) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamGroupSummary.ProtoReflect.Descriptor instead.
func (*TeamGroupSummary) Descriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{5}
}

func (x *TeamGroupSummary) GetId() *TeamGroupId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TeamGroupSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamGroupSummary) GetUserCount() uint32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

type SystemRole struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoleId        *RoleId                `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemRole) Reset() {
	*x = SystemRole{}
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemRole) ProtoMessage() {}

func (x *SystemRole) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemRole.ProtoReflect.Descriptor instead.
func (*SystemRole) Descriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{6}
}

func (x *SystemRole) GetRoleId() *RoleId {
	if x != nil {
		return x.RoleId
	}
	return nil
}

func (x *SystemRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SystemRole) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CustomRole struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoleId        *RoleId                `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ParentRoleId  *RoleId                `protobuf:"bytes,4,opt,name=parent_role_id,json=parentRoleId,proto3" json:"parent_role_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomRole) Reset() {
	*x = CustomRole{}
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomRole) ProtoMessage() {}

func (x *CustomRole) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomRole.ProtoReflect.Descriptor instead.
func (*CustomRole) Descriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{7}
}

func (x *CustomRole) GetRoleId() *RoleId {
	if x != nil {
		return x.RoleId
	}
	return nil
}

func (x *CustomRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomRole) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CustomRole) GetParentRoleId() *RoleId {
	if x != nil {
		return x.ParentRoleId
	}
	return nil
}

type RoleSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Role:
	//
	//	*RoleSummary_SystemRole
	//	*RoleSummary_CustomRole
	Role          isRoleSummary_Role    `protobuf_oneof:"role"`
	UserCount     uint32                `protobuf:"varint,3,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
	Groups        []*TeamGroupSummary   `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	Permissions   []*PermissionMetadata `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoleSummary) Reset() {
	*x = RoleSummary{}
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleSummary) ProtoMessage() {}

func (x *RoleSummary) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleSummary.ProtoReflect.Descriptor instead.
func (*RoleSummary) Descriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{8}
}

func (x *RoleSummary) GetRole() isRoleSummary_Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RoleSummary) GetSystemRole() *SystemRole {
	if x != nil {
		if x, ok := x.Role.(*RoleSummary_SystemRole); ok {
			return x.SystemRole
		}
	}
	return nil
}

func (x *RoleSummary) GetCustomRole() *CustomRole {
	if x != nil {
		if x, ok := x.Role.(*RoleSummary_CustomRole); ok {
			return x.CustomRole
		}
	}
	return nil
}

func (x *RoleSummary) GetUserCount() uint32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *RoleSummary) GetGroups() []*TeamGroupSummary {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *RoleSummary) GetPermissions() []*PermissionMetadata {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type isRoleSummary_Role interface {
	isRoleSummary_Role()
}

type RoleSummary_SystemRole struct {
	SystemRole *SystemRole `protobuf:"bytes,1,opt,name=system_role,json=systemRole,proto3,oneof"`
}

type RoleSummary_CustomRole struct {
	CustomRole *CustomRole `protobuf:"bytes,2,opt,name=custom_role,json=customRole,proto3,oneof"`
}

func (*RoleSummary_SystemRole) isRoleSummary_Role() {}

func (*RoleSummary_CustomRole) isRoleSummary_Role() {}

// / An organisation group
type OrgGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// / Unique organisation group identifier
	OrgGroupId *OrgGroupId `protobuf:"bytes,1,opt,name=org_group_id,json=orgGroupId,proto3" json:"org_group_id,omitempty"`
	// / Unique name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// / Organisation this group belongs to
	OrgId *OrganizationId `protobuf:"bytes,3,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// / Associated organisation roles
	Roles         []*Role `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrgGroup) Reset() {
	*x = OrgGroup{}
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrgGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgGroup) ProtoMessage() {}

func (x *OrgGroup) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgGroup.ProtoReflect.Descriptor instead.
func (*OrgGroup) Descriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{9}
}

func (x *OrgGroup) GetOrgGroupId() *OrgGroupId {
	if x != nil {
		return x.OrgGroupId
	}
	return nil
}

func (x *OrgGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrgGroup) GetOrgId() *OrganizationId {
	if x != nil {
		return x.OrgId
	}
	return nil
}

func (x *OrgGroup) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type TeamGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// / Unique team group identifier
	GroupId *TeamGroupId `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// / Unique name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// / Group description
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// / Group external identifier. Applies if team is externally defined.
	ExternalId *string `protobuf:"bytes,4,opt,name=external_id,json=externalId,proto3,oneof" json:"external_id,omitempty"`
	// / Built in groups are not user made. They were created by the system.
	GroupOrigin GroupOrigin `protobuf:"varint,5,opt,name=group_origin,json=groupOrigin,proto3,enum=com.coralogix.permissions.v1.GroupOrigin" json:"group_origin,omitempty"`
	// / Team this group belongs to
	TeamId *TeamId `protobuf:"bytes,6,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	// / Associated team roles
	Roles []*Role `protobuf:"bytes,7,rep,name=roles,proto3" json:"roles,omitempty"`
	// / Associated scope
	Scope          *Scope                 `protobuf:"bytes,8,opt,name=scope,proto3,oneof" json:"scope,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	NextGenScopeId *string                `protobuf:"bytes,11,opt,name=next_gen_scope_id,json=nextGenScopeId,proto3,oneof" json:"next_gen_scope_id,omitempty"`
	// / Group type defines the level of access to the group itself
	GroupType     GroupType `protobuf:"varint,12,opt,name=group_type,json=groupType,proto3,enum=com.coralogix.permissions.v1.GroupType" json:"group_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamGroup) Reset() {
	*x = TeamGroup{}
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamGroup) ProtoMessage() {}

func (x *TeamGroup) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamGroup.ProtoReflect.Descriptor instead.
func (*TeamGroup) Descriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{10}
}

func (x *TeamGroup) GetGroupId() *TeamGroupId {
	if x != nil {
		return x.GroupId
	}
	return nil
}

func (x *TeamGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamGroup) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *TeamGroup) GetExternalId() string {
	if x != nil && x.ExternalId != nil {
		return *x.ExternalId
	}
	return ""
}

func (x *TeamGroup) GetGroupOrigin() GroupOrigin {
	if x != nil {
		return x.GroupOrigin
	}
	return GroupOrigin_GROUP_ORIGIN_UNSPECIFIED
}

func (x *TeamGroup) GetTeamId() *TeamId {
	if x != nil {
		return x.TeamId
	}
	return nil
}

func (x *TeamGroup) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *TeamGroup) GetScope() *Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *TeamGroup) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TeamGroup) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *TeamGroup) GetNextGenScopeId() string {
	if x != nil && x.NextGenScopeId != nil {
		return *x.NextGenScopeId
	}
	return ""
}

func (x *TeamGroup) GetGroupType() GroupType {
	if x != nil {
		return x.GroupType
	}
	return GroupType_GROUP_TYPE_UNSPECIFIED
}

type PermissionGroupMetadata struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PermissionGroup PermissionGroup        `protobuf:"varint,1,opt,name=permission_group,json=permissionGroup,proto3,enum=com.coralogix.permissions.models.v1.PermissionGroup" json:"permission_group,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DisplayName     string                 `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PermissionGroupMetadata) Reset() {
	*x = PermissionGroupMetadata{}
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionGroupMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionGroupMetadata) ProtoMessage() {}

func (x *PermissionGroupMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionGroupMetadata.ProtoReflect.Descriptor instead.
func (*PermissionGroupMetadata) Descriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{11}
}

func (x *PermissionGroupMetadata) GetPermissionGroup() PermissionGroup {
	if x != nil {
		return x.PermissionGroup
	}
	return PermissionGroup_PERMISSION_GROUP_UNSPECIFIED
}

func (x *PermissionGroupMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PermissionGroupMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PermissionGroupMetadata) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type PermissionMetadata struct {
	state           protoimpl.MessageState   `protogen:"open.v1"`
	Permission      Permission               `protobuf:"varint,1,opt,name=permission,proto3,enum=com.coralogix.permissions.models.v1.Permission" json:"permission,omitempty"`
	PermissionGroup *PermissionGroupMetadata `protobuf:"bytes,2,opt,name=permission_group,json=permissionGroup,proto3" json:"permission_group,omitempty"`
	Expression      string                   `protobuf:"bytes,3,opt,name=expression,proto3" json:"expression,omitempty"`
	Description     string                   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Action          Action                   `protobuf:"varint,5,opt,name=action,proto3,enum=com.coralogix.permissions.v1.Action" json:"action,omitempty"`
	Resource        Resource                 `protobuf:"varint,6,opt,name=resource,proto3,enum=com.coralogix.permissions.v1.Resource" json:"resource,omitempty"`
	DocLink         string                   `protobuf:"bytes,7,opt,name=doc_link,json=docLink,proto3" json:"doc_link,omitempty"`
	Explanation     string                   `protobuf:"bytes,8,opt,name=explanation,proto3" json:"explanation,omitempty"`
	IsSendData      bool                     `protobuf:"varint,9,opt,name=is_send_data,json=isSendData,proto3" json:"is_send_data,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PermissionMetadata) Reset() {
	*x = PermissionMetadata{}
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionMetadata) ProtoMessage() {}

func (x *PermissionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionMetadata.ProtoReflect.Descriptor instead.
func (*PermissionMetadata) Descriptor() ([]byte, []int) {
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP(), []int{12}
}

func (x *PermissionMetadata) GetPermission() Permission {
	if x != nil {
		return x.Permission
	}
	return Permission_PERMISSION_UNSPECIFIED
}

func (x *PermissionMetadata) GetPermissionGroup() *PermissionGroupMetadata {
	if x != nil {
		return x.PermissionGroup
	}
	return nil
}

func (x *PermissionMetadata) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *PermissionMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PermissionMetadata) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_ACTION_UNSPECIFIED
}

func (x *PermissionMetadata) GetResource() Resource {
	if x != nil {
		return x.Resource
	}
	return Resource_RESOURCE_UNSPECIFIED
}

func (x *PermissionMetadata) GetDocLink() string {
	if x != nil {
		return x.DocLink
	}
	return ""
}

func (x *PermissionMetadata) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

func (x *PermissionMetadata) GetIsSendData() bool {
	if x != nil {
		return x.IsSendData
	}
	return false
}

var File_com_coralogix_permissions_v1_permissions_mgmt_proto protoreflect.FileDescriptor

const file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDesc = "" +
	"\n" +
	"3com/coralogix/permissions/v1/permissions_mgmt.proto\x12\x1ccom.coralogix.permissions.v1\x1a)com/coralogix/permissions/v1/common.proto\x1a4com/coralogix/permissions/v1/actions_resources.proto\x1a@com/coralogix/permissions/models/v1/permission_definitions.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"l\n" +
	"\vScopeFilter\x12\x12\n" +
	"\x04term\x18\x01 \x01(\tR\x04term\x12I\n" +
	"\vfilter_type\x18\x02 \x01(\x0e2(.com.coralogix.permissions.v1.FilterTypeR\n" +
	"filterType\"\xa8\x01\n" +
	"\fScopeFilters\x12I\n" +
	"\n" +
	"subsystems\x18\x01 \x03(\v2).com.coralogix.permissions.v1.ScopeFilterR\n" +
	"subsystems\x12M\n" +
	"\fapplications\x18\x02 \x03(\v2).com.coralogix.permissions.v1.ScopeFilterR\fapplications\"\x84\x01\n" +
	"\x05Scope\x125\n" +
	"\x02id\x18\x01 \x01(\v2%.com.coralogix.permissions.v1.ScopeIdR\x02id\x12D\n" +
	"\afilters\x18\x02 \x01(\v2*.com.coralogix.permissions.v1.ScopeFiltersR\afilters\"\xb4\x02\n" +
	"\x04User\x12=\n" +
	"\auser_id\x18\x01 \x01(\v2$.com.coralogix.permissions.v1.UserIdR\x06userId\x12S\n" +
	"\x0fuser_account_id\x18\x02 \x01(\v2+.com.coralogix.permissions.v1.UserAccountIdR\ruserAccountId\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1d\n" +
	"\n" +
	"first_name\x18\x04 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x05 \x01(\tR\blastName\x12@\n" +
	"\x06status\x18\x06 \x01(\x0e2(.com.coralogix.permissions.v1.UserStatusR\x06status\"{\n" +
	"\x04Role\x12=\n" +
	"\arole_id\x18\x01 \x01(\v2$.com.coralogix.permissions.v1.RoleIdR\x06roleId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"\x80\x01\n" +
	"\x10TeamGroupSummary\x129\n" +
	"\x02id\x18\x01 \x01(\v2).com.coralogix.permissions.v1.TeamGroupIdR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"user_count\x18\x03 \x01(\rR\tuserCount\"\x81\x01\n" +
	"\n" +
	"SystemRole\x12=\n" +
	"\arole_id\x18\x01 \x01(\v2$.com.coralogix.permissions.v1.RoleIdR\x06roleId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"\xcd\x01\n" +
	"\n" +
	"CustomRole\x12=\n" +
	"\arole_id\x18\x01 \x01(\v2$.com.coralogix.permissions.v1.RoleIdR\x06roleId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12J\n" +
	"\x0eparent_role_id\x18\x04 \x01(\v2$.com.coralogix.permissions.v1.RoleIdR\fparentRoleId\"\xea\x02\n" +
	"\vRoleSummary\x12K\n" +
	"\vsystem_role\x18\x01 \x01(\v2(.com.coralogix.permissions.v1.SystemRoleH\x00R\n" +
	"systemRole\x12K\n" +
	"\vcustom_role\x18\x02 \x01(\v2(.com.coralogix.permissions.v1.CustomRoleH\x00R\n" +
	"customRole\x12\x1d\n" +
	"\n" +
	"user_count\x18\x03 \x01(\rR\tuserCount\x12F\n" +
	"\x06groups\x18\x04 \x03(\v2..com.coralogix.permissions.v1.TeamGroupSummaryR\x06groups\x12R\n" +
	"\vpermissions\x18\x05 \x03(\v20.com.coralogix.permissions.v1.PermissionMetadataR\vpermissionsB\x06\n" +
	"\x04role\"\xe9\x01\n" +
	"\bOrgGroup\x12J\n" +
	"\forg_group_id\x18\x01 \x01(\v2(.com.coralogix.permissions.v1.OrgGroupIdR\n" +
	"orgGroupId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12C\n" +
	"\x06org_id\x18\x03 \x01(\v2,.com.coralogix.permissions.v1.OrganizationIdR\x05orgId\x128\n" +
	"\x05roles\x18\x04 \x03(\v2\".com.coralogix.permissions.v1.RoleR\x05roles\"\xe7\x05\n" +
	"\tTeamGroup\x12D\n" +
	"\bgroup_id\x18\x01 \x01(\v2).com.coralogix.permissions.v1.TeamGroupIdR\agroupId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x00R\vdescription\x88\x01\x01\x12$\n" +
	"\vexternal_id\x18\x04 \x01(\tH\x01R\n" +
	"externalId\x88\x01\x01\x12L\n" +
	"\fgroup_origin\x18\x05 \x01(\x0e2).com.coralogix.permissions.v1.GroupOriginR\vgroupOrigin\x12=\n" +
	"\ateam_id\x18\x06 \x01(\v2$.com.coralogix.permissions.v1.TeamIdR\x06teamId\x128\n" +
	"\x05roles\x18\a \x03(\v2\".com.coralogix.permissions.v1.RoleR\x05roles\x12>\n" +
	"\x05scope\x18\b \x01(\v2#.com.coralogix.permissions.v1.ScopeH\x02R\x05scope\x88\x01\x01\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12.\n" +
	"\x11next_gen_scope_id\x18\v \x01(\tH\x03R\x0enextGenScopeId\x88\x01\x01\x12F\n" +
	"\n" +
	"group_type\x18\f \x01(\x0e2'.com.coralogix.permissions.v1.GroupTypeR\tgroupTypeB\x0e\n" +
	"\f_descriptionB\x0e\n" +
	"\f_external_idB\b\n" +
	"\x06_scopeB\x14\n" +
	"\x12_next_gen_scope_id\"\xd3\x01\n" +
	"\x17PermissionGroupMetadata\x12_\n" +
	"\x10permission_group\x18\x01 \x01(\x0e24.com.coralogix.permissions.models.v1.PermissionGroupR\x0fpermissionGroup\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12!\n" +
	"\fdisplay_name\x18\x04 \x01(\tR\vdisplayName\"\xea\x03\n" +
	"\x12PermissionMetadata\x12O\n" +
	"\n" +
	"permission\x18\x01 \x01(\x0e2/.com.coralogix.permissions.models.v1.PermissionR\n" +
	"permission\x12`\n" +
	"\x10permission_group\x18\x02 \x01(\v25.com.coralogix.permissions.v1.PermissionGroupMetadataR\x0fpermissionGroup\x12\x1e\n" +
	"\n" +
	"expression\x18\x03 \x01(\tR\n" +
	"expression\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12<\n" +
	"\x06action\x18\x05 \x01(\x0e2$.com.coralogix.permissions.v1.ActionR\x06action\x12B\n" +
	"\bresource\x18\x06 \x01(\x0e2&.com.coralogix.permissions.v1.ResourceR\bresource\x12\x19\n" +
	"\bdoc_link\x18\a \x01(\tR\adocLink\x12 \n" +
	"\vexplanation\x18\b \x01(\tR\vexplanation\x12 \n" +
	"\fis_send_data\x18\t \x01(\bR\n" +
	"isSendData*\x92\x01\n" +
	"\n" +
	"FilterType\x12\x1b\n" +
	"\x17FILTER_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17FILTER_TYPE_STARTS_WITH\x10\x01\x12\x19\n" +
	"\x15FILTER_TYPE_ENDS_WITH\x10\x02\x12\x18\n" +
	"\x14FILTER_TYPE_CONTAINS\x10\x03\x12\x15\n" +
	"\x11FILTER_TYPE_EXACT\x10\x04*[\n" +
	"\n" +
	"UserStatus\x12\x1b\n" +
	"\x17USER_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12USER_STATUS_ACTIVE\x10\x01\x12\x18\n" +
	"\x14USER_STATUS_INACTIVE\x10\x02*e\n" +
	"\vGroupOrigin\x12\x1c\n" +
	"\x18GROUP_ORIGIN_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15GROUP_ORIGIN_BUILT_IN\x10\x01\x12\x1d\n" +
	"\x19GROUP_ORIGIN_USER_DEFINED\x10\x02*n\n" +
	"\tGroupType\x12\x1a\n" +
	"\x16GROUP_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fGROUP_TYPE_OPEN\x10\x01\x12\x15\n" +
	"\x11GROUP_TYPE_CLOSED\x10\x02\x12\x19\n" +
	"\x15GROUP_TYPE_RESTRICTED\x10\x03b\x06proto3"

var (
	file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescOnce sync.Once
	file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescData []byte
)

func file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescGZIP() []byte {
	file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescOnce.Do(func() {
		file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDesc), len(file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDesc)))
	})
	return file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDescData
}

var file_com_coralogix_permissions_v1_permissions_mgmt_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_com_coralogix_permissions_v1_permissions_mgmt_proto_goTypes = []any{
	(FilterType)(0),                 // 0: com.coralogix.permissions.v1.FilterType
	(UserStatus)(0),                 // 1: com.coralogix.permissions.v1.UserStatus
	(GroupOrigin)(0),                // 2: com.coralogix.permissions.v1.GroupOrigin
	(GroupType)(0),                  // 3: com.coralogix.permissions.v1.GroupType
	(*ScopeFilter)(nil),             // 4: com.coralogix.permissions.v1.ScopeFilter
	(*ScopeFilters)(nil),            // 5: com.coralogix.permissions.v1.ScopeFilters
	(*Scope)(nil),                   // 6: com.coralogix.permissions.v1.Scope
	(*User)(nil),                    // 7: com.coralogix.permissions.v1.User
	(*Role)(nil),                    // 8: com.coralogix.permissions.v1.Role
	(*TeamGroupSummary)(nil),        // 9: com.coralogix.permissions.v1.TeamGroupSummary
	(*SystemRole)(nil),              // 10: com.coralogix.permissions.v1.SystemRole
	(*CustomRole)(nil),              // 11: com.coralogix.permissions.v1.CustomRole
	(*RoleSummary)(nil),             // 12: com.coralogix.permissions.v1.RoleSummary
	(*OrgGroup)(nil),                // 13: com.coralogix.permissions.v1.OrgGroup
	(*TeamGroup)(nil),               // 14: com.coralogix.permissions.v1.TeamGroup
	(*PermissionGroupMetadata)(nil), // 15: com.coralogix.permissions.v1.PermissionGroupMetadata
	(*PermissionMetadata)(nil),      // 16: com.coralogix.permissions.v1.PermissionMetadata
	(*ScopeId)(nil),                 // 17: com.coralogix.permissions.v1.ScopeId
	(*UserId)(nil),                  // 18: com.coralogix.permissions.v1.UserId
	(*UserAccountId)(nil),           // 19: com.coralogix.permissions.v1.UserAccountId
	(*RoleId)(nil),                  // 20: com.coralogix.permissions.v1.RoleId
	(*TeamGroupId)(nil),             // 21: com.coralogix.permissions.v1.TeamGroupId
	(*OrgGroupId)(nil),              // 22: com.coralogix.permissions.v1.OrgGroupId
	(*OrganizationId)(nil),          // 23: com.coralogix.permissions.v1.OrganizationId
	(*TeamId)(nil),                  // 24: com.coralogix.permissions.v1.TeamId
	(*timestamppb.Timestamp)(nil),   // 25: google.protobuf.Timestamp
	(PermissionGroup)(0),            // 26: com.coralogix.permissions.models.v1.PermissionGroup
	(Permission)(0),                 // 27: com.coralogix.permissions.models.v1.Permission
	(Action)(0),                     // 28: com.coralogix.permissions.v1.Action
	(Resource)(0),                   // 29: com.coralogix.permissions.v1.Resource
}
var file_com_coralogix_permissions_v1_permissions_mgmt_proto_depIdxs = []int32{
	0,  // 0: com.coralogix.permissions.v1.ScopeFilter.filter_type:type_name -> com.coralogix.permissions.v1.FilterType
	4,  // 1: com.coralogix.permissions.v1.ScopeFilters.subsystems:type_name -> com.coralogix.permissions.v1.ScopeFilter
	4,  // 2: com.coralogix.permissions.v1.ScopeFilters.applications:type_name -> com.coralogix.permissions.v1.ScopeFilter
	17, // 3: com.coralogix.permissions.v1.Scope.id:type_name -> com.coralogix.permissions.v1.ScopeId
	5,  // 4: com.coralogix.permissions.v1.Scope.filters:type_name -> com.coralogix.permissions.v1.ScopeFilters
	18, // 5: com.coralogix.permissions.v1.User.user_id:type_name -> com.coralogix.permissions.v1.UserId
	19, // 6: com.coralogix.permissions.v1.User.user_account_id:type_name -> com.coralogix.permissions.v1.UserAccountId
	1,  // 7: com.coralogix.permissions.v1.User.status:type_name -> com.coralogix.permissions.v1.UserStatus
	20, // 8: com.coralogix.permissions.v1.Role.role_id:type_name -> com.coralogix.permissions.v1.RoleId
	21, // 9: com.coralogix.permissions.v1.TeamGroupSummary.id:type_name -> com.coralogix.permissions.v1.TeamGroupId
	20, // 10: com.coralogix.permissions.v1.SystemRole.role_id:type_name -> com.coralogix.permissions.v1.RoleId
	20, // 11: com.coralogix.permissions.v1.CustomRole.role_id:type_name -> com.coralogix.permissions.v1.RoleId
	20, // 12: com.coralogix.permissions.v1.CustomRole.parent_role_id:type_name -> com.coralogix.permissions.v1.RoleId
	10, // 13: com.coralogix.permissions.v1.RoleSummary.system_role:type_name -> com.coralogix.permissions.v1.SystemRole
	11, // 14: com.coralogix.permissions.v1.RoleSummary.custom_role:type_name -> com.coralogix.permissions.v1.CustomRole
	9,  // 15: com.coralogix.permissions.v1.RoleSummary.groups:type_name -> com.coralogix.permissions.v1.TeamGroupSummary
	16, // 16: com.coralogix.permissions.v1.RoleSummary.permissions:type_name -> com.coralogix.permissions.v1.PermissionMetadata
	22, // 17: com.coralogix.permissions.v1.OrgGroup.org_group_id:type_name -> com.coralogix.permissions.v1.OrgGroupId
	23, // 18: com.coralogix.permissions.v1.OrgGroup.org_id:type_name -> com.coralogix.permissions.v1.OrganizationId
	8,  // 19: com.coralogix.permissions.v1.OrgGroup.roles:type_name -> com.coralogix.permissions.v1.Role
	21, // 20: com.coralogix.permissions.v1.TeamGroup.group_id:type_name -> com.coralogix.permissions.v1.TeamGroupId
	2,  // 21: com.coralogix.permissions.v1.TeamGroup.group_origin:type_name -> com.coralogix.permissions.v1.GroupOrigin
	24, // 22: com.coralogix.permissions.v1.TeamGroup.team_id:type_name -> com.coralogix.permissions.v1.TeamId
	8,  // 23: com.coralogix.permissions.v1.TeamGroup.roles:type_name -> com.coralogix.permissions.v1.Role
	6,  // 24: com.coralogix.permissions.v1.TeamGroup.scope:type_name -> com.coralogix.permissions.v1.Scope
	25, // 25: com.coralogix.permissions.v1.TeamGroup.created_at:type_name -> google.protobuf.Timestamp
	25, // 26: com.coralogix.permissions.v1.TeamGroup.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 27: com.coralogix.permissions.v1.TeamGroup.group_type:type_name -> com.coralogix.permissions.v1.GroupType
	26, // 28: com.coralogix.permissions.v1.PermissionGroupMetadata.permission_group:type_name -> com.coralogix.permissions.models.v1.PermissionGroup
	27, // 29: com.coralogix.permissions.v1.PermissionMetadata.permission:type_name -> com.coralogix.permissions.models.v1.Permission
	15, // 30: com.coralogix.permissions.v1.PermissionMetadata.permission_group:type_name -> com.coralogix.permissions.v1.PermissionGroupMetadata
	28, // 31: com.coralogix.permissions.v1.PermissionMetadata.action:type_name -> com.coralogix.permissions.v1.Action
	29, // 32: com.coralogix.permissions.v1.PermissionMetadata.resource:type_name -> com.coralogix.permissions.v1.Resource
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_com_coralogix_permissions_v1_permissions_mgmt_proto_init() }
func file_com_coralogix_permissions_v1_permissions_mgmt_proto_init() {
	if File_com_coralogix_permissions_v1_permissions_mgmt_proto != nil {
		return
	}
	file_com_coralogix_permissions_v1_common_proto_init()
	file_com_coralogix_permissions_v1_actions_resources_proto_init()
	file_com_coralogix_permissions_models_v1_permission_definitions_proto_init()
	file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[8].OneofWrappers = []any{
		(*RoleSummary_SystemRole)(nil),
		(*RoleSummary_CustomRole)(nil),
	}
	file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDesc), len(file_com_coralogix_permissions_v1_permissions_mgmt_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogix_permissions_v1_permissions_mgmt_proto_goTypes,
		DependencyIndexes: file_com_coralogix_permissions_v1_permissions_mgmt_proto_depIdxs,
		EnumInfos:         file_com_coralogix_permissions_v1_permissions_mgmt_proto_enumTypes,
		MessageInfos:      file_com_coralogix_permissions_v1_permissions_mgmt_proto_msgTypes,
	}.Build()
	File_com_coralogix_permissions_v1_permissions_mgmt_proto = out.File
	file_com_coralogix_permissions_v1_permissions_mgmt_proto_goTypes = nil
	file_com_coralogix_permissions_v1_permissions_mgmt_proto_depIdxs = nil
}
