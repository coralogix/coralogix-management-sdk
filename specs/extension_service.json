{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "version": "1.0.0"
  },
  "paths": {
    "/integrations/extensions/v1/all": {
      "post": {
        "tags": [
          "Extension service"
        ],
        "summary": "Get all extensions",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "ExtensionService_GetAllExtensions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Get all extensions request",
                "description": "Request to list all extensions",
                "type": "object",
                "properties": {
                  "filter": {
                    "$ref": "#/components/schemas/GetAllExtensionsRequest.Filter"
                  },
                  "includeHiddenExtensions": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllExtensionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "extensions:ReadConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/all';\n\nlet options = {\n  method: 'POST',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"filter\":{\"integrations\":[\"string\"]},\"includeHiddenExtensions\":true}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/all\"\n\npayload = {\n    \"filter\": {\"integrations\": [\"string\"]},\n    \"includeHiddenExtensions\": True\n}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/all \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"filter\":{\"integrations\":[\"string\"]},\"includeHiddenExtensions\":true}'"
          }
        ]
      }
    },
    "/integrations/extensions/v1/{id}": {
      "get": {
        "tags": [
          "Extension service"
        ],
        "summary": "Get extension by ID",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "ExtensionService_GetExtension",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "include_dashboard_binaries",
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "include_testing_revision",
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1.Extension"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "extensions:ReadConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/%7Bid%7D?include_dashboard_binaries=SOME_BOOLEAN_VALUE&include_testing_revision=SOME_BOOLEAN_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/%7Bid%7D\"\n\nquerystring = {\"include_dashboard_binaries\":\"SOME_BOOLEAN_VALUE\",\"include_testing_revision\":\"SOME_BOOLEAN_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/%7Bid%7D?include_dashboard_binaries=SOME_BOOLEAN_VALUE&include_testing_revision=SOME_BOOLEAN_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ChangelogEntry": {
        "externalDocs": {
          "url": ""
        },
        "title": "Changelog entry",
        "type": "object",
        "properties": {
          "descriptionMd": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "version",
          "descriptionMd"
        ]
      },
      "Deprecation": {
        "externalDocs": {
          "url": ""
        },
        "title": "Deprecation",
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          },
          "replacementExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "reason"
        ]
      },
      "ExtensionBinary": {
        "externalDocs": {
          "url": ""
        },
        "title": "Extension binary",
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExtensionBinary.BinaryType"
          }
        },
        "required": [
          "type",
          "data"
        ]
      },
      "ExtensionBinary.BinaryType": {
        "type": "string",
        "enum": [
          "KIBANA_INDEX_PATTERN"
        ]
      },
      "ExtensionItem": {
        "externalDocs": {
          "url": ""
        },
        "title": "Extension item",
        "type": "object",
        "properties": {
          "binaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionItemBinary"
            }
          },
          "data": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "extendedInternalId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "permissionResource": {
            "$ref": "#/components/schemas/PermissionResource"
          },
          "stableId": {
            "type": "string"
          },
          "targetDomain": {
            "$ref": "#/components/schemas/TargetDomain"
          },
          "uniqueId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "targetDomain",
          "data",
          "permissionResource"
        ]
      },
      "ExtensionItemBinary": {
        "externalDocs": {
          "url": ""
        },
        "title": "Extension item binary",
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExtensionItemBinary.BinaryType"
          }
        },
        "required": [
          "type",
          "data",
          "fileName"
        ]
      },
      "ExtensionItemBinary.BinaryType": {
        "type": "string",
        "enum": [
          "PREVIEW_IMAGE",
          "KIBANA_DASHBOARD_DEFINITION",
          "GRAFANA_DASHBOARD_DEFINITION",
          "ENRICHMENT_CSV",
          "CX_CUSTOM_DASHBOARD_DEFINITION"
        ]
      },
      "ExtensionRevision": {
        "externalDocs": {
          "url": ""
        },
        "title": "Extension revision",
        "type": "object",
        "properties": {
          "binaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionBinary"
            }
          },
          "description": {
            "type": "string"
          },
          "excerpt": {
            "type": "string"
          },
          "integrationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationDetail"
            }
          },
          "isTesting": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionItem"
            }
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "permissionDeniedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionItem"
            }
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "version"
        ]
      },
      "FieldGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "FilterPathAndValues": {
        "oneOf": [
          {
            "externalDocs": {
              "url": ""
            },
            "title": "FilterPathAndValues",
            "description": "This data structure represents a filter path and values",
            "type": "object",
            "properties": {
              "multipleValues": {
                "$ref": "#/components/schemas/MultipleValues"
              },
              "path": {
                "example": "test",
                "type": "string"
              }
            },
            "required": [
              "path",
              "values"
            ],
            "additionalProperties": false
          },
          {
            "externalDocs": {
              "url": ""
            },
            "title": "FilterPathAndValues",
            "description": "This data structure represents a filter path and values",
            "type": "object",
            "properties": {
              "filters": {
                "$ref": "#/components/schemas/Filters"
              },
              "path": {
                "example": "test",
                "type": "string"
              }
            },
            "required": [
              "path",
              "values"
            ],
            "additionalProperties": false
          }
        ]
      },
      "Filters": {
        "externalDocs": {
          "url": ""
        },
        "title": "Filters",
        "description": "This data structure represents a filter",
        "type": "object",
        "properties": {
          "operator": {
            "$ref": "#/components/schemas/v3.FilterOperator"
          },
          "pathAndValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterPathAndValues"
            }
          }
        },
        "required": [
          "pathAndValues"
        ]
      },
      "GetAllExtensionsRequest.Filter": {
        "externalDocs": {
          "url": ""
        },
        "title": "A filter structure for a request to get all extensions",
        "description": "Filter by integration ids",
        "type": "object",
        "properties": {
          "integrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetAllExtensionsResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "Get all extensions response",
        "description": "Response to list all extensions",
        "type": "object",
        "properties": {
          "extensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllExtensionsResponse.Extension"
            }
          }
        }
      },
      "GetAllExtensionsResponse.Extension": {
        "externalDocs": {
          "url": ""
        },
        "title": "Extension",
        "type": "object",
        "properties": {
          "darkModeImage": {
            "type": "string"
          },
          "deprecation": {
            "$ref": "#/components/schemas/Deprecation"
          },
          "id": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "integrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isHidden": {
            "type": "boolean"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "revisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllExtensionsResponse.Revision"
            }
          }
        },
        "required": [
          "id",
          "name",
          "image"
        ]
      },
      "GetAllExtensionsResponse.Revision": {
        "externalDocs": {
          "url": ""
        },
        "title": "Revision",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "excerpt": {
            "type": "string"
          },
          "integrationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationDetail"
            }
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/RevisionSummary"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "version",
          "summary"
        ]
      },
      "IntegrationDetail": {
        "externalDocs": {
          "url": ""
        },
        "title": "Integration detail",
        "type": "object",
        "properties": {
          "link": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "link"
        ]
      },
      "ItemCounts": {
        "externalDocs": {
          "url": ""
        },
        "title": "Item counts",
        "type": "object",
        "properties": {
          "actions": {
            "type": "integer",
            "format": "int64"
          },
          "alerts": {
            "type": "integer",
            "format": "int64"
          },
          "customDashboards": {
            "type": "integer",
            "format": "int64"
          },
          "enrichments": {
            "type": "integer",
            "format": "int64"
          },
          "eventsToMetrics": {
            "type": "integer",
            "format": "int64"
          },
          "grafanaDashboards": {
            "type": "integer",
            "format": "int64"
          },
          "kibanaDashboards": {
            "type": "integer",
            "format": "int64"
          },
          "metricsRuleGroup": {
            "type": "integer",
            "format": "int64"
          },
          "parsingRules": {
            "type": "integer",
            "format": "int64"
          },
          "savedViews": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MultipleValues": {
        "type": "object",
        "properties": {
          "matcher": {
            "$ref": "#/components/schemas/events.v3.FilterMatcher"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PermissionResource": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "ACTION",
          "ALERT",
          "CUSTOM_ENRICHMENT",
          "GEO_ENRICHMENT",
          "SECURITY_ENRICHMENT",
          "RESOURCE_CLOUD_METADATA_ENRICHMENT",
          "GRAFANA_DASHBOARD",
          "KIBANA_DASHBOARD",
          "PARSING_RULE",
          "SAVED_VIEW",
          "CX_CUSTOM_DASHBOARD",
          "METRICS_RULE_GROUP",
          "SPAN_EVENTS_TO_METRICS",
          "LOGS_EVENTS_TO_METRICS"
        ]
      },
      "RevisionSummary": {
        "externalDocs": {
          "url": ""
        },
        "title": "Revision summary",
        "type": "object",
        "properties": {
          "isNew": {
            "type": "boolean"
          },
          "itemCounts": {
            "$ref": "#/components/schemas/ItemCounts"
          }
        },
        "required": [
          "itemCounts"
        ]
      },
      "TargetDomain": {
        "type": "string",
        "enum": [
          "ACTION",
          "ALERT",
          "ENRICHMENT",
          "GRAFANA_DASHBOARD",
          "KIBANA_DASHBOARD",
          "PARSING_RULE",
          "SAVED_VIEW",
          "CX_CUSTOM_DASHBOARD",
          "METRICS_RULE_GROUP",
          "EVENTS_TO_METRICS",
          "ALERT_V3"
        ]
      },
      "common.Group": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/FieldGroup"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.Group"
            }
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "events.v3.FilterMatcher": {
        "type": "string",
        "enum": [
          "FILTER_MATCHER_TEXT_OR_UNSPECIFIED",
          "FILTER_MATCHER_REGEXP"
        ]
      },
      "v1.Extension": {
        "externalDocs": {
          "url": ""
        },
        "title": "Extension metadata",
        "type": "object",
        "properties": {
          "changelog": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangelogEntry"
            }
          },
          "darkModeImage": {
            "type": "string"
          },
          "deprecation": {
            "$ref": "#/components/schemas/Deprecation"
          },
          "id": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "integrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isHidden": {
            "type": "boolean"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "permissionDeniedRevisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionRevision"
            }
          },
          "revisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionRevision"
            }
          }
        },
        "required": [
          "id",
          "name",
          "image"
        ]
      },
      "v3.FilterOperator": {
        "type": "string",
        "enum": [
          "FILTER_OPERATOR_AND_OR_UNSPECIFIED",
          "FILTER_OPERATOR_OR"
        ]
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key authentication"
      }
    }
  }
}