{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "version": "1.0.0"
  },
  "paths": {
    "/integrations/extensions/v1/testing": {
      "post": {
        "tags": [
          "Extension testing service"
        ],
        "summary": "Test extension revision",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "ExtensionTestingService_TestExtensionRevision",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Test extension revision request",
                "type": "object",
                "properties": {
                  "cleanupAfterTest": {
                    "type": "boolean"
                  },
                  "extensionData": {
                    "$ref": "#/components/schemas/ExtensionData"
                  }
                },
                "required": [
                  "extensionData"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestExtensionRevisionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "extensions:UpdateConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/testing';\n\nlet options = {\n  method: 'POST',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"cleanupAfterTest\":true,\"extensionData\":{\"binaries\":[{\"data\":\"string\",\"type\":\"KIBANA_INDEX_PATTERN\"}],\"changelog\":[{\"descriptionMd\":\"string\",\"version\":\"string\"}],\"darkModeImage\":\"string\",\"deprecation\":{\"reason\":\"string\",\"replacementExtensions\":[\"string\"]},\"description\":\"Integration with AWS CloudWatch for monitoring and logging\",\"excerpt\":\"Monitor AWS resources and analyze logs with CloudWatch integration\",\"id\":\"076f4188-05e0-4ed3-afeb-653ad182ccb7\",\"image\":\"string\",\"integrationDetails\":[{\"link\":\"string\",\"name\":\"string\"}],\"integrations\":[\"string\"],\"isHidden\":true,\"items\":[{\"binaries\":[{\"data\":\"string\",\"fileName\":\"string\",\"type\":\"PREVIEW_IMAGE\"}],\"data\":{},\"description\":\"Less than 60% cocoa\",\"internalId\":0,\"isMandatory\":true,\"name\":\"Low cocoa content\",\"permissionResource\":\"UNKNOWN\",\"stableId\":\"string\",\"targetDomain\":\"ACTION\",\"uniqueId\":\"string\"}],\"keywords\":[\"string\"],\"labels\":[\"string\"],\"name\":\"AWS CloudWatch Extension\",\"version\":\"v1.0.13\"}}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/testing\"\n\npayload = {\n    \"cleanupAfterTest\": True,\n    \"extensionData\": {\n        \"binaries\": [\n            {\n                \"data\": \"string\",\n                \"type\": \"KIBANA_INDEX_PATTERN\"\n            }\n        ],\n        \"changelog\": [\n            {\n                \"descriptionMd\": \"string\",\n                \"version\": \"string\"\n            }\n        ],\n        \"darkModeImage\": \"string\",\n        \"deprecation\": {\n            \"reason\": \"string\",\n            \"replacementExtensions\": [\"string\"]\n        },\n        \"description\": \"Integration with AWS CloudWatch for monitoring and logging\",\n        \"excerpt\": \"Monitor AWS resources and analyze logs with CloudWatch integration\",\n        \"id\": \"076f4188-05e0-4ed3-afeb-653ad182ccb7\",\n        \"image\": \"string\",\n        \"integrationDetails\": [\n            {\n                \"link\": \"string\",\n                \"name\": \"string\"\n            }\n        ],\n        \"integrations\": [\"string\"],\n        \"isHidden\": True,\n        \"items\": [\n            {\n                \"binaries\": [\n                    {\n                        \"data\": \"string\",\n                        \"fileName\": \"string\",\n                        \"type\": \"PREVIEW_IMAGE\"\n                    }\n                ],\n                \"data\": {},\n                \"description\": \"Less than 60% cocoa\",\n                \"internalId\": 0,\n                \"isMandatory\": True,\n                \"name\": \"Low cocoa content\",\n                \"permissionResource\": \"UNKNOWN\",\n                \"stableId\": \"string\",\n                \"targetDomain\": \"ACTION\",\n                \"uniqueId\": \"string\"\n            }\n        ],\n        \"keywords\": [\"string\"],\n        \"labels\": [\"string\"],\n        \"name\": \"AWS CloudWatch Extension\",\n        \"version\": \"v1.0.13\"\n    }\n}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/testing \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"cleanupAfterTest\":true,\"extensionData\":{\"binaries\":[{\"data\":\"string\",\"type\":\"KIBANA_INDEX_PATTERN\"}],\"changelog\":[{\"descriptionMd\":\"string\",\"version\":\"string\"}],\"darkModeImage\":\"string\",\"deprecation\":{\"reason\":\"string\",\"replacementExtensions\":[\"string\"]},\"description\":\"Integration with AWS CloudWatch for monitoring and logging\",\"excerpt\":\"Monitor AWS resources and analyze logs with CloudWatch integration\",\"id\":\"076f4188-05e0-4ed3-afeb-653ad182ccb7\",\"image\":\"string\",\"integrationDetails\":[{\"link\":\"string\",\"name\":\"string\"}],\"integrations\":[\"string\"],\"isHidden\":true,\"items\":[{\"binaries\":[{\"data\":\"string\",\"fileName\":\"string\",\"type\":\"PREVIEW_IMAGE\"}],\"data\":{},\"description\":\"Less than 60% cocoa\",\"internalId\":0,\"isMandatory\":true,\"name\":\"Low cocoa content\",\"permissionResource\":\"UNKNOWN\",\"stableId\":\"string\",\"targetDomain\":\"ACTION\",\"uniqueId\":\"string\"}],\"keywords\":[\"string\"],\"labels\":[\"string\"],\"name\":\"AWS CloudWatch Extension\",\"version\":\"v1.0.13\"}}'"
          }
        ]
      },
      "delete": {
        "tags": [
          "Extension testing service"
        ],
        "summary": "Cleanup testing extension",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "ExtensionTestingService_CleanupTestingRevision",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Cleanup testing revision request",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CleanupTestingRevisionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "extensions:UpdateConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/testing';\n\nlet options = {\n  method: 'DELETE',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"id\":\"string\"}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/testing\"\n\npayload = {\"id\": \"string\"}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"DELETE\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request DELETE \\\n  --url https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/testing \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"id\":\"string\"}'"
          }
        ]
      }
    },
    "/integrations/extensions/v1/testing/initialize": {
      "post": {
        "tags": [
          "Extension testing service"
        ],
        "summary": "Initialize testing revision",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "ExtensionTestingService_InitializeTestingRevision",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Initialize testing revision request",
                "type": "object",
                "properties": {
                  "extensionData": {
                    "$ref": "#/components/schemas/ExtensionData"
                  }
                },
                "required": [
                  "extensionData"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitializeTestingRevisionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "extensions:UpdateConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/testing/initialize';\n\nlet options = {\n  method: 'POST',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"extensionData\":{\"binaries\":[{\"data\":\"string\",\"type\":\"KIBANA_INDEX_PATTERN\"}],\"changelog\":[{\"descriptionMd\":\"string\",\"version\":\"string\"}],\"darkModeImage\":\"string\",\"deprecation\":{\"reason\":\"string\",\"replacementExtensions\":[\"string\"]},\"description\":\"Integration with AWS CloudWatch for monitoring and logging\",\"excerpt\":\"Monitor AWS resources and analyze logs with CloudWatch integration\",\"id\":\"076f4188-05e0-4ed3-afeb-653ad182ccb7\",\"image\":\"string\",\"integrationDetails\":[{\"link\":\"string\",\"name\":\"string\"}],\"integrations\":[\"string\"],\"isHidden\":true,\"items\":[{\"binaries\":[{\"data\":\"string\",\"fileName\":\"string\",\"type\":\"PREVIEW_IMAGE\"}],\"data\":{},\"description\":\"Less than 60% cocoa\",\"internalId\":0,\"isMandatory\":true,\"name\":\"Low cocoa content\",\"permissionResource\":\"UNKNOWN\",\"stableId\":\"string\",\"targetDomain\":\"ACTION\",\"uniqueId\":\"string\"}],\"keywords\":[\"string\"],\"labels\":[\"string\"],\"name\":\"AWS CloudWatch Extension\",\"version\":\"v1.0.13\"}}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/testing/initialize\"\n\npayload = {\"extensionData\": {\n        \"binaries\": [\n            {\n                \"data\": \"string\",\n                \"type\": \"KIBANA_INDEX_PATTERN\"\n            }\n        ],\n        \"changelog\": [\n            {\n                \"descriptionMd\": \"string\",\n                \"version\": \"string\"\n            }\n        ],\n        \"darkModeImage\": \"string\",\n        \"deprecation\": {\n            \"reason\": \"string\",\n            \"replacementExtensions\": [\"string\"]\n        },\n        \"description\": \"Integration with AWS CloudWatch for monitoring and logging\",\n        \"excerpt\": \"Monitor AWS resources and analyze logs with CloudWatch integration\",\n        \"id\": \"076f4188-05e0-4ed3-afeb-653ad182ccb7\",\n        \"image\": \"string\",\n        \"integrationDetails\": [\n            {\n                \"link\": \"string\",\n                \"name\": \"string\"\n            }\n        ],\n        \"integrations\": [\"string\"],\n        \"isHidden\": True,\n        \"items\": [\n            {\n                \"binaries\": [\n                    {\n                        \"data\": \"string\",\n                        \"fileName\": \"string\",\n                        \"type\": \"PREVIEW_IMAGE\"\n                    }\n                ],\n                \"data\": {},\n                \"description\": \"Less than 60% cocoa\",\n                \"internalId\": 0,\n                \"isMandatory\": True,\n                \"name\": \"Low cocoa content\",\n                \"permissionResource\": \"UNKNOWN\",\n                \"stableId\": \"string\",\n                \"targetDomain\": \"ACTION\",\n                \"uniqueId\": \"string\"\n            }\n        ],\n        \"keywords\": [\"string\"],\n        \"labels\": [\"string\"],\n        \"name\": \"AWS CloudWatch Extension\",\n        \"version\": \"v1.0.13\"\n    }}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/integrations/extensions/v1/testing/initialize \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"extensionData\":{\"binaries\":[{\"data\":\"string\",\"type\":\"KIBANA_INDEX_PATTERN\"}],\"changelog\":[{\"descriptionMd\":\"string\",\"version\":\"string\"}],\"darkModeImage\":\"string\",\"deprecation\":{\"reason\":\"string\",\"replacementExtensions\":[\"string\"]},\"description\":\"Integration with AWS CloudWatch for monitoring and logging\",\"excerpt\":\"Monitor AWS resources and analyze logs with CloudWatch integration\",\"id\":\"076f4188-05e0-4ed3-afeb-653ad182ccb7\",\"image\":\"string\",\"integrationDetails\":[{\"link\":\"string\",\"name\":\"string\"}],\"integrations\":[\"string\"],\"isHidden\":true,\"items\":[{\"binaries\":[{\"data\":\"string\",\"fileName\":\"string\",\"type\":\"PREVIEW_IMAGE\"}],\"data\":{},\"description\":\"Less than 60% cocoa\",\"internalId\":0,\"isMandatory\":true,\"name\":\"Low cocoa content\",\"permissionResource\":\"UNKNOWN\",\"stableId\":\"string\",\"targetDomain\":\"ACTION\",\"uniqueId\":\"string\"}],\"keywords\":[\"string\"],\"labels\":[\"string\"],\"name\":\"AWS CloudWatch Extension\",\"version\":\"v1.0.13\"}}'"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ChangelogEntry": {
        "externalDocs": {
          "url": ""
        },
        "title": "Changelog entry",
        "type": "object",
        "properties": {
          "descriptionMd": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "version",
          "descriptionMd"
        ]
      },
      "CleanupTestingRevisionResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "Cleanup testing revision response",
        "type": "object"
      },
      "Deprecation": {
        "externalDocs": {
          "url": ""
        },
        "title": "Deprecation",
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          },
          "replacementExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "reason"
        ]
      },
      "ExtensionBinary": {
        "externalDocs": {
          "url": ""
        },
        "title": "Extension binary",
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExtensionBinary.BinaryType"
          }
        },
        "required": [
          "type",
          "data"
        ]
      },
      "ExtensionBinary.BinaryType": {
        "type": "string",
        "enum": [
          "KIBANA_INDEX_PATTERN"
        ]
      },
      "ExtensionData": {
        "externalDocs": {
          "url": ""
        },
        "title": "Extension data",
        "description": "Extension details for ingestion",
        "type": "object",
        "properties": {
          "binaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionBinary"
            }
          },
          "changelog": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangelogEntry"
            }
          },
          "darkModeImage": {
            "type": "string"
          },
          "deprecation": {
            "$ref": "#/components/schemas/Deprecation"
          },
          "description": {
            "example": "Integration with AWS CloudWatch for monitoring and logging",
            "type": "string"
          },
          "excerpt": {
            "example": "Monitor AWS resources and analyze logs with CloudWatch integration",
            "type": "string"
          },
          "id": {
            "example": "076f4188-05e0-4ed3-afeb-653ad182ccb7",
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "integrationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationDetail"
            }
          },
          "integrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isHidden": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionItemData"
            }
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "example": "AWS CloudWatch Extension",
            "type": "string"
          },
          "version": {
            "example": "v1.0.13",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "image",
          "version"
        ]
      },
      "ExtensionItemBinary": {
        "externalDocs": {
          "url": ""
        },
        "title": "Extension item binary",
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExtensionItemBinary.BinaryType"
          }
        },
        "required": [
          "type",
          "data",
          "fileName"
        ]
      },
      "ExtensionItemBinary.BinaryType": {
        "type": "string",
        "enum": [
          "PREVIEW_IMAGE",
          "KIBANA_DASHBOARD_DEFINITION",
          "GRAFANA_DASHBOARD_DEFINITION",
          "ENRICHMENT_CSV",
          "CX_CUSTOM_DASHBOARD_DEFINITION"
        ]
      },
      "ExtensionItemData": {
        "externalDocs": {
          "url": ""
        },
        "title": "Extension item data",
        "type": "object",
        "properties": {
          "binaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtensionItemBinary"
            }
          },
          "data": {
            "type": "object"
          },
          "description": {
            "example": "Less than 60% cocoa",
            "type": "string"
          },
          "internalId": {
            "type": "integer",
            "format": "int32"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "name": {
            "example": "Low cocoa content",
            "type": "string"
          },
          "permissionResource": {
            "$ref": "#/components/schemas/PermissionResource"
          },
          "stableId": {
            "type": "string"
          },
          "targetDomain": {
            "$ref": "#/components/schemas/TargetDomain"
          },
          "uniqueId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "targetDomain",
          "data"
        ]
      },
      "FieldGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "FilterPathAndValues": {
        "oneOf": [
          {
            "externalDocs": {
              "url": ""
            },
            "title": "FilterPathAndValues",
            "description": "This data structure represents a filter path and values",
            "type": "object",
            "properties": {
              "multipleValues": {
                "$ref": "#/components/schemas/MultipleValues"
              },
              "path": {
                "example": "test",
                "type": "string"
              }
            },
            "required": [
              "path",
              "values"
            ],
            "additionalProperties": false
          },
          {
            "externalDocs": {
              "url": ""
            },
            "title": "FilterPathAndValues",
            "description": "This data structure represents a filter path and values",
            "type": "object",
            "properties": {
              "filters": {
                "$ref": "#/components/schemas/Filters"
              },
              "path": {
                "example": "test",
                "type": "string"
              }
            },
            "required": [
              "path",
              "values"
            ],
            "additionalProperties": false
          }
        ]
      },
      "Filters": {
        "externalDocs": {
          "url": ""
        },
        "title": "Filters",
        "description": "This data structure represents a filter",
        "type": "object",
        "properties": {
          "operator": {
            "$ref": "#/components/schemas/v3.FilterOperator"
          },
          "pathAndValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterPathAndValues"
            }
          }
        },
        "required": [
          "pathAndValues"
        ]
      },
      "InitializeTestingRevisionResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "Initialize testing revision response",
        "type": "object"
      },
      "IntegrationDetail": {
        "externalDocs": {
          "url": ""
        },
        "title": "Integration detail",
        "type": "object",
        "properties": {
          "link": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "link"
        ]
      },
      "MultipleValues": {
        "type": "object",
        "properties": {
          "matcher": {
            "$ref": "#/components/schemas/events.v3.FilterMatcher"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PermissionResource": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "ACTION",
          "ALERT",
          "CUSTOM_ENRICHMENT",
          "GEO_ENRICHMENT",
          "SECURITY_ENRICHMENT",
          "RESOURCE_CLOUD_METADATA_ENRICHMENT",
          "GRAFANA_DASHBOARD",
          "KIBANA_DASHBOARD",
          "PARSING_RULE",
          "SAVED_VIEW",
          "CX_CUSTOM_DASHBOARD",
          "METRICS_RULE_GROUP",
          "SPAN_EVENTS_TO_METRICS",
          "LOGS_EVENTS_TO_METRICS"
        ]
      },
      "TargetDomain": {
        "type": "string",
        "enum": [
          "ACTION",
          "ALERT",
          "ENRICHMENT",
          "GRAFANA_DASHBOARD",
          "KIBANA_DASHBOARD",
          "PARSING_RULE",
          "SAVED_VIEW",
          "CX_CUSTOM_DASHBOARD",
          "METRICS_RULE_GROUP",
          "EVENTS_TO_METRICS",
          "ALERT_V3"
        ]
      },
      "TestExtensionRevisionResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "Test extension revision response",
        "type": "object"
      },
      "common.Group": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/FieldGroup"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.Group"
            }
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "events.v3.FilterMatcher": {
        "type": "string",
        "enum": [
          "FILTER_MATCHER_TEXT_OR_UNSPECIFIED",
          "FILTER_MATCHER_REGEXP"
        ]
      },
      "v3.FilterOperator": {
        "type": "string",
        "enum": [
          "FILTER_OPERATOR_AND_OR_UNSPECIFIED",
          "FILTER_OPERATOR_OR"
        ]
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key authentication"
      }
    }
  }
}