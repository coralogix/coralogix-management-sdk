{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "version": "1.0.0"
  },
  "paths": {
    "/aaa/team-groups/v1": {
      "get": {
        "tags": [
          "Team Permissions Management Service"
        ],
        "summary": "Get Team Groups",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "TeamPermissionsMgmtService_GetTeamGroups",
        "parameters": [
          {
            "in": "query",
            "name": "team_id",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTeamGroupsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1?team_id=SOME_OBJECT_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1\"\n\nquerystring = {\"team_id\":\"SOME_OBJECT_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1?team_id=SOME_OBJECT_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      },
      "put": {
        "tags": [
          "Team Permissions Management Service"
        ],
        "summary": "Update Team Group",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "TeamPermissionsMgmtService_UpdateTeamGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "UpdateTeamGroupRequest",
                "description": "Request to modify an existing team group's details, including its name, description, roles, users, and scope settings.",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "groupId": {
                    "$ref": "#/components/schemas/TeamGroupId"
                  },
                  "groupType": {
                    "$ref": "#/components/schemas/GroupType"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nextGenScopeId": {
                    "type": "string"
                  },
                  "roleUpdates": {
                    "$ref": "#/components/schemas/RoleUpdates"
                  },
                  "scopeFilters": {
                    "$ref": "#/components/schemas/ScopeFilters"
                  },
                  "userUpdates": {
                    "$ref": "#/components/schemas/UserUpdates"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTeamGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1';\n\nlet options = {\n  method: 'PUT',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"description\":\"string\",\"externalId\":\"string\",\"groupId\":{\"id\":0},\"groupType\":\"GROUP_TYPE_UNSPECIFIED\",\"name\":\"string\",\"nextGenScopeId\":\"string\",\"roleUpdates\":{\"roleIds\":[{\"id\":0}]},\"scopeFilters\":{\"applications\":[{\"filterType\":\"FILTER_TYPE_UNSPECIFIED\",\"term\":\"string\"}],\"subsystems\":[{\"filterType\":\"FILTER_TYPE_UNSPECIFIED\",\"term\":\"string\"}]},\"userUpdates\":{\"userIds\":[{\"id\":\"string\"}]}}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1\"\n\npayload = {\n    \"description\": \"string\",\n    \"externalId\": \"string\",\n    \"groupId\": {\"id\": 0},\n    \"groupType\": \"GROUP_TYPE_UNSPECIFIED\",\n    \"name\": \"string\",\n    \"nextGenScopeId\": \"string\",\n    \"roleUpdates\": {\"roleIds\": [{\"id\": 0}]},\n    \"scopeFilters\": {\n        \"applications\": [\n            {\n                \"filterType\": \"FILTER_TYPE_UNSPECIFIED\",\n                \"term\": \"string\"\n            }\n        ],\n        \"subsystems\": [\n            {\n                \"filterType\": \"FILTER_TYPE_UNSPECIFIED\",\n                \"term\": \"string\"\n            }\n        ]\n    },\n    \"userUpdates\": {\"userIds\": [{\"id\": \"string\"}]}\n}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request PUT \\\n  --url https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1 \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"description\":\"string\",\"externalId\":\"string\",\"groupId\":{\"id\":0},\"groupType\":\"GROUP_TYPE_UNSPECIFIED\",\"name\":\"string\",\"nextGenScopeId\":\"string\",\"roleUpdates\":{\"roleIds\":[{\"id\":0}]},\"scopeFilters\":{\"applications\":[{\"filterType\":\"FILTER_TYPE_UNSPECIFIED\",\"term\":\"string\"}],\"subsystems\":[{\"filterType\":\"FILTER_TYPE_UNSPECIFIED\",\"term\":\"string\"}]},\"userUpdates\":{\"userIds\":[{\"id\":\"string\"}]}}'"
          }
        ]
      },
      "post": {
        "tags": [
          "Team Permissions Management Service"
        ],
        "summary": "Create Team Group",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "TeamPermissionsMgmtService_CreateTeamGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CreateTeamGroupRequest",
                "description": "Request to create a new team group with specified name, description, roles, users, and optional scope filters. Can be associated with a specific team or the authenticated team.",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "groupType": {
                    "$ref": "#/components/schemas/GroupType"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nextGenScopeId": {
                    "type": "string"
                  },
                  "roleIds": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RoleId"
                    }
                  },
                  "scopeFilters": {
                    "$ref": "#/components/schemas/ScopeFilters"
                  },
                  "teamId": {
                    "$ref": "#/components/schemas/permissions.v1.TeamId"
                  },
                  "userIds": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/v1.UserId"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTeamGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1';\n\nlet options = {\n  method: 'POST',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"description\":\"string\",\"externalId\":\"string\",\"groupType\":\"GROUP_TYPE_UNSPECIFIED\",\"name\":\"string\",\"nextGenScopeId\":\"string\",\"roleIds\":[{\"id\":0}],\"scopeFilters\":{\"applications\":[{\"filterType\":\"FILTER_TYPE_UNSPECIFIED\",\"term\":\"string\"}],\"subsystems\":[{\"filterType\":\"FILTER_TYPE_UNSPECIFIED\",\"term\":\"string\"}]},\"teamId\":{\"id\":0},\"userIds\":[{\"id\":\"string\"}]}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1\"\n\npayload = {\n    \"description\": \"string\",\n    \"externalId\": \"string\",\n    \"groupType\": \"GROUP_TYPE_UNSPECIFIED\",\n    \"name\": \"string\",\n    \"nextGenScopeId\": \"string\",\n    \"roleIds\": [{\"id\": 0}],\n    \"scopeFilters\": {\n        \"applications\": [\n            {\n                \"filterType\": \"FILTER_TYPE_UNSPECIFIED\",\n                \"term\": \"string\"\n            }\n        ],\n        \"subsystems\": [\n            {\n                \"filterType\": \"FILTER_TYPE_UNSPECIFIED\",\n                \"term\": \"string\"\n            }\n        ]\n    },\n    \"teamId\": {\"id\": 0},\n    \"userIds\": [{\"id\": \"string\"}]\n}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1 \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"description\":\"string\",\"externalId\":\"string\",\"groupType\":\"GROUP_TYPE_UNSPECIFIED\",\"name\":\"string\",\"nextGenScopeId\":\"string\",\"roleIds\":[{\"id\":0}],\"scopeFilters\":{\"applications\":[{\"filterType\":\"FILTER_TYPE_UNSPECIFIED\",\"term\":\"string\"}],\"subsystems\":[{\"filterType\":\"FILTER_TYPE_UNSPECIFIED\",\"term\":\"string\"}]},\"teamId\":{\"id\":0},\"userIds\":[{\"id\":\"string\"}]}'"
          }
        ]
      }
    },
    "/aaa/team-groups/v1/users": {
      "post": {
        "tags": [
          "Team Permissions Management Service"
        ],
        "summary": "Add Users To Team Groups",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "TeamPermissionsMgmtService_AddUsersToTeamGroups",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "AddUsersToTeamGroupsRequest",
                "description": "Bulk request to assign users to multiple team groups simultaneously, efficiently managing group memberships at scale.",
                "type": "object",
                "properties": {
                  "addUsersToGroup": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AddUsersToTeamGroup"
                    }
                  },
                  "teamId": {
                    "$ref": "#/components/schemas/permissions.v1.TeamId"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUsersToTeamGroupsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/users';\n\nlet options = {\n  method: 'POST',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"addUsersToGroup\":[{\"groupId\":{\"id\":0},\"userIds\":[{\"id\":\"string\"}]}],\"teamId\":{\"id\":0}}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/users\"\n\npayload = {\n    \"addUsersToGroup\": [\n        {\n            \"groupId\": {\"id\": 0},\n            \"userIds\": [{\"id\": \"string\"}]\n        }\n    ],\n    \"teamId\": {\"id\": 0}\n}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/users \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"addUsersToGroup\":[{\"groupId\":{\"id\":0},\"userIds\":[{\"id\":\"string\"}]}],\"teamId\":{\"id\":0}}'"
          }
        ]
      },
      "delete": {
        "tags": [
          "Team Permissions Management Service"
        ],
        "summary": "Remove Users From Team Groups",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "TeamPermissionsMgmtService_RemoveUsersFromTeamGroups",
        "parameters": [
          {
            "in": "query",
            "name": "team_id",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "remove_users_from_group",
            "schema": {
              "type": "array",
              "items": {
                "externalDocs": {
                  "description": "Find out more about groups",
                  "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
                },
                "title": "RemoveUsersFromTeamGroup",
                "description": "This data structure represents the information associated with an API key.",
                "type": "object",
                "properties": {
                  "groupId": {},
                  "userIds": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveUsersFromTeamGroupsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/users?team_id=SOME_OBJECT_VALUE&remove_users_from_group=SOME_ARRAY_VALUE';\n\nlet options = {method: 'DELETE', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/users\"\n\nquerystring = {\"team_id\":\"SOME_OBJECT_VALUE\",\"remove_users_from_group\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request DELETE \\\n  --url 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/users?team_id=SOME_OBJECT_VALUE&remove_users_from_group=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/aaa/team-groups/v1/{group_id.id}": {
      "get": {
        "tags": [
          "Team Permissions Management Service"
        ],
        "summary": "Get Team Group",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "TeamPermissionsMgmtService_GetTeamGroup",
        "parameters": [
          {
            "in": "path",
            "name": "group_id.id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTeamGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      },
      "delete": {
        "tags": [
          "Team Permissions Management Service"
        ],
        "summary": "Delete Team Group",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "TeamPermissionsMgmtService_DeleteTeamGroup",
        "parameters": [
          {
            "in": "path",
            "name": "group_id.id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTeamGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D';\n\nlet options = {method: 'DELETE', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request DELETE \\\n  --url https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/aaa/team-groups/v1/{group_id.id}/users": {
      "get": {
        "tags": [
          "Team Permissions Management Service"
        ],
        "summary": "Get Group Users",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "TeamPermissionsMgmtService_GetGroupUsers",
        "parameters": [
          {
            "in": "path",
            "name": "group_id.id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "page_token",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupUsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D/users?page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D/users\"\n\nquerystring = {\"page_size\":\"SOME_INTEGER_VALUE\",\"page_token\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D/users?page_size=SOME_INTEGER_VALUE&page_token=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      },
      "post": {
        "tags": [
          "Team Permissions Management Service"
        ],
        "summary": "Add Users To Team Group",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "TeamPermissionsMgmtService_AddUsersToTeamGroup",
        "parameters": [
          {
            "in": "path",
            "name": "group_id.id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "AddUsersToTeamGroupRequest",
                "description": "Request to assign additional users to an existing team group, granting them the group's roles and scope permissions.",
                "type": "object",
                "properties": {
                  "userIds": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/v1.UserId"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUsersToTeamGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D/users';\n\nlet options = {\n  method: 'POST',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"userIds\":[{\"id\":\"string\"}]}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D/users\"\n\npayload = {\"userIds\": [{\"id\": \"string\"}]}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D/users \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"userIds\":[{\"id\":\"string\"}]}'"
          }
        ]
      },
      "delete": {
        "tags": [
          "Team Permissions Management Service"
        ],
        "summary": "Remove Users From Team Group",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "TeamPermissionsMgmtService_RemoveUsersFromTeamGroup",
        "parameters": [
          {
            "in": "path",
            "name": "group_id.id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "user_ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              }
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveUsersFromTeamGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D/users?user_ids=SOME_ARRAY_VALUE';\n\nlet options = {method: 'DELETE', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D/users\"\n\nquerystring = {\"user_ids\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request DELETE \\\n  --url 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bgroup_id.id%7D/users?user_ids=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/aaa/team-groups/v1/{name}": {
      "get": {
        "tags": [
          "Team Permissions Management Service"
        ],
        "summary": "Get Team Group By Name",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "TeamPermissionsMgmtService_GetTeamGroupByName",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTeamGroupByNameResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bname%7D';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bname%7D\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url https://api.coralogix.com/mgmt/openapi/aaa/team-groups/v1/%7Bname%7D \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/v1/teams/groups/{group_id.id}/scope": {
      "get": {
        "tags": [
          "Team Permissions Management Service"
        ],
        "summary": "Get Team Group Scope",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "TeamPermissionsMgmtService_GetTeamGroupScope",
        "parameters": [
          {
            "in": "path",
            "name": "group_id.id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTeamGroupScopeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/v1/teams/groups/%7Bgroup_id.id%7D/scope';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/v1/teams/groups/%7Bgroup_id.id%7D/scope\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url https://api.coralogix.com/mgmt/openapi/v1/teams/groups/%7Bgroup_id.id%7D/scope \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      },
      "post": {
        "tags": [
          "Team Permissions Management Service"
        ],
        "summary": "Set Team Group Scope",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "TeamPermissionsMgmtService_SetTeamGroupScope",
        "parameters": [
          {
            "in": "path",
            "name": "group_id.id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "SetTeamGroupScopeRequest",
                "description": "Request message for setting scope filters (subsystems and applications) for a team group to control access permissions",
                "type": "object",
                "properties": {
                  "scopeFilters": {
                    "$ref": "#/components/schemas/ScopeFilters"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetTeamGroupScopeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/v1/teams/groups/%7Bgroup_id.id%7D/scope';\n\nlet options = {\n  method: 'POST',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"scopeFilters\":{\"applications\":[{\"filterType\":\"FILTER_TYPE_UNSPECIFIED\",\"term\":\"string\"}],\"subsystems\":[{\"filterType\":\"FILTER_TYPE_UNSPECIFIED\",\"term\":\"string\"}]}}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/v1/teams/groups/%7Bgroup_id.id%7D/scope\"\n\npayload = {\"scopeFilters\": {\n        \"applications\": [\n            {\n                \"filterType\": \"FILTER_TYPE_UNSPECIFIED\",\n                \"term\": \"string\"\n            }\n        ],\n        \"subsystems\": [\n            {\n                \"filterType\": \"FILTER_TYPE_UNSPECIFIED\",\n                \"term\": \"string\"\n            }\n        ]\n    }}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/v1/teams/groups/%7Bgroup_id.id%7D/scope \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"scopeFilters\":{\"applications\":[{\"filterType\":\"FILTER_TYPE_UNSPECIFIED\",\"term\":\"string\"}],\"subsystems\":[{\"filterType\":\"FILTER_TYPE_UNSPECIFIED\",\"term\":\"string\"}]}}'"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AddUsersToTeamGroup": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "AddUsersToTeamGroup",
        "description": "This data structure represents the information associated with an API key.",
        "type": "object",
        "properties": {
          "groupId": {
            "$ref": "#/components/schemas/TeamGroupId"
          },
          "userIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1.UserId"
            }
          }
        }
      },
      "AddUsersToTeamGroupResponse": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "AddUsersToTeamGroupResponse",
        "description": "Response confirming the successful addition of users to the specified team group.",
        "type": "object",
        "properties": {
          "teamId": {
            "$ref": "#/components/schemas/permissions.v1.TeamId"
          }
        }
      },
      "AddUsersToTeamGroupsResponse": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "AddUsersToTeamGroupsResponse",
        "description": "Response confirming the successful bulk addition of users to multiple team groups.",
        "type": "object"
      },
      "ColorsByAggregation": {
        "type": "object",
        "properties": {
          "aggregation": {
            "$ref": "#/components/schemas/ColorsByAggregation"
          }
        },
        "additionalProperties": false
      },
      "ColorsByGroupBy": {
        "type": "object",
        "properties": {
          "groupBy": {
            "$ref": "#/components/schemas/ColorsByGroupBy"
          }
        },
        "additionalProperties": false
      },
      "ColorsByStack": {
        "type": "object",
        "properties": {
          "stack": {
            "$ref": "#/components/schemas/ColorsByStack"
          }
        },
        "additionalProperties": false
      },
      "CreateTeamGroupResponse": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "CreateTeamGroupResponse",
        "description": "Response containing the unique identifier of the newly created team group.",
        "type": "object",
        "properties": {
          "groupId": {
            "$ref": "#/components/schemas/TeamGroupId"
          }
        }
      },
      "DeleteTeamGroupResponse": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "DeleteTeamGroupResponse",
        "description": "Response confirming the successful deletion of a team group and its associated configurations.",
        "type": "object"
      },
      "FieldGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "FilterPathAndValues": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/FilterPathAndValuesMultipleValues"
          },
          {
            "$ref": "#/components/schemas/FilterPathAndValuesFilters"
          }
        ]
      },
      "FilterPathAndValuesFilters": {
        "externalDocs": {
          "url": ""
        },
        "title": "FilterPathAndValues",
        "description": "This data structure represents a filter path and values",
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "path": {
            "example": "test",
            "type": "string"
          }
        },
        "required": [
          "path",
          "values"
        ],
        "additionalProperties": false
      },
      "FilterPathAndValuesMultipleValues": {
        "externalDocs": {
          "url": ""
        },
        "title": "FilterPathAndValues",
        "description": "This data structure represents a filter path and values",
        "type": "object",
        "properties": {
          "multipleValues": {
            "$ref": "#/components/schemas/MultipleValues"
          },
          "path": {
            "example": "test",
            "type": "string"
          }
        },
        "required": [
          "path",
          "values"
        ],
        "additionalProperties": false
      },
      "FilterType": {
        "type": "string",
        "enum": [
          "FILTER_TYPE_UNSPECIFIED",
          "FILTER_TYPE_STARTS_WITH",
          "FILTER_TYPE_ENDS_WITH",
          "FILTER_TYPE_CONTAINS",
          "FILTER_TYPE_EXACT"
        ]
      },
      "Filters": {
        "externalDocs": {
          "url": ""
        },
        "title": "Filters",
        "description": "This data structure represents a filter",
        "type": "object",
        "properties": {
          "operator": {
            "$ref": "#/components/schemas/v3.FilterOperator"
          },
          "pathAndValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterPathAndValues"
            }
          }
        },
        "required": [
          "pathAndValues"
        ]
      },
      "GetGroupUsersResponse": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/GetGroupUsersResponseNoMorePages"
          },
          {
            "$ref": "#/components/schemas/GetGroupUsersResponseToken"
          }
        ]
      },
      "GetGroupUsersResponseNoMorePages": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "GetGroupUsersResponse",
        "description": "Response containing the list of all users currently assigned to the requested team group.",
        "type": "object",
        "properties": {
          "noMorePages": {
            "$ref": "#/components/schemas/NoMorePages"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1.User"
            }
          }
        },
        "additionalProperties": false
      },
      "GetGroupUsersResponseToken": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "GetGroupUsersResponse",
        "description": "Response containing the list of all users currently assigned to the requested team group.",
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/NextPageToken"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1.User"
            }
          }
        },
        "additionalProperties": false
      },
      "GetTeamGroupByNameResponse": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "GetTeamGroupByNameResponse",
        "description": "Response containing the complete details of a team group that matches the requested name, including its members, roles, and scope settings.",
        "type": "object",
        "properties": {
          "group": {
            "$ref": "#/components/schemas/TeamGroup"
          }
        }
      },
      "GetTeamGroupResponse": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "GetTeamGroupResponse",
        "description": "Response containing the complete details of a requested team group, including its members, assigned roles, and scope configuration.",
        "type": "object",
        "properties": {
          "group": {
            "$ref": "#/components/schemas/TeamGroup"
          }
        }
      },
      "GetTeamGroupScopeResponse": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "GetTeamGroupScopeResponse",
        "description": "Response message containing the optional scope configuration (filters for subsystems and applications) for a team group",
        "type": "object",
        "properties": {
          "scope": {
            "$ref": "#/components/schemas/permissions.v1.Scope"
          }
        }
      },
      "GetTeamGroupsResponse": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "GetTeamGroupsResponse",
        "description": "Response containing a list of all team groups and their complete details, including members, roles, and scope configurations.",
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamGroup"
            }
          }
        }
      },
      "GroupOrigin": {
        "type": "string",
        "enum": [
          "GROUP_ORIGIN_UNSPECIFIED",
          "GROUP_ORIGIN_BUILT_IN",
          "GROUP_ORIGIN_USER_DEFINED"
        ]
      },
      "GroupType": {
        "type": "string",
        "enum": [
          "GROUP_TYPE_UNSPECIFIED",
          "GROUP_TYPE_OPEN",
          "GROUP_TYPE_CLOSED",
          "GROUP_TYPE_RESTRICTED"
        ]
      },
      "MultipleValues": {
        "type": "object",
        "properties": {
          "matcher": {
            "$ref": "#/components/schemas/events.v3.FilterMatcher"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "NextPageToken": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "NextPageToken",
        "description": "This data structure represents the information associated with an API key.",
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string"
          }
        }
      },
      "NoMorePages": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "NoMorePages",
        "description": "This data structure represents the information associated with an API key.",
        "type": "object"
      },
      "RemoveUsersFromTeamGroupResponse": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "RemoveUsersFromTeamGroupResponse",
        "description": "Response confirming the successful removal of users from the specified team group.",
        "type": "object"
      },
      "RemoveUsersFromTeamGroupsResponse": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "RemoveUsersFromTeamGroupsResponse",
        "description": "Response confirming the successful bulk removal of users from multiple team groups.",
        "type": "object"
      },
      "Role": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleId": {
            "$ref": "#/components/schemas/RoleId"
          }
        }
      },
      "RoleId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RoleUpdates": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "RoleUpdates",
        "description": "This data structure represents the information associated with an API key.",
        "type": "object",
        "properties": {
          "roleIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleId"
            }
          }
        }
      },
      "ScopeFilter": {
        "type": "object",
        "properties": {
          "filterType": {
            "$ref": "#/components/schemas/FilterType"
          },
          "term": {
            "type": "string"
          }
        }
      },
      "ScopeFilters": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeFilter"
            }
          },
          "subsystems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeFilter"
            }
          }
        }
      },
      "ScopeId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SetTeamGroupScopeResponse": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "SetTeamGroupScopeResponse",
        "description": "Response message containing the ID of the newly created or updated scope for a team group",
        "type": "object",
        "properties": {
          "scopeId": {
            "$ref": "#/components/schemas/ScopeId"
          }
        }
      },
      "TeamGroup": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "groupId": {
            "$ref": "#/components/schemas/TeamGroupId"
          },
          "groupOrigin": {
            "$ref": "#/components/schemas/GroupOrigin"
          },
          "groupType": {
            "$ref": "#/components/schemas/GroupType"
          },
          "name": {
            "type": "string"
          },
          "nextGenScopeId": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "scope": {
            "$ref": "#/components/schemas/permissions.v1.Scope"
          },
          "teamId": {
            "$ref": "#/components/schemas/permissions.v1.TeamId"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TeamGroupId": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "TeamGroupId",
        "description": "This data structure represents the information associated with a team group.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UpdateTeamGroupResponse": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "UpdateTeamGroupResponse",
        "description": "Response confirming the successful update of a team group's configuration.",
        "type": "object"
      },
      "UserStatus": {
        "type": "string",
        "enum": [
          "USER_STATUS_UNSPECIFIED",
          "USER_STATUS_ACTIVE",
          "USER_STATUS_INACTIVE"
        ]
      },
      "UserUpdates": {
        "externalDocs": {
          "description": "Find out more about groups",
          "url": "https://coralogix.com/docs/user-guides/account-management/user-management/assign-user-roles-and-scopes-via-groups/"
        },
        "title": "UserUpdates",
        "description": "This data structure represents the information associated with an API key.",
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1.UserId"
            }
          }
        }
      },
      "common.Group": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/FieldGroup"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.Group"
            }
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "events.v3.FilterMatcher": {
        "type": "string",
        "enum": [
          "FILTER_MATCHER_TEXT_OR_UNSPECIFIED",
          "FILTER_MATCHER_REGEXP"
        ]
      },
      "permissions.v1.Scope": {
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/ScopeFilters"
          },
          "id": {
            "$ref": "#/components/schemas/ScopeId"
          }
        }
      },
      "permissions.v1.TeamId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "v1.User": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus"
          },
          "userAccountId": {
            "$ref": "#/components/schemas/v1.UserAccountId"
          },
          "userId": {
            "$ref": "#/components/schemas/v1.UserId"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "v1.UserAccountId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "v1.UserId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "v3.FilterOperator": {
        "type": "string",
        "enum": [
          "FILTER_OPERATOR_AND_OR_UNSPECIFIED",
          "FILTER_OPERATOR_OR"
        ]
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key authentication"
      }
    }
  }
}