{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "version": "1.0.0"
  },
  "paths": {
    "/integrations/webhooks/v1": {
      "get": {
        "tags": [
          "Outgoing webhooks service"
        ],
        "summary": "List outgoing webhooks",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "OutgoingWebhooksService_ListOutgoingWebhooks",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "GENERIC",
                "SLACK",
                "PAGERDUTY",
                "SEND_LOG",
                "EMAIL_GROUP",
                "MICROSOFT_TEAMS",
                "JIRA",
                "OPSGENIE",
                "DEMISTO",
                "AWS_EVENT_BRIDGE",
                "IBM_EVENT_NOTIFICATIONS",
                "MS_TEAMS_WORKFLOW"
              ]
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOutgoingWebhooksResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "outbound-webhooks:ReadConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1?type=SOME_STRING_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1\"\n\nquerystring = {\"type\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1?type=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      },
      "put": {
        "tags": [
          "Outgoing webhooks service"
        ],
        "summary": "Update an outgoing webhook",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "OutgoingWebhooksService_UpdateOutgoingWebhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Update outgoing webhook request",
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OutgoingWebhookInputData"
                  },
                  "id": {
                    "example": "example_id",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateOutgoingWebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "outbound-webhooks:UpdateConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1';\n\nlet options = {\n  method: 'PUT',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"data\":{\"genericWebhook\":{\"headers\":{\"Content-Type\":\"application/json\"},\"method\":\"UNKNOWN\",\"payload\":{\"key\":\"value\"},\"uuid\":\"d838cd7b-087b-40c6-bc33-80997020f5d0\"},\"name\":\"my_webhook\",\"type\":\"UNKNOWN\",\"url\":\"slack.webhook.com\"},\"id\":\"example_id\"}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1\"\n\npayload = {\n    \"data\": {\n        \"genericWebhook\": {\n            \"headers\": {\"Content-Type\": \"application/json\"},\n            \"method\": \"UNKNOWN\",\n            \"payload\": {\"key\": \"value\"},\n            \"uuid\": \"d838cd7b-087b-40c6-bc33-80997020f5d0\"\n        },\n        \"name\": \"my_webhook\",\n        \"type\": \"UNKNOWN\",\n        \"url\": \"slack.webhook.com\"\n    },\n    \"id\": \"example_id\"\n}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request PUT \\\n  --url https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1 \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"data\":{\"genericWebhook\":{\"headers\":{\"Content-Type\":\"application/json\"},\"method\":\"UNKNOWN\",\"payload\":{\"key\":\"value\"},\"uuid\":\"d838cd7b-087b-40c6-bc33-80997020f5d0\"},\"name\":\"my_webhook\",\"type\":\"UNKNOWN\",\"url\":\"slack.webhook.com\"},\"id\":\"example_id\"}'"
          }
        ]
      },
      "post": {
        "tags": [
          "Outgoing webhooks service"
        ],
        "summary": "Create an outgoing webhook",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "OutgoingWebhooksService_CreateOutgoingWebhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Create outgoing webhook request",
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OutgoingWebhookInputData"
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOutgoingWebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "outbound-webhooks:UpdateConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1';\n\nlet options = {\n  method: 'POST',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"data\":{\"genericWebhook\":{\"headers\":{\"Content-Type\":\"application/json\"},\"method\":\"UNKNOWN\",\"payload\":{\"key\":\"value\"},\"uuid\":\"d838cd7b-087b-40c6-bc33-80997020f5d0\"},\"name\":\"my_webhook\",\"type\":\"UNKNOWN\",\"url\":\"slack.webhook.com\"}}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1\"\n\npayload = {\"data\": {\n        \"genericWebhook\": {\n            \"headers\": {\"Content-Type\": \"application/json\"},\n            \"method\": \"UNKNOWN\",\n            \"payload\": {\"key\": \"value\"},\n            \"uuid\": \"d838cd7b-087b-40c6-bc33-80997020f5d0\"\n        },\n        \"name\": \"my_webhook\",\n        \"type\": \"UNKNOWN\",\n        \"url\": \"slack.webhook.com\"\n    }}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1 \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"data\":{\"genericWebhook\":{\"headers\":{\"Content-Type\":\"application/json\"},\"method\":\"UNKNOWN\",\"payload\":{\"key\":\"value\"},\"uuid\":\"d838cd7b-087b-40c6-bc33-80997020f5d0\"},\"name\":\"my_webhook\",\"type\":\"UNKNOWN\",\"url\":\"slack.webhook.com\"}}'"
          }
        ]
      }
    },
    "/integrations/webhooks/v1/all": {
      "get": {
        "tags": [
          "Outgoing webhooks service"
        ],
        "summary": "List all outgoing webhooks",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "OutgoingWebhooksService_ListAllOutgoingWebhooks",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllOutgoingWebhooksResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "outbound-webhooks:ReadConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/all';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/all\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/all \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/integrations/webhooks/v1/summary": {
      "get": {
        "tags": [
          "Outgoing webhooks service"
        ],
        "summary": "List outbound webhooks summary",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "OutgoingWebhooksService_ListOutboundWebhooksSummary",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOutboundWebhooksSummaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "outbound-webhooks:ReadSummary"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/summary';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/summary\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/summary \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/integrations/webhooks/v1/test": {
      "post": {
        "tags": [
          "Outgoing webhooks service"
        ],
        "summary": "Test an outgoing webhook",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "OutgoingWebhooksService_TestOutgoingWebhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Test outgoing webhook request",
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OutgoingWebhookInputData"
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestOutgoingWebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "outbound-webhooks:ReadConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/test';\n\nlet options = {\n  method: 'POST',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"data\":{\"genericWebhook\":{\"headers\":{\"Content-Type\":\"application/json\"},\"method\":\"UNKNOWN\",\"payload\":{\"key\":\"value\"},\"uuid\":\"d838cd7b-087b-40c6-bc33-80997020f5d0\"},\"name\":\"my_webhook\",\"type\":\"UNKNOWN\",\"url\":\"slack.webhook.com\"}}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/test\"\n\npayload = {\"data\": {\n        \"genericWebhook\": {\n            \"headers\": {\"Content-Type\": \"application/json\"},\n            \"method\": \"UNKNOWN\",\n            \"payload\": {\"key\": \"value\"},\n            \"uuid\": \"d838cd7b-087b-40c6-bc33-80997020f5d0\"\n        },\n        \"name\": \"my_webhook\",\n        \"type\": \"UNKNOWN\",\n        \"url\": \"slack.webhook.com\"\n    }}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/test \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"data\":{\"genericWebhook\":{\"headers\":{\"Content-Type\":\"application/json\"},\"method\":\"UNKNOWN\",\"payload\":{\"key\":\"value\"},\"uuid\":\"d838cd7b-087b-40c6-bc33-80997020f5d0\"},\"name\":\"my_webhook\",\"type\":\"UNKNOWN\",\"url\":\"slack.webhook.com\"}}'"
          }
        ]
      }
    },
    "/integrations/webhooks/v1/test-existing": {
      "post": {
        "tags": [
          "Outgoing webhooks service"
        ],
        "summary": "Test an existing outgoing webhook",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "OutgoingWebhooksService_TestExistingOutgoingWebhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Test existing outgoing webhook request",
                "type": "object",
                "properties": {
                  "id": {
                    "example": "example_id",
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestOutgoingWebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "outbound-webhooks:ReadConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/test-existing';\n\nlet options = {\n  method: 'POST',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"id\":\"example_id\"}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/test-existing\"\n\npayload = {\"id\": \"example_id\"}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/test-existing \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"id\":\"example_id\"}'"
          }
        ]
      }
    },
    "/integrations/webhooks/v1/types": {
      "get": {
        "tags": [
          "Outgoing webhooks service"
        ],
        "summary": "Get outgoing webhook types",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "OutgoingWebhooksService_ListOutgoingWebhookTypes",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOutgoingWebhookTypesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "outbound-webhooks:ReadConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/types';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/types\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/types \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/integrations/webhooks/v1/types/{type}": {
      "get": {
        "tags": [
          "Outgoing webhooks service"
        ],
        "summary": "Get outgoing webhook type details",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "OutgoingWebhooksService_GetOutgoingWebhookTypeDetails",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "GENERIC",
                "SLACK",
                "PAGERDUTY",
                "SEND_LOG",
                "EMAIL_GROUP",
                "MICROSOFT_TEAMS",
                "JIRA",
                "OPSGENIE",
                "DEMISTO",
                "AWS_EVENT_BRIDGE",
                "IBM_EVENT_NOTIFICATIONS",
                "MS_TEAMS_WORKFLOW"
              ]
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOutgoingWebhookTypeDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "outbound-webhooks:ReadConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/types/%7Btype%7D';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/types/%7Btype%7D\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/types/%7Btype%7D \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/integrations/webhooks/v1/{id}": {
      "get": {
        "tags": [
          "Outgoing webhooks service"
        ],
        "summary": "Get outgoing webhook",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "OutgoingWebhooksService_GetOutgoingWebhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOutgoingWebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "outbound-webhooks:ReadConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/%7Bid%7D';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/%7Bid%7D\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/%7Bid%7D \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      },
      "delete": {
        "tags": [
          "Outgoing webhooks service"
        ],
        "summary": "Delete an outgoing webhook",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "OutgoingWebhooksService_DeleteOutgoingWebhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "example_id",
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteOutgoingWebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "outbound-webhooks:UpdateConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/example_id';\n\nlet options = {method: 'DELETE', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/example_id\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request DELETE \\\n  --url https://api.coralogix.com/mgmt/openapi/integrations/webhooks/v1/example_id \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Attachment": {
        "externalDocs": {
          "url": ""
        },
        "title": "Slack attachment configuration",
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/AttachmentType"
          }
        },
        "required": [
          "type"
        ]
      },
      "AttachmentType": {
        "type": "string",
        "enum": [
          "EMPTY",
          "METRIC_SNAPSHOT",
          "LOGS"
        ]
      },
      "AwsEventBridgeConfig": {
        "externalDocs": {
          "url": ""
        },
        "title": "AWS EventBridge configuration",
        "type": "object",
        "properties": {
          "detail": {
            "example": {
              "key": "value"
            },
            "type": "string"
          },
          "detailType": {
            "example": "detail_type",
            "type": "string"
          },
          "eventBusArn": {
            "example": "arn:aws:events:us-east-1:123456789012:event-bus/default",
            "type": "string"
          },
          "roleName": {
            "example": "role_name",
            "type": "string"
          },
          "source": {
            "example": "source",
            "type": "string"
          }
        },
        "required": [
          "eventBusArn",
          "detail",
          "detailType",
          "source",
          "roleName"
        ]
      },
      "ColorsByAggregation": {
        "type": "object",
        "properties": {
          "aggregation": {
            "$ref": "#/components/schemas/ColorsByAggregation"
          }
        },
        "additionalProperties": false
      },
      "ColorsByGroupBy": {
        "type": "object",
        "properties": {
          "groupBy": {
            "$ref": "#/components/schemas/ColorsByGroupBy"
          }
        },
        "additionalProperties": false
      },
      "ColorsByStack": {
        "type": "object",
        "properties": {
          "stack": {
            "$ref": "#/components/schemas/ColorsByStack"
          }
        },
        "additionalProperties": false
      },
      "CreateOutgoingWebhookResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "Create outgoing webhook response",
        "type": "object",
        "properties": {
          "id": {
            "example": "example_id",
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "DeleteOutgoingWebhookResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "Delete outgoing webhook response",
        "type": "object"
      },
      "DemistoConfig": {
        "externalDocs": {
          "url": ""
        },
        "title": "Demisto configuration",
        "type": "object",
        "properties": {
          "payload": {
            "example": {
              "key": "value"
            },
            "type": "string"
          },
          "uuid": {
            "example": "d838cd7b-087b-40c6-bc33-80997020f5d0",
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "payload"
        ]
      },
      "Digest": {
        "externalDocs": {
          "url": ""
        },
        "title": "Slack digest configuration",
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/DigestType"
          }
        },
        "required": [
          "type"
        ]
      },
      "DigestType": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "ERROR_AND_CRITICAL_LOGS",
          "FLOW_ANOMALIES",
          "SPIKE_ANOMALIES",
          "DATA_USAGE"
        ]
      },
      "EmailGroupConfig": {
        "externalDocs": {
          "url": ""
        },
        "title": "Email group configuration",
        "type": "object",
        "properties": {
          "emailAddresses": {
            "type": "array",
            "items": {
              "example": [
                "example@coralogix.com"
              ],
              "type": "string"
            }
          }
        }
      },
      "EndpointType": {
        "type": "string",
        "enum": [
          "ENDPOINT_TYPE_DEFAULT_OR_PUBLIC",
          "ENDPOINT_TYPE_PRIVATE"
        ]
      },
      "FieldGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "FilterPathAndValues": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/FilterPathAndValuesMultipleValues"
          },
          {
            "$ref": "#/components/schemas/FilterPathAndValuesFilters"
          }
        ]
      },
      "FilterPathAndValuesFilters": {
        "externalDocs": {
          "url": ""
        },
        "title": "FilterPathAndValues",
        "description": "This data structure represents a filter path and values",
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "path": {
            "example": "test",
            "type": "string"
          }
        },
        "required": [
          "path",
          "values"
        ],
        "additionalProperties": false
      },
      "FilterPathAndValuesMultipleValues": {
        "externalDocs": {
          "url": ""
        },
        "title": "FilterPathAndValues",
        "description": "This data structure represents a filter path and values",
        "type": "object",
        "properties": {
          "multipleValues": {
            "$ref": "#/components/schemas/MultipleValues"
          },
          "path": {
            "example": "test",
            "type": "string"
          }
        },
        "required": [
          "path",
          "values"
        ],
        "additionalProperties": false
      },
      "Filters": {
        "externalDocs": {
          "url": ""
        },
        "title": "Filters",
        "description": "This data structure represents a filter",
        "type": "object",
        "properties": {
          "operator": {
            "$ref": "#/components/schemas/v3.FilterOperator"
          },
          "pathAndValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterPathAndValues"
            }
          }
        },
        "required": [
          "pathAndValues"
        ]
      },
      "GenericWebhookConfig": {
        "externalDocs": {
          "url": ""
        },
        "title": "Generic webhook configuration",
        "type": "object",
        "properties": {
          "headers": {
            "example": {
              "Content-Type": "application/json"
            },
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "method": {
            "$ref": "#/components/schemas/MethodType"
          },
          "payload": {
            "example": {
              "key": "value"
            },
            "type": "string"
          },
          "uuid": {
            "example": "d838cd7b-087b-40c6-bc33-80997020f5d0",
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "method"
        ]
      },
      "GetOutgoingWebhookResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "Get outgoing webhook response",
        "type": "object",
        "properties": {
          "webhook": {
            "$ref": "#/components/schemas/OutgoingWebhook"
          }
        },
        "required": [
          "webhook"
        ]
      },
      "GetOutgoingWebhookTypeDetailsResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "Get outgoing webhook type details response",
        "type": "object",
        "properties": {
          "details": {
            "$ref": "#/components/schemas/OutgoingWebhookDetails"
          }
        },
        "required": [
          "details"
        ]
      },
      "IbmEventNotificationsConfig": {
        "externalDocs": {
          "url": ""
        },
        "title": "IBM event notification configuration",
        "type": "object",
        "properties": {
          "endpointType": {
            "$ref": "#/components/schemas/EndpointType"
          },
          "eventNotificationsInstanceId": {
            "type": "string"
          },
          "regionId": {
            "type": "string"
          },
          "sourceId": {
            "type": "string"
          },
          "sourceName": {
            "type": "string"
          }
        },
        "required": [
          "eventNotificationsInstanceId",
          "regionId",
          "endpointType"
        ]
      },
      "JiraConfig": {
        "externalDocs": {
          "url": ""
        },
        "title": "Jira configuration",
        "type": "object",
        "properties": {
          "apiToken": {
            "example": "jira_api_token",
            "type": "string"
          },
          "email": {
            "example": "jira_email",
            "type": "string"
          },
          "projectKey": {
            "example": "jira_project_key",
            "type": "string"
          }
        },
        "required": [
          "apiToken",
          "email",
          "projectKey"
        ]
      },
      "ListAllOutgoingWebhooksResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "List all outgoing webhooks response",
        "type": "object",
        "properties": {
          "deployed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutgoingWebhookExtendedSummary"
            }
          }
        }
      },
      "ListOutboundWebhooksSummaryResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "List outbound webhooks summary response",
        "type": "object",
        "properties": {
          "outboundWebhookSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutboundWebhookSummary"
            }
          }
        }
      },
      "ListOutgoingWebhookTypesResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "List outgoing webhook types response",
        "type": "object",
        "properties": {
          "webhooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutgoingWebhookType"
            }
          }
        }
      },
      "ListOutgoingWebhooksResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "List outgoing webhooks response",
        "type": "object",
        "properties": {
          "deployed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutgoingWebhookSummary"
            }
          }
        }
      },
      "MSTeamsWorkflowConfig": {
        "externalDocs": {
          "url": ""
        },
        "title": "Microsoft Teams workflow configuration",
        "type": "object"
      },
      "MethodType": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "GET",
          "POST",
          "PUT"
        ]
      },
      "MicrosoftTeamsConfig": {
        "externalDocs": {
          "url": ""
        },
        "title": "Microsoft Teams configuration",
        "type": "object"
      },
      "MultipleValues": {
        "type": "object",
        "properties": {
          "matcher": {
            "$ref": "#/components/schemas/events.v3.FilterMatcher"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OpsgenieConfig": {
        "externalDocs": {
          "url": ""
        },
        "title": "Opsgenie configuration",
        "type": "object"
      },
      "OutboundWebhookSummary": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outbound webhook summary",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "externalId",
          "type"
        ]
      },
      "OutgoingWebhook": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/OutgoingWebhookJira"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookOpsgenie"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookGenericWebhook"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookPagerDuty"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookSendLog"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookMicrosoftTeams"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookDemisto"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookAwsEventBridge"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookIbmEventNotifications"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookMsTeamsWorkflow"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookSlack"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookEmailGroup"
          }
        ]
      },
      "OutgoingWebhookAwsEventBridge": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook",
        "type": "object",
        "properties": {
          "awsEventBridge": {
            "$ref": "#/components/schemas/AwsEventBridgeConfig"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "example": 123456,
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "example": "webhook_id",
            "type": "string"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "createdAt",
          "externalId"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookDemisto": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "demisto": {
            "$ref": "#/components/schemas/DemistoConfig"
          },
          "externalId": {
            "example": 123456,
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "example": "webhook_id",
            "type": "string"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "createdAt",
          "externalId"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookDetails": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook details",
        "type": "object",
        "properties": {
          "label": {
            "example": "example_label",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          }
        },
        "required": [
          "label",
          "type"
        ]
      },
      "OutgoingWebhookEmailGroup": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "emailGroup": {
            "$ref": "#/components/schemas/EmailGroupConfig"
          },
          "externalId": {
            "example": 123456,
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "example": "webhook_id",
            "type": "string"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "createdAt",
          "externalId"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookExtendedSummary": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook extended summary",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "example": 123456,
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "example": "webhook_id",
            "type": "string"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "externalId",
          "type"
        ]
      },
      "OutgoingWebhookGenericWebhook": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "example": 123456,
            "type": "integer",
            "format": "int64"
          },
          "genericWebhook": {
            "$ref": "#/components/schemas/GenericWebhookConfig"
          },
          "id": {
            "example": "webhook_id",
            "type": "string"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "createdAt",
          "externalId"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookIbmEventNotifications": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "example": 123456,
            "type": "integer",
            "format": "int64"
          },
          "ibmEventNotifications": {
            "$ref": "#/components/schemas/IbmEventNotificationsConfig"
          },
          "id": {
            "example": "webhook_id",
            "type": "string"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "createdAt",
          "externalId"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookInputData": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/OutgoingWebhookInputDataGenericWebhook"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookInputDataSendLog"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookInputDataEmailGroup"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookInputDataMicrosoftTeams"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookInputDataJira"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookInputDataAwsEventBridge"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookInputDataMsTeamsWorkflow"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookInputDataSlack"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookInputDataPagerDuty"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookInputDataOpsgenie"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookInputDataDemisto"
          },
          {
            "$ref": "#/components/schemas/OutgoingWebhookInputDataIbmEventNotifications"
          }
        ]
      },
      "OutgoingWebhookInputDataAwsEventBridge": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook input data",
        "type": "object",
        "properties": {
          "awsEventBridge": {
            "$ref": "#/components/schemas/AwsEventBridgeConfig"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "name",
          "config",
          "type"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookInputDataDemisto": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook input data",
        "type": "object",
        "properties": {
          "demisto": {
            "$ref": "#/components/schemas/DemistoConfig"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "name",
          "config",
          "type"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookInputDataEmailGroup": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook input data",
        "type": "object",
        "properties": {
          "emailGroup": {
            "$ref": "#/components/schemas/EmailGroupConfig"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "name",
          "config",
          "type"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookInputDataGenericWebhook": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook input data",
        "type": "object",
        "properties": {
          "genericWebhook": {
            "$ref": "#/components/schemas/GenericWebhookConfig"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "name",
          "config",
          "type"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookInputDataIbmEventNotifications": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook input data",
        "type": "object",
        "properties": {
          "ibmEventNotifications": {
            "$ref": "#/components/schemas/IbmEventNotificationsConfig"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "name",
          "config",
          "type"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookInputDataJira": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook input data",
        "type": "object",
        "properties": {
          "jira": {
            "$ref": "#/components/schemas/JiraConfig"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "name",
          "config",
          "type"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookInputDataMicrosoftTeams": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook input data",
        "type": "object",
        "properties": {
          "microsoftTeams": {
            "$ref": "#/components/schemas/MicrosoftTeamsConfig"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "name",
          "config",
          "type"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookInputDataMsTeamsWorkflow": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook input data",
        "type": "object",
        "properties": {
          "msTeamsWorkflow": {
            "$ref": "#/components/schemas/MSTeamsWorkflowConfig"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "name",
          "config",
          "type"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookInputDataOpsgenie": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook input data",
        "type": "object",
        "properties": {
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "opsgenie": {
            "$ref": "#/components/schemas/OpsgenieConfig"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "name",
          "config",
          "type"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookInputDataPagerDuty": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook input data",
        "type": "object",
        "properties": {
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "pagerDuty": {
            "$ref": "#/components/schemas/PagerDutyConfig"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "name",
          "config",
          "type"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookInputDataSendLog": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook input data",
        "type": "object",
        "properties": {
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "sendLog": {
            "$ref": "#/components/schemas/SendLogConfig"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "name",
          "config",
          "type"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookInputDataSlack": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook input data",
        "type": "object",
        "properties": {
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "slack": {
            "$ref": "#/components/schemas/SlackConfig"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "name",
          "config",
          "type"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookJira": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "example": 123456,
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "example": "webhook_id",
            "type": "string"
          },
          "jira": {
            "$ref": "#/components/schemas/JiraConfig"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "createdAt",
          "externalId"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookMicrosoftTeams": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "example": 123456,
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "example": "webhook_id",
            "type": "string"
          },
          "microsoftTeams": {
            "$ref": "#/components/schemas/MicrosoftTeamsConfig"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "createdAt",
          "externalId"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookMsTeamsWorkflow": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "example": 123456,
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "example": "webhook_id",
            "type": "string"
          },
          "msTeamsWorkflow": {
            "$ref": "#/components/schemas/MSTeamsWorkflowConfig"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "createdAt",
          "externalId"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookOpsgenie": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "example": 123456,
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "example": "webhook_id",
            "type": "string"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "opsgenie": {
            "$ref": "#/components/schemas/OpsgenieConfig"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "createdAt",
          "externalId"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookPagerDuty": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "example": 123456,
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "example": "webhook_id",
            "type": "string"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "pagerDuty": {
            "$ref": "#/components/schemas/PagerDutyConfig"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "createdAt",
          "externalId"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookSendLog": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "example": 123456,
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "example": "webhook_id",
            "type": "string"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "sendLog": {
            "$ref": "#/components/schemas/SendLogConfig"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "createdAt",
          "externalId"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookSlack": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "example": 123456,
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "example": "webhook_id",
            "type": "string"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "slack": {
            "$ref": "#/components/schemas/SlackConfig"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "createdAt",
          "externalId"
        ],
        "additionalProperties": false
      },
      "OutgoingWebhookSummary": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook summary",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "externalId": {
            "example": 123456,
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "example": "webhook_id",
            "type": "string"
          },
          "name": {
            "example": "my_webhook",
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "example": "slack.webhook.com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "externalId"
        ]
      },
      "OutgoingWebhookType": {
        "externalDocs": {
          "url": ""
        },
        "title": "Outgoing webhook type",
        "type": "object",
        "properties": {
          "count": {
            "example": 3,
            "type": "integer",
            "format": "int64"
          },
          "label": {
            "example": "example_label",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/WebhookType"
          }
        },
        "required": [
          "label",
          "count",
          "type"
        ]
      },
      "PagerDutyConfig": {
        "externalDocs": {
          "url": ""
        },
        "title": "PagerDuty configuration",
        "type": "object",
        "properties": {
          "serviceKey": {
            "example": "pager_duty_service_key",
            "type": "string"
          }
        },
        "required": [
          "serviceKey"
        ]
      },
      "SendLogConfig": {
        "externalDocs": {
          "url": ""
        },
        "title": "Send log configuration",
        "type": "object",
        "properties": {
          "payload": {
            "example": {
              "key": "value"
            },
            "type": "string"
          },
          "uuid": {
            "example": "d838cd7b-087b-40c6-bc33-80997020f5d0",
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "payload"
        ]
      },
      "SlackConfig": {
        "externalDocs": {
          "url": ""
        },
        "title": "Slack configuration",
        "type": "object",
        "properties": {
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          },
          "digests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Digest"
            }
          }
        }
      },
      "TestOutgoingWebhookResponse": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/TestOutgoingWebhookResponseSuccess"
          },
          {
            "$ref": "#/components/schemas/TestOutgoingWebhookResponseFailure"
          }
        ]
      },
      "TestOutgoingWebhookResponse.Failure": {
        "externalDocs": {
          "url": ""
        },
        "title": "Test outgoing webhook failure",
        "type": "object",
        "properties": {
          "displayMessage": {
            "example": "example_display_message",
            "type": "string"
          },
          "errorMessage": {
            "example": "example_error_message",
            "type": "string"
          },
          "statusCode": {
            "example": 400,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "errorMessage",
          "displayMessage"
        ]
      },
      "TestOutgoingWebhookResponse.Success": {
        "externalDocs": {
          "url": ""
        },
        "title": "Test outgoing webhook success",
        "type": "object"
      },
      "TestOutgoingWebhookResponseFailure": {
        "externalDocs": {
          "url": ""
        },
        "title": "Test outgoing webhook response",
        "type": "object",
        "properties": {
          "failure": {
            "$ref": "#/components/schemas/TestOutgoingWebhookResponse.Failure"
          }
        },
        "additionalProperties": false
      },
      "TestOutgoingWebhookResponseSuccess": {
        "externalDocs": {
          "url": ""
        },
        "title": "Test outgoing webhook response",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/TestOutgoingWebhookResponse.Success"
          }
        },
        "additionalProperties": false
      },
      "UpdateOutgoingWebhookResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "Update outgoing webhook response",
        "type": "object"
      },
      "WebhookType": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "GENERIC",
          "SLACK",
          "PAGERDUTY",
          "SEND_LOG",
          "EMAIL_GROUP",
          "MICROSOFT_TEAMS",
          "JIRA",
          "OPSGENIE",
          "DEMISTO",
          "AWS_EVENT_BRIDGE",
          "IBM_EVENT_NOTIFICATIONS",
          "MS_TEAMS_WORKFLOW"
        ]
      },
      "YAxisViewByCategory": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/YAxisViewByCategory"
          }
        },
        "additionalProperties": false
      },
      "YAxisViewByValue": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/YAxisViewByValue"
          }
        },
        "additionalProperties": false
      },
      "common.Group": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/FieldGroup"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.Group"
            }
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "events.v3.FilterMatcher": {
        "type": "string",
        "enum": [
          "FILTER_MATCHER_TEXT_OR_UNSPECIFIED",
          "FILTER_MATCHER_REGEXP"
        ]
      },
      "v3.FilterOperator": {
        "type": "string",
        "enum": [
          "FILTER_OPERATOR_AND_OR_UNSPECIFIED",
          "FILTER_OPERATOR_OR"
        ]
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key authentication"
      }
    }
  }
}