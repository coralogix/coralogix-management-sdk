{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "version": "1.0.0"
  },
  "paths": {
    "/v3/alert-event-stats": {
      "get": {
        "tags": [
          "Alert events service"
        ],
        "summary": "Get alert events statistics",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "AlertEventService_GetAlertEventsStats",
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "order_bys",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "direction": {
                    "$ref": "#/components/schemas/OrderByAlertEventDirection"
                  },
                  "fieldName": {
                    "$ref": "#/components/schemas/OrderByAlertEventFields"
                  }
                }
              }
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAlertEventStatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "alerts:ReadConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/v3/alert-event-stats?ids=SOME_ARRAY_VALUE&order_bys=SOME_ARRAY_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/v3/alert-event-stats\"\n\nquerystring = {\"ids\":\"SOME_ARRAY_VALUE\",\"order_bys\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/v3/alert-event-stats?ids=SOME_ARRAY_VALUE&order_bys=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/v3/alert-event/{id}": {
      "get": {
        "tags": [
          "Alert events service"
        ],
        "summary": "Get alert event by ID",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "AlertEventService_GetAlertEvent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "order_bys",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "direction": {
                    "$ref": "#/components/schemas/OrderByAlertEventDirection"
                  },
                  "fieldName": {
                    "$ref": "#/components/schemas/OrderByAlertEventFields"
                  }
                }
              }
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "pagination",
            "schema": {
              "type": "object",
              "properties": {
                "pageSize": {
                  "type": "integer",
                  "format": "int64"
                },
                "pageToken": {
                  "type": "string"
                }
              }
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAlertEventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-coralogixPermissions": [
          "alerts:ReadConfig"
        ],
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/v3/alert-event/%7Bid%7D?order_bys=SOME_ARRAY_VALUE&pagination=SOME_OBJECT_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/v3/alert-event/%7Bid%7D\"\n\nquerystring = {\"order_bys\":\"SOME_ARRAY_VALUE\",\"pagination\":\"SOME_OBJECT_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/v3/alert-event/%7Bid%7D?order_bys=SOME_ARRAY_VALUE&pagination=SOME_OBJECT_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ActivityAnalysis": {
        "externalDocs": {
          "url": ""
        },
        "title": "Activity analysis data structure",
        "description": "Configuration for alert activity analysis, containing rules and status.",
        "type": "object",
        "properties": {
          "rules": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "$ref": "#/components/schemas/ActivityAnalysisStatus"
          }
        },
        "required": [
          "rules",
          "status"
        ]
      },
      "ActivityAnalysisStats": {
        "externalDocs": {
          "url": ""
        },
        "title": "Event activity analysis statistics",
        "type": "object",
        "properties": {
          "isMutedCount": {
            "type": "integer",
            "format": "int64"
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ActivityAnalysisStatus": {
        "type": "string",
        "enum": [
          "ACTIVITY_ANALYSIS_STATUS_ACTIVATE_OR_UNSPECIFIED",
          "ACTIVITY_ANALYSIS_STATUS_MUTE"
        ]
      },
      "AlertEvent": {
        "externalDocs": {
          "url": ""
        },
        "title": "Alert event",
        "type": "object",
        "properties": {
          "activityAnalysis": {
            "$ref": "#/components/schemas/ActivityAnalysis"
          },
          "alertId": {
            "type": "string"
          },
          "groupLabels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "incidentCorrelationKey": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "payloadType": {
            "type": "string"
          },
          "permutationId": {
            "type": "string"
          },
          "permutationLabels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "preGroupingEventId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/AlertStatus"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "permutationLabels",
          "groupLabels",
          "timestamp",
          "alertId",
          "status",
          "preGroupingEventId",
          "payload",
          "payloadType",
          "permutationId",
          "incidentCorrelationKey",
          "activityAnalysis"
        ]
      },
      "AlertEventMultiplePermutation": {
        "type": "object",
        "properties": {
          "alertEventMultiplePermutation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertEvent"
            }
          }
        }
      },
      "AlertStatus": {
        "type": "string",
        "enum": [
          "ALERT_STATUS_RESOLVED_OR_UNSPECIFIED",
          "ALERT_STATUS_TRIGGERED"
        ]
      },
      "ColorsByAggregation": {
        "type": "object",
        "properties": {
          "aggregation": {
            "$ref": "#/components/schemas/ColorsByAggregation"
          }
        },
        "additionalProperties": false
      },
      "ColorsByGroupBy": {
        "type": "object",
        "properties": {
          "groupBy": {
            "$ref": "#/components/schemas/ColorsByGroupBy"
          }
        },
        "additionalProperties": false
      },
      "ColorsByStack": {
        "type": "object",
        "properties": {
          "stack": {
            "$ref": "#/components/schemas/ColorsByStack"
          }
        },
        "additionalProperties": false
      },
      "EventStats": {
        "externalDocs": {
          "url": ""
        },
        "title": "Alert event statistics data structure",
        "type": "object",
        "properties": {
          "activityAnalysisStats": {
            "$ref": "#/components/schemas/ActivityAnalysisStats"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "resolvedCount": {
            "type": "integer",
            "format": "int64"
          },
          "resolvedPermutationsSamples": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permutation"
            }
          },
          "triggeredCount": {
            "type": "integer",
            "format": "int64"
          },
          "triggeredPermutationsSamples": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permutation"
            }
          }
        }
      },
      "FieldGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "FilterPathAndValues": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/FilterPathAndValuesMultipleValues"
          },
          {
            "$ref": "#/components/schemas/FilterPathAndValuesFilters"
          }
        ]
      },
      "FilterPathAndValuesFilters": {
        "externalDocs": {
          "url": ""
        },
        "title": "FilterPathAndValues",
        "description": "This data structure represents a filter path and values",
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "path": {
            "example": "test",
            "type": "string"
          }
        },
        "required": [
          "path",
          "values"
        ],
        "additionalProperties": false
      },
      "FilterPathAndValuesMultipleValues": {
        "externalDocs": {
          "url": ""
        },
        "title": "FilterPathAndValues",
        "description": "This data structure represents a filter path and values",
        "type": "object",
        "properties": {
          "multipleValues": {
            "$ref": "#/components/schemas/MultipleValues"
          },
          "path": {
            "example": "test",
            "type": "string"
          }
        },
        "required": [
          "path",
          "values"
        ],
        "additionalProperties": false
      },
      "Filters": {
        "externalDocs": {
          "url": ""
        },
        "title": "Filters",
        "description": "This data structure represents a filter",
        "type": "object",
        "properties": {
          "operator": {
            "$ref": "#/components/schemas/v3.FilterOperator"
          },
          "pathAndValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterPathAndValues"
            }
          }
        },
        "required": [
          "pathAndValues"
        ]
      },
      "GetAlertEventResponse": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/GetAlertEventResponseSinglePermutation"
          },
          {
            "$ref": "#/components/schemas/GetAlertEventResponseMultiplePermutation"
          }
        ]
      },
      "GetAlertEventResponseMultiplePermutation": {
        "externalDocs": {
          "url": ""
        },
        "title": "Get alert event response",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "multiplePermutation": {
            "$ref": "#/components/schemas/AlertEventMultiplePermutation"
          },
          "pagination": {
            "$ref": "#/components/schemas/alerts.v3.PaginationResponse"
          }
        },
        "additionalProperties": false
      },
      "GetAlertEventResponseSinglePermutation": {
        "externalDocs": {
          "url": ""
        },
        "title": "Get alert event response",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "pagination": {
            "$ref": "#/components/schemas/alerts.v3.PaginationResponse"
          },
          "singlePermutation": {
            "$ref": "#/components/schemas/AlertEvent"
          }
        },
        "additionalProperties": false
      },
      "GetAlertEventStatsResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "Get alert event statistics response",
        "type": "object",
        "properties": {
          "eventsStats": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/EventStats"
            }
          }
        }
      },
      "MultipleValues": {
        "type": "object",
        "properties": {
          "matcher": {
            "$ref": "#/components/schemas/events.v3.FilterMatcher"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OrderByAlertEventDirection": {
        "type": "string",
        "enum": [
          "ORDER_BY_ALERT_EVENT_DIRECTION_UNSPECIFIED",
          "ORDER_BY_ALERT_EVENT_DIRECTION_ASC",
          "ORDER_BY_ALERT_EVENT_DIRECTION_DESC"
        ]
      },
      "OrderByAlertEventFields": {
        "type": "string",
        "enum": [
          "ORDER_BY_ALERT_EVENT_FIELDS_UNSPECIFIED",
          "ORDER_BY_ALERT_EVENT_FIELDS_TIMESTAMP"
        ]
      },
      "Permutation": {
        "externalDocs": {
          "url": ""
        },
        "title": "Permutation data structure",
        "type": "object",
        "properties": {
          "permutationLabels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "YAxisViewByCategory": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/YAxisViewByCategory"
          }
        },
        "additionalProperties": false
      },
      "YAxisViewByValue": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/YAxisViewByValue"
          }
        },
        "additionalProperties": false
      },
      "alerts.v3.PaginationResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string"
          },
          "totalSize": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "common.Group": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/FieldGroup"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.Group"
            }
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "events.v3.FilterMatcher": {
        "type": "string",
        "enum": [
          "FILTER_MATCHER_TEXT_OR_UNSPECIFIED",
          "FILTER_MATCHER_REGEXP"
        ]
      },
      "v3.FilterOperator": {
        "type": "string",
        "enum": [
          "FILTER_OPERATOR_AND_OR_UNSPECIFIED",
          "FILTER_OPERATOR_OR"
        ]
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key authentication"
      }
    }
  }
}