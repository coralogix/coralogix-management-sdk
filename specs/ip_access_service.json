{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "version": "1.0.0"
  },
  "paths": {
    "/aaa/team-sec-ip-access/v1": {
      "get": {
        "tags": [
          "IP access service"
        ],
        "summary": "Get company IP access settings",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "IpAccessService_GetCompanyIpAccessSettings",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "description": "The ID of the company IP access settings to get. If it's not provided, the id will be derived from the authorization header.",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompanyIpAccessSettingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-sec-ip-access/v1?id=SOME_STRING_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-sec-ip-access/v1\"\n\nquerystring = {\"id\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/aaa/team-sec-ip-access/v1?id=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      },
      "put": {
        "tags": [
          "IP access service"
        ],
        "summary": "Replace company IP access settings",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "IpAccessService_ReplaceCompanyIpAccessSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Replace company IP access settings request",
                "description": "This data structure represents the request to replace company IP access settings.",
                "type": "object",
                "properties": {
                  "enableCoralogixCustomerSupportAccess": {
                    "$ref": "#/components/schemas/CoralogixCustomerSupportAccess"
                  },
                  "id": {
                    "example": 405,
                    "type": "string"
                  },
                  "ipAccess": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IpAccess"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplaceCompanyIpAccessSettingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-sec-ip-access/v1';\n\nlet options = {\n  method: 'PUT',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"enableCoralogixCustomerSupportAccess\":\"CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED\",\"id\":405,\"ipAccess\":[{\"enabled\":true,\"ipRange\":\"192.168.0.1/24\",\"name\":\"Office Network\"}]}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-sec-ip-access/v1\"\n\npayload = {\n    \"enableCoralogixCustomerSupportAccess\": \"CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED\",\n    \"id\": 405,\n    \"ipAccess\": [\n        {\n            \"enabled\": True,\n            \"ipRange\": \"192.168.0.1/24\",\n            \"name\": \"Office Network\"\n        }\n    ]\n}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request PUT \\\n  --url https://api.coralogix.com/mgmt/openapi/aaa/team-sec-ip-access/v1 \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"enableCoralogixCustomerSupportAccess\":\"CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED\",\"id\":405,\"ipAccess\":[{\"enabled\":true,\"ipRange\":\"192.168.0.1/24\",\"name\":\"Office Network\"}]}'"
          }
        ]
      },
      "post": {
        "tags": [
          "IP access service"
        ],
        "summary": "Create company IP access settings",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "IpAccessService_CreateCompanyIpAccessSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Create company IP access settings request",
                "description": "This data structure represents the request to create company IP access settings.",
                "type": "object",
                "properties": {
                  "enableCoralogixCustomerSupportAccess": {
                    "$ref": "#/components/schemas/CoralogixCustomerSupportAccess"
                  },
                  "ipAccess": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IpAccess"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCompanyIpAccessSettingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-sec-ip-access/v1';\n\nlet options = {\n  method: 'POST',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"enableCoralogixCustomerSupportAccess\":\"CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED\",\"ipAccess\":[{\"enabled\":true,\"ipRange\":\"192.168.0.1/24\",\"name\":\"Office Network\"}]}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-sec-ip-access/v1\"\n\npayload = {\n    \"enableCoralogixCustomerSupportAccess\": \"CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED\",\n    \"ipAccess\": [\n        {\n            \"enabled\": True,\n            \"ipRange\": \"192.168.0.1/24\",\n            \"name\": \"Office Network\"\n        }\n    ]\n}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/aaa/team-sec-ip-access/v1 \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"enableCoralogixCustomerSupportAccess\":\"CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED\",\"ipAccess\":[{\"enabled\":true,\"ipRange\":\"192.168.0.1/24\",\"name\":\"Office Network\"}]}'"
          }
        ]
      },
      "delete": {
        "tags": [
          "IP access service"
        ],
        "summary": "Delete company IP access settings",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "IpAccessService_DeleteCompanyIpAccessSettings",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "example": 405,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCompanyIpAccessSettingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {}
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/aaa/team-sec-ip-access/v1?id=405';\n\nlet options = {method: 'DELETE', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/aaa/team-sec-ip-access/v1\"\n\nquerystring = {\"id\":\"405\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request DELETE \\\n  --url 'https://api.coralogix.com/mgmt/openapi/aaa/team-sec-ip-access/v1?id=405' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ColorsByAggregation": {
        "type": "object",
        "properties": {
          "aggregation": {
            "$ref": "#/components/schemas/ColorsByAggregation"
          }
        },
        "additionalProperties": false
      },
      "ColorsByGroupBy": {
        "type": "object",
        "properties": {
          "groupBy": {
            "$ref": "#/components/schemas/ColorsByGroupBy"
          }
        },
        "additionalProperties": false
      },
      "ColorsByStack": {
        "type": "object",
        "properties": {
          "stack": {
            "$ref": "#/components/schemas/ColorsByStack"
          }
        },
        "additionalProperties": false
      },
      "CompanyIpAccessSettings": {
        "externalDocs": {
          "url": ""
        },
        "title": "Company IP access settings",
        "description": "This data structure represents the IP access settings for a company.",
        "type": "object",
        "properties": {
          "enableCoralogixCustomerSupportAccess": {
            "$ref": "#/components/schemas/CoralogixCustomerSupportAccess"
          },
          "id": {
            "example": 405,
            "description": "The unique identifier for the company IP access settings. This is typically a company ID.",
            "type": "string"
          },
          "ipAccess": {
            "example": 405,
            "description": "The list of IP access entries.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IpAccess"
            }
          }
        }
      },
      "CoralogixCustomerSupportAccess": {
        "type": "string",
        "enum": [
          "CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED",
          "CORALOGIX_CUSTOMER_SUPPORT_ACCESS_DISABLED",
          "CORALOGIX_CUSTOMER_SUPPORT_ACCESS_ENABLED"
        ]
      },
      "CreateCompanyIpAccessSettingsResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "Create company IP access settings response",
        "description": "This data structure represents the response to create company IP access settings.",
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/CompanyIpAccessSettings"
          }
        }
      },
      "DeleteCompanyIpAccessSettingsResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "Delete company IP access settings response",
        "description": "This data structure represents the response to delete company IP access settings.",
        "type": "object"
      },
      "FieldGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "FilterPathAndValues": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/FilterPathAndValuesMultipleValues"
          },
          {
            "$ref": "#/components/schemas/FilterPathAndValuesFilters"
          }
        ]
      },
      "FilterPathAndValuesFilters": {
        "externalDocs": {
          "url": ""
        },
        "title": "FilterPathAndValues",
        "description": "This data structure represents a filter path and values",
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "path": {
            "example": "test",
            "type": "string"
          }
        },
        "required": [
          "path",
          "values"
        ],
        "additionalProperties": false
      },
      "FilterPathAndValuesMultipleValues": {
        "externalDocs": {
          "url": ""
        },
        "title": "FilterPathAndValues",
        "description": "This data structure represents a filter path and values",
        "type": "object",
        "properties": {
          "multipleValues": {
            "$ref": "#/components/schemas/MultipleValues"
          },
          "path": {
            "example": "test",
            "type": "string"
          }
        },
        "required": [
          "path",
          "values"
        ],
        "additionalProperties": false
      },
      "Filters": {
        "externalDocs": {
          "url": ""
        },
        "title": "Filters",
        "description": "This data structure represents a filter",
        "type": "object",
        "properties": {
          "operator": {
            "$ref": "#/components/schemas/v3.FilterOperator"
          },
          "pathAndValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterPathAndValues"
            }
          }
        },
        "required": [
          "pathAndValues"
        ]
      },
      "GetCompanyIpAccessSettingsResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "Get company IP access settings response",
        "description": "This data structure represents the response to get company IP access settings.",
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/CompanyIpAccessSettings"
          }
        }
      },
      "IpAccess": {
        "externalDocs": {
          "description": "Find out more about IP access control in our documentation",
          "url": "https://coralogix.com/docs/user-guides/account-management/account-settings/ip-access-control/"
        },
        "title": "IP Access",
        "description": "Represents a single IP access entry.",
        "type": "object",
        "properties": {
          "enabled": {
            "example": true,
            "description": "Whether this IP access entry is enabled.",
            "type": "boolean"
          },
          "ipRange": {
            "example": "192.168.0.1/24",
            "description": "The IP range in CIDR notation.",
            "type": "string"
          },
          "name": {
            "example": "Office Network",
            "description": "The name of the IP access entry.",
            "type": "string"
          }
        },
        "required": [
          "ipRange",
          "enabled"
        ]
      },
      "MultipleValues": {
        "type": "object",
        "properties": {
          "matcher": {
            "$ref": "#/components/schemas/events.v3.FilterMatcher"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ReplaceCompanyIpAccessSettingsResponse": {
        "externalDocs": {
          "url": ""
        },
        "title": "Replace company IP access settings response",
        "description": "This data structure represents the response to replace company IP access settings.",
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/CompanyIpAccessSettings"
          }
        }
      },
      "common.Group": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/FieldGroup"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.Group"
            }
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "events.v3.FilterMatcher": {
        "type": "string",
        "enum": [
          "FILTER_MATCHER_TEXT_OR_UNSPECIFIED",
          "FILTER_MATCHER_REGEXP"
        ]
      },
      "v3.FilterOperator": {
        "type": "string",
        "enum": [
          "FILTER_OPERATOR_AND_OR_UNSPECIFIED",
          "FILTER_OPERATOR_OR"
        ]
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key authentication"
      }
    }
  }
}