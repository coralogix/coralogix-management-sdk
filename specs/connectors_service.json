{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "version": "1.0.0"
  },
  "paths": {
    "/notifications/notification-center/v1/connector": {
      "put": {
        "tags": [
          "Connectors service"
        ],
        "summary": "Replace a Connector",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "ConnectorsService_ReplaceConnector",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Connector",
                "description": "A connector configuration for sending notifications",
                "type": "object",
                "properties": {
                  "configOverrides": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EntityTypeConfigOverrides"
                    }
                  },
                  "connectorConfig": {
                    "$ref": "#/components/schemas/ConnectorConfig"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "example": "Connector for team notifications",
                    "type": "string",
                    "maxLength": 5000
                  },
                  "id": {
                    "example": "a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9",
                    "type": "string"
                  },
                  "name": {
                    "example": "My Slack Connector",
                    "type": "string",
                    "maxLength": 200
                  },
                  "teamId": {
                    "example": "12345",
                    "type": "integer",
                    "format": "int64"
                  },
                  "type": {
                    "$ref": "#/components/schemas/ConnectorType"
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "type",
                  "name",
                  "connectorConfigs"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplaceConnectorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connector';\n\nlet options = {\n  method: 'PUT',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"configOverrides\":[{\"entityType\":\"ENTITY_TYPE_UNSPECIFIED\",\"fields\":[{\"fieldName\":\"string\",\"template\":\"string\"}]}],\"connectorConfig\":{\"fields\":[{\"fieldName\":\"string\",\"value\":\"string\"}]},\"createTime\":\"2019-08-24T14:15:22Z\",\"description\":\"Connector for team notifications\",\"id\":\"a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9\",\"name\":\"My Slack Connector\",\"teamId\":\"12345\",\"type\":\"CONNECTOR_TYPE_UNSPECIFIED\",\"updateTime\":\"2019-08-24T14:15:22Z\"}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connector\"\n\npayload = {\n    \"configOverrides\": [\n        {\n            \"entityType\": \"ENTITY_TYPE_UNSPECIFIED\",\n            \"fields\": [\n                {\n                    \"fieldName\": \"string\",\n                    \"template\": \"string\"\n                }\n            ]\n        }\n    ],\n    \"connectorConfig\": {\"fields\": [\n            {\n                \"fieldName\": \"string\",\n                \"value\": \"string\"\n            }\n        ]},\n    \"createTime\": \"2019-08-24T14:15:22Z\",\n    \"description\": \"Connector for team notifications\",\n    \"id\": \"a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9\",\n    \"name\": \"My Slack Connector\",\n    \"teamId\": \"12345\",\n    \"type\": \"CONNECTOR_TYPE_UNSPECIFIED\",\n    \"updateTime\": \"2019-08-24T14:15:22Z\"\n}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request PUT \\\n  --url https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connector \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"configOverrides\":[{\"entityType\":\"ENTITY_TYPE_UNSPECIFIED\",\"fields\":[{\"fieldName\":\"string\",\"template\":\"string\"}]}],\"connectorConfig\":{\"fields\":[{\"fieldName\":\"string\",\"value\":\"string\"}]},\"createTime\":\"2019-08-24T14:15:22Z\",\"description\":\"Connector for team notifications\",\"id\":\"a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9\",\"name\":\"My Slack Connector\",\"teamId\":\"12345\",\"type\":\"CONNECTOR_TYPE_UNSPECIFIED\",\"updateTime\":\"2019-08-24T14:15:22Z\"}'"
          }
        ]
      }
    },
    "/notifications/notification-center/v1/connectors": {
      "get": {
        "tags": [
          "Connectors service"
        ],
        "summary": "List Connectors",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "ConnectorsService_ListConnectors",
        "parameters": [
          {
            "in": "query",
            "name": "connector_type",
            "schema": {
              "type": "string",
              "enum": [
                "CONNECTOR_TYPE_UNSPECIFIED",
                "SLACK",
                "GENERIC_HTTPS",
                "PAGERDUTY",
                "IBM_EVENT_NOTIFICATIONS"
              ]
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "supported_by_entity_type",
            "schema": {
              "type": "string",
              "enum": [
                "ENTITY_TYPE_UNSPECIFIED",
                "ALERTS",
                "TEST_NOTIFICATIONS",
                "CASES"
              ]
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListConnectorsResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors?connector_type=SOME_STRING_VALUE&supported_by_entity_type=SOME_STRING_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors\"\n\nquerystring = {\"connector_type\":\"SOME_STRING_VALUE\",\"supported_by_entity_type\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors?connector_type=SOME_STRING_VALUE&supported_by_entity_type=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      },
      "post": {
        "tags": [
          "Connectors service"
        ],
        "summary": "Create a Connector",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "ConnectorsService_CreateConnector",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Connector",
                "description": "A connector configuration for sending notifications",
                "type": "object",
                "properties": {
                  "configOverrides": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EntityTypeConfigOverrides"
                    }
                  },
                  "connectorConfig": {
                    "$ref": "#/components/schemas/ConnectorConfig"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "example": "Connector for team notifications",
                    "type": "string",
                    "maxLength": 5000
                  },
                  "id": {
                    "example": "a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9",
                    "type": "string"
                  },
                  "name": {
                    "example": "My Slack Connector",
                    "type": "string",
                    "maxLength": 200
                  },
                  "teamId": {
                    "example": "12345",
                    "type": "integer",
                    "format": "int64"
                  },
                  "type": {
                    "$ref": "#/components/schemas/ConnectorType"
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "type",
                  "name",
                  "connectorConfigs"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateConnectorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors';\n\nlet options = {\n  method: 'POST',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"configOverrides\":[{\"entityType\":\"ENTITY_TYPE_UNSPECIFIED\",\"fields\":[{\"fieldName\":\"string\",\"template\":\"string\"}]}],\"connectorConfig\":{\"fields\":[{\"fieldName\":\"string\",\"value\":\"string\"}]},\"createTime\":\"2019-08-24T14:15:22Z\",\"description\":\"Connector for team notifications\",\"id\":\"a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9\",\"name\":\"My Slack Connector\",\"teamId\":\"12345\",\"type\":\"CONNECTOR_TYPE_UNSPECIFIED\",\"updateTime\":\"2019-08-24T14:15:22Z\"}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors\"\n\npayload = {\n    \"configOverrides\": [\n        {\n            \"entityType\": \"ENTITY_TYPE_UNSPECIFIED\",\n            \"fields\": [\n                {\n                    \"fieldName\": \"string\",\n                    \"template\": \"string\"\n                }\n            ]\n        }\n    ],\n    \"connectorConfig\": {\"fields\": [\n            {\n                \"fieldName\": \"string\",\n                \"value\": \"string\"\n            }\n        ]},\n    \"createTime\": \"2019-08-24T14:15:22Z\",\n    \"description\": \"Connector for team notifications\",\n    \"id\": \"a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9\",\n    \"name\": \"My Slack Connector\",\n    \"teamId\": \"12345\",\n    \"type\": \"CONNECTOR_TYPE_UNSPECIFIED\",\n    \"updateTime\": \"2019-08-24T14:15:22Z\"\n}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"configOverrides\":[{\"entityType\":\"ENTITY_TYPE_UNSPECIFIED\",\"fields\":[{\"fieldName\":\"string\",\"template\":\"string\"}]}],\"connectorConfig\":{\"fields\":[{\"fieldName\":\"string\",\"value\":\"string\"}]},\"createTime\":\"2019-08-24T14:15:22Z\",\"description\":\"Connector for team notifications\",\"id\":\"a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9\",\"name\":\"My Slack Connector\",\"teamId\":\"12345\",\"type\":\"CONNECTOR_TYPE_UNSPECIFIED\",\"updateTime\":\"2019-08-24T14:15:22Z\"}'"
          }
        ]
      }
    },
    "/notifications/notification-center/v1/connectors/{id}": {
      "get": {
        "tags": [
          "Connectors service"
        ],
        "summary": "Get a Connector",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "ConnectorsService_GetConnector",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConnectorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors/%7Bid%7D';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors/%7Bid%7D\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors/%7Bid%7D \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      },
      "delete": {
        "tags": [
          "Connectors service"
        ],
        "summary": "Delete a Connector",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "ConnectorsService_DeleteConnector",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteConnectorResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors/%7Bid%7D';\n\nlet options = {method: 'DELETE', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors/%7Bid%7D\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request DELETE \\\n  --url https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors/%7Bid%7D \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/notifications/notification-center/v1/connectors:batchGet": {
      "get": {
        "tags": [
          "Connectors service"
        ],
        "summary": "Batch Get Connectors",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "ConnectorsService_BatchGetConnectors",
        "parameters": [
          {
            "in": "query",
            "name": "connector_ids",
            "schema": {
              "type": "array",
              "items": {
                "example": [
                  "connector-id-1",
                  "connector-id-2"
                ],
                "type": "string"
              }
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchGetConnectorsResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors:batchGet?connector_ids=SOME_ARRAY_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors:batchGet\"\n\nquerystring = {\"connector_ids\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors:batchGet?connector_ids=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/notifications/notification-center/v1/connectors:batchGetSummaries": {
      "get": {
        "tags": [
          "Connectors service"
        ],
        "summary": "Batch Get Connectors Summaries",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "ConnectorsService_BatchGetConnectorSummaries",
        "parameters": [
          {
            "in": "query",
            "name": "connector_ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchGetConnectorSummariesResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors:batchGetSummaries?connector_ids=SOME_ARRAY_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors:batchGetSummaries\"\n\nquerystring = {\"connector_ids\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors:batchGetSummaries?connector_ids=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/notifications/notification-center/v1/connectors:getTypeSummaries": {
      "get": {
        "tags": [
          "Connectors service"
        ],
        "summary": "Get Connector Type Summaries",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "ConnectorsService_GetConnectorTypeSummaries",
        "parameters": [
          {
            "in": "query",
            "name": "supported_by_entity_type",
            "schema": {
              "type": "string",
              "enum": [
                "ENTITY_TYPE_UNSPECIFIED",
                "ALERTS",
                "TEST_NOTIFICATIONS",
                "CASES"
              ]
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConnectorTypeSummariesResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors:getTypeSummaries?supported_by_entity_type=SOME_STRING_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors:getTypeSummaries\"\n\nquerystring = {\"supported_by_entity_type\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors:getTypeSummaries?supported_by_entity_type=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/notifications/notification-center/v1/connectors:listSummaries": {
      "get": {
        "tags": [
          "Connectors service"
        ],
        "summary": "List Connector Summaries",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "ConnectorsService_ListConnectorSummaries",
        "parameters": [
          {
            "in": "query",
            "name": "connector_type",
            "schema": {
              "type": "string",
              "enum": [
                "CONNECTOR_TYPE_UNSPECIFIED",
                "SLACK",
                "GENERIC_HTTPS",
                "PAGERDUTY",
                "IBM_EVENT_NOTIFICATIONS"
              ]
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "supported_by_entity_type",
            "schema": {
              "type": "string",
              "enum": [
                "ENTITY_TYPE_UNSPECIFIED",
                "ALERTS",
                "TEST_NOTIFICATIONS",
                "CASES"
              ]
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListConnectorSummariesResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors:listSummaries?connector_type=SOME_STRING_VALUE&supported_by_entity_type=SOME_STRING_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors:listSummaries\"\n\nquerystring = {\"connector_type\":\"SOME_STRING_VALUE\",\"supported_by_entity_type\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/connectors:listSummaries?connector_type=SOME_STRING_VALUE&supported_by_entity_type=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BatchGetConnectorSummariesResponse": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Batch Get Connector Summaries Response",
        "description": "Response containing the requested connector summaries and any IDs not found",
        "type": "object",
        "properties": {
          "connectorSummaries": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ConnectorSummary"
            }
          },
          "notFoundIds": {
            "type": "array",
            "items": {
              "example": [
                "connector-id-3"
              ],
              "type": "string"
            }
          }
        }
      },
      "BatchGetConnectorsResponse": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Batch Get Connectors Response",
        "description": "Response containing the requested connectors and any IDs not found",
        "type": "object",
        "properties": {
          "connectors": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Connector"
            }
          },
          "notFoundIds": {
            "type": "array",
            "items": {
              "example": [
                "connector-id-3"
              ],
              "type": "string"
            }
          }
        }
      },
      "ColorsByAggregation": {
        "type": "object",
        "properties": {
          "aggregation": {
            "$ref": "#/components/schemas/ColorsByAggregation"
          }
        },
        "additionalProperties": false
      },
      "ColorsByGroupBy": {
        "type": "object",
        "properties": {
          "groupBy": {
            "$ref": "#/components/schemas/ColorsByGroupBy"
          }
        },
        "additionalProperties": false
      },
      "ColorsByStack": {
        "type": "object",
        "properties": {
          "stack": {
            "$ref": "#/components/schemas/ColorsByStack"
          }
        },
        "additionalProperties": false
      },
      "Connector": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Connector",
        "description": "A connector configuration for sending notifications",
        "type": "object",
        "properties": {
          "configOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityTypeConfigOverrides"
            }
          },
          "connectorConfig": {
            "$ref": "#/components/schemas/ConnectorConfig"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "example": "Connector for team notifications",
            "type": "string",
            "maxLength": 5000
          },
          "id": {
            "example": "a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9",
            "type": "string"
          },
          "name": {
            "example": "My Slack Connector",
            "type": "string",
            "maxLength": 200
          },
          "teamId": {
            "example": "12345",
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/ConnectorType"
          },
          "updateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "type",
          "name",
          "connectorConfigs"
        ]
      },
      "ConnectorConfig": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Connector Config",
        "description": "Configuration for a specific output schema of a connector",
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/notification_center.ConnectorConfigField"
            }
          }
        }
      },
      "ConnectorSummary": {
        "type": "object",
        "properties": {
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/ConnectorType"
          },
          "updateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ConnectorType": {
        "type": "string",
        "enum": [
          "CONNECTOR_TYPE_UNSPECIFIED",
          "SLACK",
          "GENERIC_HTTPS",
          "PAGERDUTY",
          "IBM_EVENT_NOTIFICATIONS"
        ]
      },
      "ConnectorTypeSummary": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Connector Type Summary",
        "description": "Summary information about a connector type",
        "type": "object",
        "properties": {
          "count": {
            "example": "5",
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/ConnectorType"
          }
        }
      },
      "CreateConnectorResponse": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Create Connector Response",
        "description": "Response containing the created connector",
        "type": "object",
        "properties": {
          "connector": {
            "$ref": "#/components/schemas/Connector"
          }
        }
      },
      "DeleteConnectorResponse": {
        "type": "object"
      },
      "EntityTypeConfigOverrides": {
        "type": "object",
        "properties": {
          "entityType": {
            "$ref": "#/components/schemas/notification_center.EntityType"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplatedConnectorConfigField"
            }
          }
        }
      },
      "FieldGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "FilterPathAndValues": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/FilterPathAndValuesMultipleValues"
          },
          {
            "$ref": "#/components/schemas/FilterPathAndValuesFilters"
          }
        ]
      },
      "FilterPathAndValuesFilters": {
        "externalDocs": {
          "url": ""
        },
        "title": "FilterPathAndValues",
        "description": "This data structure represents a filter path and values",
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "path": {
            "example": "test",
            "type": "string"
          }
        },
        "required": [
          "path",
          "values"
        ],
        "additionalProperties": false
      },
      "FilterPathAndValuesMultipleValues": {
        "externalDocs": {
          "url": ""
        },
        "title": "FilterPathAndValues",
        "description": "This data structure represents a filter path and values",
        "type": "object",
        "properties": {
          "multipleValues": {
            "$ref": "#/components/schemas/MultipleValues"
          },
          "path": {
            "example": "test",
            "type": "string"
          }
        },
        "required": [
          "path",
          "values"
        ],
        "additionalProperties": false
      },
      "Filters": {
        "externalDocs": {
          "url": ""
        },
        "title": "Filters",
        "description": "This data structure represents a filter",
        "type": "object",
        "properties": {
          "operator": {
            "$ref": "#/components/schemas/v3.FilterOperator"
          },
          "pathAndValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterPathAndValues"
            }
          }
        },
        "required": [
          "pathAndValues"
        ]
      },
      "GetConnectorResponse": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Get Connector Response",
        "description": "Response containing the requested connector",
        "type": "object",
        "properties": {
          "connector": {
            "$ref": "#/components/schemas/Connector"
          }
        }
      },
      "GetConnectorTypeSummariesResponse": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Get Connector Type Summaries Response",
        "description": "Response containing summaries of connector types",
        "type": "object",
        "properties": {
          "connectorTypeSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectorTypeSummary"
            }
          }
        }
      },
      "ListConnectorSummariesResponse": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "List Connector Summaries Response",
        "description": "Response containing summaries of connectors",
        "type": "object",
        "properties": {
          "connectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectorSummary"
            }
          }
        }
      },
      "ListConnectorsResponse": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "List Connectors Response",
        "description": "Response containing a list of connectors",
        "type": "object",
        "properties": {
          "connectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connector"
            }
          }
        }
      },
      "MultipleValues": {
        "type": "object",
        "properties": {
          "matcher": {
            "$ref": "#/components/schemas/events.v3.FilterMatcher"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ReplaceConnectorResponse": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Replace Connector Response",
        "description": "Response containing the updated connector",
        "type": "object",
        "properties": {
          "connector": {
            "$ref": "#/components/schemas/Connector"
          }
        }
      },
      "TemplatedConnectorConfigField": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string"
          },
          "template": {
            "type": "string"
          }
        }
      },
      "YAxisViewByCategory": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/YAxisViewByCategory"
          }
        },
        "additionalProperties": false
      },
      "YAxisViewByValue": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/YAxisViewByValue"
          }
        },
        "additionalProperties": false
      },
      "common.Group": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/FieldGroup"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.Group"
            }
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "events.v3.FilterMatcher": {
        "type": "string",
        "enum": [
          "FILTER_MATCHER_TEXT_OR_UNSPECIFIED",
          "FILTER_MATCHER_REGEXP"
        ]
      },
      "notification_center.ConnectorConfigField": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "notification_center.EntityType": {
        "type": "string",
        "enum": [
          "ENTITY_TYPE_UNSPECIFIED",
          "ALERTS",
          "TEST_NOTIFICATIONS",
          "CASES"
        ]
      },
      "v3.FilterOperator": {
        "type": "string",
        "enum": [
          "FILTER_OPERATOR_AND_OR_UNSPECIFIED",
          "FILTER_OPERATOR_OR"
        ]
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key authentication"
      }
    }
  }
}