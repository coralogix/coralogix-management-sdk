{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "version": "1.0.0"
  },
  "paths": {
    "/notifications/notification-center/v1/presets/custom": {
      "put": {
        "tags": [
          "Presets service"
        ],
        "summary": "Replace Custom Preset",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "PresetsService_ReplaceCustomPreset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Preset",
                "description": "Set of preconfigured templates for notification content rendering",
                "type": "object",
                "properties": {
                  "configOverrides": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ConfigOverrides"
                    }
                  },
                  "connectorType": {
                    "$ref": "#/components/schemas/ConnectorType"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "example": "Custom preset for alerts",
                    "type": "string"
                  },
                  "entityType": {
                    "$ref": "#/components/schemas/notification_center.EntityType"
                  },
                  "id": {
                    "example": "a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9",
                    "type": "string"
                  },
                  "name": {
                    "example": "My Preset",
                    "type": "string"
                  },
                  "parentId": {
                    "example": "preset_system_slack_alerts_basic",
                    "type": "string"
                  },
                  "presetType": {
                    "$ref": "#/components/schemas/PresetType"
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "entityType",
                  "configOverrides",
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplaceCustomPresetResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/custom';\n\nlet options = {\n  method: 'PUT',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"configOverrides\":[{\"conditionType\":{\"matchEntityType\":{}},\"messageConfig\":{\"fields\":[{\"fieldName\":\"title\",\"template\":\"{{alert.status}} {{alertDef.priority}} - {{alertDef.name}}\"}]},\"payloadType\":\"string\"}],\"connectorType\":\"CONNECTOR_TYPE_UNSPECIFIED\",\"createTime\":\"2019-08-24T14:15:22Z\",\"description\":\"Custom preset for alerts\",\"entityType\":\"ENTITY_TYPE_UNSPECIFIED\",\"id\":\"a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9\",\"name\":\"My Preset\",\"parentId\":\"preset_system_slack_alerts_basic\",\"presetType\":\"PRESET_TYPE_UNSPECIFIED\",\"updateTime\":\"2019-08-24T14:15:22Z\"}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/custom\"\n\npayload = {\n    \"configOverrides\": [\n        {\n            \"conditionType\": {\"matchEntityType\": {}},\n            \"messageConfig\": {\"fields\": [\n                    {\n                        \"fieldName\": \"title\",\n                        \"template\": \"{{alert.status}} {{alertDef.priority}} - {{alertDef.name}}\"\n                    }\n                ]},\n            \"payloadType\": \"string\"\n        }\n    ],\n    \"connectorType\": \"CONNECTOR_TYPE_UNSPECIFIED\",\n    \"createTime\": \"2019-08-24T14:15:22Z\",\n    \"description\": \"Custom preset for alerts\",\n    \"entityType\": \"ENTITY_TYPE_UNSPECIFIED\",\n    \"id\": \"a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9\",\n    \"name\": \"My Preset\",\n    \"parentId\": \"preset_system_slack_alerts_basic\",\n    \"presetType\": \"PRESET_TYPE_UNSPECIFIED\",\n    \"updateTime\": \"2019-08-24T14:15:22Z\"\n}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request PUT \\\n  --url https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/custom \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"configOverrides\":[{\"conditionType\":{\"matchEntityType\":{}},\"messageConfig\":{\"fields\":[{\"fieldName\":\"title\",\"template\":\"{{alert.status}} {{alertDef.priority}} - {{alertDef.name}}\"}]},\"payloadType\":\"string\"}],\"connectorType\":\"CONNECTOR_TYPE_UNSPECIFIED\",\"createTime\":\"2019-08-24T14:15:22Z\",\"description\":\"Custom preset for alerts\",\"entityType\":\"ENTITY_TYPE_UNSPECIFIED\",\"id\":\"a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9\",\"name\":\"My Preset\",\"parentId\":\"preset_system_slack_alerts_basic\",\"presetType\":\"PRESET_TYPE_UNSPECIFIED\",\"updateTime\":\"2019-08-24T14:15:22Z\"}'"
          }
        ]
      },
      "post": {
        "tags": [
          "Presets service"
        ],
        "summary": "Create Custom Preset",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "PresetsService_CreateCustomPreset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Preset",
                "description": "Set of preconfigured templates for notification content rendering",
                "type": "object",
                "properties": {
                  "configOverrides": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ConfigOverrides"
                    }
                  },
                  "connectorType": {
                    "$ref": "#/components/schemas/ConnectorType"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "example": "Custom preset for alerts",
                    "type": "string"
                  },
                  "entityType": {
                    "$ref": "#/components/schemas/notification_center.EntityType"
                  },
                  "id": {
                    "example": "a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9",
                    "type": "string"
                  },
                  "name": {
                    "example": "My Preset",
                    "type": "string"
                  },
                  "parentId": {
                    "example": "preset_system_slack_alerts_basic",
                    "type": "string"
                  },
                  "presetType": {
                    "$ref": "#/components/schemas/PresetType"
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "entityType",
                  "configOverrides",
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCustomPresetResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/custom';\n\nlet options = {\n  method: 'POST',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"configOverrides\":[{\"conditionType\":{\"matchEntityType\":{}},\"messageConfig\":{\"fields\":[{\"fieldName\":\"title\",\"template\":\"{{alert.status}} {{alertDef.priority}} - {{alertDef.name}}\"}]},\"payloadType\":\"string\"}],\"connectorType\":\"CONNECTOR_TYPE_UNSPECIFIED\",\"createTime\":\"2019-08-24T14:15:22Z\",\"description\":\"Custom preset for alerts\",\"entityType\":\"ENTITY_TYPE_UNSPECIFIED\",\"id\":\"a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9\",\"name\":\"My Preset\",\"parentId\":\"preset_system_slack_alerts_basic\",\"presetType\":\"PRESET_TYPE_UNSPECIFIED\",\"updateTime\":\"2019-08-24T14:15:22Z\"}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/custom\"\n\npayload = {\n    \"configOverrides\": [\n        {\n            \"conditionType\": {\"matchEntityType\": {}},\n            \"messageConfig\": {\"fields\": [\n                    {\n                        \"fieldName\": \"title\",\n                        \"template\": \"{{alert.status}} {{alertDef.priority}} - {{alertDef.name}}\"\n                    }\n                ]},\n            \"payloadType\": \"string\"\n        }\n    ],\n    \"connectorType\": \"CONNECTOR_TYPE_UNSPECIFIED\",\n    \"createTime\": \"2019-08-24T14:15:22Z\",\n    \"description\": \"Custom preset for alerts\",\n    \"entityType\": \"ENTITY_TYPE_UNSPECIFIED\",\n    \"id\": \"a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9\",\n    \"name\": \"My Preset\",\n    \"parentId\": \"preset_system_slack_alerts_basic\",\n    \"presetType\": \"PRESET_TYPE_UNSPECIFIED\",\n    \"updateTime\": \"2019-08-24T14:15:22Z\"\n}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/custom \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"configOverrides\":[{\"conditionType\":{\"matchEntityType\":{}},\"messageConfig\":{\"fields\":[{\"fieldName\":\"title\",\"template\":\"{{alert.status}} {{alertDef.priority}} - {{alertDef.name}}\"}]},\"payloadType\":\"string\"}],\"connectorType\":\"CONNECTOR_TYPE_UNSPECIFIED\",\"createTime\":\"2019-08-24T14:15:22Z\",\"description\":\"Custom preset for alerts\",\"entityType\":\"ENTITY_TYPE_UNSPECIFIED\",\"id\":\"a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9\",\"name\":\"My Preset\",\"parentId\":\"preset_system_slack_alerts_basic\",\"presetType\":\"PRESET_TYPE_UNSPECIFIED\",\"updateTime\":\"2019-08-24T14:15:22Z\"}'"
          }
        ]
      }
    },
    "/notifications/notification-center/v1/presets/custom/{id}": {
      "delete": {
        "tags": [
          "Presets service"
        ],
        "summary": "Delete Custom Preset",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "PresetsService_DeleteCustomPreset",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCustomPresetResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/custom/%7Bid%7D';\n\nlet options = {method: 'DELETE', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/custom/%7Bid%7D\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request DELETE \\\n  --url https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/custom/%7Bid%7D \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/notifications/notification-center/v1/presets/custom/{id}:defaultSet": {
      "post": {
        "tags": [
          "Presets service"
        ],
        "summary": "Set Custom Preset As Default",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "PresetsService_SetCustomPresetAsDefault",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetCustomPresetAsDefaultResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/custom/%7Bid%7D:defaultSet';\n\nlet options = {method: 'POST', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/custom/%7Bid%7D:defaultSet\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"POST\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/custom/%7Bid%7D:defaultSet \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/notifications/notification-center/v1/presets/{id}": {
      "get": {
        "tags": [
          "Presets service"
        ],
        "summary": "Get Preset",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "PresetsService_GetPreset",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPresetResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/%7Bid%7D';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/%7Bid%7D\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/%7Bid%7D \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/notifications/notification-center/v1/presets/{id}:defaultSet": {
      "post": {
        "tags": [
          "Presets service"
        ],
        "summary": "Set Preset As Default",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "PresetsService_SetPresetAsDefault",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetPresetAsDefaultResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/%7Bid%7D:defaultSet';\n\nlet options = {method: 'POST', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/%7Bid%7D:defaultSet\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"POST\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets/%7Bid%7D:defaultSet \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/notifications/notification-center/v1/presets:batchGet": {
      "get": {
        "tags": [
          "Presets service"
        ],
        "summary": "Batch Get Presets",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "PresetsService_BatchGetPresets",
        "parameters": [
          {
            "in": "query",
            "name": "preset_ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchGetPresetsResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets:batchGet?preset_ids=SOME_ARRAY_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets:batchGet\"\n\nquerystring = {\"preset_ids\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets:batchGet?preset_ids=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/notifications/notification-center/v1/presets:defaultSummaryGet": {
      "get": {
        "tags": [
          "Presets service"
        ],
        "summary": "Get Default Preset Summary",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "PresetsService_GetDefaultPresetSummary",
        "parameters": [
          {
            "in": "query",
            "name": "connector_type",
            "schema": {
              "type": "string",
              "enum": [
                "CONNECTOR_TYPE_UNSPECIFIED",
                "SLACK",
                "GENERIC_HTTPS",
                "PAGERDUTY",
                "IBM_EVENT_NOTIFICATIONS"
              ]
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "entity_type",
            "schema": {
              "type": "string",
              "enum": [
                "ENTITY_TYPE_UNSPECIFIED",
                "ALERTS",
                "TEST_NOTIFICATIONS",
                "CASES"
              ]
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDefaultPresetSummaryResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets:defaultSummaryGet?connector_type=SOME_STRING_VALUE&entity_type=SOME_STRING_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets:defaultSummaryGet\"\n\nquerystring = {\"connector_type\":\"SOME_STRING_VALUE\",\"entity_type\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets:defaultSummaryGet?connector_type=SOME_STRING_VALUE&entity_type=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/notifications/notification-center/v1/presets:summariesList": {
      "get": {
        "tags": [
          "Presets service"
        ],
        "summary": "List Preset Summaries",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "PresetsService_ListPresetSummaries",
        "parameters": [
          {
            "in": "query",
            "name": "connector_type",
            "schema": {
              "type": "string",
              "enum": [
                "CONNECTOR_TYPE_UNSPECIFIED",
                "SLACK",
                "GENERIC_HTTPS",
                "PAGERDUTY",
                "IBM_EVENT_NOTIFICATIONS"
              ]
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "entity_type",
            "schema": {
              "type": "string",
              "enum": [
                "ENTITY_TYPE_UNSPECIFIED",
                "ALERTS",
                "TEST_NOTIFICATIONS",
                "CASES"
              ]
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPresetSummariesResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets:summariesList?connector_type=SOME_STRING_VALUE&entity_type=SOME_STRING_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets:summariesList\"\n\nquerystring = {\"connector_type\":\"SOME_STRING_VALUE\",\"entity_type\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets:summariesList?connector_type=SOME_STRING_VALUE&entity_type=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/notifications/notification-center/v1/presets:systemDefaultSummaryGet": {
      "get": {
        "tags": [
          "Presets service"
        ],
        "summary": "Get System Default Preset Summary",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "PresetsService_GetSystemDefaultPresetSummary",
        "parameters": [
          {
            "in": "query",
            "name": "connector_type",
            "schema": {
              "type": "string",
              "enum": [
                "CONNECTOR_TYPE_UNSPECIFIED",
                "SLACK",
                "GENERIC_HTTPS",
                "PAGERDUTY",
                "IBM_EVENT_NOTIFICATIONS"
              ]
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "entity_type",
            "schema": {
              "type": "string",
              "enum": [
                "ENTITY_TYPE_UNSPECIFIED",
                "ALERTS",
                "TEST_NOTIFICATIONS",
                "CASES"
              ]
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSystemDefaultPresetSummaryResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets:systemDefaultSummaryGet?connector_type=SOME_STRING_VALUE&entity_type=SOME_STRING_VALUE';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets:systemDefaultSummaryGet\"\n\nquerystring = {\"connector_type\":\"SOME_STRING_VALUE\",\"entity_type\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url 'https://api.coralogix.com/mgmt/openapi/notifications/notification-center/v1/presets:systemDefaultSummaryGet?connector_type=SOME_STRING_VALUE&entity_type=SOME_STRING_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BatchGetPresetsResponse": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Batch Get Presets Response",
        "description": "Response containing the requested presets and any IDs not found",
        "type": "object",
        "properties": {
          "notFoundIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "presets": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Preset"
            }
          }
        }
      },
      "ColorsByAggregation": {
        "type": "object",
        "properties": {
          "aggregation": {
            "$ref": "#/components/schemas/ColorsByAggregation"
          }
        },
        "additionalProperties": false
      },
      "ColorsByGroupBy": {
        "type": "object",
        "properties": {
          "groupBy": {
            "$ref": "#/components/schemas/ColorsByGroupBy"
          }
        },
        "additionalProperties": false
      },
      "ColorsByStack": {
        "type": "object",
        "properties": {
          "stack": {
            "$ref": "#/components/schemas/ColorsByStack"
          }
        },
        "additionalProperties": false
      },
      "ConditionTypeMatchEntityType": {
        "type": "object",
        "properties": {
          "matchEntityType": {
            "$ref": "#/components/schemas/MatchEntityTypeCondition"
          }
        },
        "additionalProperties": false
      },
      "ConditionTypeMatchEntityTypeAndSubType": {
        "type": "object",
        "properties": {
          "matchEntityTypeAndSubType": {
            "$ref": "#/components/schemas/MatchEntityTypeAndSubTypeCondition"
          }
        },
        "additionalProperties": false
      },
      "ConfigOverrides": {
        "type": "object",
        "properties": {
          "conditionType": {
            "$ref": "#/components/schemas/notification_center.ConditionType"
          },
          "messageConfig": {
            "$ref": "#/components/schemas/MessageConfig"
          },
          "payloadType": {
            "type": "string"
          }
        }
      },
      "ConnectorType": {
        "type": "string",
        "enum": [
          "CONNECTOR_TYPE_UNSPECIFIED",
          "SLACK",
          "GENERIC_HTTPS",
          "PAGERDUTY",
          "IBM_EVENT_NOTIFICATIONS"
        ]
      },
      "CreateCustomPresetResponse": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Create Custom Preset Response",
        "description": "Response containing the created custom preset",
        "type": "object",
        "properties": {
          "preset": {
            "$ref": "#/components/schemas/Preset"
          }
        }
      },
      "DeleteCustomPresetResponse": {
        "type": "object"
      },
      "FieldGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "FilterPathAndValues": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/FilterPathAndValuesMultipleValues"
          },
          {
            "$ref": "#/components/schemas/FilterPathAndValuesFilters"
          }
        ]
      },
      "FilterPathAndValuesFilters": {
        "externalDocs": {
          "url": ""
        },
        "title": "FilterPathAndValues",
        "description": "This data structure represents a filter path and values",
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "path": {
            "example": "test",
            "type": "string"
          }
        },
        "required": [
          "path",
          "values"
        ],
        "additionalProperties": false
      },
      "FilterPathAndValuesMultipleValues": {
        "externalDocs": {
          "url": ""
        },
        "title": "FilterPathAndValues",
        "description": "This data structure represents a filter path and values",
        "type": "object",
        "properties": {
          "multipleValues": {
            "$ref": "#/components/schemas/MultipleValues"
          },
          "path": {
            "example": "test",
            "type": "string"
          }
        },
        "required": [
          "path",
          "values"
        ],
        "additionalProperties": false
      },
      "Filters": {
        "externalDocs": {
          "url": ""
        },
        "title": "Filters",
        "description": "This data structure represents a filter",
        "type": "object",
        "properties": {
          "operator": {
            "$ref": "#/components/schemas/v3.FilterOperator"
          },
          "pathAndValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterPathAndValues"
            }
          }
        },
        "required": [
          "pathAndValues"
        ]
      },
      "GetDefaultPresetSummaryResponse": {
        "type": "object",
        "properties": {
          "presetSummary": {
            "$ref": "#/components/schemas/PresetSummary"
          }
        }
      },
      "GetPresetResponse": {
        "type": "object",
        "properties": {
          "preset": {
            "$ref": "#/components/schemas/Preset"
          }
        }
      },
      "GetSystemDefaultPresetSummaryResponse": {
        "type": "object",
        "properties": {
          "presetSummary": {
            "$ref": "#/components/schemas/PresetSummary"
          }
        }
      },
      "ListPresetSummariesResponse": {
        "type": "object",
        "properties": {
          "presetSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PresetSummary"
            }
          }
        }
      },
      "MatchEntityTypeAndSubTypeCondition": {
        "type": "object",
        "properties": {
          "entitySubType": {
            "type": "string"
          }
        }
      },
      "MatchEntityTypeCondition": {
        "type": "object"
      },
      "MessageConfig": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/notification_center.MessageConfigField"
            }
          }
        }
      },
      "MultipleValues": {
        "type": "object",
        "properties": {
          "matcher": {
            "$ref": "#/components/schemas/events.v3.FilterMatcher"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Preset": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Preset",
        "description": "Set of preconfigured templates for notification content rendering",
        "type": "object",
        "properties": {
          "configOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigOverrides"
            }
          },
          "connectorType": {
            "$ref": "#/components/schemas/ConnectorType"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "example": "Custom preset for alerts",
            "type": "string"
          },
          "entityType": {
            "$ref": "#/components/schemas/notification_center.EntityType"
          },
          "id": {
            "example": "a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9",
            "type": "string"
          },
          "name": {
            "example": "My Preset",
            "type": "string"
          },
          "parentId": {
            "example": "preset_system_slack_alerts_basic",
            "type": "string"
          },
          "presetType": {
            "$ref": "#/components/schemas/PresetType"
          },
          "updateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "entityType",
          "configOverrides",
          "name"
        ]
      },
      "PresetSummary": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Preset Summary",
        "description": "Provides a concise overview of a preset",
        "type": "object",
        "properties": {
          "connectorType": {
            "$ref": "#/components/schemas/ConnectorType"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "example": "Custom preset for alerts",
            "type": "string",
            "maxLength": 5000
          },
          "entityType": {
            "$ref": "#/components/schemas/notification_center.EntityType"
          },
          "id": {
            "example": "a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9",
            "type": "string"
          },
          "name": {
            "example": "My Preset",
            "type": "string",
            "maxLength": 200
          },
          "parentId": {
            "example": "c246e826-10c2-405e-8d3f-afcc24ad4d15",
            "type": "string"
          },
          "presetType": {
            "$ref": "#/components/schemas/PresetType"
          },
          "updateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PresetType": {
        "type": "string",
        "enum": [
          "PRESET_TYPE_UNSPECIFIED",
          "SYSTEM",
          "CUSTOM"
        ]
      },
      "ReplaceCustomPresetResponse": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Replace Custom Preset Response",
        "description": "Response containing the updated custom preset",
        "type": "object",
        "properties": {
          "preset": {
            "$ref": "#/components/schemas/Preset"
          }
        }
      },
      "SetCustomPresetAsDefaultResponse": {
        "type": "object"
      },
      "SetPresetAsDefaultResponse": {
        "type": "object"
      },
      "YAxisViewByCategory": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/YAxisViewByCategory"
          }
        },
        "additionalProperties": false
      },
      "YAxisViewByValue": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/YAxisViewByValue"
          }
        },
        "additionalProperties": false
      },
      "common.Group": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/FieldGroup"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.Group"
            }
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "events.v3.FilterMatcher": {
        "type": "string",
        "enum": [
          "FILTER_MATCHER_TEXT_OR_UNSPECIFIED",
          "FILTER_MATCHER_REGEXP"
        ]
      },
      "notification_center.ConditionType": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ConditionTypeMatchEntityType"
          },
          {
            "$ref": "#/components/schemas/ConditionTypeMatchEntityTypeAndSubType"
          }
        ]
      },
      "notification_center.EntityType": {
        "type": "string",
        "enum": [
          "ENTITY_TYPE_UNSPECIFIED",
          "ALERTS",
          "TEST_NOTIFICATIONS",
          "CASES"
        ]
      },
      "notification_center.MessageConfigField": {
        "externalDocs": {
          "description": "Find out more about notification center",
          "url": "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
        },
        "title": "Message Config Field",
        "description": "Message config field provides a way to define a template that can be used to render the notification content",
        "type": "object",
        "properties": {
          "fieldName": {
            "example": "title",
            "type": "string"
          },
          "template": {
            "example": "{{alert.status}} {{alertDef.priority}} - {{alertDef.name}}",
            "type": "string"
          }
        },
        "required": [
          "fieldName",
          "template"
        ]
      },
      "v3.FilterOperator": {
        "type": "string",
        "enum": [
          "FILTER_OPERATOR_AND_OR_UNSPECIFIED",
          "FILTER_OPERATOR_OR"
        ]
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key authentication"
      }
    }
  }
}