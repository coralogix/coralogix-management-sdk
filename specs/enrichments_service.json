{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "version": "1.0.0"
  },
  "paths": {
    "/enrichments": {
      "get": {
        "tags": [
          "Enrichments Service"
        ],
        "summary": "Get Enrichments",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "EnrichmentService_GetEnrichments",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEnrichmentsResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/enrichments';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/enrichments\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url https://api.coralogix.com/mgmt/openapi/enrichments \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      },
      "post": {
        "tags": [
          "Enrichments Service"
        ],
        "summary": "Add Enrichments",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "EnrichmentService_AddEnrichments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Enrichments Creation Request",
                "description": "This response data structure represents a collection of enrichments",
                "type": "object",
                "properties": {
                  "requestEnrichments": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EnrichmentRequestModel"
                    }
                  }
                },
                "required": [
                  "requestEnrichments"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddEnrichmentsResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/enrichments';\n\nlet options = {\n  method: 'POST',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"requestEnrichments\":[{\"enrichedFieldName\":\"string\",\"enrichmentType\":{\"suspiciousIp\":{}},\"fieldName\":\"sourceIPs\",\"selectedColumns\":[\"string\"]}]}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/enrichments\"\n\npayload = {\"requestEnrichments\": [\n        {\n            \"enrichedFieldName\": \"string\",\n            \"enrichmentType\": {\"suspiciousIp\": {}},\n            \"fieldName\": \"sourceIPs\",\n            \"selectedColumns\": [\"string\"]\n        }\n    ]}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request POST \\\n  --url https://api.coralogix.com/mgmt/openapi/enrichments \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"requestEnrichments\":[{\"enrichedFieldName\":\"string\",\"enrichmentType\":{\"suspiciousIp\":{}},\"fieldName\":\"sourceIPs\",\"selectedColumns\":[\"string\"]}]}'"
          }
        ]
      },
      "delete": {
        "tags": [
          "Enrichments Service"
        ],
        "summary": "Delete Enrichments",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "EnrichmentService_RemoveEnrichments",
        "parameters": [
          {
            "in": "query",
            "name": "enrichment_ids",
            "schema": {
              "type": "array",
              "items": {
                "example": [
                  1,
                  2,
                  3
                ],
                "type": "integer",
                "format": "int64"
              }
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveEnrichmentsResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/enrichments?enrichment_ids=SOME_ARRAY_VALUE';\n\nlet options = {method: 'DELETE', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/enrichments\"\n\nquerystring = {\"enrichment_ids\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request DELETE \\\n  --url 'https://api.coralogix.com/mgmt/openapi/enrichments?enrichment_ids=SOME_ARRAY_VALUE' \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/enrichments/limit": {
      "get": {
        "tags": [
          "Enrichments Service"
        ],
        "summary": "Get Enrichment Limit",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "EnrichmentService_GetEnrichmentLimit",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEnrichmentLimitResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/enrichments/limit';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/enrichments/limit\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url https://api.coralogix.com/mgmt/openapi/enrichments/limit \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/enrichments/settings": {
      "get": {
        "tags": [
          "Enrichments Service"
        ],
        "summary": "Get Company Enrichment Settings",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "EnrichmentService_GetCompanyEnrichmentSettings",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompanyEnrichmentSettingsResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/enrichments/settings';\n\nlet options = {method: 'GET', headers: {Authorization: 'Bearer <API_KEY>'}};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/enrichments/settings\"\n\nheaders = {\"Authorization\": \"Bearer <API_KEY>\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request GET \\\n  --url https://api.coralogix.com/mgmt/openapi/enrichments/settings \\\n  --header 'Authorization: Bearer <API_KEY>'"
          }
        ]
      }
    },
    "/enrichments:atomicOverwrite": {
      "patch": {
        "tags": [
          "Enrichments Service"
        ],
        "summary": "Atomic Overwrite Enrichments",
        "description": "No description available",
        "externalDocs": {
          "url": ""
        },
        "operationId": "EnrichmentService_AtomicOverwriteEnrichments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enrichmentFields": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EnrichmentFieldDefinition"
                    }
                  },
                  "enrichmentType": {
                    "$ref": "#/components/schemas/EnrichmentType"
                  },
                  "requestEnrichments": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EnrichmentRequestModel"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomicOverwriteEnrichmentsResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Node",
            "source": "const fetch = require('node-fetch');\n\nlet url = 'https://api.coralogix.com/mgmt/openapi/enrichments:atomicOverwrite';\n\nlet options = {\n  method: 'PATCH',\n  headers: {Authorization: 'Bearer <API_KEY>', 'content-type': 'application/json'},\n  body: '{\"enrichmentFields\":[{\"enrichedFieldName\":\"string\",\"fieldName\":\"string\",\"selectedColumns\":[\"string\"]}],\"enrichmentType\":{\"suspiciousIp\":{}},\"requestEnrichments\":[{\"enrichedFieldName\":\"string\",\"enrichmentType\":{\"suspiciousIp\":{}},\"fieldName\":\"sourceIPs\",\"selectedColumns\":[\"string\"]}]}'\n};\n\nfetch(url, options)\n  .then(res => res.json())\n  .then(json => console.log(json))\n  .catch(err => console.error('error:' + err));"
          },
          {
            "lang": "Python",
            "source": "import requests\n\nurl = \"https://api.coralogix.com/mgmt/openapi/enrichments:atomicOverwrite\"\n\npayload = {\n    \"enrichmentFields\": [\n        {\n            \"enrichedFieldName\": \"string\",\n            \"fieldName\": \"string\",\n            \"selectedColumns\": [\"string\"]\n        }\n    ],\n    \"enrichmentType\": {\"suspiciousIp\": {}},\n    \"requestEnrichments\": [\n        {\n            \"enrichedFieldName\": \"string\",\n            \"enrichmentType\": {\"suspiciousIp\": {}},\n            \"fieldName\": \"sourceIPs\",\n            \"selectedColumns\": [\"string\"]\n        }\n    ]\n}\nheaders = {\n    \"Authorization\": \"Bearer <API_KEY>\",\n    \"content-type\": \"application/json\"\n}\n\nresponse = requests.request(\"PATCH\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell",
            "source": "curl --request PATCH \\\n  --url https://api.coralogix.com/mgmt/openapi/enrichments:atomicOverwrite \\\n  --header 'Authorization: Bearer <API_KEY>' \\\n  --header 'content-type: application/json' \\\n  --data '{\"enrichmentFields\":[{\"enrichedFieldName\":\"string\",\"fieldName\":\"string\",\"selectedColumns\":[\"string\"]}],\"enrichmentType\":{\"suspiciousIp\":{}},\"requestEnrichments\":[{\"enrichedFieldName\":\"string\",\"enrichmentType\":{\"suspiciousIp\":{}},\"fieldName\":\"sourceIPs\",\"selectedColumns\":[\"string\"]}]}'"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AddEnrichmentsResponse": {
        "externalDocs": {
          "description": "Find out more about enrichments",
          "url": "https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/"
        },
        "title": "Encrichments Creation Response",
        "description": "Response data structure for enrichments creation",
        "type": "object",
        "properties": {
          "enrichments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Enrichment"
            }
          }
        },
        "required": [
          "enrichments"
        ]
      },
      "AtomicOverwriteEnrichmentsResponse": {
        "type": "object",
        "properties": {
          "enrichments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Enrichment"
            }
          }
        }
      },
      "AwsType": {
        "type": "object",
        "properties": {
          "resourceType": {
            "example": "ec2",
            "type": "string"
          }
        }
      },
      "ColorsByAggregation": {
        "type": "object",
        "properties": {
          "aggregation": {
            "$ref": "#/components/schemas/ColorsByAggregation"
          }
        },
        "additionalProperties": false
      },
      "ColorsByGroupBy": {
        "type": "object",
        "properties": {
          "groupBy": {
            "$ref": "#/components/schemas/ColorsByGroupBy"
          }
        },
        "additionalProperties": false
      },
      "ColorsByStack": {
        "type": "object",
        "properties": {
          "stack": {
            "$ref": "#/components/schemas/ColorsByStack"
          }
        },
        "additionalProperties": false
      },
      "CompanyEnrichmentSettings": {
        "type": "object",
        "properties": {
          "enrichmentAmountLimit": {
            "type": "integer",
            "format": "int64"
          },
          "enrichmentsInUse": {
            "type": "integer",
            "format": "int64"
          },
          "queryOnlyRowLimit": {
            "type": "integer",
            "format": "int64"
          },
          "queryOnlySizeLimitBytes": {
            "type": "string",
            "format": "int64"
          },
          "rowLimit": {
            "type": "integer",
            "format": "int64"
          },
          "sizeLimitBytes": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "CustomEnrichmentType": {
        "type": "object",
        "properties": {
          "id": {
            "example": 1,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Enrichment": {
        "externalDocs": {
          "description": "Find out more about enrichments",
          "url": "https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/"
        },
        "title": "Enrichment",
        "description": "This data structure represents an enrichment",
        "type": "object",
        "properties": {
          "enrichedFieldName": {
            "example": 1,
            "type": "string"
          },
          "enrichmentType": {
            "$ref": "#/components/schemas/EnrichmentType"
          },
          "fieldName": {
            "example": 1,
            "type": "string"
          },
          "id": {
            "example": 1,
            "type": "integer",
            "format": "int64"
          },
          "selectedColumns": {
            "type": "array",
            "items": {
              "example": [
                "city",
                "population"
              ],
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "fieldName",
          "enrichmentType"
        ]
      },
      "EnrichmentFieldDefinition": {
        "type": "object",
        "properties": {
          "enrichedFieldName": {
            "type": "string"
          },
          "fieldName": {
            "type": "string"
          },
          "selectedColumns": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EnrichmentRequestModel": {
        "externalDocs": {
          "description": "Find out more about enrichments",
          "url": "https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/"
        },
        "title": "Enrichment Prototype",
        "description": "The enrichment request model",
        "type": "object",
        "properties": {
          "enrichedFieldName": {
            "type": "string"
          },
          "enrichmentType": {
            "$ref": "#/components/schemas/EnrichmentType"
          },
          "fieldName": {
            "example": "sourceIPs",
            "type": "string"
          },
          "selectedColumns": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "fieldName",
          "enrichmentType"
        ]
      },
      "EnrichmentType": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EnrichmentTypeSuspiciousIp"
          },
          {
            "$ref": "#/components/schemas/EnrichmentTypeAws"
          },
          {
            "$ref": "#/components/schemas/EnrichmentTypeCustomEnrichment"
          },
          {
            "$ref": "#/components/schemas/EnrichmentTypeGeoIp"
          }
        ]
      },
      "EnrichmentTypeAws": {
        "type": "object",
        "properties": {
          "aws": {
            "$ref": "#/components/schemas/AwsType"
          }
        },
        "additionalProperties": false
      },
      "EnrichmentTypeCustomEnrichment": {
        "type": "object",
        "properties": {
          "customEnrichment": {
            "$ref": "#/components/schemas/CustomEnrichmentType"
          }
        },
        "additionalProperties": false
      },
      "EnrichmentTypeGeoIp": {
        "type": "object",
        "properties": {
          "geoIp": {
            "$ref": "#/components/schemas/GeoIpType"
          }
        },
        "additionalProperties": false
      },
      "EnrichmentTypeSuspiciousIp": {
        "type": "object",
        "properties": {
          "suspiciousIp": {
            "$ref": "#/components/schemas/SuspiciousIpType"
          }
        },
        "additionalProperties": false
      },
      "FieldGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "FilterPathAndValues": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/FilterPathAndValuesMultipleValues"
          },
          {
            "$ref": "#/components/schemas/FilterPathAndValuesFilters"
          }
        ]
      },
      "FilterPathAndValuesFilters": {
        "externalDocs": {
          "url": ""
        },
        "title": "FilterPathAndValues",
        "description": "This data structure represents a filter path and values",
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "path": {
            "example": "test",
            "type": "string"
          }
        },
        "required": [
          "path",
          "values"
        ],
        "additionalProperties": false
      },
      "FilterPathAndValuesMultipleValues": {
        "externalDocs": {
          "url": ""
        },
        "title": "FilterPathAndValues",
        "description": "This data structure represents a filter path and values",
        "type": "object",
        "properties": {
          "multipleValues": {
            "$ref": "#/components/schemas/MultipleValues"
          },
          "path": {
            "example": "test",
            "type": "string"
          }
        },
        "required": [
          "path",
          "values"
        ],
        "additionalProperties": false
      },
      "Filters": {
        "externalDocs": {
          "url": ""
        },
        "title": "Filters",
        "description": "This data structure represents a filter",
        "type": "object",
        "properties": {
          "operator": {
            "$ref": "#/components/schemas/v3.FilterOperator"
          },
          "pathAndValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterPathAndValues"
            }
          }
        },
        "required": [
          "pathAndValues"
        ]
      },
      "GeoIpType": {
        "type": "object",
        "properties": {
          "withAsn": {
            "type": "boolean"
          }
        }
      },
      "GetCompanyEnrichmentSettingsResponse": {
        "type": "object",
        "properties": {
          "enrichmentSettings": {
            "$ref": "#/components/schemas/CompanyEnrichmentSettings"
          }
        }
      },
      "GetEnrichmentLimitResponse": {
        "externalDocs": {
          "description": "Find out more about enrichments",
          "url": "https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/"
        },
        "title": "Enrichment Limit",
        "description": "This response data structure represents the enrichments limit",
        "type": "object",
        "properties": {
          "limit": {
            "example": 10,
            "type": "integer",
            "format": "int64"
          },
          "used": {
            "example": 5,
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "limit",
          "used"
        ]
      },
      "GetEnrichmentsResponse": {
        "externalDocs": {
          "description": "Find out more about enrichments",
          "url": "https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/"
        },
        "title": "Enrichment Collection",
        "description": "This response data structure represents a collection of enrichments",
        "type": "object",
        "properties": {
          "enrichments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Enrichment"
            }
          }
        },
        "required": [
          "enrichments"
        ]
      },
      "MultipleValues": {
        "type": "object",
        "properties": {
          "matcher": {
            "$ref": "#/components/schemas/events.v3.FilterMatcher"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RemoveEnrichmentsResponse": {
        "externalDocs": {
          "description": "Find out more about enrichments",
          "url": "https://coralogix.com/docs/user-guides/data-transformation/enrichments/custom-enrichment/"
        },
        "title": "Encrichments Delettion Response",
        "description": "Response data structure for enrichments deletion",
        "type": "object",
        "properties": {
          "remainingEnrichments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Enrichment"
            }
          }
        },
        "required": [
          "remainingEnrichments"
        ]
      },
      "SuspiciousIpType": {
        "type": "object"
      },
      "common.Group": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/FieldGroup"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.Group"
            }
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "events.v3.FilterMatcher": {
        "type": "string",
        "enum": [
          "FILTER_MATCHER_TEXT_OR_UNSPECIFIED",
          "FILTER_MATCHER_REGEXP"
        ]
      },
      "v3.FilterOperator": {
        "type": "string",
        "enum": [
          "FILTER_OPERATOR_AND_OR_UNSPECIFIED",
          "FILTER_OPERATOR_OR"
        ]
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key authentication"
      }
    }
  }
}