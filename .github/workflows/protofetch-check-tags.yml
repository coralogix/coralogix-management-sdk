name: "[Protofetch] Update Releases to Latest"

# token for buf to annotate the PR
# permissions:
#   contents: read
#   pull-requests: write

env:
  PROTOC_VERSION: "29.3"


on:
  workflow_dispatch:
    inputs:
      prefix_filter:
        description: 'Filter repositories to update by their name prefix'
        required: false
        type: string

  schedule:
      - cron: "0 8 * * 1"

jobs:
  checktags:
    name: "[Protofetch] Update tags to latest"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: bufbuild/buf-setup-action@v1.50.0
      - uses: actions/setup-go@v5
      - uses: arduino/setup-protoc@v3
        with:
          version: ${{env.PROTOC_VERSION}}
      - name: Install dependencies
        run: | 
          go install google.golang.org/protobuf/cmd/protoc-gen-go
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest    
          
          curl -sL https://github.com/coralogix/protofetch/releases/download/v0.1.11/protofetch_x86_64-unknown-linux-musl.tar.gz  | tar xz
          sudo mv bin/protofetch /usr/bin/protofetch
          sudo chmod +x /usr/bin/protofetch
          protofetch --version

      - uses: de-vri-es/setup-git-credentials@v2
        with:
          credentials: https://coralogix-concourse:${{ secrets.GH_TOKEN }}@github.com

      - name: Run protofetch tags updater
        run: |
          git config --global user.email "github@coralogix.com"
          git config --global user.name "Github Actions"

          cargo run --bin protofetch_tags_updater  -- -r ../.. -o ${{ github.repository }} -s -f ${{ inputs.prefix_filter }}

        working-directory: tools/release-management
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_READER_TOKEN: ${{ secrets.GH_READER_TOKEN }}
          RUST_LOG: debug

      - uses: bufbuild/buf-action@v1
        with:
          github_token: ${{ secrets.GH_TOKEN }} 

      - name: Run OpenAPI facade build
        run: | 
          bash tools/build_facade_files.sh