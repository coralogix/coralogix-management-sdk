name: "[Rust & Go SDK] Tag and Publish"

permissions:
  pull-requests: write
  contents: write

on:
  workflow_dispatch:
    
# This leads to too many releases :) 
# on:
#   push:
#     branches: [ master ]
#     paths:
#       - "**.rs"
#       - "**.go"
#       - "**.toml"
#       - "**.proto"

env:
  PROTOC_VERSION: "26.1"

  
jobs:
  rust_build_and_test_linux:
    name: Build and Test (Linux)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust
    steps:
      - uses: actions/checkout@v2

      - uses: arduino/setup-protoc@v3
        with:
          version: ${{env.PROTOC_VERSION}}

      - uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            toolchain: stable
            override: true
            components: rustfmt
      - uses: taiki-e/install-action@nextest
      - name: 'Build and test'
        run: cargo nextest run --workspace --all-features

  rust_build_and_test_windows:
    name: "[Rust SDK] Unit Tests (Windows)"
    runs-on: windows-latest
    defaults:
      run:
        working-directory: rust
    steps:
      - uses: actions/checkout@v4
      - uses: arduino/setup-protoc@v3
        with:
          version: ${{env.PROTOC_VERSION}}
      - uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            toolchain: stable
            override: true
            components: rustfmt
      - uses: taiki-e/install-action@nextest
      - name: 'Build and test'
        run: cargo nextest run --workspace --all-features

  crates_io_publish:
    name: "[Rust & Go SDK] Tag and Publish to crates.io"
    needs:
      - rust_build_and_test_linux
      - rust_build_and_test_windows

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dtolnay/rust-toolchain@stable
      - uses: arduino/setup-protoc@v3
        with:
          version: ${{env.PROTOC_VERSION}}

      - uses: MarcoIeni/release-plz-action@v0.5
        with:
          manifest_path: rust/Cargo.toml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}