syntax = "proto3";
package com.coralogix.archive.kafka_out_targets.v2;

import "com/coralogix/common/v1/audit_log.proto";
import "com/coralogix/archive/kafka_out_targets/v2/kafka_out_target.proto";

service KafkaOutTargetService {
  rpc GetKafkaOutTargets(GetKafkaOutTargetsRequest) returns (GetKafkaOutTargetsResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Get kafka out targets";
  }
  rpc UpsertKafkaOutTarget(UpsertKafkaOutTargetRequest) returns (UpsertKafkaOutTargetResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Upsert kafka out target";
  }
  rpc DeleteKafkaOutTarget(DeleteKafkaOutTargetRequest) returns (DeleteKafkaOutTargetResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Delete kafka out target";
  }
  rpc SendKafkaOutTestMessage(SendKafkaOutTestMessageRequest) returns (SendKafkaOutTestMessageResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Send kafka out test message";
  }
}

message GetKafkaOutTargetsRequest {
}

message GetKafkaOutTargetsResponse {
  repeated Target targets = 1;
}

message UpsertKafkaOutTargetRequest {
  Target target = 1;
}

message UpsertKafkaOutTargetResponse {
  Target target = 1;
}

message DeleteKafkaOutTargetRequest {
  uint32 id = 1;
}

message DeleteKafkaOutTargetResponse {
}

message SendKafkaOutTestMessageRequest {
  Target target = 1;
}

message SendKafkaOutTestMessageResponse {
}
