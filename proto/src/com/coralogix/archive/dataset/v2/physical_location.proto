syntax = "proto3";

package com.coralogix.archive.dataset.v2;

import "com/coralogix/archive/v2/target.proto";
import "com/coralogix/archive/v2/object_tag.proto";
import "com/coralogix/archive/v2/archive_target.proto";
import "com/coralogix/archive/v2/format.proto";
import "com/coralogix/archive/dataset/v2/default_keys.proto";

// IMPORTANT: messages with "Props" suffix mean that it has values generated based on data itself.

message ObjectStoreLocation {
  oneof bucket {
    archive.v2.S3TargetSpec s3 = 1;
    archive.v2.IBMCosTargetSpec ibm_cos = 2;
  };
  string prefix = 3;
  bool enable_tags = 4;
  repeated com.coralogix.archive.v2.ObjectTag tags = 5;
  optional com.coralogix.archive.v2.PartitioningScheme partitioning_scheme = 6;
}

// Publicly known location spec. Customers could use this model in future "set location" API.
message LocationSpec {
  optional string name = 1;
  bool is_active = 2;
  oneof location {
    ObjectStoreLocation object_store_location = 3;
  }
  com.coralogix.archive.v2.Format format = 4;
}

// Internal fields that shouldn't be known outside ingestion pipeline.
// Mostly properties that can be set only for predefined datasets.
message IngestionLocationSpecProps {
  int32 max_compaction_level = 1;
  bool collect_labels = 2;
  repeated string split_by_event_labels = 3;
  optional com.coralogix.archive.v2.PartitioningScheme partitioning_scheme = 4 [deprecated = true];
}

// Specifies where specific dataset data can be found at the location.
message FinalLocation {
  LocationSpec spec = 1;
  // In case of data saved to S3 - base prefix of the dataset inside the bucket, without the dynamic dt/hr part
  optional string final_location_base_prefix = 2;
  // Represents a relation between datasets and its physical location. created by datasets-tracker service
  string id = 3;
}

// Intended for internal use inside ingestion pipeline. Only part that may change after dataset-ingress.
// As of now fully filled out by stage-writer, but if there will be more changes to location properties through the pipeline, they will go here too
message IngestionFinalLocationProps {
  IngestionLocationSpecProps spec = 1;
  optional string filename_prefix = 2;
  repeated com.coralogix.archive.v2.ObjectTag tags = 3;
  optional string final_location_full_prefix = 4; // does not include the dynamic dt/hr part (if there is one), but everything up to it
  repeated FieldPath default_key_fields = 5; // Optional, needed for keyed datasets, like enrichments
  // Collected labels and split by label values for blobsets?
}


// LocationSpec + internal fields needed for ingestion (dataset-ingress)
message IngestionLocationSpec {
  LocationSpec location = 1;
  optional IngestionLocationSpecProps internal = 2;
}

// Goes through the whole ingestion pipeline, and is used externally for metastores
message IngestionFinalLocation {
  FinalLocation location = 1;
  optional IngestionFinalLocationProps internal = 2;
}
