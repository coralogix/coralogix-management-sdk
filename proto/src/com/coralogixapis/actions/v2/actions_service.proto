syntax = "proto3";

package com.coralogixapis.actions.v2;

import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";



option go_package = "com/coralogixapis/actions/v2";

enum SourceType {
  SOURCE_TYPE_UNSPECIFIED = 0;
  SOURCE_TYPE_LOG = 1;
  SOURCE_TYPE_DATA_MAP = 2;
}

message Action {
  google.protobuf.StringValue id = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue url = 3;
  google.protobuf.BoolValue is_hidden = 4;
  google.protobuf.BoolValue is_private = 5;
  SourceType source_type = 6;
  repeated google.protobuf.StringValue application_names = 7;
  repeated google.protobuf.StringValue subsystem_names = 8;
  google.protobuf.StringValue created_by = 9;
}

message CreateActionRequest {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue url = 2;
  google.protobuf.BoolValue is_private = 3;
  SourceType source_type = 4;
  repeated google.protobuf.StringValue application_names = 5;
  repeated google.protobuf.StringValue subsystem_names = 6;
}

message CreateActionResponse {
  Action action = 1;
}

message ReplaceActionRequest {
  Action action = 1;
}

message ReplaceActionResponse {
  Action action = 1;
}

message DeleteActionRequest {
  google.protobuf.StringValue id = 1;
}

message DeleteActionResponse {}

message GetActionRequest {
  google.protobuf.StringValue id = 1;
}

message GetActionResponse {
  Action action = 1;
}

message ListActionsRequest {}

message ListActionsResponse {
  repeated Action actions = 1;
}

message OrderActionsRequest {
  map<string, google.protobuf.UInt32Value> private_actions_order = 1;
  map<string, google.protobuf.UInt32Value> shared_actions_order = 2;
}

message OrderActionsResponse {}

message ActionExecutionRequest {
  oneof request {
    CreateActionRequest create = 1;
    ReplaceActionRequest replace = 2;
    DeleteActionRequest delete = 3;
  }
}

message ActionExecutionResponse {
  oneof response {
    CreateActionResponse create = 1;
    ReplaceActionResponse replace = 2;
    DeleteActionResponse delete = 3;
  }
}

message AtomicBatchExecuteActionsRequest {
  repeated ActionExecutionRequest requests = 1;
}

message AtomicBatchExecuteActionsResponse {
  repeated ActionExecutionResponse matching_responses = 1;
}

service ActionsService {
  rpc CreateAction(CreateActionRequest) returns (CreateActionResponse) {
    option (google.api.http) = {
      post: "/v2/actions"
      body: "*"
    };
  }

  rpc ReplaceAction(ReplaceActionRequest) returns (ReplaceActionResponse) {
    option (google.api.http) = {
      put: "/v2/actions"
      body: "*"
    };
  }

  rpc DeleteAction(DeleteActionRequest) returns (DeleteActionResponse) {
    option (google.api.http) = {
      delete: "/v2/actions/{id}"
    };
  }

  rpc GetAction(GetActionRequest) returns (GetActionResponse) {
    option (google.api.http) = {
      get: "/v2/actions/{id}"
    };
  }

  rpc ListActions(ListActionsRequest) returns (ListActionsResponse) {
    option (google.api.http) = {
      get: "/v2/actions"
    };
  }

  rpc OrderActions(OrderActionsRequest) returns (OrderActionsResponse) {
    option (google.api.http) = {
      post: "/v2/actions/actions:order"
      body: "*"
    };
  }

  rpc AtomicBatchExecuteActions(AtomicBatchExecuteActionsRequest) returns (AtomicBatchExecuteActionsResponse) {
    option (google.api.http) = {
      post: "/v2/actions/actions:atomicBatchExecute"
      body: "*"
    };
  }
}
