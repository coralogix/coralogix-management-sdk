syntax = "proto3";

package com.coralogixapis.aaa.apikeys.v3;
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";



service ApiKeysService {


  rpc CreateApiKey(CreateApiKeyRequest) returns(CreateApiKeyResponse) {
    option (google.api.http) = {
      post: "/v3/api_keys"
      body: "*"
    };
  };
  rpc GetApiKey(GetApiKeyRequest) returns (GetApiKeyResponse) {
    option (google.api.http) = {
      get: "/v3/api_keys/{key_id}"
    };
  };
  rpc GetSendDataApiKeys(GetSendDataApiKeysRequest) returns (GetSendDataApiKeysResponse) {
    option (google.api.http) = {
      get: "/v3/api_keys/send_data"
    };
  };
  rpc DeleteApiKey(DeleteApiKeyRequest) returns (DeleteApiKeyResponse) {
    option (google.api.http) = {
      delete: "/v3/api_keys/{key_id}"
    };
  };
  rpc UpdateApiKey(UpdateApiKeyRequest) returns (UpdateApiKeyResponse) {
    option (google.api.http) = {
      put: "/v3/api_keys/{key_id}"
      body: "*"
    };
  };
}

message Owner{
  oneof owner {
    string user_id = 1;
    uint32 team_id = 2;
    string organisation_id = 3;
  }
}

message KeyInfo {
  message KeyPermissions {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        title: "Key Permissions"
        description: "This data structure represents the permissions on an API key."
        required: [
          "presets",
          "permissions"
        ]
      }
      external_docs: {
        url: "https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/"
        description: "Find out more about api keys"
      }
    };
    repeated PresetInfo presets = 1;
    repeated string permissions = 2;
  }

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Key Info"
      description: "This data structure represents the information associated with an API key."
      required: [
        "id",
        "name",
        "owner",
        "active",
        "hashed",
        "key_permissions"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/"
      description: "Find out more about api keys"
    }
  };

  string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"my_api_key\"" }];
  Owner owner = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"a_user_id\"" }];
  bool active = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "true" }];
  bool hashed = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "true" }];
  KeyPermissions key_permissions = 5;
  optional string value = 6;
  string id = 7;
}

message PresetInfo {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Preset Info"
      description: "This data structure represents a preset set of permissions on an API key."
      required: [
        "name",
        "permissions"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/"
      description: "Find out more about api keys"
    }
  };
  string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"my_preset\"" }];
  repeated string permissions = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "[\"read_logs\"]" }];
}

message UpdateApiKeyRequest{
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Update Api Key Request"
      description: "This data structure is used to update an API key."
      required: [
        "key_id"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/"
      description: "Find out more about api keys"
    }
  };

  message Presets {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        title: "Presets"
        description: "This data structure represents a set of permissions presets on an API key."
        required: [
          "presets"
        ]
      }
      external_docs: {
        url: "https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/"
        description: "Find out more about api keys"
      }
    };
    repeated string presets = 1;
  }

  message Permissions {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        title: "Permissions"
        description: "This data structure represents a set of permissions on an API key."
        required: [
          "permissions"
        ]
      }
      external_docs: {
        url: "https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/"
        description: "Find out more about api keys"
      }
    };
    repeated string permissions = 1;
  }

  string key_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"my_key_id\"" }];
  optional string new_name = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"my_new_name\"" }];
  optional bool is_active = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "true" }];
  optional Presets presets = 4;
  optional Permissions permissions = 5;
}

message UpdateApiKeyResponse{}

message DeleteApiKeyRequest{
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Delete Api Key Request"
      description: "This data structure is used to delete an API key."
      required: [
        "key_id"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/"
      description: "Find out more about api keys"
    }
  };
  string key_id = 1;
}

message DeleteApiKeyResponse{}

message CreateApiKeyRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Create Api Key Request"
      description: "This data structure is used to create an API key."
      required: [
        "name",
        "owner",
        "key_permissions",
        "hashed"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/"
      description: "Find out more about api keys"
    }
  };

  message KeyPermissions {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        title: "Key Permissions"
        description: "This data structure allows to specify loose permissions and permission presets for an API key."
        required: [
          "presets",
          "permissions"
        ]
      }
      external_docs: {
        url: "https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/"
        description: "Find out more about api keys"
      }
    };
    repeated string presets = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "[\"my_preset\"]" }];
    repeated string permissions = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "[\"read_logs\"]" }];
  }

  string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"my_api_key\"" }];
  Owner owner = 2;
  KeyPermissions key_permissions = 3;
  bool hashed = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "true" }];
}

message CreateApiKeyResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Create Api Key Response"
      description: "This data structure is the response obtained when creating an API key."
      required: [
        "key_id",
        "name",
        "value"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/"
      description: "Find out more about api keys"
    }
  };

  string key_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"my_key_id\"" }];
  string name = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"my_api_key\"" }];
  string value = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"my_api_key_value\"" }];
}

message GetApiKeyRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get Api Key Request"
      description: "This data structure is used to retrieve an API key."
      required: [
        "key_id"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/"
      description: "Find out more about api keys"
    }
  };

  string key_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"my_key_id\"" }];
}

message GetApiKeyResponse{
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get Api Key Response"
      description: "This data structure is the response obtained when retrieving an API key."
      required: [
        "key_info"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/"
      description: "Find out more about api keys"
    }
  };

  KeyInfo key_info = 1;
}

message GetSendDataApiKeysRequest {
}

message GetSendDataApiKeysResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get Api Key Response"
      description: "This data structure is the response obtained when retrieving an API key."
      required: [
        "key_info"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/account-management/api-keys/api-keys/"
      description: "Find out more about api keys"
    }
  };
  repeated KeyInfo keys = 1;
}
