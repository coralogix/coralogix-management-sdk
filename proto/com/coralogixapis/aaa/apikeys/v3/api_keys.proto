syntax = "proto3";

package com.coralogixapis.aaa.apikeys.v3;

service ApiKeysService {
  rpc CreateApiKey(CreateApiKeyRequest) returns(CreateApiKeyResponse) {};
  rpc GetApiKey(GetApiKeyRequest) returns (GetApiKeyResponse) {};
  rpc DeleteApiKey(DeleteApiKeyRequest) returns (DeleteApiKeyResponse) {};
  rpc UpdateApiKey(UpdateApiKeyRequest) returns (UpdateApiKeyResponse) {};
}

message Owner{
  oneof owner {
    string user_id = 1;
    uint32 team_id = 2;
    string organisation_id = 3;
  }
}

message KeyInfo {
  message KeyPermissions {
    repeated PresetInfo presets = 1;
    repeated string permissions = 2;
  }

  string name = 1;
  Owner owner = 2;
  bool active = 3;
  bool hashed = 4;
  KeyPermissions key_permissions = 5;
  optional string value = 6;
}

message PresetInfo {
  string name = 1;
  repeated string permissions = 2;
}

message UpdateApiKeyRequest{
  message Presets {
    repeated string presets = 1;
  }

  message Permissions {
    repeated string permissions = 1;
  }

  string key_id = 1;
  optional string new_name = 2;
  optional bool is_active = 3;
  optional Presets presets = 4;
  optional Permissions permissions = 5;
}

message UpdateApiKeyResponse{}

message DeleteApiKeyRequest{
  string key_id = 1;
}

message DeleteApiKeyResponse{}

message CreateApiKeyRequest {
  message KeyPermissions {
    repeated string presets = 1;
    repeated string permissions = 2;
  }
  string name = 1;
  Owner owner = 2;
  KeyPermissions key_permissions = 3;
  bool hashed = 4;
}

message CreateApiKeyResponse {
  string key_id = 1;
  string name = 2;
  string value = 3;
}

message GetApiKeyRequest {
  string key_id = 1;
}

message GetApiKeyResponse{
  KeyInfo key_info = 1;
}
