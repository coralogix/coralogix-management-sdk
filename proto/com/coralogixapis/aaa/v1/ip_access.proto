syntax = "proto3";

package com.coralogixapis.aaa.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// CoralogixCustomerSupportAccess represents the state of Coralogix customer
// support access.
enum CoralogixCustomerSupportAccess {
  // The default value, which is unspecified.
  CORALOGIX_CUSTOMER_SUPPORT_ACCESS_UNSPECIFIED = 0;
  // Customer support access is disabled
  CORALOGIX_CUSTOMER_SUPPORT_ACCESS_DISABLED = 1;
  // Customer support access is enabled
  CORALOGIX_CUSTOMER_SUPPORT_ACCESS_ENABLED = 2;
}

// IpAccessService is the service for managing IP access settings.
service IpAccessService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name : "IP Access Service"
    description : "IpAccessService provides the API for managing company IP "
                  "access settings."
  };

  // RPC for creating company IP access settings.
  rpc CreateCompanyIpAccessSettings(CreateCompanyIpAccessSettingsRequest)
      returns (CreateCompanyIpAccessSettingsResponse) {
    option (google.api.http) = {
      post : "/v1/company/settings/ip-access"
      body : "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses : {
        key : "400"
        value : {description : "Bad Request"}
      }
      responses : {
        key : "401"
        value : {description : "Unauthorized request"}
      }
      responses : {
        key : "500"
        value : {description : "Internal server error"}
      }
      tags : [ "IP Access Service" ]
      summary : "Create Company IP Access Settings"
    };
  }

  // RPC for replacing company IP access settings.
  rpc ReplaceCompanyIpAccessSettings(ReplaceCompanyIpAccessSettingsRequest)
      returns (ReplaceCompanyIpAccessSettingsResponse) {
    option (google.api.http) = {
      put : "/v1/company/settings/ip-access/{id}"
      body : "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses : {
        key : "400"
        value : {description : "Bad Request"}
      }
      responses : {
        key : "401"
        value : {description : "Unauthorized request"}
      }
      responses : {
        key : "500"
        value : {description : "Internal server error"}
      }
      tags : [ "IP Access Service" ]
      summary : "Replace Company IP Access Settings"
    };
  }

  // RPC for getting company IP access settings.
  rpc GetCompanyIpAccessSettings(GetCompanyIpAccessSettingsRequest)
      returns (GetCompanyIpAccessSettingsResponse) {
    option (google.api.http) = {
      get : "/v1/company/settings/ip-access/{id}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses : {
        key : "400"
        value : {description : "Bad Request"}
      }
      responses : {
        key : "401"
        value : {description : "Unauthorized request"}
      }
      responses : {
        key : "500"
        value : {description : "Internal server error"}
      }
      tags : [ "IP Access Service" ]
      summary : "Get Company IP Access Settings"
    };
  }

  // RPC for deleting company IP access settings.
  rpc DeleteCompanyIpAccessSettings(DeleteCompanyIpAccessSettingsRequest)
      returns (DeleteCompanyIpAccessSettingsResponse) {
    option (google.api.http) = {
      delete : "/v1/company/settings/ip-access/{id}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses : {
        key : "400"
        value : {description : "Bad Request"}
      }
      responses : {
        key : "401"
        value : {description : "Unauthorized request"}
      }
      responses : {
        key : "500"
        value : {description : "Internal server error"}
      }
      tags : [ "IP Access Service" ]
      summary : "Delete Company IP Access Settings"
    };
  }
}

// IpAccess represents a single IP access entry.
message IpAccess {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema : {
      title : "IP Access"
      description : "Represents a single IP access entry."
      required : [ "ip_range", "enabled" ]
    }
    external_docs : {
      url : "https://coralogix.com/docs/user-guides/account-management/"
            "account-settings/ip-access-control/"
      description : "Find out more about IP Access"
    }
  };

  // The name of the IP access entry.
  string name = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        example : "\"Office Network\""
      } ];
  // The IP range in CIDR notation.
  string ip_range = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        example : "\"192.168.0.1/24\""
      } ];
  // Whether this IP access entry is enabled.
  bool enabled = 3
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        example : "true"
      } ];
}

// CompanyIpAccessSettings represents the IP access settings for a company.
message CompanyIpAccessSettings {
  // The unique identifier for the company IP access settings.
  // This is typically a company id.
  string id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        example : "405"
      } ];
  // The list of IP access entries.
  map<string, IpAccess> ip_access = 2;
  // Coralogix customer support access setting.
  CoralogixCustomerSupportAccess enable_coralogix_customer_support_access = 3;
}

// CreateCompanyIpAccessSettingsRequest is the request for the
// CreateCompanyIpAccessSettings RPC.
message CreateCompanyIpAccessSettingsRequest {
  repeated IpAccess ip_access = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "List of IP access entries to create."
      } ];
  // Coralogix customer support access setting.
  // Defaults to DISABLED if not provided
  CoralogixCustomerSupportAccess enable_coralogix_customer_support_access = 2;
}

// CreateCompanyIpAccessSettingsResponse is the response for the
// CreateCompanyIpAccessSettings RPC.
message CreateCompanyIpAccessSettingsResponse {
  // The created company IP access settings.
  CompanyIpAccessSettings settings = 1;
}

// ReplaceCompanyIpAccessSettingsRequest is the request for the
// ReplaceCompanyIpAccessSettings RPC.
message ReplaceCompanyIpAccessSettingsRequest {
  optional string id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        example : "405"
      } ];
  repeated IpAccess ip_access = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "List of IP access entries to replace."
      } ];
  // Coralogix customer support access setting.
  // Defaults to DISABLED if not provided
  CoralogixCustomerSupportAccess enable_coralogix_customer_support_access = 3;
}

// ReplaceCompanyIpAccessSettingsResponse is the response for the
// ReplaceCompanyIpAccessSettings RPC.
message ReplaceCompanyIpAccessSettingsResponse {
  // The replaced company IP access settings.
  CompanyIpAccessSettings settings = 1;
}

// GetCompanyIpAccessSettingsRequest is the request for the
// GetCompanyIpAccessSettings RPC.
message GetCompanyIpAccessSettingsRequest {
  // The id of the company IP access settings to get.
  // If it's not provided, the id will be derived from the authorization header
  optional string id = 1;
}

// GetCompanyIpAccessSettingsResponse is the response for the
// GetCompanyIpAccessSettings RPC.
message GetCompanyIpAccessSettingsResponse {
  // The company IP access settings.
  CompanyIpAccessSettings settings = 1;
}

// DeleteCompanyIpAccessSettingsRequest is the request for the
// DeleteCompanyIpAccessSettings RPC.
message DeleteCompanyIpAccessSettingsRequest {
  optional string id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        example : "405"
      } ];
}

// DeleteCompanyIpAccessSettingsResponse is the response for the
// DeleteCompanyIpAccessSettings RPC.
message DeleteCompanyIpAccessSettingsResponse {}
