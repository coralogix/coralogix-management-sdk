syntax = "proto3";

package com.coralogixapis.dashboards.v1.services;

import "com/coralogixapis/common/v1/audit_log.proto";
import "com/coralogixapis/dashboards/v1/common/folder.proto";
import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-openapiv3/options/annotations.proto";

service DashboardFoldersService {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_tag) = {
    name: "Dashboard folders service"
    description: "Manage your dashboard folders."
  };

  rpc ListDashboardFolders(ListDashboardFoldersRequest) returns (ListDashboardFoldersResponse) {
    option (com.coralogixapis.common.v1.audit_log_description).description = "List dashboard folders";
    option (google.api.http) = {
      get: "/dashboards/dashboards/v1/folders"
      additional_bindings: {get: "/v1/dashboards/folders"}
    };
    option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Dashboard folders service"]
      summary: "List dashboard folders"
      description: "List all dashboard folders accessible."
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "team-dashboards:Read"}
          }
        }
      }
    };
  }

  rpc GetDashboardFolder(GetDashboardFolderRequest) returns (GetDashboardFolderResponse) {
    option (com.coralogixapis.common.v1.audit_log_description).description = "Get dashboard folder";
    option (google.api.http) = {
      get: "/dashboards/dashboards/v1/folders/{folder_id}"
      additional_bindings: {get: "/v1/dashboards/folders/{folder_id}"}
    };
    option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Dashboard folders service"]
      summary: "Get a dashboard folder"
      description: "Returns a dashboard folder data."
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "team-dashboards:Read"}
          }
        }
      }
    };
  }

  rpc CreateDashboardFolder(CreateDashboardFolderRequest) returns (CreateDashboardFolderResponse) {
    option (com.coralogixapis.common.v1.audit_log_description).description = "Create dashboard folder";
    option (google.api.http) = {
      post: "/dashboards/dashboards/v1/folders"
      additional_bindings: {post: "/v1/dashboards/folders"}
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Dashboard folders service"]
      summary: "Create a dashboard folder"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "team-dashboards:Update"}
          }
        }
      }
    };
  }

  rpc ReplaceDashboardFolder(ReplaceDashboardFolderRequest) returns (ReplaceDashboardFolderResponse) {
    option (com.coralogixapis.common.v1.audit_log_description).description = "Replace dashboard folder";
    option (google.api.http) = {
      put: "/dashboards/dashboards/v1/folders"
      additional_bindings: {put: "/v1/dashboards/folders"}
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Dashboard folders service"]
      summary: "Replace a dashboard folder"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "team-dashboards:Update"}
          }
        }
      }
    };
  }

  rpc DeleteDashboardFolder(DeleteDashboardFolderRequest) returns (DeleteDashboardFolderResponse) {
    option (com.coralogixapis.common.v1.audit_log_description).description = "Delete dashboard folder";
    option (google.api.http) = {
      delete: "/dashboards/dashboards/v1/folders/{folder_id}"
      additional_bindings: {delete: "/v1/dashboards/folders/{folder_id}"}
    };
    option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Dashboard folders service"]
      summary: "Delete a dashboard folder"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "team-dashboards:Update"}
          }
        }
      }
    };
  }
}

message CreateDashboardFolderRequest {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {title: "Create dashboard folder request data structure"}
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };

  google.protobuf.StringValue request_id = 1;
  common.DashboardFolder folder = 2;
}

message CreateDashboardFolderResponse {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {title: "Create dashboard folder response data structure"}
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };

  google.protobuf.StringValue folder_id = 1;
}

message ReplaceDashboardFolderRequest {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {title: "Replace dashboard folder request data structure"}
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };

  google.protobuf.StringValue request_id = 1;
  common.DashboardFolder folder = 2;
}

message ReplaceDashboardFolderResponse {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {title: "Replace dashboard folder response data structure"}
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };
}

message DeleteDashboardFolderRequest {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {title: "Delete dashboard folder request data structure"}
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };

  google.protobuf.StringValue request_id = 1;
  google.protobuf.StringValue folder_id = 2;
}

message DeleteDashboardFolderResponse {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {title: "Delete dashboard folder response data structure"}
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };
}

message ListDashboardFoldersRequest {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {title: "List dashboard folders request data structure"}
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };
}

message ListDashboardFoldersResponse {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {title: "List dashboard folders response data structure"}
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };

  repeated common.DashboardFolder folder = 1;
}

message GetDashboardFolderRequest {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {title: "Get dashboard folder request data structure"}
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };

  google.protobuf.StringValue request_id = 1;
  google.protobuf.StringValue folder_id = 2;
}

message GetDashboardFolderResponse {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {title: "Get dashboard folder response data structure"}
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };

  common.DashboardFolder folder = 1;
}
