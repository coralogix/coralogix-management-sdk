syntax = "proto3";

package com.coralogixapis.dashboards.v1.services;

import "com/coralogix/common/v1/audit_log.proto";
import "com/coralogixapis/dashboards/v1/ast/dashboard.proto";
import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

service DashboardsService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "Dashboard service"
    description: "Manage your dashboards."
  };

  rpc CreateDashboard(CreateDashboardRequest) returns (CreateDashboardResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Create dashboard";
    option (google.api.http) = {
      post: "/v1/dashboards/dashboards"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Dashboard service"]
      summary: "Create a new dashboard"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "team-dashboards:Update"}
          }
        }
      }
    };
  }

  rpc ReplaceDashboard(ReplaceDashboardRequest) returns (ReplaceDashboardResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Replace dashboard";
    option (google.api.http) = {
      put: "/v1/dashboards/dashboards"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Dashboard service"]
      summary: "Replace a dashboard"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "team-dashboards:Update"}
          }
        }
      }
    };
  }

  rpc DeleteDashboard(DeleteDashboardRequest) returns (DeleteDashboardResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Delete dashboard";
    option (google.api.http) = {delete: "/v1/dashboards/dashboards/{dashboard_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Dashboard service"]
      summary: "Delete a dashboard"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "team-dashboards:Update"}
          }
        }
      }
    };
  }

  rpc GetDashboard(GetDashboardRequest) returns (GetDashboardResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Get dashboard";
    option (google.api.http) = {get: "/v1/dashboards/dashboards/{dashboard_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Dashboard service"]
      summary: "Get a dashboard"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "team-dashboards:Read"}
          }
        }
      }
    };
  }

  rpc PinDashboard(PinDashboardRequest) returns (PinDashboardResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Pin dashboard";
    option (google.api.http) = {
      patch: "/v1/dashboards/dashboards/{dashboard_id}:pin"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Dashboard service"]
      summary: "Add dashboard to favorites"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "team-dashboards:Read"}
          }
        }
      }
    };
  }

  rpc UnpinDashboard(UnpinDashboardRequest) returns (UnpinDashboardResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Unpin dashboard";
    option (google.api.http) = {
      patch: "/v1/dashboards/dashboards/{dashboard_id}:unpin"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Dashboard service"]
      summary: "Remove dashboard from favorites"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "team-dashboards:Read"}
          }
        }
      }
    };
  }

  rpc ReplaceDefaultDashboard(ReplaceDefaultDashboardRequest) returns (ReplaceDefaultDashboardResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Replace default dashboard";
    option (google.api.http) = {
      put: "/v1/dashboards/dashboards/{dashboard_id}/default"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Dashboard service"]
      summary: "Replace the default dashboard"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "team-dashboards:Update"}
          }
        }
      }
    };
  }

  rpc AssignDashboardFolder(AssignDashboardFolderRequest) returns (AssignDashboardFolderResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Assign a dashboard to a folder";
    option (google.api.http) = {
      post: "/v1/dashboards/dashboards/{dashboard_id}/folder"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Dashboard service"]
      summary: "Assign a dashboard to a folder"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "team-dashboards:Update"}
          }
        }
      }
    };
  }
}

message CreateDashboardRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Create dashboard request data structure"
      description: "This is a request used to create a new custom dashboard"
      required: [
        "request_id",
        "dashboard"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };

  google.protobuf.StringValue request_id = 1;
  ast.Dashboard dashboard = 2;
  google.protobuf.BoolValue is_locked = 3;
}

message CreateDashboardResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Create dashboard response data structure"
      description: "This is a response received when a custom dashboard is successfully created"
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };

  google.protobuf.StringValue dashboard_id = 1;
}

message ReplaceDashboardRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Replace dashboard request data structure"
      description: "This is a request sent to update an existing dashboard with new information"
      required: [
        "request_id",
        "dashboard"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };

  google.protobuf.StringValue request_id = 1;
  ast.Dashboard dashboard = 2;
  google.protobuf.BoolValue is_locked = 3;
}

message ReplaceDashboardResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Replace dashboard response data structure"
      description: "This is a response received when the dashboard is successfully updated"
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };
}

message DeleteDashboardRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Delete dashboard request data structure"
      description: "This is a request used to delete a custom dashboard"
      required: [
        "request_id",
        "dashboard_id"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };

  google.protobuf.StringValue request_id = 1;
  google.protobuf.StringValue dashboard_id = 2;
}

message DeleteDashboardResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Delete dashboard response data structure"
      description: "This is a response received when the dashboard is successfully deleted"
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };
}

message GetDashboardRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get dashboard request data structure"
      description: "This is a request to get a specific custom dashboard"
      required: ["dashboard_id"]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more Dashboards in our documentation."
    }
  };

  google.protobuf.StringValue dashboard_id = 1;
}

enum TokenOriginType {
  TOKEN_ORIGIN_TYPE_UNSPECIFIED = 0;
  TOKEN_ORIGIN_TYPE_USER = 1;
  TOKEN_ORIGIN_TYPE_API = 2;
}

message GetDashboardResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get dashboard response data structure"
      description: "This is a response containing the requested dashboard"
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more about Dashboards in our documentation."
    }
  };

  ast.Dashboard dashboard = 1;

  google.protobuf.Timestamp updated_at = 2;
  google.protobuf.Timestamp created_at = 3;

  google.protobuf.StringValue updater_author_id = 4;
  google.protobuf.StringValue updater_name = 8;
  google.protobuf.StringValue author_id = 5;
  google.protobuf.StringValue author_name = 9;

  TokenOriginType updated_origin_type = 6;
  TokenOriginType created_origin_type = 7;

  google.protobuf.BoolValue is_locked = 10;
  google.protobuf.StringValue locker_author_id = 11;
  google.protobuf.StringValue locker_name = 12;
}

message PinDashboardRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Pin dashboard request data structure"
      description: "This is a request used to mark certain dashboard as pinned"
      required: [
        "request_id",
        "dashboard_id"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more about Dashboards in our documentation."
    }
  };

  google.protobuf.StringValue request_id = 1;
  google.protobuf.StringValue dashboard_id = 2;
}

message PinDashboardResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Pin dashboard response data structure"
      description: "This is a response received on successful pinning of the dashboard"
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more about Dashboards in our documentation."
    }
  };
}

message UnpinDashboardRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Unpin dashboard request data structure"
      description: "This is a request used to unpin a certain dashboard"
      required: [
        "request_id",
        "dashboard_id"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more about Dashboards in our documentation."
    }
  };

  google.protobuf.StringValue request_id = 1;
  google.protobuf.StringValue dashboard_id = 2;
}

message UnpinDashboardResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Unpin dashboard response data structure"
      description: "This is a response received when dashboard has been unpinned"
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more about Dashboards in our documentation."
    }
  };
}

message ReplaceDefaultDashboardRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Replace default dashboard request data structure"
      description: "This is a request to replace a default dashboard"
      required: [
        "request_id",
        "dashboard_id"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more about Dashboards in our documentation."
    }
  };

  google.protobuf.StringValue request_id = 1;
  google.protobuf.StringValue dashboard_id = 2;
}

message ReplaceDefaultDashboardResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Replace default dashboard response data structure"
      description: "This is a response received when default dashboard has been replaced"
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more about Dashboards in our documentation."
    }
  };
}

message AssignDashboardFolderRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Assign dashboard to folder request data structure"
      description: "This is a request for assigning a folder to a dashboard"
      required: [
        "request_id",
        "dashboard_id"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more about Dashboards in our documentation."
    }
  };

  google.protobuf.StringValue request_id = 1;
  google.protobuf.StringValue dashboard_id = 2;
  google.protobuf.StringValue folder_id = 3; // could be null to assign the dashboard to root
}

message AssignDashboardFolderResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Assign dashboard to folder response data structure"
      description: "This is a response confirming that folder has been successfully assigned to a dashboard"
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/custom-dashboards/getting-started/"
      description: "Find out more about Dashboards in our documentation."
    }
  };
}
