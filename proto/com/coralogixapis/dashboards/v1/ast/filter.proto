syntax = "proto3";

package com.coralogixapis.dashboards.v1.ast;

import "com/coralogixapis/dashboards/v1/common/observation_field.proto";
import "com/coralogixapis/dashboards/v1/common/span_field.proto";
import "google/protobuf/wrappers.proto";

// Filter represents the configuration for filtering data on the dashboard.
message Filter {
  // Source of the filter, which can be logs, spans, or metrics.
  Source source = 1;

  // Indicates if the filter is currently enabled or not.
  google.protobuf.BoolValue enabled = 2;

  // Indicates if the filter's UI representation should be collapsed or expanded.
  google.protobuf.BoolValue collapsed = 3;

  // Source defines the type of data the filter applies to.
  message Source {
    // Specifies the type of data for the filter.
    oneof value {
      LogsFilter logs = 1; // Filter configuration for logs.
      SpansFilter spans = 2; // Filter configuration for spans.
      MetricsFilter metrics = 3; // Filter configuration for metrics.
    }
  }

  // LogsFilter represents the filter criteria for logs.
  message LogsFilter {
    // Field in the logs to apply the filter on.
    google.protobuf.StringValue field = 1;

    // Operator to use for filtering the logs.
    Operator operator = 2;

    v1.common.ObservationField observation_field = 3;
  }

  // SpansFilter represents the filter criteria for spans.
  message SpansFilter {
    // Field in the spans to apply the filter on.
    common.SpanField field = 1;

    // Operator to use for filtering the spans.
    Operator operator = 2;
  }

  // MetricsFilter represents the filter criteria for metrics.
  message MetricsFilter {
    // Metric name to apply the filter on.
    google.protobuf.StringValue metric = 1;

    // Label associated with the metric.
    google.protobuf.StringValue label = 2;

    // Operator to use for filtering the metrics.
    Operator operator = 3;
  }

  // Operator defines the comparison operation for the filter.
  message Operator {
    // Specifies the type of comparison operation.
    oneof value {
      Equals equals = 1; // Equality comparison.
      NotEquals not_equals = 2; // Non-equality comparison.
    }
  }

  // Equals represents an equality comparison operation.
  message Equals {
    // Selection criteria for the equality comparison.
    Selection selection = 1;

    // Selection defines the values for the equality comparison.
    message Selection {
      // Specifies the type of selection for the equality comparison.
      oneof value {
        AllSelection all = 1; // Represents a selection of all values.
        ListSelection list = 2; // Represents a selection from a list of values.
      }

      // AllSelection indicates that all values are selected.
      message AllSelection {}

      // ListSelection represents a selection from a list of specific values.
      message ListSelection {
        // List of values for the selection.
        repeated google.protobuf.StringValue values = 1;
      }
    }
  }

  // NotEquals represents a non-equality comparison operation.
  message NotEquals {
    // Selection criteria for the non-equality comparison.
    Selection selection = 1;

    // Selection defines the values for the non-equality comparison.
    message Selection {
      // Specifies the type of selection for the non-equality comparison.
      oneof value {
        ListSelection list = 1; // Represents a selection from a list of values.
      }

      // ListSelection represents a selection from a list of specific values.
      message ListSelection {
        // List of values for the selection.
        repeated google.protobuf.StringValue values = 1;
      }
    }
  }
}
