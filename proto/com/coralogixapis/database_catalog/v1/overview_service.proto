syntax = "proto3";

package com.coralogixapis.database_catalog.v1;

import "google/protobuf/wrappers.proto";

import "com/coralogixapis/apm/common/v2/audit_log.proto";
import "com/coralogixapis/apm/common/v2/time_range.proto";
import "com/coralogixapis/apm/widgets/v1/stat.proto";
import "com/coralogixapis/apm/widgets/v1/topk.proto";
import "com/coralogixapis/apm/widgets/v1/line_chart.proto";
import "com/coralogixapis/service_catalog/v1/repeated_widgets.proto";
import "com/coralogixapis/database_catalog/v1/database.proto";
import "com/coralogix/catalog/v1/common.proto";
import "com/coralogixapis/apm_shared/common/apdex.proto";

import "com/coralogix/common/v1/audit_log.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/http.proto";

message GetDatabaseOverviewStreamRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get DB Overview Stream Request"
      description: "This data structure represents a request to Get DB Overview Stream."
      required: [
        "time_range",
        "database_name",
        "database_name_source",
        "database_system",
        "operation"
      ]
    }
    external_docs: {}
  };
  google.protobuf.StringValue database_name = 1;
  google.protobuf.StringValue database_name_source = 2;
  com.coralogixapis.apm.common.v2.TimeRange time_range = 3;
  repeated com.coralogix.catalog.v1.ApmFilter database_catalog_filters = 4;
  repeated google.protobuf.StringValue calling_services = 5;
  google.protobuf.StringValue database_system = 6;
  repeated google.protobuf.StringValue tables = 7;
  google.protobuf.Int64Value trend_offset = 8;
}

message GetDatabaseOverviewStreamResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get DB Overview Stream Response"
      description: "This data structure represents a response to Get DB Overview Stream."
      required: []
    }
    external_docs: {}
  };
  oneof widget {
    com.coralogixapis.apm.widgets.v1.Stat avg_latency = 1;
    com.coralogixapis.apm.widgets.v1.Stat throughput = 2;
    com.coralogixapis.apm.widgets.v1.Stat error_rpm = 3;
    com.coralogixapis.apm.widgets.v1.Stat error_percentage = 4;
    com.coralogixapis.service_catalog.v1.RepeatedLineChart requests_and_errors = 5;
    com.coralogixapis.service_catalog.v1.RepeatedLineChart error_percentage_over_time = 6;
    com.coralogixapis.service_catalog.v1.RepeatedLineChart error_rate = 7;
    com.coralogixapis.service_catalog.v1.RepeatedLineChart latency_percentiles = 8;
    com.coralogixapis.apm.widgets.v1.Stat p50 = 9;
    com.coralogixapis.apm.widgets.v1.Stat p75 = 10;
    com.coralogixapis.apm.widgets.v1.Stat p95 = 11;
    com.coralogixapis.apm.widgets.v1.Stat p99 = 12;
    com.coralogixapis.apm.widgets.v1.Stat request_rate_per_minute = 13 [deprecated = true];
    com.coralogixapis.apm.widgets.v1.Topk time_consuming_queries = 14;
    com.coralogixapis.apm.widgets.v1.LineChart apdex_score = 15;
    com.coralogixapis.apm.widgets.v1.Stat avg_latency_trend = 16;
    com.coralogixapis.apm.widgets.v1.Stat throughput_trend = 17;
    com.coralogixapis.apm.widgets.v1.Stat error_rpm_trend = 18;
    com.coralogixapis.apm.widgets.v1.Stat error_percentage_trend = 19;
    com.coralogixapis.apm.widgets.v1.Stat p50_trend = 20;
    com.coralogixapis.apm.widgets.v1.Stat p75_trend = 21;
    com.coralogixapis.apm.widgets.v1.Stat p95_trend = 22;
    com.coralogixapis.apm.widgets.v1.Stat p99_trend = 23;
    com.coralogixapis.apm.widgets.v1.Stat request_rate_per_minute_trend = 24;
    com.coralogixapis.apm.widgets.v1.Stat avg_latency_with_offset = 25;
    com.coralogixapis.apm.widgets.v1.Stat throughput_with_offset = 26;
    com.coralogixapis.apm.widgets.v1.Stat error_rpm_with_offset = 27;
    com.coralogixapis.apm.widgets.v1.Stat error_percentage_with_offset = 28;
    com.coralogixapis.apm.widgets.v1.Stat p50_with_offset = 29;
    com.coralogixapis.apm.widgets.v1.Stat p75_with_offset = 30;
    com.coralogixapis.apm.widgets.v1.Stat p95_with_offset = 31;
    com.coralogixapis.apm.widgets.v1.Stat p99_with_offset = 32;
    com.coralogixapis.apm.widgets.v1.Stat request_rate_per_minute_with_offset = 33;
    com.coralogixapis.service_catalog.v1.RepeatedLineChart errors_per_seconds = 34;
    com.coralogixapis.service_catalog.v1.RepeatedLineChart time_consuming_queries_overtime = 35;
  }
}

message GetApdexRequest{
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get DB Overview Apdex Request"
      description: "This data structure represents a request to Get DB Overview Apdex."
      required: [
        "time_range",
        "database_name",
        "database_name_source",
        "database_system"
      ]
    }
    external_docs: {}
  };
  google.protobuf.StringValue database_name = 1;
  google.protobuf.StringValue database_name_source = 2;
  com.coralogixapis.apm.common.v2.TimeRange time_range = 3;
  repeated com.coralogix.catalog.v1.ApmFilter database_catalog_filters = 4;
  repeated google.protobuf.StringValue calling_services = 5;
}


service DatabaseOverviewService {
  rpc GetDatabaseOverviewStream(GetDatabaseOverviewStreamRequest)returns(stream GetDatabaseOverviewStreamResponse){
    option (google.api.http) = {
      get: "/v1/db-catalog/overview/graphs",
    };
    option (com.coralogix.common.v1.audit_log_description).description = "Get Database Overview Stream";
  }
  rpc GetApdex(GetApdexRequest)returns(com.coralogixapis.apm.common.v2.GetApdexResponse){
    option (google.api.http) = {
      get: "/v1/db-catalog/overview/apdex",
    };
    option (com.coralogix.common.v1.audit_log_description).description = "Get Apdex";
  }
}