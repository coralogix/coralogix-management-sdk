syntax = "proto3";

package com.coralogixapis.notification_center.notifications.v1;

import "com/coralogixapis/notification_center/common/common.proto";
import "com/coralogixapis/notification_center/common/v1/identifier.proto";
import "com/coralogixapis/notification_center/common/config_overrides.proto";
import "com/coralogixapis/notification_center/common/v1/config_fields.proto";
import "com/coralogixapis/notification_center/notifications/v1/testing.proto";
import "google/protobuf/descriptor.proto";
import "google/api/annotations.proto";

import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "com/coralogixapis/notification_center/notifications/v1";

// Public API for testing Notification Center configurations including connectors, presets, and templates.
service TestingService {
  rpc TestConnectorConfig(TestConnectorConfigRequest) returns (TestConnectorConfigResponse) {
    option (google.api.http) = {
      post: "/v1/notification-center/notifications/testing:testConnectorConfiguration"
      body: "*"
    };
  }

  rpc TestExistingConnector(TestExistingConnectorRequest) returns (TestExistingConnectorResponse) {
    option (google.api.http) = {
      post: "/v1/notification-center/notifications/testing:testExistingConnector"
      body: "*"
    };
  }

  rpc TestPresetConfig(TestPresetConfigRequest) returns (TestPresetConfigResponse) {
    option (google.api.http) = {
      post: "/v1/notification-center/notifications/testing:testPresetConfiguration"
      body: "*"
    };
  }

  rpc TestExistingPreset(TestExistingPresetRequest) returns (TestExistingPresetResponse) {
    option (google.api.http) = {
      post: "/v1/notification-center/notifications/testing:testExistingPreset"
      body: "*"
    };
  }

  rpc TestDestination(TestDestinationRequest) returns (TestDestinationResponse) {
    option (google.api.http) = {
      post: "/v1/notification-center/notifications/testing:testDestination"
      body: "*"
    };
  }

  rpc TestTemplateRender(TestTemplateRenderRequest) returns (TestTemplateRenderResponse) {
    option (google.api.http) = {
      post: "/v1/notification-center/notifications/testing:testTemplateRender"
      body: "*"
    };
  }

  rpc TestRoutingConditionValid(TestRoutingConditionValidRequest) returns (TestRoutingConditionValidResponse) {
    option (google.api.http) = {
      post: "/v1/notification-center/notifications/testing:testRoutingConditionValid"
      body: "*"
    };
  }
}

message TestConnectorConfigRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Test Connector Config Request"
      description: "Request to test a connector configuration"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  ConnectorType type = 1;
  string payload_type = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"default\"" }];
  repeated ConnectorConfigField fields = 3;
  optional string deprecated_entity_type = 4 [deprecated = true];
  optional EntityType entity_type = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"ALERTS\"" }];
}

message TestConnectorConfigResponse {
  TestResult result = 1;
}

message TestExistingConnectorRequest {
  string deprecated_connector_id = 1 [deprecated = true];
  string payload_type = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"default\"" }];
  ConnectorIdentifier connector_identifier = 3 [deprecated = true];
  string connector_id = 4;
}
message TestExistingConnectorResponse {
  TestResult result = 1;
}

message TestPresetConfigRequest {
  string deprecated_entity_type = 1 [deprecated = true];
  optional string entity_sub_type = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"metric\"" }];
  string deprecated_connector_id = 3 [deprecated = true];
  string deprecated_preset_id = 6 [deprecated = true];
  repeated ConfigOverrides config_overrides = 7;
  ConnectorIdentifier connector_identifier = 8 [deprecated = true];
  PresetIdentifier preset_identifier = 9 [deprecated = true];
  EntityType entity_type = 10 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"ALERTS\"" }];
  string connector_id = 11;
  string parent_preset_id = 12;
}
message TestPresetConfigResponse {
  TestResult result = 1;
}

message TestExistingPresetRequest {
  string deprecated_entity_type = 1 [deprecated = true];
  optional string entity_sub_type = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"logsImmediateResolved\"" }];
  string deprecated_preset_id = 3 [deprecated = true];
  string deprecated_connector_id = 4 [deprecated = true];
  ConnectorIdentifier connector_identifier = 5 [deprecated = true];
  PresetIdentifier preset_identifier = 6 [deprecated = true];
  EntityType entity_type = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"ALERTS\"" }];
  string connector_id = 8;
  string preset_id = 9;
}
message TestExistingPresetResponse {
  TestResult result = 1;
}

message TestDestinationRequest {
  reserved 6;
  reserved "deprecated_connector_config_fields";

  string deprecated_entity_type = 1 [deprecated = true];
  optional string entity_sub_type = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"logsImmediateResolved\"" }];
  string deprecated_connector_id = 3 [deprecated = true];
  string deprecated_preset_id = 4 [deprecated = true];
  string payload_type = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"default\"" }];
  repeated MessageConfigField message_config_fields = 7;
  ConnectorIdentifier connector_identifier = 8 [deprecated = true];
  PresetIdentifier preset_identifier = 9 [deprecated = true];
  EntityType entity_type = 10 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"ALERTS\"" }];
  repeated TemplatedConnectorConfigField connector_config_fields = 11;
  string connector_id = 12;
  string preset_id = 13;
}
message TestDestinationResponse {
  TestResult result = 1;
}

message TestTemplateRenderRequest {
  string deprecated_entity_type = 1 [deprecated = true];
  optional string entity_sub_type = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"logsImmediateResolved\"" }];
  string template = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"{{ alertDef.name }}\"" }];
  EntityType entity_type = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"ALERTS\"" }];
}

message TestTemplateRenderResult {
  message Success {
    string rendered_value = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"Rendered template result\"" }];
  }
  message Failure {
    string message = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"Template rendering failed\"" }];
    FailureReason reason = 2;
  }

  enum FailureReason {
    FAILURE_REASON_UNSPECIFIED = 0;
    INVALID_TEMPLATE = 1;
    FIELD_NOT_FOUND = 2;
    TEMPLATE_EXCEEDS_MAX_LENGTH = 3;
    RENDERED_VALUE_EXCEEDS_MAX_LENGTH = 4;
  }

  oneof result {
    Success success = 1;
    Failure failure = 2;
  }
}
message TestTemplateRenderResponse {
  TestTemplateRenderResult result = 1;
}

message TestRoutingConditionValidRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Test Routing Condition Valid Request"
      description: "Request to check that provided routing condition is valid"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  string deprecated_entity_type = 1 [deprecated = true];
  string template = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"alertDef.priority == 'P1'\"" }];
  EntityType entity_type = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"ALERTS\"" }];
}
message TestRoutingConditionValidResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Test Routing Condition Valid Response"
      description: "Response which specifies condition evaluation result or error"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };

  oneof result {
    Success success = 1;
    Failure failure = 2;
  }

  message Success {
    bool result = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "true" }]; 
  }

  message Failure {
    string message = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"Invalid condition: condition should be rendered to a boolean value (true or false)\"" }]; 
  }
}
