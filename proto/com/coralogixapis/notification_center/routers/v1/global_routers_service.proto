syntax = "proto3";

package com.coralogixapis.notification_center.routers.v1;
import "com/coralogixapis/notification_center/common/v1/routing.proto";
import "com/coralogixapis/notification_center/routers/v1/router.proto";
import "google/protobuf/descriptor.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Public API that allows managing global routers
service GlobalRoutersService {
  rpc CreateGlobalRouter(CreateGlobalRouterRequest) returns (CreateGlobalRouterResponse) {
      option (google.api.http) = {
          post: "/v1/notification-center/routers"
          body: "router"
      };
  }

  rpc ReplaceGlobalRouter(ReplaceGlobalRouterRequest) returns (ReplaceGlobalRouterResponse) {}

  rpc CreateOrReplaceGlobalRouter(CreateOrReplaceGlobalRouterRequest) returns (CreateOrReplaceGlobalRouterResponse) {
      option (google.api.http) = {
          put: "/v1/notification-center/routers"
          body: "router"
      };
  }

  rpc DeleteGlobalRouter(DeleteGlobalRouterRequest) returns (DeleteGlobalRouterResponse) {
      option (google.api.http) = {
          delete: "/v1/notification-center/routers/{identifier.user_facing_id}"
      };
  }

  rpc GetGlobalRouter(GetGlobalRouterRequest) returns (GetGlobalRouterResponse) {
      option (google.api.http) = {
          get: "/v1/notification-center/routers/{identifier.user_facing_id}"
      };
  }

  rpc ListGlobalRouters(ListGlobalRoutersRequest) returns (ListGlobalRoutersResponse) {
      option (google.api.http) = {
          get: "/v1/notification-center/routers"
      };
  }

  rpc BatchGetGlobalRouters(BatchGetGlobalRoutersRequest) returns (BatchGetGlobalRoutersResponse) {}
}

message CreateGlobalRouterRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Create Global Router Request"
            description: "Request to create a global router"
            required: []
        }
        external_docs: {
            url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
            description: "Find out more about notification center"
        }
    };
    GlobalRouter router = 1;
}
message CreateGlobalRouterResponse {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Create Global Router Response"
            description: "Response which contains a created global router"
            required: []
        }
        external_docs: {
            url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
            description: "Find out more about notification center"
        }
    };
    GlobalRouter router = 1;
}

message ReplaceGlobalRouterRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Replace Global Router Request"
            description: "Request which updates an existing global router"
            required: []
        }
        external_docs: {
            url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
            description: "Find out more about notification center"
        }
    };
    GlobalRouter router = 1;
}
message ReplaceGlobalRouterResponse {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Replace Global Router Response"
            description: "Response which contains an updated global router"
            required: []
        }
        external_docs: {
            url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
            description: "Find out more about notification center"
        }
    };
    GlobalRouter router = 1;
}

message CreateOrReplaceGlobalRouterRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Create Or Replace Global Router Request"
            description: "Creates or Updates already existing global router"
            required: []
        }
        external_docs: {
            url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
            description: "Find out more about notification center"
        }
    };
    GlobalRouter router = 1;
}
message CreateOrReplaceGlobalRouterResponse {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Create Or Replace Global Router Response"
            description: "Response which contains a created or updated router"
            required: []
        }
        external_docs: {
            url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
            description: "Find out more about notification center"
        }
    };
    GlobalRouter router = 1;
}

message DeleteGlobalRouterRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Delete Global Router Request"
            description: "Deletes a global router with the passed identifier"
            required: []
        }
        external_docs: {
            url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
            description: "Find out more about notification center"
        }
    };
    routing.GlobalRouterIdentifier identifier = 1;
}
message DeleteGlobalRouterResponse {
}

message GetGlobalRouterRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Get Global Router Request"
            description: "Request to retrieve a global router with the passed identifier"
            required: []
        }
        external_docs: {
            url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
            description: "Find out more about notification center"
        }
    };
    routing.GlobalRouterIdentifier identifier = 1;
}
message GetGlobalRouterResponse {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Get Global Router Response"
            description: "Response containing a requested global router"
            required: []
        }
        external_docs: {
            url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
            description: "Find out more about notification center"
        }
    };
    GlobalRouter router = 1;
}

message ListGlobalRoutersRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "List Global Routers Request"
            description: "Request to retrieve global routers by entity type or all"
            required: []
        }
        external_docs: {
            url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
            description: "Find out more about notification center"
        }
    };
    optional string entity_type = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"alerts\"" }];
}
message ListGlobalRoutersResponse {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "List Global Routers Response"
            description: "Response containing requested global routers"
            required: []
        }
        external_docs: {
            url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
            description: "Find out more about notification center"
        }
    };
    repeated GlobalRouter routers = 1;
}

message BatchGetGlobalRoutersRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Batch Get Global Routers Request"
            description: "Get global routers by provided identifiers"
            required: []
        }
        external_docs: {
            url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
            description: "Find out more about notification center"
        }
    };
    repeated routing.GlobalRouterIdentifier ids = 1;
}
message BatchGetGlobalRoutersResponse {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Batch Get Global Routers Response"
            description: "Response containing requested global routers and missing global routers ids"
            required: []
        }
        external_docs: {
            url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
            description: "Find out more about notification center"
        }
    };
    map<string, GlobalRouter> routers = 1;
    repeated string not_found_identifiers = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "[\"global-router-id-3\"]" }];
}
