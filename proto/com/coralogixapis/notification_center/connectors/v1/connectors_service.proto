syntax = "proto3";

package com.coralogixapis.notification_center.connectors.v1;

import "com/coralogixapis/notification_center/common/common.proto";
import "com/coralogixapis/notification_center/connectors/v1/connector.proto";
import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "protoc-gen-openapiv3/options/annotations.proto";

option go_package = "com/coralogixapis/notification_center/connectors/v1";

// Public API that allows managing connectors.
service ConnectorsService {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_tag) = {
    name: "Connectors service"
    description: "View and manage your connectors - integration instances for notification destinations"
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/connectors/introduction/"
      description: "Lean more about connectors in our documentation"
    }
  };

  rpc CreateConnector(CreateConnectorRequest) returns (CreateConnectorResponse) {
    option (google.api.http) = {
      post: "/notifications/notification-center/v1/connectors"
      body: "connector"
      additional_bindings: {post: "/v1/notification-center/connectors"}
    };
    option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_operation) = {
      tags: ["Connectors service"]
      summary: "Create a Connector"
    };
  }

  rpc ReplaceConnector(ReplaceConnectorRequest) returns (ReplaceConnectorResponse) {
    option (google.api.http) = {
      put: "/notifications/notification-center/v1/connector"
      body: "connector"
      additional_bindings: {put: "/v1/notification-center/connector"}
    };
    option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_operation) = {
      tags: ["Connectors service"]
      summary: "Replace a Connector"
    };
  }

  rpc DeleteConnector(DeleteConnectorRequest) returns (DeleteConnectorResponse) {
    option (google.api.http) = {
      delete: "/notifications/notification-center/v1/connectors/{id}"
      additional_bindings: {delete: "/v1/notification-center/connectors/{id}"}
    };

    option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_operation) = {
      tags: ["Connectors service"]
      summary: "Delete a Connector"
    };
  }

  rpc GetConnector(GetConnectorRequest) returns (GetConnectorResponse) {
    option (google.api.http) = {
      get: "/notifications/notification-center/v1/connectors/{id}"
      additional_bindings: {get: "/v1/notification-center/connectors/{id}"}
    };

    option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_operation) = {
      tags: ["Connectors service"]
      summary: "Get a Connector"
    };
  }

  rpc ListConnectors(ListConnectorsRequest) returns (ListConnectorsResponse) {
    option (google.api.http) = {
      get: "/notifications/notification-center/v1/connectors"
      additional_bindings: {get: "/v1/notification-center/connectors"}
    };

    option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_operation) = {
      tags: ["Connectors service"]
      summary: "List Connectors"
    };
  }

  rpc BatchGetConnectors(BatchGetConnectorsRequest) returns (BatchGetConnectorsResponse) {
    option (google.api.http) = {
      get: "/notifications/notification-center/v1/connectors:batchGet"
      additional_bindings: {get: "/v1/notification-center/connectors:batchGet"}
    };

    option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_operation) = {
      tags: ["Connectors service"]
      summary: "Batch Get Connectors"
    };
  }

  rpc BatchGetConnectorSummaries(BatchGetConnectorSummariesRequest) returns (BatchGetConnectorSummariesResponse) {
    option (google.api.http) = {
      get: "/notifications/notification-center/v1/connectors:batchGetSummaries"
      additional_bindings: {get: "/v1/notification-center/connectors:batchGetSummaries"}
    };

    option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_operation) = {
      tags: ["Connectors service"]
      summary: "Batch Get Connectors Summaries"
    };
  }

  rpc ListConnectorSummaries(ListConnectorSummariesRequest) returns (ListConnectorSummariesResponse) {
    option (google.api.http) = {
      get: "/notifications/notification-center/v1/connectors:listSummaries"
      additional_bindings: {get: "/v1/notification-center/connectors:listSummaries"}
    };
    option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_operation) = {
      tags: ["Connectors service"]
      summary: "List Connector Summaries"
    };
  }

  rpc GetConnectorTypeSummaries(GetConnectorTypeSummariesRequest) returns (GetConnectorTypeSummariesResponse) {
    option (google.api.http) = {
      get: "/notifications/notification-center/v1/connectors:getTypeSummaries"
      additional_bindings: {get: "/v1/notification-center/connectors:getTypeSummaries"}
    };

    option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_operation) = {
      tags: ["Connectors service"]
      summary: "Get Connector Type Summaries"
    };
  }
}

message CreateConnectorRequest {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Create Connector Request"
      description: "Request to create a new connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  Connector connector = 1;
}
message CreateConnectorResponse {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Create Connector Response"
      description: "Response containing the created connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  Connector connector = 1;
}

message ReplaceConnectorRequest {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Replace Connector Request"
      description: "Request to replace an existing connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  Connector connector = 1;
}

message ReplaceConnectorResponse {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Replace Connector Response"
      description: "Response containing the updated connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  Connector connector = 1;
}

message DeleteConnectorRequest {
  reserved 1, 2;
  reserved "deprecated_id", "identifier";

  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Delete Connector Request"
      description: "Request to delete a connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  string id = 3;
}

message DeleteConnectorResponse {}

message GetConnectorRequest {
  reserved 1, 2;
  reserved "deprecated_id", "identifier";

  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Get Connector Request"
      description: "Request to retrieve a connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };

  string id = 3;
}

message GetConnectorResponse {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Get Connector Response"
      description: "Response containing the requested connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  Connector connector = 1;
}

message ListConnectorsRequest {
  reserved 2, 3;
  reserved "entity_type";

  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "List Connectors Request"
      description: "Request to list connectors with optional filtering"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  optional ConnectorType connector_type = 1;
  optional EntityType supported_by_entity_type = 4;
}

message ListConnectorsResponse {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "List Connectors Response"
      description: "Response containing a list of connectors"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  repeated Connector connectors = 1;
}

message BatchGetConnectorsRequest {
  reserved 1, 2;
  reserved "deprecated_ids", "ids";

  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Batch Get Connectors Request"
      description: "Request to retrieve multiple connectors by their IDs"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  repeated string connector_ids = 3 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "[\"connector-id-1\", \"connector-id-2\"]"}];
}

message BatchGetConnectorsResponse {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Batch Get Connectors Response"
      description: "Response containing the requested connectors and any IDs not found"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  map<string, Connector> connectors = 1;
  repeated string not_found_ids = 2 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "[\"connector-id-3\"]"}];
}

message BatchGetConnectorSummariesRequest {
  reserved 1, 2;
  reserved "deprecated_ids", "ids";

  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Batch Get Connector Summaries Request"
      description: "Request to retrieve multiple connector summaries by their IDs"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  repeated string connector_ids = 3;
}
message BatchGetConnectorSummariesResponse {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Batch Get Connector Summaries Response"
      description: "Response containing the requested connector summaries and any IDs not found"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  map<string, ConnectorSummary> connector_summaries = 1;
  repeated string not_found_ids = 2 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "[\"connector-id-3\"]"}];
}

message ListConnectorSummariesRequest {
  reserved 2, 3;
  reserved "entity_type";

  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "List Connector Summaries Request"
      description: "Request to list summaries of connectors with optional filtering"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  optional ConnectorType connector_type = 1;
  optional EntityType supported_by_entity_type = 4;
}
message ListConnectorSummariesResponse {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "List Connector Summaries Response"
      description: "Response containing summaries of connectors"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  repeated ConnectorSummary connectors = 1;
}

message GetConnectorTypeSummariesRequest {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Get Connector Type Summaries Request"
      description: "Request to retrieve summaries of connector types"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };

  optional EntityType supported_by_entity_type = 1;
}

message GetConnectorTypeSummariesResponse {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Get Connector Type Summaries Response"
      description: "Response containing summaries of connector types"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  repeated ConnectorTypeSummary connector_type_summaries = 1;
}
