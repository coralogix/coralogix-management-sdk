syntax = "proto3";

package com.coralogixapis.notification_center.connectors.v1;

import "com/coralogixapis/notification_center/common/common.proto";
import "com/coralogixapis/notification_center/connectors/v1/connector.proto";
import "google/protobuf/descriptor.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "com/coralogixapis/notification_center/common/v1/identifier.proto";

option go_package = "com/coralogixapis/notification_center/connectors/v1";

// Public API that allows managing connectors.
service ConnectorsService {
  rpc CreateConnector(CreateConnectorRequest) returns (CreateConnectorResponse) {
    option (google.api.http) = {
      post: "/v1/notification-center/connectors"
      body: "connector"
    };
  }

  rpc ReplaceConnector(ReplaceConnectorRequest) returns (ReplaceConnectorResponse) {
    option (google.api.http) = {
      put: "/v1/notification-center/connector"
      body: "connector"
    };
  }

  rpc DeleteConnector(DeleteConnectorRequest) returns (DeleteConnectorResponse) {
    option (google.api.http) = {
      delete: "/v1/notification-center/connectors/{id}"
    };
  }

  rpc GetConnector(GetConnectorRequest) returns (GetConnectorResponse) {
    option (google.api.http) = {
      get: "/v1/notification-center/connectors/{id}"
    };
  }

  rpc ListConnectors(ListConnectorsRequest) returns (ListConnectorsResponse) {
    option (google.api.http) = {
      get: "/v1/notification-center/connectors"
    };
  }

  rpc BatchGetConnectors(BatchGetConnectorsRequest) returns (BatchGetConnectorsResponse) {
    option (google.api.http) = {
      get: "/v1/notification-center/connectors:batchGet"
    };
  }

  rpc BatchGetConnectorSummaries(BatchGetConnectorSummariesRequest) returns (BatchGetConnectorSummariesResponse) {
    option (google.api.http) = {
      get: "/v1/notification-center/connectors:batchGetSummaries"
    };
  }

  rpc ListConnectorSummaries(ListConnectorSummariesRequest) returns (ListConnectorSummariesResponse) {
    option (google.api.http) = {
      get: "/v1/notification-center/connectors:listSummaries"
    };
  }

  rpc GetConnectorTypeSummaries(GetConnectorTypeSummariesRequest) returns (GetConnectorTypeSummariesResponse) {
    option (google.api.http) = {
      get: "/v1/notification-center/connectors:getTypeSummaries"
    };
  }
}

message CreateConnectorRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Create Connector Request"
      description: "Request to create a new connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  Connector connector = 1;
}
message CreateConnectorResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Create Connector Response"
      description: "Response containing the created connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  Connector connector = 1;
}

message ReplaceConnectorRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Replace Connector Request"
      description: "Request to replace an existing connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  Connector connector = 1;
}

message ReplaceConnectorResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Replace Connector Response"
      description: "Response containing the updated connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  Connector connector = 1;
}

message DeleteConnectorRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Delete Connector Request"
      description: "Request to delete a connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  string deprecated_id = 1 [deprecated = true];
  ConnectorIdentifier identifier = 2 [deprecated = true];
  string id = 3;
}

message DeleteConnectorResponse {
}

message GetConnectorRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get Connector Request"
      description: "Request to retrieve a connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };

  string deprecated_id = 1 [deprecated = true];
  ConnectorIdentifier identifier = 2 [deprecated = true];
  string id = 3;
}

message GetConnectorResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get Connector Response"
      description: "Response containing the requested connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  Connector connector = 1;
}

message ListConnectorsRequest {
  reserved 2, 3;
  reserved "entity_type";
  
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List Connectors Request"
      description: "Request to list connectors with optional filtering"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  ConnectorType connector_type = 1;
}

message ListConnectorsResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List Connectors Response"
      description: "Response containing a list of connectors"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  repeated Connector connectors = 1;
}

message BatchGetConnectorsRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Batch Get Connectors Request"
      description: "Request to retrieve multiple connectors by their IDs"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  repeated string deprecated_ids = 1 [deprecated = true];
  repeated ConnectorIdentifier ids = 2 [deprecated = true, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "[\"connector-id-1\", \"connector-id-2\"]" }];
  repeated string connector_ids = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "[\"connector-id-1\", \"connector-id-2\"]" }];
}

message BatchGetConnectorsResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Batch Get Connectors Response"
      description: "Response containing the requested connectors and any IDs not found"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  map<string, Connector> connectors = 1;
  repeated string not_found_ids = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "[\"connector-id-3\"]" }];
}

message BatchGetConnectorSummariesRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Batch Get Connector Summaries Request"
      description: "Request to retrieve multiple connector summaries by their IDs"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  repeated string deprecated_ids = 1 [deprecated = true];
  repeated ConnectorIdentifier ids = 2 [deprecated = true, (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "[\"connector-id-1\", \"connector-id-2\"]" }];
  repeated string connector_ids = 3;
}
message BatchGetConnectorSummariesResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Batch Get Connector Summaries Response"
      description: "Response containing the requested connector summaries and any IDs not found"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  map<string, ConnectorSummary> connector_summaries = 1;
  repeated string not_found_ids = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "[\"connector-id-3\"]" }];
}

message GetConnectorTypeSummariesRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get Connector Type Summaries Request"
      description: "Request to retrieve summaries of connector types"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
}

message ListConnectorSummariesRequest {
  reserved 2, 3;
  reserved "entity_type";
  
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List Connector Summaries Request"
      description: "Request to list summaries of connectors with optional filtering"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  ConnectorType connector_type = 1;
}
message ListConnectorSummariesResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List Connector Summaries Response"
      description: "Response containing summaries of connectors"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  repeated ConnectorSummary connectors = 1;
}

message GetConnectorTypeSummariesResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get Connector Type Summaries Response"
      description: "Response containing summaries of connector types"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  repeated ConnectorTypeSummary connector_type_summaries = 1;
}
