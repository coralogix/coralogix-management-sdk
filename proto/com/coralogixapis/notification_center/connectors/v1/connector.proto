syntax = "proto3";

package com.coralogixapis.notification_center.connectors.v1;

import "com/coralogixapis/notification_center/common/common.proto";
import "com/coralogixapis/notification_center/common/v1/config_fields.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv3/options/annotations.proto";

option go_package = "com/coralogixapis/notification_center/connectors/v1";

message Connector {
  reserved 2, 9, 10;
  reserved "user_defined_id", "connector_configs", "entity_type";

  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Connector"
      description: "A connector configuration for sending notifications"
      required: [
        "type",
        "name",
        "connector_configs"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  // A unique identifier - automatically generated unless provided by the user
  optional string id = 1 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "\"a16e24c8-4db2-4abf-ba3c-c9e1fc35a3b9\""}];
  ConnectorType type = 3;
  optional uint32 team_id = 4 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "\"12345\""}];
  string name = 5 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {
    example: "\"My Slack Connector\""
    max_length: 200
  }];
  string description = 6 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {
    example: "\"Connector for team notifications\""
    max_length: 5000
  }];
  // System-generated timestamp for when the connector was last updated
  optional google.protobuf.Timestamp create_time = 7;
  // System-generated timestamp for when the connector was last updated
  optional google.protobuf.Timestamp update_time = 8;
  // Configuration override templates for specific entity types, values from connector_configs will be used if not overridden
  repeated EntityTypeConfigOverrides config_overrides = 11;
  ConnectorConfig connector_config = 12;
  Diagnostics diagnostics = 13;
}

message ConnectorInternal {
  string id = 1; // automatically generated unless provided by the user
  string internal_id = 2; // system generated uuid
  ConnectorType type = 3;
  uint32 team_id = 4;
  string name = 5;
  string description = 6;
  // System-generated timestamp for when the connector was last updated
  google.protobuf.Timestamp create_time = 7;
  // System-generated timestamp for when the connector was last updated
  optional google.protobuf.Timestamp update_time = 8;
  // Configuration override templates for specific entity types, values from connector_configs will be used if not overridden
  repeated EntityTypeConfigOverrides config_overrides = 9;
  ConnectorConfig connector_config = 10;
  Diagnostics diagnostics = 11;
}

message EntityTypeConfigOverrides {
  reserved 1, 2;
  reserved "deprecated_entity_type", "connector_configs";

  EntityType entity_type = 3 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "\"ALERTS\""}];
  repeated TemplatedConnectorConfigField fields = 4;
}

message ConnectorSummary {
  // Deprecated with the introduction of Global connectors.
  reserved 2, 9;
  reserved "user_defined_id", "entity_type";

  optional string id = 1;
  ConnectorType type = 3;
  optional uint32 team_id = 4;
  string name = 5;
  string description = 6;
  optional google.protobuf.Timestamp create_time = 7;
  optional google.protobuf.Timestamp update_time = 8;
}

message ConnectorConfig {
  reserved 1;
  reserved "output_schema_id";

  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Connector Config"
      description: "Configuration for a specific output schema of a connector"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  repeated ConnectorConfigField fields = 2;
}

message ConnectorTypeSummary {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Connector Type Summary"
      description: "Summary information about a connector type"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/notification-center/introduction/welcome/"
      description: "Find out more about notification center"
    }
  };
  ConnectorType type = 1;
  uint32 count = 2 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "\"5\""}];
}

message Diagnostics {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Connector Diagnostics"
      description: "Allows to configure rules for data written into 'notification.deliveries' dataset"
      required: []
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/data-layer/datasets/"
      description: "Find out more about datasets"
    }
  };
  Delivery delivery = 1 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {description: "Allows to configure what notification data should be written into a dataset."}];

  enum Delivery {
    DELIVERY_UNSPECIFIED = 0;
    DISABLED = 1;
    ERRORS_ONLY = 2;
  }
}
