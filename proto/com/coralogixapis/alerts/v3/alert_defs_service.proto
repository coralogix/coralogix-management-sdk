syntax = "proto3";

package com.coralogixapis.alerts.v3;

import "google/protobuf/descriptor.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "com/coralogixapis/alerts/v3/alert_def.proto";
import "com/coralogixapis/alerts/v3/alert_def_type.proto";

message AuditLogDescription {
  optional string description = 1;
      }

extend google.protobuf.MethodOptions {
  optional AuditLogDescription audit_log_description = 5000;
  }

service AlertDefsService {
  // Get Alert Def by non changing ID AKA UniqueIdentifier
  rpc GetAlertDef(GetAlertDefRequest) returns (GetAlertDefResponse) {
    option (audit_log_description).description = "get alert definition";
    option (google.api.http) = {
      get: "/v3/alert-defs/{id}"
    };
  }

  rpc CreateAlertDef(CreateAlertDefRequest) returns (CreateAlertDefResponse){
    option (audit_log_description).description = "create alert definition";
    option (google.api.http) = {
      post: "/v3/alert-defs"
      body: "alertDef"
    };
  }

  rpc ReplaceAlertDef(ReplaceAlertDefRequest) returns (ReplaceAlertDefResponse){
    option (audit_log_description).description = "replace alert definition";
    option (google.api.http) = {
      put: "/v3/alert-defs"
      body: "alertDef"
    };
  }

//  rpc BatchGetAlertDef(BatchGetAlertDefRequest) returns (BatchGetAlertDefResponse){
//    option (audit_log_description).description = "batch get alert definitions";
//    option (google.api.http) = {
//      get: "/v3/alertDefs:batchGet"
//    };
//  }

  rpc ListAlertDefs(ListAlertDefsRequest) returns (ListAlertDefsResponse){
    option (audit_log_description).description = "get alert definitions list";
    option (google.api.http) = {
      get: "/v3/alert-defs"
      body: "*"
    };
  }

  rpc DeleteAlertDef(DeleteAlertDefRequest) returns (DeleteAlertDefResponse){
    option (audit_log_description).description = "delete alert definitions";
    option (google.api.http) = {
      delete: "/v3/alert-defs/{id}"
    };
  }

//  rpc AtomicBatchExecuteAlert(AtomicBatchExecuteAlertRequest) returns (AtomicBatchExecuteAlertResponse) {
//    option (audit_log_description).description = "atomic batch execute alert";
//    option (google.api.http) = {
//      post: "/v3/alerts:atomicBatchExecute"
//      body: "*"
//    };
//  }


//  rpc GetLimits(GetLimitsRequest) returns (GetLimitsResponse) {
//    option (audit_log_description).description = "get limits";
//    option (google.api.http) = {
//      get: "/v3/alerts:getLimits"
//    };
//  }
//
//  rpc ValidateAlert(ValidateAlertRequest) returns (ValidateAlertResponse) {
//    option (audit_log_description).description = "validate alert";
//    option (google.api.http) = {
//      post: "/v3/alerts:validate"
//      body: "alert"
//    };
//  }

  rpc SetActive(SetActiveRequest) returns (SetActiveResponse) {
    option (audit_log_description).description = "disable or enable the alert definitions";
    option (google.api.http) = {
      post: "/v3/alert-defs/{id}:SetActive"
    };
  }
}

enum OrderByDirection {
  ORDER_BY_DIRECTION_ASC_OR_UNSPECIFIED = 0;
  ORDER_BY_DIRECTION_DESC = 1;
}

enum OrderByFields {
  ORDER_BY_FIELDS_NAME_OR_UNSPECIFIED = 0;
  ORDER_BY_FIELDS_ID = 1;
  ORDER_BY_FIELDS_SEVERITY = 2;
  ORDER_BY_FIELDS_CREATED_TIME = 3;
  ORDER_BY_FIELDS_UPDATED_TIME = 4;
}

message OrderBy {
  OrderByFields field_name = 1;
  OrderByDirection direction = 2;
}

message GetAlertDefRequest {
  google.protobuf.StringValue id = 1; // The Alert's non changing ID
}

message GetAlertDefResponse {
  AlertDef alert_def = 1;
}

message ListAlertDefsResponse {
  repeated AlertDef alert_defs = 1;
}

message ListAlertDefsRequest {
}

message BatchGetAlertDefRequest {
  repeated google.protobuf.StringValue ids = 1 ;
}

message BatchGetAlertDefResponse {
  map<string,AlertDef> alert_defs = 1;
  repeated google.protobuf.StringValue not_found_ids =2;
}

message DeleteAlertDefRequest {
  google.protobuf.StringValue id = 1;
}
message DeleteAlertDefResponse {
}
message ReplaceAlertDefRequest {
  AlertDefProperties alert_def_properties = 1;
  google.protobuf.StringValue id = 2;// The AlertDef's Id to be replaced
}
message ReplaceAlertDefResponse {
  AlertDef alert_def = 1;
}
message CreateAlertDefRequest{
  AlertDefProperties alert_def_properties = 1;
}
message CreateAlertDefResponse {
  AlertDef alert_def = 1;
}
//message AtomicBatchExecuteAlertRequest {
// repeated AlertExecutionRequest requests = 1;
//}
//message AtomicBatchExecuteAlertResponse {
//  repeated AlertExecutionResponse matching_responses = 1;
//  //TODO: Where should this object be placed
//  com.coralogix.api.ResponseStatus status = 2;
//}

//message AlertExecutionRequest {
//  oneof request {
//    CreateAlertDefRequest create = 1;
//    ReplaceAlertDefRequest replace = 2;
//    DeleteAlertDefRequest delete = 3;
//  }
//}
//message AlertExecutionResponse {
//  oneof response {
//    CreateAlertDefResponse create = 1;
//    ReplaceAlertDefResponse replace = 2;
//    DeleteAlertDefResponse delete = 3;
//  }
//}
//message GetLimitsRequest {}
//
//message GetLimitsResponse {
//  google.protobuf.StringValue company_id = 1;
//  google.protobuf.Int32Value limit = 2;
//  google.protobuf.Int32Value used = 3;
//}
//message ValidateAlertRequest {
//  Alert alert = 1;
//}
//message ValidateAlertResponse {
//  google.protobuf.BoolValue valid = 1;
//}
message SetActiveRequest{
  google.protobuf.StringValue id = 1;
  google.protobuf.BoolValue active = 2;
}
message SetActiveResponse {
}
