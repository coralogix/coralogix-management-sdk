syntax = "proto3";

package com.coralogixapis.events2metrics.v2;

import "com/coralogixapis/logs2metrics/v2/logs_query.proto";
import "com/coralogixapis/spans2metrics/v2/spans_query.proto";
import "google/protobuf/wrappers.proto";
import "com/coralogix/openapi/v1/annotations.proto";
// Enum defining e2m type
enum E2MType {
  E2M_TYPE_UNSPECIFIED = 0;
  E2M_TYPE_LOGS2METRICS = 1;
  E2M_TYPE_SPANS2METRICS = 2 [(com.coralogix.openapi.v1.enum_value) = {skip_in: [CLOUD_IBM]}];
}
// E2M represents the Event to metrics base model.
message E2M {
  option (com.coralogix.openapi.v1.message) = {
    name: "Event2Metric",
  };
  //E2M unique ID, required on update requests
  google.protobuf.StringValue id = 1 [ (com.coralogix.openapi.v1.field) = {
   format : "uuid",
   min_length : 36,
   max_length : 36,
   example : "\"d6a3658e-78d2-47d0-9b81-b2c551f01b09\"",
   pattern : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
  } ];
  // Name of the E2M
  google.protobuf.StringValue name = 2 [ (com.coralogix.openapi.v1.field) = {
    required : true,
    example : "\"Service_catalog_latency\"",
  } ];
  // Description of the E2M
  google.protobuf.StringValue description = 3 [ (com.coralogix.openapi.v1.field) = {
    example : "\"avg and max the latency of catalog service\"",
  } ];
  // E2M create time
  google.protobuf.StringValue create_time = 4 [ (com.coralogix.openapi.v1.field) = {
    example: "\"2022-06-30T12:30:00Z'\""
  } ];
  // E2M update time
  google.protobuf.StringValue update_time = 5 [ (com.coralogix.openapi.v1.field) = {
    example: "\"2022-06-30T12:30:00Z'\""
  } ];
  // Represents the limit of the permutations and if the limit was exceeded
  E2MPermutations permutations = 6 ;
  // E2M metric labels
  repeated MetricLabel metric_labels = 7 [ (com.coralogix.openapi.v1.field) = {
    required : false,
  } ];
  // E2M metric fields
  repeated MetricField metric_fields = 8 [ (com.coralogix.openapi.v1.field) = {
    max_items: 10
  } ];
  // E2M type logs2metrics/spans2metrics
  E2MType type = 9 [ (com.coralogix.openapi.v1.field) = {
    required : true,
  } ];
  // Spans or logs type query
  oneof query {
    // E2M spans query
    com.coralogixapis.spans2metrics.v2.SpansQuery spans_query = 10 [ (com.coralogix.openapi.v1.field) = {
      skip_in: [CLOUD_IBM]
    } ] ;
    //  E2M logs query
    com.coralogixapis.logs2metrics.v2.LogsQuery logs_query = 11 ;
  }
  // A flag that represents if the e2m is for internal usage
  google.protobuf.BoolValue is_internal = 12;
}
// E2M Create message
message E2MCreateParams {
  option (com.coralogix.openapi.v1.message) = {
    name: "Event2MetricPrototype"
    description: "Event2Metric to create"
  };

  // Name of E2M to create
  google.protobuf.StringValue name = 1 [ (com.coralogix.openapi.v1.field) = {
    required : true
    example : "\"Service catalog latency\""
  } ];
  // Description of E2M to create
  google.protobuf.StringValue description = 2 [ (com.coralogix.openapi.v1.field) = {
    example : "\"avg and max the latency of catalog service\""
  } ];
  // The permutation limit of the E2M
  google.protobuf.Int32Value permutations_limit = 3 [ (com.coralogix.openapi.v1.field) = {
    example : "30000"
  } ];
  // E2M metric labels
  repeated MetricLabel metric_labels = 4;
  // E2M metric fields
  repeated MetricField metric_fields = 5;
  // E2M type
  E2MType type = 6;
  // E2M spans or logs query type
  oneof query {
    // E2M span query
    com.coralogixapis.spans2metrics.v2.SpansQuery spans_query = 7 [ (com.coralogix.openapi.v1.field) = {
      skip_in: [CLOUD_IBM]
    } ];
    // E2M logs query
    com.coralogixapis.logs2metrics.v2.LogsQuery logs_query = 8;
  }
}
// Represents e2m permutation limit
message E2MPermutations {
  // E2M permutation limit
  int32 limit = 1 [ (com.coralogix.openapi.v1.field) = {
    example: "30000"
  } ];
  // Flag to indicate if limit was exceeded
  bool has_exceeded_limit = 2 ;
}
// E2M metric label
message MetricLabel {
  // Metric label target alias name
  google.protobuf.StringValue target_label = 1 [ (com.coralogix.openapi.v1.field) = {
    pattern: "^[\\w/-]+$",
    example: "\"alias_label_name\""
  } ];
  // Metric label source field
  google.protobuf.StringValue source_field = 2 [ (com.coralogix.openapi.v1.field) = {
    example: "\"log_obj.string_value\""
  } ];
}
//E2M metric field
message MetricField {
  // Target metric field alias name
  google.protobuf.StringValue target_base_metric_name = 1 [ (com.coralogix.openapi.v1.field) = {
    pattern: "^[\\w/-]+$",
    example: "\"alias_field_name\""
  } ];
  // Source field
  google.protobuf.StringValue source_field = 2 [(com.coralogix.openapi.v1.field) = {
    example: "\"log_obj.numeric_field\""
  }];
  // Represents Aggregation type list
  repeated Aggregation aggregations = 7;
}
// E2M aggregation
message Aggregation {
  // Enum - Aggregation type
  enum AggType {
    AGG_TYPE_UNSPECIFIED = 0;
    AGG_TYPE_MIN = 1;
    AGG_TYPE_MAX = 2;
    AGG_TYPE_COUNT = 3;
    AGG_TYPE_AVG = 4;
    AGG_TYPE_SUM = 5;
    AGG_TYPE_HISTOGRAM = 6;
    AGG_TYPE_SAMPLES = 7;
  }
  // Is enabled
  bool enabled = 1;
  // Aggregation type
  AggType agg_type = 2;
  // Target metric field alias name
  string target_metric_name = 3  [ (com.coralogix.openapi.v1.field) = {
    example: "\"alias_field_name_agg_func\""
  } ];
  // Aggregate metadata, samples or histogram type
  oneof agg_metadata {
    // E2M sample type metadata
    E2MAggSamples samples = 4;
    // E2M aggregate histogram type metadata
    E2MAggHistogram histogram = 5 [ (com.coralogix.openapi.v1.field) = {
      description : "e2m aggregate histogram type metadata",
      required: true,
      min_items: 1
    } ];
  }
}
// E2M aggregate sample type
message E2MAggSamples {
  // Enum of aggregate type
  enum SampleType {
    SAMPLE_TYPE_UNSPECIFIED = 0;
    SAMPLE_TYPE_MIN = 1;
    SAMPLE_TYPE_MAX = 2;
  }
  // Sample type min/max
  SampleType sample_type = 2;
}
 // Represents the e2m aggregate histogram
message E2MAggHistogram {
  // Buckets of the E2M
  repeated float buckets = 1 [ (com.coralogix.openapi.v1.field) = {
    example: "2"
  } ];
}
