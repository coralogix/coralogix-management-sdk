syntax = "proto3";

package com.coralogixapis.events2metrics.v2;

import "com/coralogixapis/events2metrics/v2/events2metrics_definition.proto";
import "com/coralogixapis/logs2metrics/v2/audit_log.proto";
import "com/coralogixapis/logs2metrics/v2/logs_query.proto";
import "com/coralogixapis/spans2metrics/v2/spans_query.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "com/coralogix/openapi/v1/annotations.proto";

service Events2MetricService {
  option (com.coralogix.openapi.v1.service) = {
    description: "API to define, query, and manage your events to metrics definitions."
    resource_name: "E2M"
  };

  rpc CreateE2M(CreateE2MRequest) returns (CreateE2MResponse) {
    option (com.coralogixapis.logs2metrics.v2.audit_log_description).description = "Create new E2M";
    option (google.api.http) = {
      post: "/api/v2/events2metrics",
      body: "e2m"

      additional_bindings: {
        post: "/v1/events2metrics"
        body: "e2m"
        response_body: "e2m"
      };
    };
    option (com.coralogix.openapi.v1.method) = {
      http_rule_index: 1
      resource: true
      description: "Creates event to metrics definitions"
      extensions: [
        {key: "x-codegen-request-body-name" value: "\"Event2MetricPrototype\""}
      ]
    };
  }

  rpc ListE2M(ListE2MRequest) returns (ListE2MResponse) {
    option (com.coralogixapis.logs2metrics.v2.audit_log_description).description = "List all E2M";
    option (google.api.http) = {
      get: "/api/v2/events2metrics"

      additional_bindings: {
        get: "/v1/events2metrics"
      };
    };
    option (com.coralogix.openapi.v1.method) = {
      http_rule_index: 1
      datasource: true
      description: "Lists event to metrics definitions"
    };
  }

  rpc ReplaceE2M(ReplaceE2MRequest) returns (ReplaceE2MResponse) {
    option (com.coralogixapis.logs2metrics.v2.audit_log_description).description = "Replace E2M";
    option (google.api.http) = {
      put: "/api/v2/events2metrics",
      body: "e2m"

      additional_bindings: {
        put: "/v1/events2metrics/{e2m.id}"
        body: "e2m"
        response_body: "e2m"
      };
    };
    option (com.coralogix.openapi.v1.method) = {
      http_rule_index: 1
      resource: true
      description: "Updates event to metrics definitions"
      request_schema: "Event2MetricPrototype"
      path_parameter_name: "id"
      extensions: [
        {key: "x-codegen-request-body-name" value: "\"Event2MetricPrototype\""}
      ]
    };
  }

  rpc GetE2M(GetE2MRequest) returns (GetE2MResponse) {
    option (com.coralogixapis.logs2metrics.v2.audit_log_description).description = "Get E2M";
    option (google.api.http) = {
      get: "/api/v2/evets2metrics/{id}"
      additional_bindings: {
        get: "/v1/events2metrics/{id}"
        response_body: "e2m"
      };
    };
    option (com.coralogix.openapi.v1.method) = {
      http_rule_index: 1
      resource: true
      description: "Gets event to metrics definitions by id"
    };
  }

  rpc DeleteE2M(DeleteE2MRequest) returns (DeleteE2MResponse) {
    option (com.coralogixapis.logs2metrics.v2.audit_log_description).description = "Delete E2M";
    option (google.api.http) = {
      delete: "/api/v2/events2metrics/{id}"

      additional_bindings: {
        delete: "/v1/events2metrics/{id}"
      };
    };
    option (com.coralogix.openapi.v1.method) = {
      http_rule_index: 1
      resource: true
      description: "Deletes event to metrics definitions by id"
    };
  }

  rpc AtomicBatchExecuteE2M(AtomicBatchExecuteE2MRequest) returns (AtomicBatchExecuteE2MResponse) {
    option (com.coralogixapis.logs2metrics.v2.audit_log_description).description = "Atomic Batch Execute E2M";
    option (google.api.http) = {post: "/api/v2/events2metrics:atomicBatchExecute"};
  }

  rpc ListLabelsCardinality(ListLabelsCardinalityRequest) returns (ListLabelsCardinalityResponse) {
    option (com.coralogixapis.logs2metrics.v2.audit_log_description).description = "List Labels Cardinality";
    option (google.api.http) = {
      post: "/api/v2/events2metrics/labels-cardinality"
    };
  }

  rpc GetLimits(GetLimitsRequest) returns (GetLimitsResponse) {
    option (com.coralogixapis.logs2metrics.v2.audit_log_description).description = "get limits";
    option (google.api.http) = {
      get: "/api/v2/events2metrics/limits"
    };
  }
}
// represents e2m create request
message CreateE2MRequest {
  E2MCreateParams e2m = 1;
}
// represents e2m create response
message CreateE2MResponse {
  E2M e2m = 1;
}

// represents e2m get list request
message ListE2MRequest {}
 // represents response of
message ListE2MResponse {
  option (com.coralogix.openapi.v1.message) = {
    description: "List of event to metrics definitions",
    name: "Event2MetricCollection"
  };
  // List of event to metrics definitions
  repeated E2M e2m = 1 [(com.coralogix.openapi.v1.field) = {name: "events2metrics"}];
}

 // represents e2m replace request
message ReplaceE2MRequest {
  E2M e2m = 1;
}

 // represents e2m replace response
message ReplaceE2MResponse {
  E2M e2m = 1;
}
 // represents get request for a single e2m by id
message GetE2MRequest {
  google.protobuf.StringValue id = 1;
}
 // represents response for a single e2m by id
message GetE2MResponse {
  E2M e2m = 1;
}
 // represents e2m delete request
message DeleteE2MRequest {
  // id of e2m to be deleted
  google.protobuf.StringValue id = 1;
}
// represents e2m delete response
message DeleteE2MResponse {
  // id of deleted e2m
  google.protobuf.StringValue id = 1;
}

// represents one of e2m actions create/replace/delete
message E2MExecutionRequest {
  oneof request {
    CreateE2MRequest create = 1;
    ReplaceE2MRequest replace = 2;
    DeleteE2MRequest delete = 3;
  }
}
// an atomic list of e2m action that are executed in the same request
message AtomicBatchExecuteE2MRequest {
  repeated E2MExecutionRequest requests = 1;
}

// represents a response of e2m execution
message E2MExecutionResponse {
  oneof response {
    CreateE2MResponse created = 1;
    ReplaceE2MResponse replaced = 2;
    DeleteE2MResponse deleted = 3;
  }
}
// represents a response to atomic list of e2m actions
message AtomicBatchExecuteE2MResponse {
  repeated E2MExecutionResponse matching_responses = 1;
}
// represents a request of list label cardinality
message ListLabelsCardinalityRequest {
  oneof query {
    com.coralogixapis.spans2metrics.v2.SpansQuery spans_query = 1;
    com.coralogixapis.logs2metrics.v2.LogsQuery logs_query = 2;
  }
  repeated MetricLabel metric_labels = 3;
}
// represents labels permutation cardinality
message LabelsPermutationsCardinalityDay {
  string day = 1;
  int32 permutations = 2;
}

// response  represented by list of labels permutation cardinality
message ListLabelsCardinalityResponse {
  repeated LabelsPermutationsCardinalityDay permutations = 1;
}

// get e2m limits request
message GetLimitsRequest {}
// get e2m limits response
message GetLimitsResponse {
  message LimitUsage {
    // the limit number of e2m creation
    google.protobuf.Int32Value limit = 1;
    // how many e2m's were created
    google.protobuf.Int32Value used = 2;
  }
   // company id
  google.protobuf.StringValue company_id = 1;
   // labels limit
  int32 labels_limit = 2;
   // permutation limit/used
  LimitUsage permutations_limit = 3;
  // metrics limit/used5
  LimitUsage metrics_limit = 4;
}
