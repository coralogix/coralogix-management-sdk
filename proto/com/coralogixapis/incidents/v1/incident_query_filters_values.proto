syntax = "proto3";

package com.coralogixapis.incidents.v1;

import "com/coralogixapis/incidents/v1/filter_operators.proto";
import "com/coralogixapis/incidents/v1/incident_severity.proto";
import "com/coralogixapis/incidents/v1/incident_state.proto";
import "com/coralogixapis/incidents/v1/incident_status.proto";
import "com/coralogixapis/incidents/v1/meta_label.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-openapiv3/options/annotations.proto";

message AssigneeWithCount {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Assignee with count"
      required: [
        "assignee",
        "count"
      ]
    }
  };
  google.protobuf.StringValue assignee = 1 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "\"assignee\""}];
  google.protobuf.Int32Value count = 2 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "10"}];
}
message IncidentStatusWithCount {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Incident status with count"
      required: [
        "status",
        "count"
      ]
    }
  };
  IncidentStatus status = 1 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "\"incident_status\""}];
  google.protobuf.Int32Value count = 2 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "10"}];
}
message IncidentStateWithCount {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Incident state with count"
      required: [
        "state",
        "count"
      ]
    }
  };
  IncidentState state = 1;
  google.protobuf.Int32Value count = 2 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "10"}];
}
message IncidentSeverityWithCount {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Incident severity with count"
      required: [
        "severity",
        "count"
      ]
    }
  };
  IncidentSeverity severity = 1;
  google.protobuf.Int32Value count = 2 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "10"}];
}
message IncidentMetaLabelsWithCount {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Incident meta labels with count"
      required: [
        "meta_label",
        "count"
      ]
    }
  };
  MetaLabel meta_label = 1;
  google.protobuf.Int32Value count = 2 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "10"}];
}
message IncidentQueryFiltersValues {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Incident query filter values"
      required: [
        "assignee_with_count",
        "status_with_count",
        "state_with_count",
        "severity_with_count",
        "contextual_labels",
        "display_labels",
        "meta_labels_with_count",
        "meta_labels_op"
      ]
    }
  };
  repeated AssigneeWithCount assignee_with_count = 1;
  repeated IncidentStatusWithCount status_with_count = 2;
  repeated IncidentStateWithCount state_with_count = 3;
  repeated IncidentSeverityWithCount severity_with_count = 4;
  map<string, ContextualLabelValuesWithCount> contextual_labels = 5;
  repeated IncidentMetaLabelsWithCount meta_labels_with_count = 6;
  FilterOperator meta_labels_op = 7;
  map<string, DisplayLabelValuesWithCount> display_labels = 8;
}

message ContextualLabelValuesWithCount {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Contextual label values with count"
      required: ["values_with_count"]
    }
  };
  repeated ContextualLabelValueWithCount values_with_count = 1;
}

message ContextualLabelValueWithCount {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Contextual label value with count"
      required: [
        "contextual_label_value",
        "count"
      ]
    }
  };
  google.protobuf.StringValue contextual_label_value = 1 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "\"contextual_label_value\""}];
  google.protobuf.Int32Value count = 2 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "10"}];
}

message DisplayLabelValuesWithCount {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Display label values with count"
      required: ["values_with_count"]
    }
  };
  repeated DisplayLabelValueWithCount values_with_count = 1;
}

message DisplayLabelValueWithCount {
  option (grpc.gateway.protoc_gen_openapiv3.options.openapiv3_schema) = {
    json_schema: {
      title: "Display label value with count"
      required: [
        "display_label_value",
        "count"
      ]
    }
  };
  google.protobuf.StringValue display_label_value = 1 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "\"display_label_value\""}];
  google.protobuf.Int32Value count = 2 [(grpc.gateway.protoc_gen_openapiv3.options.openapiv3_field) = {example: "10"}];
}
