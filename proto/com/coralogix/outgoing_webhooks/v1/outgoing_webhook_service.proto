syntax = "proto3";

package com.coralogix.outgoing_webhooks.v1;

import "com/coralogix/common/v1/audit_log.proto";
import "com/coralogix/outgoing_webhooks/v1/outgoing_webhook.proto";

import "google/protobuf/wrappers.proto";
import "google/protobuf/descriptor.proto";

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";

service OutgoingWebhooksService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "Outgoing webhooks service"
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/alerting/outbound-webhooks/generic-outbound-webhooks-alert-webhooks/"
      description: "Find out more about outbound webhooks in our documentation."
    }
  };

  rpc ListOutgoingWebhookTypes(ListOutgoingWebhookTypesRequest) returns (ListOutgoingWebhookTypesResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Get outgoing webhook types";
    option (google.api.http) = {
      get: "/v1/outgoing-webhooks/types"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Outgoing webhooks service"]
      summary: "Get outgoing webhook types"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "outbound-webhooks:ReadConfig"}
          }
        }
      }
    };
  }

  rpc GetOutgoingWebhookTypeDetails(GetOutgoingWebhookTypeDetailsRequest) returns (GetOutgoingWebhookTypeDetailsResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Get outgoing webhook type";
    option (google.api.http) = {
      get: "/v1/outgoing-webhooks/types/{type}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Outgoing webhooks service"]
      summary: "Get outgoing webhook type details"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "outbound-webhooks:ReadConfig"}
          }
        }
      }
    };
  }

  rpc ListOutgoingWebhooks(ListOutgoingWebhooksRequest) returns (ListOutgoingWebhooksResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Get outgoing webhooks";
    option (google.api.http) = {
      get: "/v1/outgoing-webhooks"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Outgoing webhooks service"]
      summary: "List outgoing webhooks"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "outbound-webhooks:ReadConfig"}
          }
        }
      }
    };
  }

  rpc ListOutboundWebhooksSummary(ListOutboundWebhooksSummaryRequest) returns (ListOutboundWebhooksSummaryResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Get outgoing webhook summaries";
    option (google.api.http) = {
      get: "/v1/outgoing-webhooks/summary"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Outgoing webhooks service"]
      summary: "List outbound webhooks summary"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "outbound-webhooks:ReadSummary"}
          }
        }
      }
    };
  }

  rpc ListAllOutgoingWebhooks(ListAllOutgoingWebhooksRequest) returns (ListAllOutgoingWebhooksResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Get all outgoing webhooks";
    option (google.api.http) = {
      get: "/v1/outgoing-webhooks/all"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Outgoing webhooks service"]
      summary: "List all outgoing webhooks"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "outbound-webhooks:ReadConfig"}
          }
        }
      }
    };
  }

  rpc GetOutgoingWebhook(GetOutgoingWebhookRequest) returns (GetOutgoingWebhookResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Get outgoing webhook";
    option (google.api.http) = {
      get: "/v1/outgoing-webhooks/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Outgoing webhooks service"]
      summary: "Get outgoing webhook"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "outbound-webhooks:ReadConfig"}
          }
        }
      }
    };
  }

  rpc CreateOutgoingWebhook(CreateOutgoingWebhookRequest) returns (CreateOutgoingWebhookResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Create an outgoing webhook";
    option (google.api.http) = {
      post: "/v1/outgoing-webhooks"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Outgoing webhooks service"]
      summary: "Create an outgoing webhook"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "outbound-webhooks:UpdateConfig"}
          }
        }
      }
    };
  }

  rpc UpdateOutgoingWebhook(UpdateOutgoingWebhookRequest) returns (UpdateOutgoingWebhookResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Update an outgoing webhook";
    option (google.api.http) = {
      put: "/v1/outgoing-webhooks"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Outgoing webhooks service"]
      summary: "Update an outgoing webhook"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "outbound-webhooks:UpdateConfig"}
          }
        }
      }
    };
  }

  rpc DeleteOutgoingWebhook(DeleteOutgoingWebhookRequest) returns (DeleteOutgoingWebhookResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Delete an outgoing webhook";
    option (google.api.http) = {
      delete: "/v1/outgoing-webhooks/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Outgoing webhooks service"]
      summary: "Delete an outgoing webhook"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "outbound-webhooks:UpdateConfig"}
          }
        }
      }
    };
  }

  rpc TestOutgoingWebhook(TestOutgoingWebhookRequest) returns (TestOutgoingWebhookResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Test an outgoing webhook";
    option (google.api.http) = {
      post: "/v1/outgoing-webhooks/test"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Outgoing webhooks service"]
      summary: "Test an outgoing webhook"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "outbound-webhooks:ReadConfig"}
          }
        }
      }
    };
  }

  rpc TestExistingOutgoingWebhook(TestExistingOutgoingWebhookRequest) returns (TestOutgoingWebhookResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Test an existing outgoing webhook";
    option (google.api.http) = {
      post: "/v1/outgoing-webhooks/test-existing"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Outgoing webhooks service"]
      summary: "Test an existing outgoing webhook"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "outbound-webhooks:ReadConfig"}
          }
        }
      }
    };
  }

  rpc ListIbmEventNotificationsInstances(ListIbmEventNotificationsInstancesRequest) returns (ListIbmEventNotificationsInstancesResponse) {
    option (google.api.http) = {
      get: "/v1/outgoing-webhooks/ibm-event-notifications/instances"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Outgoing webhooks service"]
      summary: "List IBM event notification instances"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "outbound-webhooks:ReadConfig"}
          }
        }
      }
    };
  }
}

message ListOutgoingWebhookTypesRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List outgoing webhook types request"
      required: []
    }
  };
}

message ListOutgoingWebhookTypesResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List outgoing webhook types response"
      required: []
    }
  };

  message OutgoingWebhookType {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        title: "Outgoing webhook type"
        required: [
          "label",
          "count",
          "type"
        ]
      }
    };
    WebhookType type = 1;
    google.protobuf.StringValue label = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"example_label\"" }];
    google.protobuf.UInt32Value count = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "3" }];
  }

  repeated OutgoingWebhookType webhooks = 1;
}

message GetOutgoingWebhookTypeDetailsRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get outgoing webhook type details request"
      required: [
        "type"
      ]
    }
  };
  WebhookType type = 1;
}

message GetOutgoingWebhookTypeDetailsResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get outgoing webhook type details response"
      required: ["details"]
    }
  };
  OutgoingWebhookDetails details = 1;
}

message ListOutgoingWebhooksRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List outgoing webhooks request"
      required: [
        "type"
      ]
    }
  };
  WebhookType type = 1;
}

message ListOutgoingWebhooksResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List outgoing webhooks response"
      required: []
    }
  };
  repeated OutgoingWebhookSummary deployed = 1;
}

message ListAllOutgoingWebhooksRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List all outgoing webhooks request"
      required: []
    }
  };
}

message ListAllOutgoingWebhooksResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List all outgoing webhooks response"
      required: []
    }
  };
  repeated OutgoingWebhookExtendedSummary deployed = 1;
}

message ListOutboundWebhooksSummaryRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List outbound webhooks summary request"
      required: []
    }
  };
}

message ListOutboundWebhooksSummaryResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List outbound webhooks summary response"
      required: []
    }
  };
  repeated OutboundWebhookSummary outbound_webhook_summaries = 1;
}

message GetOutgoingWebhookRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get outgoing webhook request"
      required: [
        "id"
      ]
    }
  };
  google.protobuf.StringValue id = 1;
}

message GetOutgoingWebhookResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get outgoing webhook response"
      required: ["webhook"]
    }
  };
  OutgoingWebhook webhook = 1;
}

message CreateOutgoingWebhookRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Create outgoing webhook request"
      required: [
        "data"
      ]
    }
  };
  OutgoingWebhookInputData data = 1;
}

message CreateOutgoingWebhookResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Create outgoing webhook response"
      required: ["id"]
    }
  };
  google.protobuf.StringValue id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"example_id\"" }];
}

message UpdateOutgoingWebhookRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Update outgoing webhook request"
      required: [
        "id",
        "data"
      ]
    }
  };
  string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"example_id\"" }];
  OutgoingWebhookInputData data = 2;
}

message UpdateOutgoingWebhookResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Update outgoing webhook response"
      required: []
    }
  };
}

message DeleteOutgoingWebhookRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Delete outgoing webhook request"
      required: [
        "id"
      ]
    }
  };
  google.protobuf.StringValue id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"example_id\"" }];
}

message DeleteOutgoingWebhookResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Delete outgoing webhook response"
      required: []
    }
  };
}

message TestOutgoingWebhookRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Test outgoing webhook request"
      required: [
        "data"
      ]
    }
  };
  OutgoingWebhookInputData data = 1;
}

message TestExistingOutgoingWebhookRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Test existing outgoing webhook request"
      required: [
        "id"
      ]
    }
  };
  google.protobuf.StringValue id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"example_id\"" }];
}

message TestOutgoingWebhookResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Test outgoing webhook response"
      required: []
    }
  };

  message Success {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        title: "Test outgoing webhook success"
        required: []
      }
    };
  }
  
  message Failure {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        title: "Test outgoing webhook failure"
        required: [
          "error_message",
          "display_message"
        ]
      }
    };
    google.protobuf.StringValue error_message = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"example_error_message\"" }];
    google.protobuf.StringValue display_message = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"example_display_message\"" }];
    optional google.protobuf.UInt32Value status_code = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "400" }];
  }

  oneof result {
    Success success = 1;
    Failure failure = 2;
  }
}

message ListIbmEventNotificationsInstancesRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List IBM event notification instances request"
      required: []
    }
  };
}

message ListIbmEventNotificationsInstancesResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List IBM event notification instances response"
      required: []
    }
  };
  
  message EventNotificationsInstance {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        title: "Event notifications instance"
        required: [
          "instance_id",
          "region_id",
          "name",
          "crn"
        ]
      }
    };
    string instance_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"5a8b249b-3915-49e7-ad43-030f585d84c5\"" }];
    string region_id = 2[(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"eu-gb\"" }];
    string name = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"example-name\"" }];
    string crn = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "\"crn:v1:staging:public:logs:eu-gb:a/436fa6f7760f46eba99e22f099c33cb8:5a8b249b-3915-49e7-ad43-030f585d84c5::\"" }]; // Cloud Resource Name
    bool is_used = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { example: "true" }];
  }
  
  repeated EventNotificationsInstance instances = 1;
}
