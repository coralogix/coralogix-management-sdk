syntax = "proto3";

package com.coralogix.extensions.v1;

import "com/coralogix/common/v1/audit_log.proto";
import "com/coralogix/extensions/v1/extension.proto";
import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

service ExtensionTestingService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "Extension testing service"
    external_docs: {
      url: "https://coralogix.com/docs/integrations/extensions/"
      description: "Find out more about extensions in our documentation."
    }
  };

  rpc InitializeTestingRevision(InitializeTestingRevisionRequest) returns (InitializeTestingRevisionResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Initialize testing revision";
    option (google.api.http) = {
      post: "/v1/extensions-testing/initialize"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Extension testing service"]
      summary: "Initialize testing revision"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "extensions:UpdateConfig"}
          }
        }
      }
    };
  }

  rpc CleanupTestingRevision(CleanupTestingRevisionRequest) returns (CleanupTestingRevisionResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Cleanup testing extension";
    option (google.api.http) = {
      post: "/v1/extensions-testing/cleanup"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Extension testing service"]
      summary: "Cleanup testing extension"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "extensions:UpdateConfig"}
          }
        }
      }
    };
  }

  rpc TestExtensionRevision(TestExtensionRevisionRequest) returns (TestExtensionRevisionResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "Test extension";
    option (google.api.http) = {
      post: "/v1/extensions-testing/test"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Extension testing service"]
      summary: "Test extension revision"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "extensions:UpdateConfig"}
          }
        }
      }
    };
  }
}

message InitializeTestingRevisionRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Initialize testing revision request"
      required: ["extension_data"]
    }
  };
  ExtensionData extension_data = 1;
}

message InitializeTestingRevisionResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Initialize testing revision response"
      required: []
    }
  };
}

message CleanupTestingRevisionRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Cleanup testing revision request"
      required: ["id"]
    }
  };
  google.protobuf.StringValue id = 1;
}

message CleanupTestingRevisionResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Cleanup testing revision response"
      required: []
    }
  };
}

message TestExtensionRevisionRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Test extension revision request"
      required: ["extension_data"]
    }
  };
  ExtensionData extension_data = 1;
  google.protobuf.BoolValue cleanup_after_test = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {default: "false"}];
}

message TestExtensionRevisionResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Test extension revision response"
      required: []
    }
  };
}
