syntax = "proto3";

package com.coralogix.openapi.v1;

import "google/protobuf/descriptor.proto";
import "google/protobuf/wrappers.proto";

// ServiceOpenAPI is a message used to annotate gRPC services with additional
// OpenAPI-specific metadata. This includes service description, version, and
// and error model full qualified name.
message ServiceOpenAPI {
    string description = 1; // Description of the service.
    string version = 2;     // Version of the service.
    string error_model = 3; // Full qualified name of error model used by the service (defaults to com.coralogix.openapi.ApiError).
    string resource_name = 4; // Name of the resource used in openapi spec.
}

// Extending google.protobuf.ServiceOptions to include ServiceOpenAPI annotations.
// This allows attaching the ServiceOpenAPI metadata to gRPC service definitions.
extend google.protobuf.ServiceOptions {
    ServiceOpenAPI service = 99999;
}

// MethodOpenAPI is a message used to annotate gRPC methods with additional
// OpenAPI-specific metadata. This includes whether the method operates on a REST resource,
// its description, request schema, error responses, and the index of the HTTP rule where endpoints is defined.
message MethodOpenAPI {
    bool resource = 1;                           // Indicates if the method operates on a REST resource.
    string description = 3;                      // Description of the method.
    string request_schema = 4;                   // Schema of the request message. (Used when you want to use different schema than the one that will be generated from method request mesage type).
    string response_schema = 5;                  // Schema of the response message. (Used when you want to use different schema than the one that will be generated from method response mesage type).
    map<uint32, string> error_responses = 6;     // Map of error response codes to descriptions.
    uint32 http_rule_index = 7;                  // Index of the associated HTTP rule.
    string path_parameter_name = 8;              // Name of the path parameter used in openapi spec.
    map<string, string> extensions = 9;          // Map of extensions. Value is a free-form property to include a JSON of this field. This is copied to generated schema. Quotes must be escaped.
    bool datasource = 10;                        // Indicates if the method is a datasource.

}

// Extending google.protobuf.MethodOptions to include MethodOpenAPI annotations.
// This allows attaching the MethodOpenAPI metadata to gRPC method definitions.
extend google.protobuf.MethodOptions {
    MethodOpenAPI method = 99999;
}

// MessageOpenAPI is a message used to annotate gRPC message types with additional
// OpenAPI-specific metadata, such as description and whether the message is a REST resource.
message MessageOpenAPI {
    string name = 1;                    // Name of the message.
    string description = 2;             // Description of the message.
    bool resource = 3;                  // Indicates if the message is a REST resource.
    map<string, string> extensions = 4; // Map of extensions. Value is a free-form property to include a JSON of this field. This is copied to generated schema. Quotes must be escaped.
}

// Extending google.protobuf.MessageOptions to include MessageOpenAPI annotations.
// This allows attaching the MessageOpenAPI metadata to gRPC message definitions.
extend google.protobuf.MessageOptions {
    MessageOpenAPI message = 99999;
}

message EnumOpenAPI {
    string name = 1;                    // Name of the enum.
    string description = 2;             // Description of the enum.
    map<string, string> extensions = 3; // Map of extensions. Value is a free-form property to include a JSON of this field. This is copied to generated schema. Quotes must be escaped.

}

// Extending google.protobuf.EnumOptions to include EnumOpenAPI annotations.
// This allows attaching the EnumOpenAPI metadata to gRPC enum definitions.
extend google.protobuf.EnumOptions {
    EnumOpenAPI enum = 99999;
}


// FieldOpenAPI is a message used to annotate fields within gRPC message types
// with additional OpenAPI-specific metadata. This includes field descriptions,
// examples, validation patterns, length constraints, and other properties.
message FieldOpenAPI {
    string name = 1;        // Used for renaming field in OpenAPI schema.
    string description = 2; // Description of the field. Defaults to the field name.
    string example = 3;     // A free-form property to include a JSON example of this field. This is copied to generated schema. Quotes must be escaped.
    string pattern = 4;     // Regex pattern the field value should match.
    int32 min_length = 5;   // Minimum length for string fields. Defaults to 1.
    int32 max_length = 6;   // Maximum length for string fields. Defaults to 4096.
    int32 min_items = 7;    // Minimum number of items for repeated fields. Defaults to 1.
    int32 max_items = 8;    // Maximum number of items for repeated fields. Defaults to 4096.
    bool required = 9;      // Indicates if the field is required.
    bool identifier = 10;   // Indicates if the field is an identifier.
    string format = 11;     // Format of the field.
}

// Extending google.protobuf.FieldOptions to include FieldOpenAPI annotations.
// This allows attaching the FieldOpenAPI metadata to field definitions within gRPC messages.
extend google.protobuf.FieldOptions {
    FieldOpenAPI field = 99999;
}

// ApiError is a message representing a standardized error response format.
// It contains a list of individual errors, a trace identifier, and a status code.
message ApiError {
    // Nested message Error representing a single error occurrence.
    message Error {
        // Enum ErorCode defining possible error codes.
        enum ErrorCode {
            ERROR_CODE_BAD_REQUEST_OR_UNSPECIFIED = 0;
            ERROR_CODE_UNAUTHORIZED = 1;
            ERROR_CODE_FORBIDDEN = 2;
            ERROR_CODE_NOT_FOUND = 3;
            ERROR_CODE_METHOD_INTERNAL_ERROR = 4;
            ERROR_CODE_CONFLICT = 5;
            ERROR_CODE_UNAUTHENTICATED = 6;
            ERROR_CODE_RESOURCE_EXHAUSTED = 7;
            ERROR_CODE_DEADLINE_EXCEEDED = 8;
        }
        ErrorCode code = 1 [(com.coralogix.openapi.v1.field) = { required: true, description: "Error code" } ];
        google.protobuf.StringValue message = 2;    // Human-readable error message.
        google.protobuf.StringValue more_info = 3;  // Additional information about the error.
    }
    repeated Error errors = 1 [(com.coralogix.openapi.v1.field) = { required: true, description: "List of errors", min_length: 1 } ];
    google.protobuf.StringValue trace = 2 [(com.coralogix.openapi.v1.field) = { required: true, description: "UUID uniquely identifying the request" } ];
    google.protobuf.Int32Value status_code = 3;   // HTTP status code associated with the error.
}