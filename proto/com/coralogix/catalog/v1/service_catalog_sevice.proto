syntax = "proto3";
package com.coralogix.catalog.v1;

import "com/coralogix/catalog/v1/common.proto";
import "com/coralogix/catalog/v1/service.proto";
import "com/coralogix/catalog/v1/service_query.proto";
import "com/coralogix/schemastore/v1/tracing_fields.proto";
import "com/coralogixapis/alerts/v3/alert_def.proto";
import "com/coralogixapis/apm/common/v2/alert_meta_label.proto";
import "com/coralogixapis/apm/common/v2/audit_log.proto";
import "com/coralogixapis/apm/widgets/v1/stat.proto";
import "com/coralogixapis/service_catalog/v1/apm_source.proto";
import "com/coralogixapis/service_catalog/v1/repeated_widgets.proto";
import "google/protobuf/wrappers.proto";

message GetServicesRequest {
  ServiceQuery query = 1;
}

message GetServicesResponse {
  repeated Service services = 1;
}

message GetServiceRequest {
  google.protobuf.StringValue service_id = 1;
  google.protobuf.StringValue service_name = 2;
  TimeRange time_range = 3;
  repeated ApmFilter service_catalog_filters = 4;
}

message GetServiceResponse {
  Service service = 1;
}

message UpdateServiceCatalogFiltersRequest {
  repeated ApmFilter service_catalog_filters = 1;
  com.coralogixapis.service_catalog.v1.ApmSource apm_source = 2;
  repeated com.coralogixapis.apm.common.v2.AlertMetaLabel alert_label_filters = 3;
}

message UpdateServiceCatalogFiltersResponse {
  repeated ApmFilter service_catalog_filters = 1;
  com.coralogixapis.service_catalog.v1.ApmSource apm_source = 2;
}

message GetServiceCatalogFiltersRequest {
  google.protobuf.StringValue service_name = 1;
  com.coralogixapis.service_catalog.v1.ApmSource apm_source = 2;
  TimeRange time_range = 3;
  google.protobuf.BoolValue only_errors = 4;
}

message GetServiceCatalogFiltersResponse {
  repeated ApmFilter service_catalog_filters = 1;
  com.coralogixapis.service_catalog.v1.ApmSource apm_source = 2;
}

message GetServicesColumnsStreamRequest {
  ServiceQuery query = 1;
  com.coralogixapis.service_catalog.v1.ApmSource apm_source = 2;
}

message GetServicesColumnsStreamResponse {
  repeated ServiceData services = 1;
  com.coralogixapis.service_catalog.v1.ApmSource apm_source = 2;
  google.protobuf.StringValue query = 3;
}

message GetSpanMetricBucketsRequest {
  google.protobuf.StringValue service_name = 1;
}

message GetSpanMetricBucketsResponse {
  repeated google.protobuf.StringValue metricBuckets = 1;
}

message GetAffectedAlertsRequest {
  repeated ApmFilter service_catalog_filters = 1;
  repeated com.coralogixapis.apm.common.v2.AlertMetaLabel alert_label_filters = 2;
}

message GetAffectedAlertsResponse {
  repeated com.coralogixapis.alerts.v3.AlertDef alerts = 1;
}

service ServiceCatalogService {
  rpc GetServices(GetServicesRequest) returns (GetServicesResponse) {
    option (com.coralogixapis.apm.common.v2.audit_log_description).description = "get services";
  }
  rpc GetServicesColumnsStream(GetServicesColumnsStreamRequest) returns (stream GetServicesColumnsStreamResponse) {
    option (com.coralogixapis.apm.common.v2.audit_log_description).description = "get services column stream";
  }
  rpc GetService(GetServiceRequest) returns (GetServiceResponse) {
    option (com.coralogixapis.apm.common.v2.audit_log_description).description = "get service";
  }

  rpc GetServiceCatalogFilters(GetServiceCatalogFiltersRequest) returns (GetServiceCatalogFiltersResponse) {
    option (com.coralogixapis.apm.common.v2.audit_log_description).description = "get service catalog filters";
  }

  rpc UpdateServiceCatalogFilters(UpdateServiceCatalogFiltersRequest) returns (UpdateServiceCatalogFiltersResponse) {
    option (com.coralogixapis.apm.common.v2.audit_log_description).description = "update service catalog filters";
  }

  rpc GetTracingLabels(com.coralogix.schemastore.v1.TracingFieldsRequest) returns (com.coralogix.schemastore.v1.TracingFieldsResponse) {
    option (com.coralogixapis.apm.common.v2.audit_log_description).description = "get tracing labels under the limitation of cardinality";
  }

  rpc GetSpanMetricBuckets(GetSpanMetricBucketsRequest) returns (GetSpanMetricBucketsResponse) {
    option (com.coralogixapis.apm.common.v2.audit_log_description).description = "Get Span Metric Buckets";
  }

  rpc GetAffectedAlerts(GetAffectedAlertsRequest) returns (GetAffectedAlertsResponse) {
    option (com.coralogixapis.apm.common.v2.audit_log_description).description = "Get Affected Alerts By Dimension Change";
  }
}
