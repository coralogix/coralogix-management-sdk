syntax = "proto3";

package com.coralogix.archive.v1;

import "com/coralogix/archive/v1/retention.proto";
import "com/coralogix/common/v1/audit_log.proto";
import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

message GetRetentionsRequest {}

message GetRetentionsResponse {
  repeated Retention retentions = 1;
}

extend google.protobuf.FieldOptions {
  string validation_pattern = 65001;
  int32 validation_max_length = 65002;
  string validation_encoding = 65003;
  int32 validation_max_elements = 65004;
}

message RetentionUpdateElement {
  google.protobuf.StringValue id = 1 [(validation_pattern) = "^([a-fA-F0-9]{8}[-][a-fA-F0-9]{4}[-][a-fA-F0-9]{4}[-][a-fA-F0-9]{4}[-][a-fA-F0-9]{12})$"];
  google.protobuf.StringValue name = 2 [
    (validation_pattern) = "^[a-zA-Z0-9_-]+$",
    (validation_max_length) = 255,
    (validation_encoding) = "latin1"
  ];
}

message UpdateRetentionsRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Update Retentions Request"
      description: "This data structure is used to update retentions"
      required: ["retention_update_elements"]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/"
      description: "Find out more about archives"
    }
  };
  repeated RetentionUpdateElement retention_update_elements = 1 [(validation_max_elements) = 4];
}

message UpdateRetentionsResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Update Retentions Response"
      description: "This data structure is obtained after updating retentions"
      required: ["retentions"]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/"
      description: "Find out more about archives"
    }
  };
  repeated Retention retentions = 1;
}

message ActivateRetentionsRequest {}

message ActivateRetentionsResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Activate Retentions Response"
      description: "This data structure is obtained after setting the active status of retentions"
      required: ["retentions"]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/"
      description: "Find out more about archives"
    }
  };
  google.protobuf.BoolValue activate_retentions = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {example: "true"}];
}

message GetRetentionsEnabledRequest {}

message GetRetentionsEnabledResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get Retentions Enabled Response"
      description: "This data structure is obtained when retrieving the active status of retentions"
      required: ["retentions"]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/data-flow/s3-archive/connect-s3-archive/"
      description: "Find out more about archives"
    }
  };
  google.protobuf.BoolValue enable_tags = 1;
}

service RetentionsService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "Retensions Service"
    description: "View and manage retentions"
  };
  rpc GetRetentions(GetRetentionsRequest) returns (GetRetentionsResponse) {
    option (google.api.http) = {get: "/v1/retentions"};
    option (com.coralogix.common.v1.audit_log_description).description = "Get retentions";
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Retentions Service"]
      summary: "Get Retentions"
    };
  }
  rpc UpdateRetentions(UpdateRetentionsRequest) returns (UpdateRetentionsResponse) {
    option (google.api.http) = {
      post: "/v1/retentions"
      body: "*"
    };
    option (com.coralogix.common.v1.audit_log_description).description = "Update retention names";

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Retentions Service"]
      summary: "Update Retentions"
    };
  }

  rpc ActivateRetentions(ActivateRetentionsRequest) returns (ActivateRetentionsResponse) {
    option (google.api.http) = {
      post: "/v1/retentions:activate"
      body: "*"
    };
    option (com.coralogix.common.v1.audit_log_description).description = "Activate retention tags";
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Retentions Service"]
      summary: "Activate Retentions"
    };
  }

  rpc GetRetentionsEnabled(GetRetentionsEnabledRequest) returns (GetRetentionsEnabledResponse) {
    option (google.api.http) = {get: "/v1/retentions/enabled"};
    option (com.coralogix.common.v1.audit_log_description).description = "Get retention tags enabled status";
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Retentions Service"]
      summary: "Get Retentions Enabled"
    };
  }
}
