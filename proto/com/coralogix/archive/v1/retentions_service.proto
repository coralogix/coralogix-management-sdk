syntax = "proto3";

package com.coralogix.archive.v1;

import "google/protobuf/wrappers.proto";
import "google/protobuf/descriptor.proto";
import "com/coralogix/archive/v1/audit_log.proto";
import "com/coralogix/archive/v1/retention.proto";

message GetRetentionsRequest {
}

message GetRetentionsResponse {
  repeated Retention retentions = 1;
}

extend google.protobuf.FieldOptions {
  string validation_pattern = 65001;
  int32 validation_max_length = 65002;
  string validation_encoding = 65003;
  int32 validation_max_elements = 65004;
}

message RetentionUpdateElement {
  google.protobuf.StringValue id = 1 [(validation_pattern) = "^([a-fA-F0-9]{8}[-][a-fA-F0-9]{4}[-][a-fA-F0-9]{4}[-][a-fA-F0-9]{4}[-][a-fA-F0-9]{12})$"];
  google.protobuf.StringValue name = 2 [(validation_pattern) = "^[a-zA-Z0-9_-]+$", (validation_max_length) = 255, (validation_encoding) = "latin1"];
}

message UpdateRetentionsRequest {
  repeated RetentionUpdateElement retention_update_elements = 1 [(validation_max_elements) = 4];
}

message UpdateRetentionsResponse {
  repeated Retention retentions = 1;
}

message ActivateRetentionsRequest {
}

message ActivateRetentionsResponse {
  google.protobuf.BoolValue activate_retentions = 1;
}

message GetRetentionsEnabledRequest {
}

message GetRetentionsEnabledResponse {
  google.protobuf.BoolValue enable_tags = 1;
}

service RetentionsService {
  rpc GetRetentions(GetRetentionsRequest) returns (GetRetentionsResponse) {
    option (audit_log_description).description = "Get retentions";
  }
  rpc UpdateRetentions(UpdateRetentionsRequest) returns (UpdateRetentionsResponse) {
    option (audit_log_description).description = "Update retention names";
  }

  rpc ActivateRetentions(ActivateRetentionsRequest) returns (ActivateRetentionsResponse) {
    option (audit_log_description).description = "Activate retention tags";
  }

  rpc GetRetentionsEnabled(GetRetentionsEnabledRequest) returns (GetRetentionsEnabledResponse) {
    option (audit_log_description).description = "Get retention tags enabled status";
  }
}
